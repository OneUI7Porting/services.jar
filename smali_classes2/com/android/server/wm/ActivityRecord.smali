.class public final Lcom/android/server/wm/ActivityRecord;
.super Lcom/android/server/wm/WindowToken;
.source "qb/89523975 b19e8d3036bb0bb04c0b123e55579fdc5d41bbd9c06260ba21f1b25f8ce00bef"


# static fields
.field public static sConstrainDisplayApisConfig:Landroid/content/pm/ConstrainDisplayApisConfig;


# instance fields
.field public allDrawn:Z

.field public app:Lcom/android/server/wm/WindowProcessController;

.field public appTimeTracker:Lcom/android/server/am/AppTimeTracker;

.field public final assistToken:Landroid/os/Binder;

.field public final componentSpecified:Z

.field public final createTime:J

.field public delayedResume:Z

.field public finishing:Z

.field public firstWindowDrawn:Z

.field public hasBeenLaunched:Z

.field public idle:Z

.field public immersive:Z

.field public volatile inHistory:Z

.field public final info:Landroid/content/pm/ActivityInfo;

.field public final initialCallerInfoAccessToken:Landroid/os/IBinder;

.field public final intent:Landroid/content/Intent;

.field public keysPaused:Z

.field public lastLaunchTime:J

.field public lastVisibleTime:J

.field public launchCount:I

.field public launchFailed:Z

.field public final launchMode:I

.field public launchTickTime:J

.field public final launchedFromFeatureId:Ljava/lang/String;

.field public final launchedFromPackage:Ljava/lang/String;

.field public final launchedFromPid:I

.field public final launchedFromUid:I

.field public final lockTaskLaunchMode:I

.field public final mActivityComponent:Landroid/content/ComponentName;

.field public final mActivityRecordInputSink:Lcom/android/server/wm/ActivityRecordInputSink;

.field public mActivityRecordInputSinkEnabled:Z

.field public final mAliasChild:Z

.field public mAllowCrossUidActivitySwitchFromBelow:Z

.field public final mAllowUntrustedEmbeddingStateSharing:Z

.field public mAllowedTouchUid:I

.field public mAnimatingActivityRegistry:Lcom/android/server/wm/AnimatingActivityRegistry;

.field public final mAppActivityEmbeddingSplitsEnabled:Z

.field public final mAppCompatController:Lcom/android/server/wm/AppCompatController;

.field public mAppStopped:Z

.field public final mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

.field public mAutoEnteringPip:Z

.field public final mCallerState:Lcom/android/server/wm/ActivityCallerState;

.field public mCaptureCallbacks:Landroid/os/RemoteCallbackList;

.field public mClientVisibilityDeferred:Z

.field public final mColorTransformController:Lcom/android/server/display/color/ColorDisplayService$ColorTransformController;

.field public mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

.field public mConfigurationSeq:I

.field public mCurrentLaunchCanTurnScreenOn:Z

.field public mCustomCloseTransition:Lcom/android/server/wm/ActivityRecord$CustomAppTransition;

.field public mCustomOpenTransition:Lcom/android/server/wm/ActivityRecord$CustomAppTransition;

.field public mDeferHidingClient:Z

.field public final mDestroyTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

.field public final mDisableSnapshot:Z

.field public mDismissKeyguardIfInsecure:Z

.field public mEnableRecentsScreenshot:Z

.field public mEnteringAnimation:Z

.field public mForceSendResultForMediaProjection:Z

.field public mFreezingScreen:Z

.field public mHandleExitSplashScreen:Z

.field mHandoverLaunchDisplayId:I

.field mHandoverTaskDisplayArea:Lcom/android/server/wm/TaskDisplayArea;

.field public mHasDeskResources:Ljava/lang/Boolean;

.field public final mHasSceneTransition:Z

.field public mHaveState:Z

.field public mHiddenWhileEnteringPinnedMode:Z

.field public final mHiddenWhileEnteringPinnedTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

.field public mIcicle:Landroid/os/Bundle;

.field public mIgnoreDevSettingForNonResizable:Z

.field public mImeInsetsFrozenUntilStartInput:Z

.field public mInheritShownWhenLocked:Z

.field public mInputApplicationHandle:Landroid/view/InputApplicationHandle;

.field public mInputDispatchingTimeoutMillis:J

.field public mIsActivityReparentToEmbeddedTask:Z

.field public mIsAliasActivity:Z

.field public final mIsAllowedSeamlessRotation:Z

.field public mIsAppLockExceptionActivity:Z

.field public mIsEligibleForFixedOrientationLetterbox:Z

.field public mIsEnteringPipFromSplit:Z

.field public mIsExiting:Z

.field public final mIsFlexPanel:Z

.field public mIsInputDroppedForAnimation:Z

.field public final mIsUnhandledDropLaunch:Z

.field public final mIsUserAlwaysVisible:Z

.field public final mKeepSnapshotCache:Z

.field public mLastAllDrawn:Z

.field public mLastAllReadyAtSync:Z

.field public mLastAppSaturationInfo:Lcom/android/server/wm/ActivityRecord$AppSaturationInfo;

.field public mLastContainsDismissKeyguardWindow:Z

.field public mLastContainsShowWhenLockedWindow:Z

.field public mLastContainsTurnScreenOnWindow:Z

.field public mLastDeferHidingClient:Z

.field public mLastDropInputMode:I

.field public mLastEmbeddedParentTfTokenBeforePip:Landroid/os/IBinder;

.field public mLastImeShown:Z

.field public mLastNewIntent:Landroid/content/Intent;

.field public mLastParentBeforePip:Lcom/android/server/wm/Task;

.field public final mLastReportedActivityWindowInfo:Landroid/window/ActivityWindowInfo;

.field public final mLastReportedConfiguration:Landroid/util/MergedConfiguration;

.field public mLastReportedDisplayId:I

.field public mLastReportedMultiWindowMode:Z

.field public mLastReportedPictureInPictureMode:Z

.field public mLastSurfaceShowing:Z

.field public mLastTaskFragmentOrganizerBeforePip:Landroid/window/ITaskFragmentOrganizer;

.field public mLastTransactionSequence:J

.field public mLaunchCookie:Landroid/os/IBinder;

.field public mLaunchIntoPipHostActivity:Lcom/android/server/wm/ActivityRecord;

.field public mLaunchRootTask:Landroid/window/WindowContainerToken;

.field public final mLaunchSourceType:I

.field public final mLaunchTickRunnable:Lcom/android/server/wm/ActivityRecord$1;

.field public mLaunchedFromBubble:Z

.field public mLaunchingRequestedFromNotification:Z

.field public mLocusId:Landroid/content/LocusId;

.field public mNeedsLetterboxedAnimation:Z

.field public final mNotToBeTopForAppLockException:Z

.field public mNumDrawnWindows:I

.field public mNumInterestingWindows:I

.field public mOccludesParent:Z

.field public final mOptInOnBackInvoked:Z

.field public final mOptOutEdgeToEdge:Z

.field public mOverrideTaskTransition:Z

.field public mPauseConfigurationDispatchCount:I

.field public mPauseSchedulePendingForPip:Z

.field public final mPauseTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

.field public mPendingOptions:Landroid/app/ActivityOptions;

.field public mPendingRelaunchCount:I

.field public mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

.field public mPendingRemoteTransition:Landroid/window/RemoteTransition;

.field public mPersistentState:Landroid/os/PersistableBundle;

.field public final mPopOverState:Lcom/android/server/wm/PopOverState;

.field public mProcessAppInfo:Landroid/content/pm/ApplicationInfo;

.field public mProcessAppLaunchPolicy:I

.field public mRelaunchReason:I

.field public mRelaunchStartTime:J

.field public mRemoteAnimationDefinition:Landroid/view/RemoteAnimationDefinition;

.field public mRemovingFromDisplay:Z

.field public mReportedDrawn:Z

.field public final mReportedVisibilityResults:Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;

.field public mRequestForceTransition:Z

.field public mRequestFreeformForceHiding:Z

.field public mRequestedLaunchingTaskFragmentToken:Landroid/os/IBinder;

.field final mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

.field public mResolvedConfigChangeFlags:I

.field public final mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

.field public final mRotationAnimationHint:I

.field public mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

.field public final mShareIdentity:Z

.field public mShouldShowPackageNightModeDialog:Z

.field public final mShowForAllUsers:Z

.field public mShowWhenLocked:Z

.field public mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

.field public mSizeConfigurations:Landroid/window/SizeConfigurationBuckets;

.field public mSplashScreenStyleSolidColor:Z

.field public mStartingData:Lcom/android/server/wm/StartingData;

.field public mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

.field public mStartingWindow:Lcom/android/server/wm/WindowState;

.field public mState:Lcom/android/server/wm/ActivityRecord$State;

.field public final mStopTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

.field public final mStyleFillsParent:Z

.field public final mStyleFloating:Z

.field public final mTargetSdk:I

.field public mTaskOverlay:Z

.field public final mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

.field public final mTmpActivityWindowInfo:Landroid/window/ActivityWindowInfo;

.field public final mTmpBounds:Landroid/graphics/Rect;

.field public final mTmpConfig:Landroid/content/res/Configuration;

.field public final mTransferSplashScreenTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

.field public mTransferringSplashScreenState:I

.field public final mTransientBarShowingDelayMillis:I

.field public mTransitionChangeFlags:I

.field public mTurnScreenOn:Z

.field public final mUserId:I

.field public mVisible:Z

.field public volatile mVisibleForServiceConnection:Z

.field public mVisibleSetFromTransferredStartingWindow:Z

.field public mVoiceInteraction:Z

.field public mWaitForEnteringPinnedMode:Z

.field public mWillCloseOrEnterPip:Z

.field public newIntents:Ljava/util/ArrayList;

.field noDisplay:Z

.field public nowVisible:Z

.field public final packageName:Ljava/lang/String;

.field public pauseTime:J

.field public pendingResults:Ljava/util/HashSet;

.field public pendingVoiceInteractionStart:Z

.field public final pictureInPictureArgs:Landroid/app/PictureInPictureParams;

.field public final processName:Ljava/lang/String;

.field public reportedVisible:Z

.field public final requestCode:I

.field public requestedVrComponent:Landroid/content/ComponentName;

.field public final resolvedType:Ljava/lang/String;

.field public resultTo:Lcom/android/server/wm/ActivityRecord;

.field public final resultWho:Ljava/lang/String;

.field public results:Ljava/util/ArrayList;

.field public returningOptions:Landroid/app/ActivityOptions;

.field public final rootVoiceInteraction:Z

.field public final shareableActivityToken:Landroid/os/Binder;

.field public final shortComponentName:Ljava/lang/String;

.field public shouldDockBigOverlays:Z

.field public startingMoved:Z

.field public final stateNotNeeded:Z

.field public supportsEnterPipOnTaskSwitch:Z

.field public task:Lcom/android/server/wm/Task;

.field public final taskAffinity:Ljava/lang/String;

.field public taskDescription:Landroid/app/ActivityManager$TaskDescription;

.field public final theme:I

.field public topResumedStateLossTime:J

.field public uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

.field public visibleIgnoringKeyguard:Z

.field public voiceSession:Landroid/service/voice/IVoiceInteractionSession;


# direct methods
.method public constructor <init>(Lcom/android/server/wm/ActivityTaskManagerService;Lcom/android/server/wm/WindowProcessController;IILjava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/content/res/Configuration;Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;IZZLcom/android/server/wm/ActivityTaskSupervisor;Landroid/app/ActivityOptions;Lcom/android/server/wm/ActivityRecord;Landroid/os/PersistableBundle;Landroid/app/ActivityManager$TaskDescription;J)V
    .locals 22

    move-object/from16 v0, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move/from16 v13, p4

    move-object/from16 v14, p5

    move-object/from16 v15, p7

    move-object/from16 v10, p9

    move/from16 v9, p14

    move-object/from16 v8, p17

    move-object/from16 v7, p18

    move-wide/from16 v5, p21

    .line 1
    iget-object v2, v11, Lcom/android/server/wm/ActivityTaskManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    new-instance v3, Lcom/android/server/wm/ActivityRecord$Token;

    .line 2
    invoke-direct {v3}, Landroid/os/Binder;-><init>()V

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/4 v4, 0x2

    const/16 v18, 0x1

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    move-object/from16 v1, p0

    move/from16 v5, v18

    move-object/from16 v6, v19

    move/from16 v7, v20

    move/from16 v8, v16

    move/from16 v9, v21

    move-object v12, v10

    move-object/from16 v10, v17

    .line 3
    invoke-direct/range {v1 .. v10}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZLcom/android/server/wm/DisplayContent;ZZZLandroid/os/Bundle;)V

    const/4 v1, -0x1

    .line 4
    iput v1, v0, Lcom/android/server/wm/ActivityRecord;->mHandoverLaunchDisplayId:I

    .line 5
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v2

    iput-wide v2, v0, Lcom/android/server/wm/ActivityRecord;->createTime:J

    .line 6
    new-instance v2, Landroid/window/ActivityWindowInfo;

    invoke-direct {v2}, Landroid/window/ActivityWindowInfo;-><init>()V

    iput-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mLastReportedActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    const/4 v2, 0x1

    .line 7
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mHaveState:Z

    .line 8
    new-instance v3, Landroid/app/PictureInPictureParams$Builder;

    invoke-direct {v3}, Landroid/app/PictureInPictureParams$Builder;-><init>()V

    invoke-virtual {v3}, Landroid/app/PictureInPictureParams$Builder;->build()Landroid/app/PictureInPictureParams;

    move-result-object v3

    iput-object v3, v0, Lcom/android/server/wm/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    const/4 v3, 0x0

    .line 9
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mSplashScreenStyleSolidColor:Z

    .line 10
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mPauseSchedulePendingForPip:Z

    .line 11
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mAutoEnteringPip:Z

    .line 12
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mTaskOverlay:Z

    .line 13
    iput v3, v0, Lcom/android/server/wm/ActivityRecord;->mRelaunchReason:I

    .line 14
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mForceSendResultForMediaProjection:Z

    .line 15
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mRemovingFromDisplay:Z

    .line 16
    new-instance v4, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;

    .line 17
    invoke-direct {v4}, Ljava/lang/Object;-><init>()V

    .line 18
    iput-boolean v2, v4, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->nowGone:Z

    .line 19
    iput-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mReportedVisibilityResults:Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;

    .line 20
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mCurrentLaunchCanTurnScreenOn:Z

    .line 21
    sget v4, Landroid/os/InputConstants;->DEFAULT_DISPATCHING_TIMEOUT_MILLIS:I

    int-to-long v4, v4

    iput-wide v4, v0, Lcom/android/server/wm/ActivityRecord;->mInputDispatchingTimeoutMillis:J

    const-wide/high16 v4, -0x8000000000000000L

    .line 22
    iput-wide v4, v0, Lcom/android/server/wm/ActivityRecord;->mLastTransactionSequence:J

    .line 23
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mLastAllReadyAtSync:Z

    .line 24
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mEnableRecentsScreenshot:Z

    .line 25
    iput v3, v0, Lcom/android/server/wm/ActivityRecord;->mLastDropInputMode:I

    .line 26
    iput v3, v0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 27
    iput v1, v0, Lcom/android/server/wm/ActivityRecord;->mRotationAnimationHint:I

    .line 28
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mIsAllowedSeamlessRotation:Z

    .line 29
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 30
    new-instance v4, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda22;

    invoke-direct {v4, v0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda22;-><init>(Lcom/android/server/wm/ActivityRecord;)V

    iput-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mColorTransformController:Lcom/android/server/display/color/ColorDisplayService$ColorTransformController;

    .line 31
    new-instance v5, Landroid/content/res/Configuration;

    invoke-direct {v5}, Landroid/content/res/Configuration;-><init>()V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 32
    new-instance v5, Landroid/graphics/Rect;

    invoke-direct {v5}, Landroid/graphics/Rect;-><init>()V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 33
    new-instance v5, Landroid/window/ActivityWindowInfo;

    invoke-direct {v5}, Landroid/window/ActivityWindowInfo;-><init>()V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mTmpActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 34
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->assistToken:Landroid/os/Binder;

    .line 35
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->shareableActivityToken:Landroid/os/Binder;

    .line 36
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->initialCallerInfoAccessToken:Landroid/os/IBinder;

    .line 37
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mActivityRecordInputSinkEnabled:Z

    .line 38
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mIsActivityReparentToEmbeddedTask:Z

    .line 39
    iput v3, v0, Lcom/android/server/wm/ActivityRecord;->mPauseConfigurationDispatchCount:I

    .line 40
    new-instance v5, Lcom/android/server/wm/ActivityRecord$1;

    const/4 v6, 0x0

    invoke-direct {v5, v6, v0}, Lcom/android/server/wm/ActivityRecord$1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mPauseTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 41
    new-instance v5, Lcom/android/server/wm/ActivityRecord$1;

    const/4 v6, 0x1

    invoke-direct {v5, v6, v0}, Lcom/android/server/wm/ActivityRecord$1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchTickRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 42
    new-instance v5, Lcom/android/server/wm/ActivityRecord$1;

    const/4 v6, 0x2

    invoke-direct {v5, v6, v0}, Lcom/android/server/wm/ActivityRecord$1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mDestroyTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 43
    new-instance v5, Lcom/android/server/wm/ActivityRecord$1;

    const/4 v6, 0x3

    invoke-direct {v5, v6, v0}, Lcom/android/server/wm/ActivityRecord$1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStopTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 44
    new-instance v5, Lcom/android/server/wm/ActivityRecord$1;

    const/4 v6, 0x4

    invoke-direct {v5, v6, v0}, Lcom/android/server/wm/ActivityRecord$1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mHiddenWhileEnteringPinnedTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 45
    new-instance v5, Lcom/android/server/wm/ActivityRecord$1;

    const/4 v6, 0x5

    invoke-direct {v5, v6, v0}, Lcom/android/server/wm/ActivityRecord$1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    iput-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mTransferSplashScreenTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 46
    iput-object v11, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 47
    iget-object v5, v0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    check-cast v5, Lcom/android/server/wm/ActivityRecord$Token;

    new-instance v6, Ljava/lang/ref/WeakReference;

    invoke-direct {v6, v0}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    iput-object v6, v5, Lcom/android/server/wm/ActivityRecord$Token;->mActivityRef:Ljava/lang/ref/WeakReference;

    .line 48
    iput-object v12, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 49
    iget-object v5, v12, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    iput v5, v0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 50
    iget-object v6, v12, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iput-object v6, v0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 51
    iput-object v15, v0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 52
    new-instance v7, Lcom/android/server/wm/PopOverState;

    invoke-direct {v7, v0}, Lcom/android/server/wm/PopOverState;-><init>(Lcom/android/server/wm/ActivityRecord;)V

    iput-object v7, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 53
    iget-object v8, v12, Landroid/content/pm/ActivityInfo;->targetActivity:Ljava/lang/String;

    if-eqz v8, :cond_1

    .line 54
    invoke-virtual/range {p7 .. p7}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v9

    invoke-virtual {v9}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_0

    iget v8, v12, Landroid/content/pm/ActivityInfo;->launchMode:I

    if-eqz v8, :cond_1

    if-ne v8, v2, :cond_0

    goto :goto_0

    .line 55
    :cond_0
    new-instance v8, Landroid/content/ComponentName;

    iget-object v9, v12, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v10, v12, Landroid/content/pm/ActivityInfo;->targetActivity:Ljava/lang/String;

    invoke-direct {v8, v9, v10}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    goto :goto_1

    .line 56
    :cond_1
    :goto_0
    invoke-virtual/range {p7 .. p7}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v8

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 57
    :goto_1
    new-instance v8, Lcom/android/server/wm/AppCompatController;

    iget-object v9, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    invoke-direct {v8, v9, v0}, Lcom/android/server/wm/AppCompatController;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/ActivityRecord;)V

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 58
    new-instance v8, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 59
    invoke-direct {v8}, Ljava/lang/Object;-><init>()V

    .line 60
    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 61
    iget-object v9, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    iget-object v9, v9, Lcom/android/server/wm/WindowManagerService;->mFlags:Lcom/android/server/wm/WindowManagerFlags;

    iget-boolean v9, v9, Lcom/android/server/wm/WindowManagerFlags;->mInsetsDecoupledConfiguration:Z

    move-object/from16 v16, v4

    const-wide/32 v3, 0x138268ed

    if-eqz v9, :cond_3

    const-wide/32 v10, 0x90d3a73

    .line 62
    invoke-virtual {v12, v10, v11}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    move-result v10

    if-nez v10, :cond_2

    .line 63
    invoke-virtual {v12, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    move-result v3

    if-nez v3, :cond_2

    move v10, v2

    goto :goto_2

    :cond_2
    const/4 v10, 0x0

    :goto_2
    iput-boolean v10, v8, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    goto :goto_3

    .line 64
    :cond_3
    invoke-virtual {v12, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    move-result v3

    iput-boolean v3, v8, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 65
    :goto_3
    iget-object v3, v12, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    iput v3, v0, Lcom/android/server/wm/ActivityRecord;->mTargetSdk:I

    .line 66
    const-class v3, Lcom/android/server/pm/UserManagerInternal;

    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/pm/UserManagerInternal;

    .line 67
    invoke-virtual {v3, v5}, Lcom/android/server/pm/UserManagerInternal;->getUserProperties(I)Landroid/content/pm/UserProperties;

    move-result-object v3

    if-eqz v3, :cond_4

    .line 68
    invoke-virtual {v3}, Landroid/content/pm/UserProperties;->getAlwaysVisible()Z

    move-result v3

    if-eqz v3, :cond_4

    move v10, v2

    goto :goto_4

    :cond_4
    const/4 v10, 0x0

    :goto_4
    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mIsUserAlwaysVisible:Z

    .line 69
    iget v3, v12, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/lit16 v3, v3, 0x400

    if-nez v3, :cond_6

    if-eqz v10, :cond_5

    goto :goto_5

    :cond_5
    const/4 v10, 0x0

    goto :goto_6

    :cond_6
    :goto_5
    move v10, v2

    :goto_6
    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mShowForAllUsers:Z

    .line 70
    iget v3, v12, Landroid/content/pm/ActivityInfo;->screenOrientation:I

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowContainer;->setOrientation(I)V

    .line 71
    iget v3, v12, Landroid/content/pm/ActivityInfo;->rotationAnimation:I

    iput v3, v0, Lcom/android/server/wm/ActivityRecord;->mRotationAnimationHint:I

    .line 72
    iget v3, v12, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v4, 0x800000

    and-int v8, v3, v4

    if-eqz v8, :cond_7

    move v10, v2

    goto :goto_7

    :cond_7
    const/4 v10, 0x0

    :goto_7
    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mShowWhenLocked:Z

    .line 73
    iget v8, v12, Landroid/content/pm/ActivityInfo;->privateFlags:I

    and-int/2addr v8, v2

    if-eqz v8, :cond_8

    move v10, v2

    goto :goto_8

    :cond_8
    const/4 v10, 0x0

    :goto_8
    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mInheritShownWhenLocked:Z

    const/high16 v8, 0x1000000

    and-int/2addr v3, v8

    if-eqz v3, :cond_9

    move v10, v2

    goto :goto_9

    :cond_9
    const/4 v10, 0x0

    .line 74
    :goto_9
    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mTurnScreenOn:Z

    .line 75
    invoke-virtual/range {p9 .. p9}, Landroid/content/pm/ActivityInfo;->getThemeResource()I

    move-result v3

    if-nez v3, :cond_b

    .line 76
    iget-object v3, v12, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    const/16 v8, 0xb

    if-ge v3, v8, :cond_a

    const v3, 0x1030005

    goto :goto_a

    :cond_a
    const v3, 0x103006b

    .line 77
    :cond_b
    :goto_a
    invoke-static {}, Lcom/android/internal/policy/AttributeCache;->instance()Lcom/android/internal/policy/AttributeCache;

    move-result-object v8

    sget-object v10, Lcom/android/internal/R$styleable;->Window:[I

    invoke-virtual {v8, v6, v3, v10, v5}, Lcom/android/internal/policy/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/internal/policy/AttributeCache$Entry;

    move-result-object v3

    const/16 v8, 0xa

    const/4 v11, 0x4

    const/4 v10, 0x5

    if-eqz v3, :cond_10

    .line 78
    iget-object v9, v3, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v1, 0x0

    invoke-virtual {v9, v10, v1}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v9

    .line 79
    iget-object v10, v3, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    invoke-virtual {v10, v11, v1}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v10

    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mStyleFloating:Z

    if-nez v9, :cond_d

    if-eqz v10, :cond_c

    goto :goto_b

    :cond_c
    move v11, v10

    const/4 v1, 0x5

    goto :goto_c

    .line 80
    :cond_d
    :goto_b
    iget-object v11, v3, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/16 v4, 0xe

    .line 81
    invoke-virtual {v11, v4, v1}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v4

    move v11, v10

    const/4 v1, 0x5

    if-eqz v4, :cond_e

    :goto_c
    move v4, v2

    goto :goto_d

    :cond_e
    const/4 v4, 0x0

    :goto_d
    iput-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    .line 82
    iput-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mStyleFillsParent:Z

    if-nez v4, :cond_f

    .line 83
    const-string v4, "ActivityTaskManager"

    const-string v10, "Non-opaque activity is created, styleTranslucent="

    const-string v1, ", styleFloating="

    const-string v2, ", r="

    .line 84
    invoke-static {v10, v9, v1, v11, v2}, Lcom/android/server/accessibility/magnification/FullScreenMagnificationGestureHandler$$ExternalSyntheticOutline0;->m(Ljava/lang/String;ZLjava/lang/String;ZLjava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 85
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v4, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 86
    :cond_f
    iget-object v1, v3, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v2, 0x0

    invoke-virtual {v1, v8, v2}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->noDisplay:Z

    .line 87
    iget-object v1, v3, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/16 v3, 0x3f

    invoke-virtual {v1, v3, v2}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mOptOutEdgeToEdge:Z

    :goto_e
    move-object/from16 v1, p17

    goto :goto_f

    :cond_10
    const/4 v2, 0x0

    .line 88
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mStyleFloating:Z

    const/4 v1, 0x1

    .line 89
    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mStyleFillsParent:Z

    .line 90
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->noDisplay:Z

    .line 91
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mOptOutEdgeToEdge:Z

    goto :goto_e

    :goto_f
    if-eqz v1, :cond_14

    .line 92
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchTaskBehind()Z

    move-result v2

    iput-boolean v2, v0, Lcom/android/server/wm/WindowContainer;->mLaunchTaskBehind:Z

    .line 93
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getRotationAnimationHint()I

    move-result v2

    if-ltz v2, :cond_11

    .line 94
    iput v2, v0, Lcom/android/server/wm/ActivityRecord;->mRotationAnimationHint:I

    .line 95
    :cond_11
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchIntoPipParams()Landroid/app/PictureInPictureParams;

    move-result-object v2

    if-eqz v2, :cond_12

    .line 96
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchIntoPipParams()Landroid/app/PictureInPictureParams;

    move-result-object v2

    iput-object v2, v0, Lcom/android/server/wm/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    move-object/from16 v2, p18

    if-eqz v2, :cond_13

    .line 97
    invoke-virtual/range {p18 .. p18}, Lcom/android/server/wm/ActivityRecord;->getBounds()Landroid/graphics/Rect;

    move-result-object v3

    .line 98
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    if-eqz v4, :cond_13

    invoke-virtual {v4}, Landroid/app/PictureInPictureParams;->hasSourceBoundsHint()Z

    move-result v4

    if-eqz v4, :cond_13

    .line 99
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    invoke-virtual {v4}, Landroid/app/PictureInPictureParams;->getSourceRectHint()Landroid/graphics/Rect;

    move-result-object v4

    iget v9, v3, Landroid/graphics/Rect;->left:I

    iget v3, v3, Landroid/graphics/Rect;->top:I

    invoke-virtual {v4, v9, v3}, Landroid/graphics/Rect;->offset(II)V

    goto :goto_10

    :cond_12
    move-object/from16 v2, p18

    .line 100
    :cond_13
    :goto_10
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getOverrideTaskTransition()Z

    move-result v3

    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mOverrideTaskTransition:Z

    .line 101
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getDismissKeyguardIfInsecure()Z

    move-result v3

    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mDismissKeyguardIfInsecure:Z

    .line 102
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->isShareIdentityEnabled()Z

    move-result v3

    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mShareIdentity:Z

    goto :goto_11

    :cond_14
    move-object/from16 v2, p18

    .line 103
    :goto_11
    const-class v3, Lcom/android/server/display/color/ColorDisplayService$ColorDisplayServiceInternal;

    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/display/color/ColorDisplayService$ColorDisplayServiceInternal;

    .line 104
    new-instance v4, Ljava/lang/ref/WeakReference;

    move-object/from16 v9, v16

    invoke-direct {v4, v9}, Ljava/lang/ref/WeakReference;-><init>(Ljava/lang/Object;)V

    .line 105
    iget-object v3, v3, Lcom/android/server/display/color/ColorDisplayService$ColorDisplayServiceInternal;->this$0:Lcom/android/server/display/color/ColorDisplayService;

    .line 106
    iget-object v3, v3, Lcom/android/server/display/color/ColorDisplayService;->mAppSaturationController:Lcom/android/server/display/color/AppSaturationController;

    .line 107
    iget-object v9, v3, Lcom/android/server/display/color/AppSaturationController;->mLock:Ljava/lang/Object;

    .line 108
    monitor-enter v9

    .line 109
    :try_start_0
    invoke-virtual {v3, v5, v6}, Lcom/android/server/display/color/AppSaturationController;->getSaturationControllerLocked(ILjava/lang/String;)Lcom/android/server/display/color/AppSaturationController$SaturationController;

    move-result-object v3

    .line 110
    invoke-static {v3, v4}, Lcom/android/server/display/color/AppSaturationController$SaturationController;->-$$Nest$maddColorTransformController(Lcom/android/server/display/color/AppSaturationController$SaturationController;Ljava/lang/ref/WeakReference;)Z

    monitor-exit v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-object/from16 v3, p1

    .line 111
    iget-object v4, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    iput-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    move/from16 v4, p3

    .line 112
    iput v4, v0, Lcom/android/server/wm/ActivityRecord;->launchedFromPid:I

    .line 113
    iput v13, v0, Lcom/android/server/wm/ActivityRecord;->launchedFromUid:I

    .line 114
    iput-object v14, v0, Lcom/android/server/wm/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    move-object/from16 v4, p6

    .line 115
    iput-object v4, v0, Lcom/android/server/wm/ActivityRecord;->launchedFromFeatureId:Ljava/lang/String;

    const/16 v11, 0x3e8

    if-eq v13, v11, :cond_15

    if-nez v13, :cond_16

    :cond_15
    move-object v4, v12

    move-object/from16 v12, p2

    goto :goto_12

    :cond_16
    move-object v4, v12

    move-object/from16 v12, p2

    if-eqz v12, :cond_18

    .line 116
    iget-object v9, v12, Lcom/android/server/wm/WindowProcessController;->mAtm:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v9, v9, Lcom/android/server/wm/ActivityTaskManagerService;->mHomeProcess:Lcom/android/server/wm/WindowProcessController;

    if-ne v12, v9, :cond_17

    const/4 v9, 0x2

    goto :goto_13

    .line 117
    :cond_17
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/ActivityTaskManagerService;->getSysUiServiceComponentLocked()Landroid/content/ComponentName;

    move-result-object v9

    invoke-virtual {v9}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v9

    iget-object v10, v12, Lcom/android/server/wm/WindowProcessController;->mInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 118
    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_18

    const/4 v9, 0x3

    goto :goto_13

    :cond_18
    const/4 v9, 0x4

    goto :goto_13

    :goto_12
    const/4 v9, 0x1

    .line 119
    :goto_13
    iput v9, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchSourceType:I

    .line 120
    invoke-virtual/range {p7 .. p7}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v9

    invoke-virtual {v9}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v9

    iput-object v9, v0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    move-object/from16 v9, p8

    .line 121
    iput-object v9, v0, Lcom/android/server/wm/ActivityRecord;->resolvedType:Ljava/lang/String;

    move/from16 v9, p14

    .line 122
    iput-boolean v9, v0, Lcom/android/server/wm/ActivityRecord;->componentSpecified:Z

    move/from16 v10, p15

    .line 123
    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->rootVoiceInteraction:Z

    .line 124
    new-instance v10, Landroid/util/MergedConfiguration;

    move-object/from16 v8, p10

    invoke-direct {v10, v8}, Landroid/util/MergedConfiguration;-><init>(Landroid/content/res/Configuration;)V

    iput-object v10, v0, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    move-object/from16 v8, p11

    .line 125
    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    move-object/from16 v8, p12

    .line 126
    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->resultWho:Ljava/lang/String;

    move/from16 v8, p13

    .line 127
    iput v8, v0, Lcom/android/server/wm/ActivityRecord;->requestCode:I

    .line 128
    sget-object v8, Lcom/android/server/wm/ActivityRecord$State;->INITIALIZING:Lcom/android/server/wm/ActivityRecord$State;

    const-string v10, "ActivityRecord ctor"

    invoke-virtual {v0, v8, v10}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    const/4 v8, 0x0

    .line 129
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->launchFailed:Z

    .line 130
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->delayedResume:Z

    .line 131
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 132
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->keysPaused:Z

    .line 133
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->inHistory:Z

    .line 134
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    const/4 v10, 0x1

    .line 135
    invoke-super {v0, v10}, Lcom/android/server/wm/WindowToken;->setClientVisible(Z)V

    .line 136
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->idle:Z

    .line 137
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->hasBeenLaunched:Z

    move-object/from16 v8, p16

    .line 138
    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 139
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->taskAffinity:Ljava/lang/String;

    .line 140
    iget-object v10, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v10, v8}, Lcom/android/server/wm/ActivityRecord;->computeTaskAffinity(ILjava/lang/String;)Ljava/lang/String;

    move-result-object v8

    iput-object v8, v4, Landroid/content/pm/ActivityInfo;->taskAffinity:Ljava/lang/String;

    .line 141
    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->taskAffinity:Ljava/lang/String;

    .line 142
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v8}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v8

    .line 143
    iget-object v10, v4, Landroid/content/pm/ActivityInfo;->windowLayout:Landroid/content/pm/ActivityInfo$WindowLayout;

    if-eqz v10, :cond_19

    iget-object v10, v10, Landroid/content/pm/ActivityInfo$WindowLayout;->windowLayoutAffinity:Ljava/lang/String;

    if-eqz v10, :cond_19

    .line 144
    invoke-virtual {v10, v8}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v10

    if-nez v10, :cond_19

    .line 145
    iget-object v10, v4, Landroid/content/pm/ActivityInfo;->windowLayout:Landroid/content/pm/ActivityInfo$WindowLayout;

    const-string v11, ":"

    .line 146
    invoke-static {v8, v11}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    .line 147
    iget-object v11, v4, Landroid/content/pm/ActivityInfo;->windowLayout:Landroid/content/pm/ActivityInfo$WindowLayout;

    iget-object v11, v11, Landroid/content/pm/ActivityInfo$WindowLayout;->windowLayoutAffinity:Ljava/lang/String;

    invoke-virtual {v8, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    iput-object v8, v10, Landroid/content/pm/ActivityInfo$WindowLayout;->windowLayoutAffinity:Ljava/lang/String;

    .line 148
    :cond_19
    sget-object v8, Lcom/android/server/wm/ActivityRecord;->sConstrainDisplayApisConfig:Landroid/content/pm/ConstrainDisplayApisConfig;

    if-nez v8, :cond_1a

    .line 149
    new-instance v8, Landroid/content/pm/ConstrainDisplayApisConfig;

    invoke-direct {v8}, Landroid/content/pm/ConstrainDisplayApisConfig;-><init>()V

    sput-object v8, Lcom/android/server/wm/ActivityRecord;->sConstrainDisplayApisConfig:Landroid/content/pm/ConstrainDisplayApisConfig;

    .line 150
    :cond_1a
    iget v8, v4, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/lit8 v8, v8, 0x10

    if-eqz v8, :cond_1b

    const/4 v10, 0x1

    goto :goto_14

    :cond_1b
    const/4 v10, 0x0

    :goto_14
    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->stateNotNeeded:Z

    .line 151
    invoke-virtual/range {p9 .. p9}, Landroid/content/pm/ActivityInfo;->getThemeResource()I

    move-result v8

    iput v8, v0, Lcom/android/server/wm/ActivityRecord;->theme:I

    .line 152
    iget v8, v4, Landroid/content/pm/ActivityInfo;->flags:I

    const/4 v10, 0x1

    and-int/2addr v8, v10

    if-eqz v8, :cond_1d

    if-eqz v12, :cond_1d

    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v10, 0x3e8

    if-eq v8, v10, :cond_1c

    iget-object v10, v12, Lcom/android/server/wm/WindowProcessController;->mInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v8, v10, :cond_1d

    .line 153
    :cond_1c
    iget-object v8, v12, Lcom/android/server/wm/WindowProcessController;->mName:Ljava/lang/String;

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->processName:Ljava/lang/String;

    goto :goto_15

    .line 154
    :cond_1d
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->processName:Ljava/lang/String;

    .line 155
    :goto_15
    iget v8, v4, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/lit8 v8, v8, 0x20

    if-eqz v8, :cond_1e

    const/high16 v8, 0x800000

    .line 156
    invoke-virtual {v15, v8}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 157
    :cond_1e
    iget v8, v4, Landroid/content/pm/ActivityInfo;->launchMode:I

    iput v8, v0, Lcom/android/server/wm/ActivityRecord;->launchMode:I

    .line 158
    iget-object v8, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mMwSupportPolicyController:Lcom/android/server/wm/MultiWindowSupportPolicyController;

    invoke-virtual {v8}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 159
    invoke-static/range {p9 .. p9}, Lcom/android/server/wm/MultiWindowSupportPolicyController;->isIgnoreDevSettingForNonResizable(Landroid/content/pm/ActivityInfo;)Z

    move-result v10

    iput-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mIgnoreDevSettingForNonResizable:Z

    .line 160
    iget v10, v4, Landroid/content/pm/ActivityInfo;->resizeMode:I

    invoke-virtual {v8, v10, v6}, Lcom/android/server/wm/MultiWindowSupportPolicyController;->checkSupportPolicyLocked(ILjava/lang/String;)I

    move-result v8

    iput v8, v4, Landroid/content/pm/ActivityInfo;->resizeMode:I

    .line 161
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v8, :cond_1f

    const-string v10, "com.samsung.android.multiwindow.nonresizeable"

    .line 162
    invoke-virtual {v8, v10}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_1f

    const/16 v8, 0xa

    .line 163
    iput v8, v4, Landroid/content/pm/ActivityInfo;->resizeMode:I

    :cond_1f
    if-eqz v2, :cond_20

    .line 164
    iget-boolean v8, v2, Lcom/android/server/wm/ActivityRecord;->mIsAliasActivity:Z

    if-eqz v8, :cond_20

    const/4 v8, 0x1

    .line 165
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mAliasChild:Z

    :cond_20
    if-eqz v9, :cond_21

    .line 166
    invoke-virtual {v0, v13, v2}, Lcom/android/server/wm/ActivityRecord;->canLaunchHomeActivity(ILcom/android/server/wm/ActivityRecord;)Z

    move-result v8

    if-eqz v8, :cond_24

    .line 167
    :cond_21
    invoke-static/range {p7 .. p7}, Lcom/android/server/wm/ActivityRecord;->isHomeIntent(Landroid/content/Intent;)Z

    move-result v8

    if-eqz v8, :cond_24

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isResolverOrDelegateActivity()Z

    move-result v8

    if-nez v8, :cond_24

    .line 168
    iget v8, v4, Landroid/content/pm/ActivityInfo;->resizeMode:I

    const/4 v9, 0x4

    if-eq v8, v9, :cond_22

    const/4 v9, 0x1

    if-ne v8, v9, :cond_23

    :cond_22
    const/4 v8, 0x0

    .line 169
    iput v8, v4, Landroid/content/pm/ActivityInfo;->resizeMode:I

    :cond_23
    const/4 v8, 0x2

    goto/16 :goto_1a

    .line 170
    :cond_24
    iget-object v8, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mRecentTasks:Lcom/android/server/wm/RecentTasks;

    .line 171
    iget-object v9, v0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    iget-object v11, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 172
    iget-object v12, v8, Lcom/android/server/wm/RecentTasks;->mRecentsComponent:Landroid/content/ComponentName;

    .line 173
    invoke-virtual {v9, v12}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-eqz v12, :cond_25

    iget v12, v8, Lcom/android/server/wm/RecentTasks;->mRecentsUid:I

    invoke-static {v11, v12}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v12

    if-nez v12, :cond_26

    :cond_25
    iget-object v12, v8, Lcom/android/server/wm/RecentTasks;->mRecentsComponentForDeX:Landroid/content/ComponentName;

    .line 174
    invoke-virtual {v9, v12}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_27

    iget v8, v8, Lcom/android/server/wm/RecentTasks;->mRecentsUidForDeX:I

    .line 175
    invoke-static {v11, v8}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v8

    if-eqz v8, :cond_27

    :cond_26
    const/4 v8, 0x3

    goto/16 :goto_1a

    :cond_27
    if-eqz v1, :cond_29

    .line 176
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchActivityType()I

    move-result v8

    const/4 v9, 0x4

    if-ne v8, v9, :cond_29

    .line 177
    iget-object v8, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mActiveVoiceInteractionServiceComponent:Landroid/content/ComponentName;

    if-eqz v8, :cond_28

    .line 178
    invoke-virtual {v8}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v8, v14}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    goto :goto_16

    :cond_28
    const/4 v8, 0x0

    :goto_16
    if-eqz v8, :cond_29

    const/4 v8, 0x4

    goto/16 :goto_1a

    :cond_29
    if-eqz v1, :cond_2e

    .line 179
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchActivityType()I

    move-result v8

    const/4 v9, 0x5

    if-ne v8, v9, :cond_2e

    .line 180
    iget-object v8, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mActiveDreamComponent:Landroid/content/ComponentName;

    .line 181
    sget-object v9, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_DREAM_enabled:[Z

    if-eqz v8, :cond_2a

    if-nez v14, :cond_2b

    :cond_2a
    const/4 v8, 0x4

    goto :goto_18

    .line 182
    :cond_2b
    iget-object v8, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mActiveDreamComponent:Landroid/content/ComponentName;

    invoke-virtual {v8}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v14, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_2c

    const/4 v8, 0x1

    goto :goto_19

    :cond_2c
    const/4 v8, 0x4

    .line 183
    aget-boolean v8, v9, v8

    if-eqz v8, :cond_2d

    iget-object v8, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mActiveDreamComponent:Landroid/content/ComponentName;

    invoke-static {v8}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    sget-object v9, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_DREAM:Lcom/android/internal/protolog/ProtoLogGroup;

    filled-new-array {v14, v8}, [Ljava/lang/Object;

    move-result-object v8

    const-string v11, "Dream packageName does not match active dream. Package %s does not match %s"

    const-wide v12, -0x60e4b0d967f9c2dbL    # -7.769820757276433E-159

    const/4 v14, 0x0

    move-object/from16 p2, v9

    move-wide/from16 p3, v12

    move/from16 p5, v14

    move-object/from16 p6, v11

    move-object/from16 p7, v8

    invoke-static/range {p2 .. p7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->e(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    :cond_2d
    :goto_17
    const/4 v8, 0x0

    goto :goto_19

    .line 184
    :goto_18
    aget-boolean v8, v9, v8

    if-eqz v8, :cond_2d

    iget-object v8, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mActiveDreamComponent:Landroid/content/ComponentName;

    invoke-static {v8}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    invoke-static/range {p5 .. p5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_DREAM:Lcom/android/internal/protolog/ProtoLogGroup;

    filled-new-array {v8, v9}, [Ljava/lang/Object;

    move-result-object v8

    const-string v9, "Cannot launch dream activity due to invalid state. dream component: %s packageName: %s"

    const-wide v12, -0x34e543105f17c440L    # -6.402486555543386E53

    const/4 v14, 0x0

    move-object/from16 p2, v11

    move-wide/from16 p3, v12

    move/from16 p5, v14

    move-object/from16 p6, v9

    move-object/from16 p7, v8

    invoke-static/range {p2 .. p7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->e(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_17

    :goto_19
    if-eqz v8, :cond_2e

    .line 185
    const-class v8, Landroid/service/dreams/DreamActivity;

    .line 186
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    const-string v9, "android.service.dreams.DreamActivity"

    if-ne v9, v8, :cond_2e

    const/4 v8, 0x5

    goto :goto_1a

    :cond_2e
    const/4 v8, 0x0

    .line 187
    :goto_1a
    invoke-virtual {v0, v8}, Lcom/android/server/wm/ConfigurationContainer;->setActivityType(I)V

    .line 188
    iget v8, v4, Landroid/content/pm/ActivityInfo;->flags:I

    and-int/lit16 v8, v8, 0x800

    if-eqz v8, :cond_2f

    const/4 v8, 0x1

    goto :goto_1b

    :cond_2f
    const/4 v8, 0x0

    :goto_1b
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->immersive:Z

    .line 189
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->requestedVrComponent:Ljava/lang/String;

    const/4 v9, 0x0

    if-nez v8, :cond_30

    move-object v8, v9

    goto :goto_1c

    .line 190
    :cond_30
    invoke-static {v8}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    move-result-object v8

    :goto_1c
    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->requestedVrComponent:Landroid/content/ComponentName;

    .line 191
    invoke-static {v4, v1}, Lcom/android/server/wm/ActivityRecord;->getLockTaskLaunchMode(Landroid/content/pm/ActivityInfo;Landroid/app/ActivityOptions;)I

    move-result v8

    iput v8, v0, Lcom/android/server/wm/ActivityRecord;->lockTaskLaunchMode:I

    if-eqz v1, :cond_35

    .line 192
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchedFromBubble()Z

    move-result v8

    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchedFromBubble:Z

    .line 193
    iput-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 194
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getAnimationType()I

    move-result v8

    const/16 v11, 0xd

    if-ne v8, v11, :cond_31

    .line 195
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getRemoteAnimationAdapter()Landroid/view/RemoteAnimationAdapter;

    move-result-object v8

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 196
    :cond_31
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getRemoteTransition()Landroid/window/RemoteTransition;

    move-result-object v8

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteTransition:Landroid/window/RemoteTransition;

    .line 197
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getAnimationType()I

    move-result v8

    const/4 v11, 0x5

    if-ne v8, v11, :cond_32

    .line 198
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getSceneTransitionInfo()Landroid/app/ActivityOptions$SceneTransitionInfo;

    move-result-object v8

    if-eqz v8, :cond_32

    .line 199
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getSceneTransitionInfo()Landroid/app/ActivityOptions$SceneTransitionInfo;

    move-result-object v8

    invoke-virtual {v8}, Landroid/app/ActivityOptions$SceneTransitionInfo;->getResultReceiver()Landroid/os/ResultReceiver;

    move-result-object v8

    if-eqz v8, :cond_32

    const/4 v8, 0x1

    goto :goto_1d

    :cond_32
    const/4 v8, 0x0

    :goto_1d
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mHasSceneTransition:Z

    .line 200
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getUsageTimeReport()Landroid/app/PendingIntent;

    move-result-object v8

    if-eqz v8, :cond_33

    .line 201
    new-instance v11, Lcom/android/server/am/AppTimeTracker;

    invoke-direct {v11, v8}, Lcom/android/server/am/AppTimeTracker;-><init>(Landroid/app/PendingIntent;)V

    iput-object v11, v0, Lcom/android/server/wm/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 202
    :cond_33
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchTaskDisplayArea()Landroid/window/WindowContainerToken;

    move-result-object v8

    if-eqz v8, :cond_34

    .line 203
    invoke-virtual {v8}, Landroid/window/WindowContainerToken;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-static {v8}, Lcom/android/server/wm/WindowContainer;->fromBinder(Landroid/os/IBinder;)Lcom/android/server/wm/WindowContainer;

    move-result-object v8

    move-object v9, v8

    check-cast v9, Lcom/android/server/wm/TaskDisplayArea;

    :cond_34
    iput-object v9, v0, Lcom/android/server/wm/ActivityRecord;->mHandoverTaskDisplayArea:Lcom/android/server/wm/TaskDisplayArea;

    .line 204
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchDisplayId()I

    move-result v8

    iput v8, v0, Lcom/android/server/wm/ActivityRecord;->mHandoverLaunchDisplayId:I

    .line 205
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchCookie()Landroid/os/IBinder;

    move-result-object v8

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchCookie:Landroid/os/IBinder;

    .line 206
    invoke-virtual/range {p17 .. p17}, Landroid/app/ActivityOptions;->getLaunchRootTask()Landroid/window/WindowContainerToken;

    move-result-object v8

    iput-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchRootTask:Landroid/window/WindowContainerToken;

    goto :goto_1e

    :cond_35
    const/4 v8, 0x0

    .line 207
    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mHasSceneTransition:Z

    .line 208
    :goto_1e
    sget-boolean v8, Lcom/samsung/android/rune/CoreRune;->MW_DND_UNHANDLED_DRAG:Z

    if-eqz v8, :cond_37

    if-nez v1, :cond_36

    .line 209
    invoke-static {}, Landroid/app/ActivityOptions;->makeBasic()Landroid/app/ActivityOptions;

    move-result-object v1

    .line 210
    :cond_36
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getUnhandledDropLaunch()Z

    move-result v8

    iput-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mIsUnhandledDropLaunch:Z

    :cond_37
    if-nez v1, :cond_38

    .line 211
    invoke-static {}, Landroid/app/ActivityOptions;->makeBasic()Landroid/app/ActivityOptions;

    move-result-object v1

    .line 212
    :cond_38
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const-string v9, "com.samsung.android.supports_pop_over"

    if-eqz v8, :cond_39

    .line 213
    invoke-virtual {v8, v9}, Landroid/os/Bundle;->containsKey(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_39

    .line 214
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const/4 v11, 0x1

    invoke-virtual {v8, v9, v11}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v8

    goto :goto_1f

    :cond_39
    const/4 v11, 0x1

    .line 215
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v8, :cond_3a

    .line 216
    invoke-virtual {v8, v9}, Landroid/os/Bundle;->containsKey(Ljava/lang/String;)Z

    move-result v8

    if-eqz v8, :cond_3a

    .line 217
    iget-object v8, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    invoke-virtual {v8, v9, v11}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v8

    goto :goto_1f

    :cond_3a
    move v8, v11

    :goto_1f
    if-nez v8, :cond_3b

    goto :goto_20

    .line 218
    :cond_3b
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->isPopOver()Z

    move-result v8

    if-eqz v8, :cond_3c

    .line 219
    new-instance v8, Landroid/app/ActivityOptions;

    invoke-virtual {v1}, Landroid/app/ActivityOptions;->toBundle()Landroid/os/Bundle;

    move-result-object v1

    invoke-direct {v8, v1}, Landroid/app/ActivityOptions;-><init>(Landroid/os/Bundle;)V

    iput-object v8, v7, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    if-eqz v2, :cond_3e

    .line 220
    iget-object v1, v2, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    if-eqz v1, :cond_3e

    .line 221
    iget v1, v1, Lcom/android/server/wm/Task;->mTaskId:I

    iput v1, v7, Lcom/android/server/wm/PopOverState;->mOriginTaskId:I

    goto :goto_20

    .line 222
    :cond_3c
    iget-boolean v1, v1, Landroid/app/ActivityOptions;->mPopOverInheritOptions:Z

    if-nez v1, :cond_3d

    goto :goto_20

    :cond_3d
    if-eqz v2, :cond_3e

    .line 223
    iget-object v1, v2, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    if-eqz v1, :cond_3e

    .line 224
    iget v1, v1, Lcom/android/server/wm/Task;->mTaskId:I

    const/4 v8, -0x1

    if-eq v1, v8, :cond_3e

    iget-object v8, v2, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    iget-object v8, v8, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    if-eqz v8, :cond_3e

    iget-boolean v9, v8, Landroid/app/ActivityOptions;->mPopOverInheritOptions:Z

    if-eqz v9, :cond_3e

    .line 225
    iput-object v8, v7, Lcom/android/server/wm/PopOverState;->mOptionsInherited:Landroid/app/ActivityOptions;

    .line 226
    iput v1, v7, Lcom/android/server/wm/PopOverState;->mOriginTaskIdInherited:I

    .line 227
    :cond_3e
    :goto_20
    iget-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    .line 228
    iput-boolean v1, v7, Lcom/android/server/wm/PopOverState;->mLastOccludesParent:Z

    .line 229
    iget-object v1, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v1, :cond_3f

    .line 230
    iget-boolean v7, v0, Lcom/android/server/wm/ActivityRecord;->mShowWhenLocked:Z

    const-string v8, "com.samsung.android.activity.showWhenLocked"

    const/4 v9, 0x0

    invoke-virtual {v1, v8, v9}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    or-int/2addr v1, v7

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mShowWhenLocked:Z

    .line 231
    iget-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mTurnScreenOn:Z

    iget-object v7, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const-string v8, "com.samsung.android.activity.turnScreenOn"

    invoke-virtual {v7, v8, v9}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v7

    or-int/2addr v1, v7

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mTurnScreenOn:Z

    .line 232
    iget-object v1, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const-string v7, "com.samsung.android.allow_seamless_rotation"

    invoke-virtual {v1, v7, v9}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mIsAllowedSeamlessRotation:Z

    .line 233
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->FW_APPLOCK:Z

    if-eqz v1, :cond_40

    .line 234
    iget-object v1, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 235
    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v1, :cond_40

    .line 236
    const-string v7, "com.samsung.android.applock.not_to_be_top_for_AppLock_exception"

    invoke-virtual {v1, v7, v9}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mNotToBeTopForAppLockException:Z

    goto :goto_21

    :cond_3f
    const/4 v9, 0x0

    .line 237
    :cond_40
    :goto_21
    iget-object v1, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v1, :cond_41

    const-string v7, "com.samsung.android.keep-snapshotcache"

    invoke-virtual {v1, v7, v9}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    if-nez v1, :cond_42

    :cond_41
    iget-object v1, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v1, :cond_43

    const-string v7, "com.samsung.android.keep-snapshotcache"

    .line 238
    invoke-virtual {v1, v7, v9}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_43

    :cond_42
    move v1, v11

    goto :goto_22

    :cond_43
    const/4 v1, 0x0

    :goto_22
    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mKeepSnapshotCache:Z

    .line 239
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->FW_FLEX_PANEL:Z

    if-eqz v1, :cond_44

    iget-object v1, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v1, :cond_44

    .line 240
    const-string v7, "com.samsung.android.foldable.flexpanel"

    const/4 v8, 0x0

    invoke-virtual {v1, v7, v8}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mIsFlexPanel:Z

    .line 241
    :cond_44
    invoke-static/range {p0 .. p0}, Lcom/android/server/wm/UdcCutoutPolicy;->updateUseLayoutInUdcCutoutIfNeeded(Lcom/android/server/wm/WindowContainer;)V

    move-object/from16 v1, p19

    .line 242
    iput-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mPersistentState:Landroid/os/PersistableBundle;

    move-object/from16 v1, p20

    .line 243
    iput-object v1, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 244
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    iget-object v1, v1, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v7, 0x111014a

    .line 245
    invoke-virtual {v1, v7}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->shouldDockBigOverlays:Z

    const-wide/16 v7, 0x0

    move-wide/from16 v12, p21

    cmp-long v1, v12, v7

    if-lez v1, :cond_45

    .line 246
    iput-wide v12, v0, Lcom/android/server/wm/ActivityRecord;->createTime:J

    .line 247
    :cond_45
    iget-object v1, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mPackageConfigPersister:Lcom/android/server/wm/PackageConfigPersister;

    invoke-virtual {v1, v0, v5, v6}, Lcom/android/server/wm/PackageConfigPersister;->updateConfigIfNeeded(Lcom/android/server/wm/ConfigurationContainer;ILjava/lang/String;)V

    .line 248
    new-instance v1, Lcom/android/server/wm/ActivityRecordInputSink;

    invoke-direct {v1, v0, v2}, Lcom/android/server/wm/ActivityRecordInputSink;-><init>(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/ActivityRecord;)V

    iput-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mActivityRecordInputSink:Lcom/android/server/wm/ActivityRecordInputSink;

    .line 249
    invoke-static {}, Landroid/view/WindowManager;->hasWindowExtensionsEnabled()Z

    move-result v1

    if-nez v1, :cond_46

    :catch_0
    :goto_23
    const/4 v9, 0x0

    goto :goto_24

    .line 250
    :cond_46
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    if-nez v1, :cond_47

    goto :goto_23

    .line 251
    :cond_47
    sget-boolean v1, Landroid/view/WindowManager;->ACTIVITY_EMBEDDING_GUARD_WITH_ANDROID_15:Z

    if-eqz v1, :cond_48

    iget-object v1, v4, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    .line 252
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getUid()I

    move-result v2

    invoke-static {v2}, Landroid/os/UserHandle;->getUserHandleForUid(I)Landroid/os/UserHandle;

    move-result-object v2

    const-wide/32 v4, 0x12475a62

    .line 253
    invoke-static {v4, v5, v1, v2}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JLjava/lang/String;Landroid/os/UserHandle;)Z

    move-result v1

    if-nez v1, :cond_48

    goto :goto_23

    .line 254
    :cond_48
    :try_start_1
    iget-object v1, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.window.PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED"

    .line 255
    invoke-virtual {v1, v2, v6}, Landroid/content/pm/PackageManager;->getProperty(Ljava/lang/String;Ljava/lang/String;)Landroid/content/pm/PackageManager$Property;

    move-result-object v1

    .line 256
    invoke-virtual {v1}, Landroid/content/pm/PackageManager$Property;->getBoolean()Z

    move-result v9
    :try_end_1
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1 .. :try_end_1} :catch_0

    .line 257
    :goto_24
    iput-boolean v9, v0, Lcom/android/server/wm/ActivityRecord;->mAppActivityEmbeddingSplitsEnabled:Z

    .line 258
    invoke-static {}, Lcom/android/window/flags/Flags;->untrustedEmbeddingStateSharing()Z

    move-result v1

    if-nez v1, :cond_49

    :catch_1
    const/4 v9, 0x0

    goto :goto_25

    .line 259
    :cond_49
    :try_start_2
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v2, "android.window.PROPERTY_ALLOW_UNTRUSTED_ACTIVITY_EMBEDDING_STATE_SHARING"

    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 260
    invoke-virtual {v1, v2, v3}, Landroid/content/pm/PackageManager;->getProperty(Ljava/lang/String;Landroid/content/ComponentName;)Landroid/content/pm/PackageManager$Property;

    move-result-object v1

    .line 261
    invoke-virtual {v1}, Landroid/content/pm/PackageManager$Property;->getBoolean()Z

    move-result v9
    :try_end_2
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_2 .. :try_end_2} :catch_1

    .line 262
    :goto_25
    iput-boolean v9, v0, Lcom/android/server/wm/ActivityRecord;->mAllowUntrustedEmbeddingStateSharing:Z

    .line 263
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v2, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    new-instance v3, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda23;

    const/4 v4, 0x0

    invoke-direct {v3, v4, v0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda23;-><init>(ILjava/lang/Object;)V

    .line 264
    invoke-static {v1, v2, v3}, Landroid/window/WindowOnBackInvokedDispatcher;->isOnBackInvokedCallbackEnabled(Landroid/content/pm/ActivityInfo;Landroid/content/pm/ApplicationInfo;Ljava/util/function/Supplier;)Z

    move-result v1

    iput-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mOptInOnBackInvoked:Z

    .line 265
    new-instance v1, Lcom/android/server/wm/ActivityCallerState;

    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-direct {v1, v2}, Lcom/android/server/wm/ActivityCallerState;-><init>(Lcom/android/server/wm/ActivityTaskManagerService;)V

    iput-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mCallerState:Lcom/android/server/wm/ActivityCallerState;

    .line 266
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v1, :cond_4a

    const-string v2, "com.samsung.android.disableSnapshot"

    const/4 v3, 0x0

    .line 267
    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    if-nez v1, :cond_4b

    goto :goto_26

    :cond_4a
    const/4 v3, 0x0

    :goto_26
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v1, :cond_4c

    const-string v2, "com.samsung.android.disableSnapshot"

    .line 268
    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    move-result v1

    if-eqz v1, :cond_4c

    :cond_4b
    move v2, v11

    goto :goto_27

    :cond_4c
    move v2, v3

    :goto_27
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mDisableSnapshot:Z

    .line 269
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget v1, v1, Landroid/content/pm/ActivityInfo;->transientBarShowingDelayMillis:I

    iput v1, v0, Lcom/android/server/wm/ActivityRecord;->mTransientBarShowingDelayMillis:I

    return-void

    :catchall_0
    move-exception v0

    .line 270
    :try_start_3
    monitor-exit v9
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v0
.end method

.method public static activityResumedLocked(Landroid/os/IBinder;Z)V
    .locals 8

    .line 1
    invoke-static {p0}, Lcom/android/server/wm/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 6
    .line 7
    const/4 v1, 0x2

    .line 8
    aget-boolean v0, v0, v1

    .line 9
    .line 10
    if-eqz v0, :cond_0

    .line 11
    .line 12
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 13
    .line 14
    .line 15
    move-result-object v0

    .line 16
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 17
    .line 18
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 19
    .line 20
    .line 21
    move-result-object v7

    .line 22
    const-wide v3, 0x18127ce0cf0332a5L    # 1.013043612899191E-192

    .line 23
    .line 24
    .line 25
    .line 26
    .line 27
    const/4 v5, 0x0

    .line 28
    const/4 v6, 0x0

    .line 29
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 30
    .line 31
    .line 32
    :cond_0
    if-nez p0, :cond_1

    .line 33
    .line 34
    return-void

    .line 35
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mHandleExitSplashScreen:Z

    .line 36
    .line 37
    if-ne v0, p1, :cond_2

    .line 38
    .line 39
    goto :goto_0

    .line 40
    :cond_2
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mHandleExitSplashScreen:Z

    .line 41
    .line 42
    :goto_0
    const/4 p1, 0x0

    .line 43
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mIcicle:Landroid/os/Bundle;

    .line 44
    .line 45
    const/4 p1, 0x0

    .line 46
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mHaveState:Z

    .line 47
    .line 48
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 49
    .line 50
    .line 51
    move-result-object v0

    .line 52
    if-nez v0, :cond_3

    .line 53
    .line 54
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 55
    .line 56
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 57
    .line 58
    invoke-virtual {v0, p0}, Lcom/android/server/wm/UnknownAppVisibilityController;->appRemovedOrHidden(Lcom/android/server/wm/ActivityRecord;)V

    .line 59
    .line 60
    .line 61
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 62
    .line 63
    invoke-virtual {v0, p0}, Lcom/android/server/wm/DisplayContent;->handleActivitySizeCompatModeIfNeeded(Lcom/android/server/wm/ActivityRecord;)V

    .line 64
    .line 65
    .line 66
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 67
    .line 68
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 69
    .line 70
    iget-object v2, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 71
    .line 72
    invoke-virtual {v2}, Landroid/util/ArrayMap;->isEmpty()Z

    .line 73
    .line 74
    .line 75
    move-result v2

    .line 76
    if-eqz v2, :cond_4

    .line 77
    .line 78
    goto :goto_1

    .line 79
    :cond_4
    iget-object v2, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 80
    .line 81
    invoke-virtual {v2, p0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 82
    .line 83
    .line 84
    move-result-object v2

    .line 85
    check-cast v2, Ljava/lang/Integer;

    .line 86
    .line 87
    if-eqz v2, :cond_6

    .line 88
    .line 89
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    .line 90
    .line 91
    .line 92
    move-result v2

    .line 93
    const/4 v3, 0x1

    .line 94
    if-ne v2, v3, :cond_6

    .line 95
    .line 96
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 97
    .line 98
    .line 99
    move-result-object p1

    .line 100
    if-eqz p1, :cond_5

    .line 101
    .line 102
    iget p1, p1, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    .line 103
    .line 104
    if-nez p1, :cond_5

    .line 105
    .line 106
    new-instance p1, Ljava/lang/StringBuilder;

    .line 107
    .line 108
    const-string/jumbo v1, "notifyAppResumedFinished, activity has already visible window, activity="

    .line 109
    .line 110
    .line 111
    invoke-direct {p1, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 112
    .line 113
    .line 114
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 115
    .line 116
    .line 117
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 118
    .line 119
    .line 120
    move-result-object p1

    .line 121
    const-string v1, "WindowManager"

    .line 122
    .line 123
    invoke-static {v1, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 124
    .line 125
    .line 126
    iget-object p1, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 127
    .line 128
    const/4 v1, 0x3

    .line 129
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 130
    .line 131
    .line 132
    move-result-object v1

    .line 133
    invoke-virtual {p1, p0, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 134
    .line 135
    .line 136
    iget-object p0, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 137
    .line 138
    invoke-virtual {p0}, Lcom/android/server/wm/DisplayContent;->notifyKeyguardFlagsChanged()V

    .line 139
    .line 140
    .line 141
    invoke-virtual {v0}, Lcom/android/server/wm/UnknownAppVisibilityController;->notifyVisibilitiesUpdated()V

    .line 142
    .line 143
    .line 144
    goto :goto_1

    .line 145
    :cond_5
    iget-object p1, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 146
    .line 147
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 148
    .line 149
    .line 150
    move-result-object v0

    .line 151
    invoke-virtual {p1, p0, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 152
    .line 153
    .line 154
    :cond_6
    :goto_1
    return-void
.end method

.method public static canShowWhenLocked(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 3

    const/4 v0, 0x0

    if-eqz p0, :cond_5

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    move-result-object v1

    if-nez v1, :cond_0

    goto :goto_1

    .line 2
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    move-result v1

    const/4 v2, 0x1

    if-nez v1, :cond_2

    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mShowWhenLocked:Z

    if-nez v1, :cond_1

    .line 3
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->containsShowWhenLockedWindow()Z

    move-result v1

    if-nez v1, :cond_1

    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mIsUserAlwaysVisible:Z

    if-eqz v1, :cond_2

    :cond_1
    move v1, v2

    goto :goto_0

    :cond_2
    move v1, v0

    :goto_0
    if-eqz v1, :cond_3

    return v2

    .line 4
    :cond_3
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mInheritShownWhenLocked:Z

    if-eqz v1, :cond_5

    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    move-result-object v1

    invoke-virtual {v1, p0}, Lcom/android/server/wm/WindowContainer;->getActivityBelow(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord;

    move-result-object p0

    if-eqz p0, :cond_5

    .line 6
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    move-result v1

    if-nez v1, :cond_5

    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mShowWhenLocked:Z

    if-nez v1, :cond_4

    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->containsShowWhenLockedWindow()Z

    move-result v1

    if-nez v1, :cond_4

    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mIsUserAlwaysVisible:Z

    if-eqz p0, :cond_5

    :cond_4
    move v0, v2

    :cond_5
    :goto_1
    return v0
.end method

.method public static computeTaskAffinity(ILjava/lang/String;)Ljava/lang/String;
    .locals 1

    .line 1
    invoke-static {p0}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    if-eqz p1, :cond_0

    .line 6
    .line 7
    invoke-virtual {p1, p0}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-nez v0, :cond_0

    .line 12
    .line 13
    const-string v0, ":"

    .line 14
    .line 15
    invoke-static {p0, v0, p1}, Lcom/android/server/AnyMotionDetector$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 16
    .line 17
    .line 18
    move-result-object p1

    .line 19
    :cond_0
    return-object p1
.end method

.method public static dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ILcom/android/server/wm/ActivityRecord;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;ZLjava/lang/Runnable;Lcom/android/server/wm/Task;)V
    .locals 3

    .line 1
    if-eqz p9, :cond_0

    .line 2
    .line 3
    iget-object v0, p3, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 4
    .line 5
    invoke-virtual {p9, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 6
    .line 7
    .line 8
    move-result p9

    .line 9
    if-nez p9, :cond_0

    .line 10
    .line 11
    return-void

    .line 12
    :cond_0
    const/4 p9, 0x0

    .line 13
    const/4 v0, 0x1

    .line 14
    if-nez p7, :cond_2

    .line 15
    .line 16
    if-nez p6, :cond_1

    .line 17
    .line 18
    iget-boolean p7, p3, Lcom/android/server/wm/ActivityRecord;->inHistory:Z

    .line 19
    .line 20
    if-nez p7, :cond_2

    .line 21
    .line 22
    :cond_1
    move p7, v0

    .line 23
    goto :goto_0

    .line 24
    :cond_2
    move p7, p9

    .line 25
    :goto_0
    if-eqz p10, :cond_3

    .line 26
    .line 27
    const-string p10, ""

    .line 28
    .line 29
    invoke-virtual {p1, p10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 30
    .line 31
    .line 32
    :cond_3
    if-eqz p11, :cond_4

    .line 33
    .line 34
    invoke-interface {p11}, Ljava/lang/Runnable;->run()V

    .line 35
    .line 36
    .line 37
    :cond_4
    const-string p10, "  "

    .line 38
    .line 39
    invoke-static {p4, p10}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m$1(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 40
    .line 41
    .line 42
    move-result-object p11

    .line 43
    new-array p9, p9, [Ljava/lang/String;

    .line 44
    .line 45
    iget-object v1, p3, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 46
    .line 47
    const-string v2, "* "

    .line 48
    .line 49
    if-eq p12, v1, :cond_7

    .line 50
    .line 51
    invoke-virtual {p1, p4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 52
    .line 53
    .line 54
    if-eqz p7, :cond_5

    .line 55
    .line 56
    move-object p12, v2

    .line 57
    goto :goto_1

    .line 58
    :cond_5
    move-object p12, p10

    .line 59
    :goto_1
    invoke-virtual {p1, p12}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 60
    .line 61
    .line 62
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 63
    .line 64
    .line 65
    if-eqz p7, :cond_6

    .line 66
    .line 67
    new-instance p12, Ljava/lang/StringBuilder;

    .line 68
    .line 69
    invoke-direct {p12}, Ljava/lang/StringBuilder;-><init>()V

    .line 70
    .line 71
    .line 72
    invoke-virtual {p12, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 73
    .line 74
    .line 75
    invoke-virtual {p12, p10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 76
    .line 77
    .line 78
    invoke-virtual {p12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 79
    .line 80
    .line 81
    move-result-object p10

    .line 82
    invoke-virtual {v1, p1, p10}, Lcom/android/server/wm/Task;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 83
    .line 84
    .line 85
    goto :goto_2

    .line 86
    :cond_6
    if-eqz p6, :cond_7

    .line 87
    .line 88
    iget-object p12, v1, Lcom/android/server/wm/Task;->intent:Landroid/content/Intent;

    .line 89
    .line 90
    if-eqz p12, :cond_7

    .line 91
    .line 92
    invoke-virtual {p1, p4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 93
    .line 94
    .line 95
    invoke-virtual {p1, p10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 96
    .line 97
    .line 98
    iget-object p10, v1, Lcom/android/server/wm/Task;->intent:Landroid/content/Intent;

    .line 99
    .line 100
    invoke-virtual {p10}, Landroid/content/Intent;->toInsecureString()Ljava/lang/String;

    .line 101
    .line 102
    .line 103
    move-result-object p10

    .line 104
    invoke-virtual {p1, p10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 105
    .line 106
    .line 107
    :cond_7
    :goto_2
    invoke-virtual {p1, p4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 108
    .line 109
    .line 110
    if-eqz p7, :cond_8

    .line 111
    .line 112
    goto :goto_3

    .line 113
    :cond_8
    const-string v2, "    "

    .line 114
    .line 115
    :goto_3
    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 116
    .line 117
    .line 118
    invoke-virtual {p1, p5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 119
    .line 120
    .line 121
    const-string p4, " #"

    .line 122
    .line 123
    invoke-virtual {p1, p4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 124
    .line 125
    .line 126
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(I)V

    .line 127
    .line 128
    .line 129
    const-string p2, ": "

    .line 130
    .line 131
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 132
    .line 133
    .line 134
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 135
    .line 136
    .line 137
    if-eqz p7, :cond_9

    .line 138
    .line 139
    invoke-virtual {p3, p1, p11, v0}, Lcom/android/server/wm/ActivityRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 140
    .line 141
    .line 142
    goto :goto_4

    .line 143
    :cond_9
    if-eqz p6, :cond_a

    .line 144
    .line 145
    invoke-virtual {p1, p11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 146
    .line 147
    .line 148
    iget-object p2, p3, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 149
    .line 150
    invoke-virtual {p2}, Landroid/content/Intent;->toInsecureString()Ljava/lang/String;

    .line 151
    .line 152
    .line 153
    move-result-object p2

    .line 154
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 155
    .line 156
    .line 157
    iget-object p2, p3, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 158
    .line 159
    if-eqz p2, :cond_a

    .line 160
    .line 161
    invoke-virtual {p1, p11}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 162
    .line 163
    .line 164
    iget-object p2, p3, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 165
    .line 166
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 167
    .line 168
    .line 169
    :cond_a
    :goto_4
    if-eqz p8, :cond_b

    .line 170
    .line 171
    invoke-virtual {p3}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 172
    .line 173
    .line 174
    move-result p2

    .line 175
    if-eqz p2, :cond_b

    .line 176
    .line 177
    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V

    .line 178
    .line 179
    .line 180
    :try_start_0
    new-instance p2, Lcom/android/internal/os/TransferPipe;

    .line 181
    .line 182
    invoke-direct {p2}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 183
    .line 184
    .line 185
    :try_start_1
    iget-object p4, p3, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 186
    .line 187
    iget-object p4, p4, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 188
    .line 189
    invoke-virtual {p2}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    .line 190
    .line 191
    .line 192
    move-result-object p5

    .line 193
    iget-object p3, p3, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 194
    .line 195
    invoke-interface {p4, p5, p3, p11, p9}, Landroid/app/IApplicationThread;->dumpActivity(Landroid/os/ParcelFileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V

    .line 196
    .line 197
    .line 198
    const-wide/16 p3, 0x7d0

    .line 199
    .line 200
    invoke-virtual {p2, p0, p3, p4}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 201
    .line 202
    .line 203
    :try_start_2
    invoke-virtual {p2}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 204
    .line 205
    .line 206
    goto :goto_6

    .line 207
    :catch_0
    move-exception p0

    .line 208
    goto :goto_5

    .line 209
    :catchall_0
    move-exception p0

    .line 210
    invoke-virtual {p2}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 211
    .line 212
    .line 213
    throw p0
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 214
    :catch_1
    const-string p0, "Got a RemoteException while dumping the activity"

    .line 215
    .line 216
    invoke-static {p1, p11, p0}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 217
    .line 218
    .line 219
    goto :goto_6

    .line 220
    :goto_5
    new-instance p2, Ljava/lang/StringBuilder;

    .line 221
    .line 222
    invoke-direct {p2}, Ljava/lang/StringBuilder;-><init>()V

    .line 223
    .line 224
    .line 225
    invoke-virtual {p2, p11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 226
    .line 227
    .line 228
    const-string p3, "Failure while dumping the activity: "

    .line 229
    .line 230
    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 231
    .line 232
    .line 233
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 234
    .line 235
    .line 236
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 237
    .line 238
    .line 239
    move-result-object p0

    .line 240
    invoke-virtual {p1, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 241
    .line 242
    .line 243
    :cond_b
    :goto_6
    return-void
.end method

.method public static forToken(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    if-nez p0, :cond_0

    .line 3
    .line 4
    return-object v0

    .line 5
    :cond_0
    :try_start_0
    check-cast p0, Lcom/android/server/wm/ActivityRecord$Token;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6
    .line 7
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord$Token;->mActivityRef:Ljava/lang/ref/WeakReference;

    .line 8
    .line 9
    invoke-virtual {p0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    .line 10
    .line 11
    .line 12
    move-result-object p0

    .line 13
    check-cast p0, Lcom/android/server/wm/ActivityRecord;

    .line 14
    .line 15
    return-object p0

    .line 16
    :catch_0
    move-exception v1

    .line 17
    new-instance v2, Ljava/lang/StringBuilder;

    .line 18
    .line 19
    const-string v3, "Bad activity token: "

    .line 20
    .line 21
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 22
    .line 23
    .line 24
    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 25
    .line 26
    .line 27
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 28
    .line 29
    .line 30
    move-result-object p0

    .line 31
    const-string v2, "ActivityTaskManager"

    .line 32
    .line 33
    invoke-static {v2, p0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 34
    .line 35
    .line 36
    return-object v0
.end method

.method public static forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;
    .locals 1

    .line 1
    invoke-static {p0}, Lcom/android/server/wm/ActivityRecord;->forToken(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    if-eqz p0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 8
    .line 9
    .line 10
    move-result-object v0

    .line 11
    if-nez v0, :cond_1

    .line 12
    .line 13
    :cond_0
    const/4 p0, 0x0

    .line 14
    :cond_1
    return-object p0
.end method

.method public static getLockTaskLaunchMode(Landroid/content/pm/ActivityInfo;Landroid/app/ActivityOptions;)I
    .locals 1

    .line 1
    iget v0, p0, Landroid/content/pm/ActivityInfo;->lockTaskLaunchMode:I

    .line 2
    .line 3
    iget-object p0, p0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 4
    .line 5
    invoke-virtual {p0}, Landroid/content/pm/ApplicationInfo;->isPrivilegedApp()Z

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    if-nez p0, :cond_1

    .line 10
    .line 11
    const/4 p0, 0x2

    .line 12
    if-eq v0, p0, :cond_0

    .line 13
    .line 14
    const/4 p0, 0x1

    .line 15
    if-ne v0, p0, :cond_1

    .line 16
    .line 17
    :cond_0
    const/4 v0, 0x0

    .line 18
    :cond_1
    if-eqz p1, :cond_2

    .line 19
    .line 20
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getLockTaskMode()Z

    .line 21
    .line 22
    .line 23
    move-result p0

    .line 24
    if-eqz p0, :cond_2

    .line 25
    .line 26
    if-nez v0, :cond_2

    .line 27
    .line 28
    const/4 v0, 0x3

    .line 29
    :cond_2
    return v0
.end method

.method public static isHomeIntent(Landroid/content/Intent;)Z
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    const-string v1, "android.intent.action.MAIN"

    .line 6
    .line 7
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_1

    .line 12
    .line 13
    const-string v0, "android.intent.category.HOME"

    .line 14
    .line 15
    invoke-virtual {p0, v0}, Landroid/content/Intent;->hasCategory(Ljava/lang/String;)Z

    .line 16
    .line 17
    .line 18
    move-result v0

    .line 19
    if-nez v0, :cond_0

    .line 20
    .line 21
    const-string v0, "android.intent.category.SECONDARY_HOME"

    .line 22
    .line 23
    invoke-virtual {p0, v0}, Landroid/content/Intent;->hasCategory(Ljava/lang/String;)Z

    .line 24
    .line 25
    .line 26
    move-result v0

    .line 27
    if-eqz v0, :cond_1

    .line 28
    .line 29
    :cond_0
    invoke-virtual {p0}, Landroid/content/Intent;->getCategories()Ljava/util/Set;

    .line 30
    .line 31
    .line 32
    move-result-object v0

    .line 33
    invoke-interface {v0}, Ljava/util/Set;->size()I

    .line 34
    .line 35
    .line 36
    move-result v0

    .line 37
    const/4 v1, 0x1

    .line 38
    if-ne v0, v1, :cond_1

    .line 39
    .line 40
    invoke-virtual {p0}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    .line 41
    .line 42
    .line 43
    move-result-object v0

    .line 44
    if-nez v0, :cond_1

    .line 45
    .line 46
    invoke-virtual {p0}, Landroid/content/Intent;->getType()Ljava/lang/String;

    .line 47
    .line 48
    .line 49
    move-result-object p0

    .line 50
    if-nez p0, :cond_1

    .line 51
    .line 52
    goto :goto_0

    .line 53
    :cond_1
    const/4 v1, 0x0

    .line 54
    :goto_0
    return v1
.end method

.method public static isInAnyTask(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;
    .locals 1

    .line 1
    invoke-static {p0}, Lcom/android/server/wm/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    if-eqz p0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isAttached()Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    goto :goto_0

    .line 14
    :cond_0
    const/4 p0, 0x0

    .line 15
    :goto_0
    return-object p0
.end method

.method public static isInRootTaskLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;
    .locals 2

    .line 3
    invoke-static {p0}, Lcom/android/server/wm/ActivityRecord;->forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord;

    move-result-object p0

    const/4 v0, 0x0

    if-eqz p0, :cond_1

    .line 4
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 5
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowContainer;->isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z

    move-result v1

    if-eqz v1, :cond_0

    goto :goto_0

    :cond_0
    move-object p0, v0

    :goto_0
    move-object v0, p0

    :cond_1
    return-object v0
.end method

.method public static isMainIntent(Landroid/content/Intent;)Z
    .locals 2

    .line 1
    invoke-virtual {p0}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    const-string v1, "android.intent.action.MAIN"

    .line 6
    .line 7
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    const-string v0, "android.intent.category.LAUNCHER"

    .line 14
    .line 15
    invoke-virtual {p0, v0}, Landroid/content/Intent;->hasCategory(Ljava/lang/String;)Z

    .line 16
    .line 17
    .line 18
    move-result v0

    .line 19
    if-eqz v0, :cond_0

    .line 20
    .line 21
    invoke-virtual {p0}, Landroid/content/Intent;->getCategories()Ljava/util/Set;

    .line 22
    .line 23
    .line 24
    move-result-object v0

    .line 25
    invoke-interface {v0}, Ljava/util/Set;->size()I

    .line 26
    .line 27
    .line 28
    move-result v0

    .line 29
    const/4 v1, 0x1

    .line 30
    if-ne v0, v1, :cond_0

    .line 31
    .line 32
    invoke-virtual {p0}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    .line 33
    .line 34
    .line 35
    move-result-object v0

    .line 36
    if-nez v0, :cond_0

    .line 37
    .line 38
    invoke-virtual {p0}, Landroid/content/Intent;->getType()Ljava/lang/String;

    .line 39
    .line 40
    .line 41
    move-result-object p0

    .line 42
    if-nez p0, :cond_0

    .line 43
    .line 44
    goto :goto_0

    .line 45
    :cond_0
    const/4 v1, 0x0

    .line 46
    :goto_0
    return v1
.end method


# virtual methods
.method public final abortAndClearOptionsAnimation()V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {v0}, Landroid/app/ActivityOptions;->abort()V

    .line 6
    .line 7
    .line 8
    :cond_0
    const/4 v0, 0x0

    .line 9
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 10
    .line 11
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 12
    .line 13
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteTransition:Landroid/window/RemoteTransition;

    .line 14
    .line 15
    return-void
.end method

.method public final activityPaused(Z)V
    .locals 9

    .line 1
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    aget-boolean v2, v0, v1

    .line 5
    .line 6
    if-eqz v2, :cond_0

    .line 7
    .line 8
    iget-object v2, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 9
    .line 10
    invoke-static {v2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 11
    .line 12
    .line 13
    move-result-object v2

    .line 14
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 15
    .line 16
    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 17
    .line 18
    .line 19
    move-result-object v4

    .line 20
    filled-new-array {v2, v4}, [Ljava/lang/Object;

    .line 21
    .line 22
    .line 23
    move-result-object v8

    .line 24
    const/16 v6, 0xc

    .line 25
    .line 26
    const/4 v7, 0x0

    .line 27
    const-wide v4, 0x116f4692a6243297L

    .line 28
    .line 29
    .line 30
    .line 31
    .line 32
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 33
    .line 34
    .line 35
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 36
    .line 37
    .line 38
    move-result-object v2

    .line 39
    if-eqz v2, :cond_6

    .line 40
    .line 41
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 42
    .line 43
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 44
    .line 45
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mPauseTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 46
    .line 47
    invoke-virtual {v3, v4}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 48
    .line 49
    .line 50
    iget-object v3, v2, Lcom/android/server/wm/TaskFragment;->mPausingActivity:Lcom/android/server/wm/ActivityRecord;

    .line 51
    .line 52
    if-ne v3, p0, :cond_3

    .line 53
    .line 54
    aget-boolean v0, v0, v1

    .line 55
    .line 56
    if-eqz v0, :cond_2

    .line 57
    .line 58
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 59
    .line 60
    .line 61
    move-result-object v0

    .line 62
    if-eqz p1, :cond_1

    .line 63
    .line 64
    const-string p1, "(due to timeout)"

    .line 65
    .line 66
    goto :goto_0

    .line 67
    :cond_1
    const-string p1, " (pause complete)"

    .line 68
    .line 69
    :goto_0
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 70
    .line 71
    filled-new-array {v0, p1}, [Ljava/lang/Object;

    .line 72
    .line 73
    .line 74
    move-result-object v8

    .line 75
    const-wide v4, 0x5f7964ec0b9834ddL    # 8.312522338834462E151

    .line 76
    .line 77
    .line 78
    .line 79
    .line 80
    const/4 v6, 0x0

    .line 81
    const/4 v7, 0x0

    .line 82
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 83
    .line 84
    .line 85
    :cond_2
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 86
    .line 87
    invoke-virtual {p1}, Lcom/android/server/wm/ActivityTaskManagerService;->deferWindowLayout()V

    .line 88
    .line 89
    .line 90
    const/4 p1, 0x0

    .line 91
    :try_start_0
    invoke-virtual {v2, v1, p1}, Lcom/android/server/wm/TaskFragment;->completePause(ZLcom/android/server/wm/ActivityRecord;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 92
    .line 93
    .line 94
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 95
    .line 96
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->continueWindowLayout()V

    .line 97
    .line 98
    .line 99
    return-void

    .line 100
    :catchall_0
    move-exception p1

    .line 101
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 102
    .line 103
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskManagerService;->continueWindowLayout()V

    .line 104
    .line 105
    .line 106
    throw p1

    .line 107
    :cond_3
    iget p1, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 108
    .line 109
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 110
    .line 111
    .line 112
    move-result v2

    .line 113
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 114
    .line 115
    if-eqz v3, :cond_4

    .line 116
    .line 117
    iget-object v3, v3, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 118
    .line 119
    goto :goto_1

    .line 120
    :cond_4
    const-string v3, "(none)"

    .line 121
    .line 122
    :goto_1
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 123
    .line 124
    .line 125
    move-result-object p1

    .line 126
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 127
    .line 128
    .line 129
    move-result-object v2

    .line 130
    filled-new-array {p1, v2, v4, v3}, [Ljava/lang/Object;

    .line 131
    .line 132
    .line 133
    move-result-object p1

    .line 134
    const/16 v2, 0x753c

    .line 135
    .line 136
    invoke-static {v2, p1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 137
    .line 138
    .line 139
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 140
    .line 141
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 142
    .line 143
    .line 144
    move-result p1

    .line 145
    if-eqz p1, :cond_6

    .line 146
    .line 147
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->PAUSED:Lcom/android/server/wm/ActivityRecord$State;

    .line 148
    .line 149
    const-string v2, "activityPausedLocked"

    .line 150
    .line 151
    invoke-virtual {p0, p1, v2}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 152
    .line 153
    .line 154
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 155
    .line 156
    if-eqz p1, :cond_6

    .line 157
    .line 158
    aget-boolean p1, v0, v1

    .line 159
    .line 160
    if-eqz p1, :cond_5

    .line 161
    .line 162
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 163
    .line 164
    .line 165
    move-result-object p1

    .line 166
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 167
    .line 168
    filled-new-array {p1}, [Ljava/lang/Object;

    .line 169
    .line 170
    .line 171
    move-result-object v8

    .line 172
    const-wide v4, 0x25fea89c56f2322cL

    .line 173
    .line 174
    .line 175
    .line 176
    .line 177
    const/4 v6, 0x0

    .line 178
    const/4 v7, 0x0

    .line 179
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 180
    .line 181
    .line 182
    :cond_5
    invoke-virtual {p0, v2, v1}, Lcom/android/server/wm/ActivityRecord;->completeFinishing(Ljava/lang/String;Z)Lcom/android/server/wm/ActivityRecord;

    .line 183
    .line 184
    .line 185
    :cond_6
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 186
    .line 187
    invoke-virtual {p1, p0}, Lcom/android/server/wm/DisplayContent;->handleActivitySizeCompatModeIfNeeded(Lcom/android/server/wm/ActivityRecord;)V

    .line 188
    .line 189
    .line 190
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 191
    .line 192
    invoke-virtual {p0}, Lcom/android/server/wm/RootWindowContainer;->ensureActivitiesVisible()V

    .line 193
    .line 194
    .line 195
    return-void
.end method

.method public final activityStopped(Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 4
    .line 5
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStopTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 6
    .line 7
    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 8
    .line 9
    .line 10
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 11
    .line 12
    sget-object v1, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 13
    .line 14
    const/4 v2, 0x1

    .line 15
    const/4 v3, 0x0

    .line 16
    if-ne v0, v1, :cond_0

    .line 17
    .line 18
    move v1, v2

    .line 19
    goto :goto_0

    .line 20
    :cond_0
    move v1, v3

    .line 21
    :goto_0
    if-nez v1, :cond_1

    .line 22
    .line 23
    sget-object v4, Lcom/android/server/wm/ActivityRecord$State;->RESTARTING_PROCESS:Lcom/android/server/wm/ActivityRecord$State;

    .line 24
    .line 25
    if-eq v0, v4, :cond_1

    .line 26
    .line 27
    new-instance p1, Ljava/lang/StringBuilder;

    .line 28
    .line 29
    const-string p2, "Activity reported stop, but no longer stopping: "

    .line 30
    .line 31
    invoke-direct {p1, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 32
    .line 33
    .line 34
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 35
    .line 36
    .line 37
    const-string p2, " "

    .line 38
    .line 39
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 40
    .line 41
    .line 42
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 43
    .line 44
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 45
    .line 46
    .line 47
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 48
    .line 49
    .line 50
    move-result-object p0

    .line 51
    const-string p1, "ActivityTaskManager"

    .line 52
    .line 53
    invoke-static {p1, p0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 54
    .line 55
    .line 56
    return-void

    .line 57
    :cond_1
    if-eqz p2, :cond_2

    .line 58
    .line 59
    iput-object p2, p0, Lcom/android/server/wm/ActivityRecord;->mPersistentState:Landroid/os/PersistableBundle;

    .line 60
    .line 61
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 62
    .line 63
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 64
    .line 65
    invoke-virtual {p2, v0, v3}, Lcom/android/server/wm/ActivityTaskManagerService;->notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V

    .line 66
    .line 67
    .line 68
    :cond_2
    if-eqz p1, :cond_3

    .line 69
    .line 70
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mIcicle:Landroid/os/Bundle;

    .line 71
    .line 72
    iput-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mHaveState:Z

    .line 73
    .line 74
    iput v3, p0, Lcom/android/server/wm/ActivityRecord;->launchCount:I

    .line 75
    .line 76
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 77
    .line 78
    iput-object p3, p1, Lcom/android/server/wm/Task;->lastDescription:Ljava/lang/CharSequence;

    .line 79
    .line 80
    :cond_3
    sget-object p1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 81
    .line 82
    const/4 p2, 0x2

    .line 83
    aget-boolean p2, p1, p2

    .line 84
    .line 85
    if-eqz p2, :cond_4

    .line 86
    .line 87
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 88
    .line 89
    .line 90
    move-result-object p2

    .line 91
    iget-object p3, p0, Lcom/android/server/wm/ActivityRecord;->mIcicle:Landroid/os/Bundle;

    .line 92
    .line 93
    invoke-static {p3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 94
    .line 95
    .line 96
    move-result-object p3

    .line 97
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 98
    .line 99
    filled-new-array {p2, p3}, [Ljava/lang/Object;

    .line 100
    .line 101
    .line 102
    move-result-object v9

    .line 103
    const-wide v5, -0x44304d2f45f0ca84L    # -1.3424835845805755E-20

    .line 104
    .line 105
    .line 106
    .line 107
    .line 108
    const/4 v7, 0x0

    .line 109
    const/4 v8, 0x0

    .line 110
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 111
    .line 112
    .line 113
    :cond_4
    if-eqz v1, :cond_6

    .line 114
    .line 115
    aget-boolean p1, p1, v2

    .line 116
    .line 117
    if-eqz p1, :cond_5

    .line 118
    .line 119
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 120
    .line 121
    .line 122
    move-result-object p1

    .line 123
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 124
    .line 125
    filled-new-array {p1}, [Ljava/lang/Object;

    .line 126
    .line 127
    .line 128
    move-result-object v9

    .line 129
    const-wide v5, 0x69a81048ad613045L    # 9.209750965846779E200

    .line 130
    .line 131
    .line 132
    .line 133
    .line 134
    const/4 v7, 0x0

    .line 135
    const/4 v8, 0x0

    .line 136
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 137
    .line 138
    .line 139
    :cond_5
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->STOPPED:Lcom/android/server/wm/ActivityRecord$State;

    .line 140
    .line 141
    const-string p2, "activityStopped"

    .line 142
    .line 143
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 144
    .line 145
    .line 146
    :cond_6
    iput-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 147
    .line 148
    iput-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 149
    .line 150
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 151
    .line 152
    iget-object p2, p1, Lcom/android/server/wm/Task;->mLastRecentsAnimationTransaction:Landroid/window/PictureInPictureSurfaceTransaction;

    .line 153
    .line 154
    if-eqz p2, :cond_8

    .line 155
    .line 156
    iget-object p2, p1, Lcom/android/server/wm/Task;->mLastRecentsAnimationOverlay:Landroid/view/SurfaceControl;

    .line 157
    .line 158
    if-eqz p2, :cond_7

    .line 159
    .line 160
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 161
    .line 162
    .line 163
    move-result-object p2

    .line 164
    iget-object p3, p1, Lcom/android/server/wm/Task;->mLastRecentsAnimationOverlay:Landroid/view/SurfaceControl;

    .line 165
    .line 166
    invoke-virtual {p2, p3}, Landroid/view/SurfaceControl$Transaction;->remove(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 167
    .line 168
    .line 169
    :cond_7
    const/4 p2, 0x0

    .line 170
    iput-object p2, p1, Lcom/android/server/wm/Task;->mLastRecentsAnimationTransaction:Landroid/window/PictureInPictureSurfaceTransaction;

    .line 171
    .line 172
    iput-object p2, p1, Lcom/android/server/wm/Task;->mLastRecentsAnimationOverlay:Landroid/view/SurfaceControl;

    .line 173
    .line 174
    invoke-virtual {p1}, Lcom/android/server/wm/Task;->resetSurfaceControlTransforms()V

    .line 175
    .line 176
    .line 177
    :cond_8
    iget-boolean p1, p0, Lcom/android/server/wm/WindowToken;->mClientVisible:Z

    .line 178
    .line 179
    if-eqz p1, :cond_9

    .line 180
    .line 181
    invoke-virtual {p0, v3}, Lcom/android/server/wm/ActivityRecord;->setClientVisible(Z)V

    .line 182
    .line 183
    .line 184
    :cond_9
    invoke-virtual {p0, v3}, Lcom/android/server/wm/ActivityRecord;->destroySurfaces(Z)V

    .line 185
    .line 186
    .line 187
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeStartingWindow()V

    .line 188
    .line 189
    .line 190
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 191
    .line 192
    if-eqz p1, :cond_a

    .line 193
    .line 194
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->abortAndClearOptionsAnimation()V

    .line 195
    .line 196
    .line 197
    goto :goto_1

    .line 198
    :cond_a
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 199
    .line 200
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 201
    .line 202
    .line 203
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 204
    .line 205
    if-eqz p2, :cond_b

    .line 206
    .line 207
    iget-object p2, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mTopApp:Lcom/android/server/wm/WindowProcessController;

    .line 208
    .line 209
    if-eqz p2, :cond_b

    .line 210
    .line 211
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 212
    .line 213
    iget-object p3, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mTopApp:Lcom/android/server/wm/WindowProcessController;

    .line 214
    .line 215
    if-eq p2, p3, :cond_b

    .line 216
    .line 217
    iget-wide p2, p0, Lcom/android/server/wm/ActivityRecord;->lastVisibleTime:J

    .line 218
    .line 219
    iget-wide v0, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mPreviousProcessVisibleTime:J

    .line 220
    .line 221
    cmp-long p2, p2, v0

    .line 222
    .line 223
    if-lez p2, :cond_b

    .line 224
    .line 225
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 226
    .line 227
    iget-object p3, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mHomeProcess:Lcom/android/server/wm/WindowProcessController;

    .line 228
    .line 229
    if-eq p2, p3, :cond_b

    .line 230
    .line 231
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 232
    .line 233
    iput-object p2, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mPreviousProcess:Lcom/android/server/wm/WindowProcessController;

    .line 234
    .line 235
    iget-wide p2, p0, Lcom/android/server/wm/ActivityRecord;->lastVisibleTime:J

    .line 236
    .line 237
    iput-wide p2, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mPreviousProcessVisibleTime:J

    .line 238
    .line 239
    :cond_b
    :goto_1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 240
    .line 241
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityTaskSupervisor;->checkReadyForSleepLocked(Z)V

    .line 242
    .line 243
    .line 244
    return-void
.end method

.method public addStartingWindow(Ljava/lang/String;ILcom/android/server/wm/ActivityRecord;ZZZZZZZ)Z
    .locals 17

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move/from16 v1, p2

    .line 4
    .line 5
    move-object/from16 v2, p3

    .line 6
    .line 7
    move/from16 v3, p4

    .line 8
    .line 9
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->okToDisplay()Z

    .line 10
    .line 11
    .line 12
    move-result v4

    .line 13
    const/4 v5, 0x0

    .line 14
    if-nez v4, :cond_0

    .line 15
    .line 16
    return v5

    .line 17
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->hasStartingWindow()Z

    .line 18
    .line 19
    .line 20
    move-result v4

    .line 21
    if-eqz v4, :cond_1

    .line 22
    .line 23
    return v5

    .line 24
    :cond_1
    sget-boolean v4, Lcom/samsung/android/rune/CoreRune;->FW_DEVELOPMENT_DISABLE_STARTING_WINDOW:Z

    .line 25
    .line 26
    if-eqz v4, :cond_2

    .line 27
    .line 28
    return v5

    .line 29
    :cond_2
    invoke-virtual {v0, v5}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 30
    .line 31
    .line 32
    move-result-object v4

    .line 33
    if-eqz v4, :cond_3

    .line 34
    .line 35
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->isDrawn()Z

    .line 36
    .line 37
    .line 38
    move-result v4

    .line 39
    if-eqz v4, :cond_3

    .line 40
    .line 41
    return v5

    .line 42
    :cond_3
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 43
    .line 44
    iget-object v6, v4, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    .line 45
    .line 46
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 47
    .line 48
    iget v7, v4, Lcom/android/server/wm/Task;->mTaskId:I

    .line 49
    .line 50
    iget v8, v4, Lcom/android/server/wm/Task;->mUserId:I

    .line 51
    .line 52
    const/4 v9, 0x0

    .line 53
    const/4 v10, 0x0

    .line 54
    const/4 v11, 0x0

    .line 55
    invoke-virtual/range {v6 .. v11}, Lcom/android/server/wm/TaskSnapshotController;->getSnapshot(IIZZZ)Landroid/window/TaskSnapshot;

    .line 56
    .line 57
    .line 58
    move-result-object v4

    .line 59
    const/4 v6, 0x2

    .line 60
    const/4 v7, 0x1

    .line 61
    if-nez v3, :cond_5

    .line 62
    .line 63
    if-eqz p5, :cond_5

    .line 64
    .line 65
    if-eqz p6, :cond_5

    .line 66
    .line 67
    if-nez p8, :cond_5

    .line 68
    .line 69
    iget-object v8, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 70
    .line 71
    iget-object v8, v8, Lcom/android/server/wm/Task;->intent:Landroid/content/Intent;

    .line 72
    .line 73
    if-eqz v8, :cond_5

    .line 74
    .line 75
    iget-object v9, v0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 76
    .line 77
    invoke-virtual {v8}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    .line 78
    .line 79
    .line 80
    move-result-object v8

    .line 81
    invoke-virtual {v9, v8}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    .line 82
    .line 83
    .line 84
    move-result v8

    .line 85
    if-eqz v8, :cond_5

    .line 86
    .line 87
    iget-object v8, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 88
    .line 89
    new-instance v9, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;

    .line 90
    .line 91
    const/4 v10, 0x5

    .line 92
    invoke-direct {v9, v10}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;-><init>(I)V

    .line 93
    .line 94
    .line 95
    invoke-virtual {v8, v9}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord;

    .line 96
    .line 97
    .line 98
    move-result-object v8

    .line 99
    if-eqz v8, :cond_5

    .line 100
    .line 101
    invoke-virtual {v8, v4}, Lcom/android/server/wm/ActivityRecord;->isSnapshotCompatible(Landroid/window/TaskSnapshot;)Z

    .line 102
    .line 103
    .line 104
    move-result v8

    .line 105
    if-eqz v8, :cond_4

    .line 106
    .line 107
    iget-object v8, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 108
    .line 109
    iget-object v8, v8, Lcom/android/server/wm/DisplayContent;->mDisplayRotation:Lcom/android/server/wm/DisplayRotation;

    .line 110
    .line 111
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 112
    .line 113
    .line 114
    move-result v9

    .line 115
    iget-object v10, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 116
    .line 117
    iget-object v10, v10, Lcom/android/server/wm/DisplayContent;->mDisplayRotation:Lcom/android/server/wm/DisplayRotation;

    .line 118
    .line 119
    iget v10, v10, Lcom/android/server/wm/DisplayRotation;->mRotation:I

    .line 120
    .line 121
    invoke-virtual {v8, v9, v10}, Lcom/android/server/wm/DisplayRotation;->rotationForOrientation(II)I

    .line 122
    .line 123
    .line 124
    move-result v8

    .line 125
    invoke-virtual {v4}, Landroid/window/TaskSnapshot;->getRotation()I

    .line 126
    .line 127
    .line 128
    move-result v9

    .line 129
    if-ne v8, v9, :cond_4

    .line 130
    .line 131
    :goto_0
    move v8, v7

    .line 132
    goto/16 :goto_5

    .line 133
    .line 134
    :cond_4
    :goto_1
    move v8, v5

    .line 135
    goto/16 :goto_5

    .line 136
    .line 137
    :cond_5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeHome()Z

    .line 138
    .line 139
    .line 140
    move-result v8

    .line 141
    if-nez v8, :cond_7

    .line 142
    .line 143
    sget-boolean v8, Lcom/samsung/android/rune/CoreRune;->FW_SHELL_TRANSITION_SEPARATE_RECENTS:Z

    .line 144
    .line 145
    if-eqz v8, :cond_6

    .line 146
    .line 147
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeRecents()Z

    .line 148
    .line 149
    .line 150
    move-result v8

    .line 151
    if-eqz v8, :cond_6

    .line 152
    .line 153
    goto :goto_2

    .line 154
    :cond_6
    move v8, v5

    .line 155
    goto :goto_3

    .line 156
    :cond_7
    :goto_2
    move v8, v7

    .line 157
    :goto_3
    if-nez v3, :cond_8

    .line 158
    .line 159
    if-eqz p6, :cond_8

    .line 160
    .line 161
    if-eqz p5, :cond_c

    .line 162
    .line 163
    if-nez p8, :cond_c

    .line 164
    .line 165
    :cond_8
    if-nez v8, :cond_c

    .line 166
    .line 167
    if-nez p6, :cond_9

    .line 168
    .line 169
    if-nez p5, :cond_9

    .line 170
    .line 171
    iget-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 172
    .line 173
    iget-boolean v8, v8, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 174
    .line 175
    if-eqz v8, :cond_9

    .line 176
    .line 177
    new-instance v8, Ljava/lang/StringBuilder;

    .line 178
    .line 179
    const-string v9, "Skip splash screen for pop-over. newTask="

    .line 180
    .line 181
    invoke-direct {v8, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 182
    .line 183
    .line 184
    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 185
    .line 186
    .line 187
    const-string v9, ", r="

    .line 188
    .line 189
    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 190
    .line 191
    .line 192
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 193
    .line 194
    .line 195
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 196
    .line 197
    .line 198
    move-result-object v8

    .line 199
    const-string v9, "WindowManager"

    .line 200
    .line 201
    invoke-static {v9, v8}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 202
    .line 203
    .line 204
    goto :goto_1

    .line 205
    :cond_9
    sget-boolean v8, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    .line 206
    .line 207
    if-eqz v8, :cond_a

    .line 208
    .line 209
    if-nez p8, :cond_a

    .line 210
    .line 211
    if-nez p6, :cond_a

    .line 212
    .line 213
    if-nez p5, :cond_a

    .line 214
    .line 215
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isSplitEmbedded()Z

    .line 216
    .line 217
    .line 218
    move-result v8

    .line 219
    if-eqz v8, :cond_a

    .line 220
    .line 221
    goto :goto_1

    .line 222
    :cond_a
    sget-boolean v8, Lcom/samsung/android/rune/CoreRune;->FW_FLEX_PANEL:Z

    .line 223
    .line 224
    if-eqz v8, :cond_b

    .line 225
    .line 226
    iget-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mIsFlexPanel:Z

    .line 227
    .line 228
    if-eqz v8, :cond_b

    .line 229
    .line 230
    if-eqz v3, :cond_b

    .line 231
    .line 232
    goto :goto_1

    .line 233
    :cond_b
    :goto_4
    move v8, v6

    .line 234
    goto :goto_5

    .line 235
    :cond_c
    if-eqz p5, :cond_4

    .line 236
    .line 237
    if-eqz p7, :cond_10

    .line 238
    .line 239
    invoke-virtual {v0, v4}, Lcom/android/server/wm/ActivityRecord;->isSnapshotCompatible(Landroid/window/TaskSnapshot;)Z

    .line 240
    .line 241
    .line 242
    move-result v9

    .line 243
    if-eqz v9, :cond_d

    .line 244
    .line 245
    goto :goto_0

    .line 246
    :cond_d
    iget-object v9, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 247
    .line 248
    iget-boolean v9, v9, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 249
    .line 250
    if-eqz v9, :cond_e

    .line 251
    .line 252
    goto :goto_1

    .line 253
    :cond_e
    sget-boolean v9, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    .line 254
    .line 255
    if-eqz v9, :cond_f

    .line 256
    .line 257
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isSplitEmbedded()Z

    .line 258
    .line 259
    .line 260
    move-result v9

    .line 261
    if-eqz v9, :cond_f

    .line 262
    .line 263
    goto/16 :goto_1

    .line 264
    .line 265
    :cond_f
    if-nez v8, :cond_10

    .line 266
    .line 267
    goto :goto_4

    .line 268
    :cond_10
    if-nez p10, :cond_4

    .line 269
    .line 270
    if-nez v8, :cond_4

    .line 271
    .line 272
    goto :goto_4

    .line 273
    :goto_5
    iget-object v9, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 274
    .line 275
    iget-object v9, v9, Lcom/android/server/wm/WindowManagerService;->mDragDropController:Lcom/android/server/wm/DragDropController;

    .line 276
    .line 277
    iget-object v9, v9, Lcom/android/server/wm/DragDropController;->mDragState:Lcom/android/server/wm/DragState;

    .line 278
    .line 279
    if-eqz v9, :cond_11

    .line 280
    .line 281
    iget-boolean v9, v9, Lcom/android/server/wm/DragState;->mDragInProgressByRecents:Z

    .line 282
    .line 283
    if-eqz v9, :cond_11

    .line 284
    .line 285
    iget-object v9, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 286
    .line 287
    invoke-virtual {v9}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 288
    .line 289
    .line 290
    move-result v9

    .line 291
    if-nez v9, :cond_11

    .line 292
    .line 293
    invoke-virtual {v0, v7}, Lcom/android/server/wm/ActivityRecord;->isResizeable(Z)Z

    .line 294
    .line 295
    .line 296
    move-result v9

    .line 297
    if-eqz v9, :cond_11

    .line 298
    .line 299
    const-string v0, "ActivityTaskManager"

    .line 300
    .line 301
    const-string v1, "Ignore to create starting window during drag by Recents."

    .line 302
    .line 303
    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 304
    .line 305
    .line 306
    return v5

    .line 307
    :cond_11
    if-ne v8, v6, :cond_17

    .line 308
    .line 309
    iget-object v10, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 310
    .line 311
    iget-object v10, v10, Lcom/android/server/wm/WindowManagerService;->mStartingSurfaceController:Lcom/android/server/wm/StartingSurfaceController;

    .line 312
    .line 313
    iget-object v11, v0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 314
    .line 315
    iget v12, v0, Lcom/android/server/wm/ActivityRecord;->mTargetSdk:I

    .line 316
    .line 317
    iget-object v10, v10, Lcom/android/server/wm/StartingSurfaceController;->mSplashScreenExceptionsList:Lcom/android/server/wm/SplashScreenExceptionList;

    .line 318
    .line 319
    const-string v13, "SplashScreen checking exception for package "

    .line 320
    .line 321
    const/16 v14, 0x23

    .line 322
    .line 323
    if-le v12, v14, :cond_12

    .line 324
    .line 325
    invoke-virtual {v10}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 326
    .line 327
    .line 328
    :goto_6
    move v6, v5

    .line 329
    goto :goto_a

    .line 330
    :cond_12
    iget-object v14, v10, Lcom/android/server/wm/SplashScreenExceptionList;->mLock:Ljava/lang/Object;

    .line 331
    .line 332
    monitor-enter v14

    .line 333
    :try_start_0
    sget-boolean v15, Lcom/android/server/wm/SplashScreenExceptionList;->DEBUG:Z

    .line 334
    .line 335
    if-eqz v15, :cond_13

    .line 336
    .line 337
    const-string v15, "SplashScreenExceptionList"

    .line 338
    .line 339
    sget-object v16, Ljava/util/Locale;->US:Ljava/util/Locale;

    .line 340
    .line 341
    iget-object v9, v10, Lcom/android/server/wm/SplashScreenExceptionList;->mDeviceConfigExcludedPackages:Ljava/util/HashSet;

    .line 342
    .line 343
    invoke-virtual {v9, v11}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 344
    .line 345
    .line 346
    move-result v9

    .line 347
    new-instance v6, Ljava/lang/StringBuilder;

    .line 348
    .line 349
    invoke-direct {v6, v13}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 350
    .line 351
    .line 352
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 353
    .line 354
    .line 355
    const-string v13, " (target sdk:"

    .line 356
    .line 357
    invoke-virtual {v6, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 358
    .line 359
    .line 360
    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 361
    .line 362
    .line 363
    const-string v12, ") -> "

    .line 364
    .line 365
    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 366
    .line 367
    .line 368
    invoke-virtual {v6, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 369
    .line 370
    .line 371
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 372
    .line 373
    .line 374
    move-result-object v6

    .line 375
    invoke-static {v15, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 376
    .line 377
    .line 378
    goto :goto_7

    .line 379
    :catchall_0
    move-exception v0

    .line 380
    goto :goto_b

    .line 381
    :cond_13
    :goto_7
    iget-object v6, v10, Lcom/android/server/wm/SplashScreenExceptionList;->mDeviceConfigExcludedPackages:Ljava/util/HashSet;

    .line 382
    .line 383
    invoke-virtual {v6, v11}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    .line 384
    .line 385
    .line 386
    move-result v6

    .line 387
    if-nez v6, :cond_14

    .line 388
    .line 389
    monitor-exit v14

    .line 390
    goto :goto_6

    .line 391
    :cond_14
    monitor-exit v14
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 392
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 393
    .line 394
    iget-object v9, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 395
    .line 396
    iget-object v9, v9, Lcom/android/server/wm/ActivityTaskManagerService;->mContext:Landroid/content/Context;

    .line 397
    .line 398
    invoke-virtual {v9}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 399
    .line 400
    .line 401
    move-result-object v9

    .line 402
    const/16 v10, 0x80

    .line 403
    .line 404
    invoke-virtual {v6, v9, v10}, Landroid/content/Intent;->resolveActivityInfo(Landroid/content/pm/PackageManager;I)Landroid/content/pm/ActivityInfo;

    .line 405
    .line 406
    .line 407
    move-result-object v6

    .line 408
    if-eqz v6, :cond_15

    .line 409
    .line 410
    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 411
    .line 412
    goto :goto_8

    .line 413
    :cond_15
    const/4 v6, 0x0

    .line 414
    :goto_8
    if-eqz v6, :cond_16

    .line 415
    .line 416
    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    .line 417
    .line 418
    if-eqz v6, :cond_16

    .line 419
    .line 420
    const-string v9, "android.splashscreen.exception_opt_out"

    .line 421
    .line 422
    invoke-virtual {v6, v9, v5}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    .line 423
    .line 424
    .line 425
    move-result v6

    .line 426
    if-eqz v6, :cond_16

    .line 427
    .line 428
    move v6, v7

    .line 429
    goto :goto_9

    .line 430
    :cond_16
    move v6, v5

    .line 431
    :goto_9
    xor-int/2addr v6, v7

    .line 432
    :goto_a
    if-eqz v6, :cond_17

    .line 433
    .line 434
    move v6, v7

    .line 435
    goto :goto_c

    .line 436
    :goto_b
    :try_start_1
    monitor-exit v14
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 437
    throw v0

    .line 438
    :cond_17
    move v6, v5

    .line 439
    :goto_c
    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityRecord;->isIconStylePreferred(I)Z

    .line 440
    .line 441
    .line 442
    move-result v9

    .line 443
    iget-object v10, v0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 444
    .line 445
    iget v11, v0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 446
    .line 447
    if-eqz p5, :cond_18

    .line 448
    .line 449
    or-int/lit8 v3, v3, 0x2

    .line 450
    .line 451
    :cond_18
    if-eqz p6, :cond_19

    .line 452
    .line 453
    or-int/lit8 v3, v3, 0x4

    .line 454
    .line 455
    :cond_19
    if-eqz p7, :cond_1a

    .line 456
    .line 457
    or-int/lit8 v3, v3, 0x8

    .line 458
    .line 459
    :cond_1a
    if-nez p8, :cond_1b

    .line 460
    .line 461
    if-ne v8, v7, :cond_1c

    .line 462
    .line 463
    :cond_1b
    or-int/lit8 v3, v3, 0x10

    .line 464
    .line 465
    :cond_1c
    if-eqz p9, :cond_1d

    .line 466
    .line 467
    or-int/lit8 v3, v3, 0x20

    .line 468
    .line 469
    :cond_1d
    if-eqz v6, :cond_1e

    .line 470
    .line 471
    const/high16 v6, -0x80000000

    .line 472
    .line 473
    or-int/2addr v3, v6

    .line 474
    :cond_1e
    if-eqz p10, :cond_1f

    .line 475
    .line 476
    or-int/lit8 v3, v3, 0x40

    .line 477
    .line 478
    :cond_1f
    const/4 v6, 0x2

    .line 479
    if-ne v8, v6, :cond_20

    .line 480
    .line 481
    const-wide/32 v12, 0xc45e600

    .line 482
    .line 483
    .line 484
    invoke-static {v11}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    .line 485
    .line 486
    .line 487
    move-result-object v6

    .line 488
    invoke-static {v12, v13, v10, v6}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JLjava/lang/String;Landroid/os/UserHandle;)Z

    .line 489
    .line 490
    .line 491
    move-result v6

    .line 492
    if-eqz v6, :cond_20

    .line 493
    .line 494
    or-int/lit16 v3, v3, 0x80

    .line 495
    .line 496
    :cond_20
    if-eqz v9, :cond_21

    .line 497
    .line 498
    or-int/lit16 v3, v3, 0x200

    .line 499
    .line 500
    :cond_21
    const-string v6, "ActivityTaskManager"

    .line 501
    .line 502
    const-string v9, "addStartingWindow: type="

    .line 503
    .line 504
    const-string v10, " typeParameter="

    .line 505
    .line 506
    invoke-static {v8, v9, v10}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 507
    .line 508
    .line 509
    move-result-object v9

    .line 510
    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 511
    .line 512
    .line 513
    move-result-object v10

    .line 514
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 515
    .line 516
    .line 517
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 518
    .line 519
    .line 520
    move-result-object v9

    .line 521
    invoke-static {v6, v9}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 522
    .line 523
    .line 524
    if-ne v8, v7, :cond_29

    .line 525
    .line 526
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeHome()Z

    .line 527
    .line 528
    .line 529
    move-result v1

    .line 530
    if-eqz v1, :cond_22

    .line 531
    .line 532
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 533
    .line 534
    iget-object v1, v1, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    .line 535
    .line 536
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 537
    .line 538
    iget v2, v2, Lcom/android/server/wm/Task;->mTaskId:I

    .line 539
    .line 540
    iget-object v1, v1, Lcom/android/server/wm/AbsAppSnapshotController;->mCache:Lcom/android/server/wm/SnapshotCache;

    .line 541
    .line 542
    check-cast v1, Lcom/android/server/wm/TaskSnapshotCache;

    .line 543
    .line 544
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 545
    .line 546
    .line 547
    move-result-object v2

    .line 548
    invoke-virtual {v1, v2}, Lcom/android/server/wm/SnapshotCache;->removeRunningEntry(Ljava/lang/Integer;)V

    .line 549
    .line 550
    .line 551
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 552
    .line 553
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 554
    .line 555
    iget v1, v1, Lcom/android/server/wm/AppTransition;->mNextAppTransitionFlags:I

    .line 556
    .line 557
    const/4 v2, 0x2

    .line 558
    and-int/2addr v1, v2

    .line 559
    if-nez v1, :cond_22

    .line 560
    .line 561
    return v5

    .line 562
    :cond_22
    if-nez v4, :cond_23

    .line 563
    .line 564
    goto :goto_d

    .line 565
    :cond_23
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 566
    .line 567
    aget-boolean v1, v1, v7

    .line 568
    .line 569
    if-eqz v1, :cond_24

    .line 570
    .line 571
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 572
    .line 573
    const-string v2, "Creating SnapshotStartingData"

    .line 574
    .line 575
    const/4 v6, 0x0

    .line 576
    const/4 v8, 0x0

    .line 577
    const-wide v9, -0x2fa12132dcbcc5afL    # -1.4298154306107322E79

    .line 578
    .line 579
    .line 580
    .line 581
    .line 582
    move-object/from16 p2, v1

    .line 583
    .line 584
    move-wide/from16 p3, v9

    .line 585
    .line 586
    move/from16 p5, v6

    .line 587
    .line 588
    move-object/from16 p6, v2

    .line 589
    .line 590
    move-object/from16 p7, v8

    .line 591
    .line 592
    invoke-static/range {p2 .. p7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 593
    .line 594
    .line 595
    :cond_24
    new-instance v1, Lcom/android/server/wm/SnapshotStartingData;

    .line 596
    .line 597
    iget-object v2, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 598
    .line 599
    invoke-direct {v1, v2, v4, v3}, Lcom/android/server/wm/SnapshotStartingData;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/window/TaskSnapshot;I)V

    .line 600
    .line 601
    .line 602
    iput-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 603
    .line 604
    iget-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mStyleFillsParent:Z

    .line 605
    .line 606
    if-nez v1, :cond_25

    .line 607
    .line 608
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 609
    .line 610
    invoke-virtual {v1}, Lcom/android/server/wm/WindowContainer;->getChildCount()I

    .line 611
    .line 612
    .line 613
    move-result v1

    .line 614
    if-gt v1, v7, :cond_26

    .line 615
    .line 616
    :cond_25
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 617
    .line 618
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;

    .line 619
    .line 620
    const/4 v3, 0x6

    .line 621
    invoke-direct {v2, v3}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;-><init>(I)V

    .line 622
    .line 623
    .line 624
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskFragment;->forAllLeafTaskFragments(Ljava/util/function/Predicate;)Z

    .line 625
    .line 626
    .line 627
    move-result v1

    .line 628
    if-eqz v1, :cond_27

    .line 629
    .line 630
    :cond_26
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 631
    .line 632
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 633
    .line 634
    iput-object v2, v1, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 635
    .line 636
    iput-object v1, v2, Lcom/android/server/wm/Task;->mSharedStartingData:Lcom/android/server/wm/StartingData;

    .line 637
    .line 638
    :cond_27
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->scheduleAddStartingWindow()V

    .line 639
    .line 640
    .line 641
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 642
    .line 643
    if-nez v1, :cond_28

    .line 644
    .line 645
    const/4 v1, 0x0

    .line 646
    iput-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 647
    .line 648
    goto :goto_d

    .line 649
    :cond_28
    move v5, v7

    .line 650
    :goto_d
    return v5

    .line 651
    :cond_29
    if-nez v1, :cond_2b

    .line 652
    .line 653
    iget v4, v0, Lcom/android/server/wm/ActivityRecord;->theme:I

    .line 654
    .line 655
    if-eqz v4, :cond_2b

    .line 656
    .line 657
    sget-boolean v4, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    .line 658
    .line 659
    if-eqz v4, :cond_2a

    .line 660
    .line 661
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isSplitEmbedded()Z

    .line 662
    .line 663
    .line 664
    move-result v4

    .line 665
    if-eqz v4, :cond_2a

    .line 666
    .line 667
    if-eqz v2, :cond_2a

    .line 668
    .line 669
    iget-object v4, v2, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 670
    .line 671
    if-eqz v4, :cond_2a

    .line 672
    .line 673
    iget-object v4, v4, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 674
    .line 675
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 676
    .line 677
    if-ne v4, v6, :cond_2a

    .line 678
    .line 679
    goto :goto_e

    .line 680
    :cond_2a
    return v5

    .line 681
    :cond_2b
    :goto_e
    if-eqz v2, :cond_2c

    .line 682
    .line 683
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecord;->transferStartingWindow(Lcom/android/server/wm/ActivityRecord;)Z

    .line 684
    .line 685
    .line 686
    move-result v2

    .line 687
    if-eqz v2, :cond_2c

    .line 688
    .line 689
    return v7

    .line 690
    :cond_2c
    const/4 v2, 0x2

    .line 691
    if-eq v8, v2, :cond_2d

    .line 692
    .line 693
    return v5

    .line 694
    :cond_2d
    sget-object v2, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 695
    .line 696
    aget-boolean v2, v2, v7

    .line 697
    .line 698
    if-eqz v2, :cond_2e

    .line 699
    .line 700
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 701
    .line 702
    const-string v4, "Creating SplashScreenStartingData"

    .line 703
    .line 704
    const-wide v5, 0x64e3208ccbdf3a92L    # 9.688525390646764E177

    .line 705
    .line 706
    .line 707
    .line 708
    .line 709
    const/4 v8, 0x0

    .line 710
    const/4 v9, 0x0

    .line 711
    move-object/from16 p3, v2

    .line 712
    .line 713
    move-wide/from16 p4, v5

    .line 714
    .line 715
    move/from16 p6, v8

    .line 716
    .line 717
    move-object/from16 p7, v4

    .line 718
    .line 719
    move-object/from16 p8, v9

    .line 720
    .line 721
    invoke-static/range {p3 .. p8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 722
    .line 723
    .line 724
    :cond_2e
    new-instance v2, Lcom/android/server/wm/SplashScreenStartingData;

    .line 725
    .line 726
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 727
    .line 728
    invoke-direct {v2, v4, v1, v3}, Lcom/android/server/wm/SplashScreenStartingData;-><init>(Lcom/android/server/wm/WindowManagerService;II)V

    .line 729
    .line 730
    .line 731
    iput-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 732
    .line 733
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->scheduleAddStartingWindow()V

    .line 734
    .line 735
    .line 736
    return v7
.end method

.method public addToFinishingAndWaitForIdle()Z
    .locals 7

    .line 1
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    aget-boolean v0, v0, v1

    .line 5
    .line 6
    if-eqz v0, :cond_0

    .line 7
    .line 8
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 9
    .line 10
    .line 11
    move-result-object v0

    .line 12
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 13
    .line 14
    const/4 v5, 0x0

    .line 15
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 16
    .line 17
    .line 18
    move-result-object v6

    .line 19
    const-wide v2, 0x2bfabd7d477d3deaL    # 7.824308039454567E-97

    .line 20
    .line 21
    .line 22
    .line 23
    .line 24
    const/4 v4, 0x0

    .line 25
    invoke-static/range {v1 .. v6}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 26
    .line 27
    .line 28
    :cond_0
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->FINISHING:Lcom/android/server/wm/ActivityRecord$State;

    .line 29
    .line 30
    const-string v1, "addToFinishingAndWaitForIdle"

    .line 31
    .line 32
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 33
    .line 34
    .line 35
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 36
    .line 37
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mFinishingActivities:Ljava/util/ArrayList;

    .line 38
    .line 39
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 40
    .line 41
    .line 42
    move-result v0

    .line 43
    if-nez v0, :cond_1

    .line 44
    .line 45
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 46
    .line 47
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mFinishingActivities:Ljava/util/ArrayList;

    .line 48
    .line 49
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 50
    .line 51
    .line 52
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->resumeKeyDispatchingLocked()V

    .line 53
    .line 54
    .line 55
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 56
    .line 57
    const/4 v0, 0x0

    .line 58
    const/4 v1, 0x0

    .line 59
    invoke-virtual {p0, v1, v1, v1, v0}, Lcom/android/server/wm/RootWindowContainer;->resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Z)Z

    .line 60
    .line 61
    .line 62
    move-result p0

    .line 63
    return p0
.end method

.method public final addToStopping(Ljava/lang/String;ZZ)V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 4
    .line 5
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 10
    .line 11
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 12
    .line 13
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 18
    .line 19
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 20
    .line 21
    .line 22
    move-result-object v0

    .line 23
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 24
    .line 25
    .line 26
    move-result-object v1

    .line 27
    filled-new-array {v0, v1, v2, p1}, [Ljava/lang/Object;

    .line 28
    .line 29
    .line 30
    move-result-object p1

    .line 31
    const/16 v0, 0x7572

    .line 32
    .line 33
    invoke-static {v0, p1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 34
    .line 35
    .line 36
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 37
    .line 38
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 39
    .line 40
    invoke-virtual {p1, p0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 41
    .line 42
    .line 43
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 44
    .line 45
    .line 46
    move-result-object p1

    .line 47
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 48
    .line 49
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 50
    .line 51
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 52
    .line 53
    .line 54
    move-result v0

    .line 55
    const/4 v1, 0x3

    .line 56
    const/4 v2, 0x1

    .line 57
    if-gt v0, v1, :cond_2

    .line 58
    .line 59
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isRootOfTask()Z

    .line 60
    .line 61
    .line 62
    move-result v0

    .line 63
    if-eqz v0, :cond_1

    .line 64
    .line 65
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getChildCount()I

    .line 66
    .line 67
    .line 68
    move-result v0

    .line 69
    if-le v0, v2, :cond_2

    .line 70
    .line 71
    :cond_1
    const/4 v0, 0x0

    .line 72
    goto :goto_0

    .line 73
    :cond_2
    move v0, v2

    .line 74
    :goto_0
    if-nez p2, :cond_4

    .line 75
    .line 76
    if-eqz v0, :cond_3

    .line 77
    .line 78
    goto :goto_1

    .line 79
    :cond_3
    invoke-virtual {p1}, Lcom/android/server/wm/Task;->checkReadyForSleep()V

    .line 80
    .line 81
    .line 82
    goto :goto_2

    .line 83
    :cond_4
    :goto_1
    sget-object p1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 84
    .line 85
    aget-boolean p1, p1, v2

    .line 86
    .line 87
    if-eqz p1, :cond_5

    .line 88
    .line 89
    xor-int/lit8 p1, p3, 0x1

    .line 90
    .line 91
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 92
    .line 93
    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 94
    .line 95
    .line 96
    move-result-object p2

    .line 97
    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 98
    .line 99
    .line 100
    move-result-object p1

    .line 101
    filled-new-array {p2, p1}, [Ljava/lang/Object;

    .line 102
    .line 103
    .line 104
    move-result-object v6

    .line 105
    const/16 v4, 0xf

    .line 106
    .line 107
    const/4 v5, 0x0

    .line 108
    const-wide v2, 0x37421def674e3d56L    # 1.624782857863838E-42

    .line 109
    .line 110
    .line 111
    .line 112
    .line 113
    invoke-static/range {v1 .. v6}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 114
    .line 115
    .line 116
    :cond_5
    if-nez p3, :cond_6

    .line 117
    .line 118
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 119
    .line 120
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskSupervisor;->scheduleIdle()V

    .line 121
    .line 122
    .line 123
    goto :goto_2

    .line 124
    :cond_6
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 125
    .line 126
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskSupervisor;->mHandler:Lcom/android/server/wm/ActivityTaskSupervisor$ActivityTaskSupervisorHandler;

    .line 127
    .line 128
    const/16 p2, 0xc8

    .line 129
    .line 130
    invoke-virtual {p1, p2, p0}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 131
    .line 132
    .line 133
    move-result-object p0

    .line 134
    sget p2, Lcom/android/server/wm/ActivityTaskSupervisor;->IDLE_TIMEOUT:I

    .line 135
    .line 136
    int-to-long p2, p2

    .line 137
    invoke-virtual {p1, p0, p2, p3}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 138
    .line 139
    .line 140
    :goto_2
    return-void
.end method

.method public final addWindow(Lcom/android/server/wm/WindowState;)V
    .locals 4

    .line 1
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowToken;->addWindow(Lcom/android/server/wm/WindowState;)V

    .line 2
    .line 3
    .line 4
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 5
    .line 6
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 7
    .line 8
    const/4 v1, 0x1

    .line 9
    if-ne v0, v1, :cond_1

    .line 10
    .line 11
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isSecureLocked()Z

    .line 12
    .line 13
    .line 14
    move-result v0

    .line 15
    if-eqz v0, :cond_1

    .line 16
    .line 17
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 18
    .line 19
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingController:Lcom/android/server/wm/MultiTaskingController;

    .line 20
    .line 21
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 22
    .line 23
    .line 24
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    .line 25
    .line 26
    .line 27
    move-result-object v2

    .line 28
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 29
    .line 30
    .line 31
    move-result-object v3

    .line 32
    if-eqz v2, :cond_1

    .line 33
    .line 34
    if-nez v3, :cond_0

    .line 35
    .line 36
    goto :goto_0

    .line 37
    :cond_0
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isRemoteAppDisplay()Z

    .line 38
    .line 39
    .line 40
    move-result v3

    .line 41
    if-eqz v3, :cond_1

    .line 42
    .line 43
    iget-object v3, v0, Lcom/android/server/wm/MultiTaskingController;->mH:Lcom/android/server/wm/MultiTaskingController$H;

    .line 44
    .line 45
    iget v2, v2, Lcom/android/server/wm/Task;->mTaskId:I

    .line 46
    .line 47
    iget-object p1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 48
    .line 49
    iget-object p1, p1, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    .line 50
    .line 51
    invoke-virtual {v3, v1, v2, v1, p1}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    .line 52
    .line 53
    .line 54
    move-result-object p1

    .line 55
    iget-object v0, v0, Lcom/android/server/wm/MultiTaskingController;->mH:Lcom/android/server/wm/MultiTaskingController$H;

    .line 56
    .line 57
    invoke-virtual {v0, p1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 58
    .line 59
    .line 60
    :cond_1
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->checkKeyguardFlagsChanged()V

    .line 61
    .line 62
    .line 63
    return-void
.end method

.method public final allowEdgeExtension()Z
    .locals 3

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x0

    .line 6
    if-nez v0, :cond_2

    .line 7
    .line 8
    const/4 v0, 0x1

    .line 9
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->occludesParent(Z)Z

    .line 10
    .line 11
    .line 12
    move-result v2

    .line 13
    if-nez v2, :cond_0

    .line 14
    .line 15
    goto :goto_0

    .line 16
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasStartingWindow()Z

    .line 17
    .line 18
    .line 19
    move-result v2

    .line 20
    if-nez v2, :cond_1

    .line 21
    .line 22
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 23
    .line 24
    .line 25
    move-result-object p0

    .line 26
    if-eqz p0, :cond_2

    .line 27
    .line 28
    iget-object p0, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 29
    .line 30
    iget p0, p0, Landroid/view/WindowManager$LayoutParams;->format:I

    .line 31
    .line 32
    invoke-static {p0}, Landroid/graphics/PixelFormat;->formatHasAlpha(I)Z

    .line 33
    .line 34
    .line 35
    move-result p0

    .line 36
    if-nez p0, :cond_2

    .line 37
    .line 38
    :cond_1
    move v1, v0

    .line 39
    :cond_2
    :goto_0
    return v1
.end method

.method public final applyAnimation(Landroid/view/WindowManager$LayoutParams;IZZLjava/util/ArrayList;)Z
    .locals 2

    .line 1
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 2
    .line 3
    and-int/lit8 v0, v0, 0x8

    .line 4
    .line 5
    const/4 v1, 0x0

    .line 6
    if-eqz v0, :cond_0

    .line 7
    .line 8
    return v1

    .line 9
    :cond_0
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mRequestForceTransition:Z

    .line 10
    .line 11
    invoke-super/range {p0 .. p5}, Lcom/android/server/wm/WindowContainer;->applyAnimation(Landroid/view/WindowManager$LayoutParams;IZZLjava/util/ArrayList;)Z

    .line 12
    .line 13
    .line 14
    move-result p0

    .line 15
    return p0
.end method

.method public final applyFixedRotationTransform(Landroid/view/DisplayInfo;Lcom/android/server/wm/DisplayFrames;Landroid/content/res/Configuration;)V
    .locals 3

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 2
    .line 3
    const-string v1, "applyFixedRotationTransform, r="

    .line 4
    .line 5
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 6
    .line 7
    .line 8
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 9
    .line 10
    .line 11
    const-string v1, ", caller="

    .line 12
    .line 13
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14
    .line 15
    .line 16
    const/4 v1, 0x5

    .line 17
    const-string v2, "ActivityTaskManager"

    .line 18
    .line 19
    invoke-static {v1, v0, v2}, Lcom/android/server/am/ActivityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/StringBuilder;Ljava/lang/String;)V

    .line 20
    .line 21
    .line 22
    invoke-super {p0, p1, p2, p3}, Lcom/android/server/wm/WindowToken;->applyFixedRotationTransform(Landroid/view/DisplayInfo;Lcom/android/server/wm/DisplayFrames;Landroid/content/res/Configuration;)V

    .line 23
    .line 24
    .line 25
    const/4 p1, 0x0

    .line 26
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->ensureActivityConfiguration(Z)Z

    .line 27
    .line 28
    .line 29
    return-void
.end method

.method public final applyOptionsAnimation$1()V
    .locals 19

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 4
    .line 5
    const/4 v2, 0x0

    .line 6
    const/4 v3, 0x0

    .line 7
    if-eqz v1, :cond_1

    .line 8
    .line 9
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 10
    .line 11
    iget-object v4, v4, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 12
    .line 13
    invoke-virtual {v4, v1, v3, v3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionRemote(Landroid/view/RemoteAnimationAdapter;ZZ)V

    .line 14
    .line 15
    .line 16
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 17
    .line 18
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 19
    .line 20
    invoke-virtual {v3}, Landroid/view/RemoteAnimationAdapter;->getStatusBarTransitionDelay()J

    .line 21
    .line 22
    .line 23
    move-result-wide v3

    .line 24
    iget-object v1, v1, Lcom/android/server/wm/TransitionController;->mCollectingTransition:Lcom/android/server/wm/Transition;

    .line 25
    .line 26
    if-nez v1, :cond_0

    .line 27
    .line 28
    goto/16 :goto_6

    .line 29
    .line 30
    :cond_0
    iput-wide v3, v1, Lcom/android/server/wm/Transition;->mStatusBarTransitionDelay:J

    .line 31
    .line 32
    goto/16 :goto_6

    .line 33
    .line 34
    :cond_1
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 35
    .line 36
    if-nez v1, :cond_2

    .line 37
    .line 38
    return-void

    .line 39
    :cond_2
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationType()I

    .line 40
    .line 41
    .line 42
    move-result v1

    .line 43
    const/4 v4, 0x5

    .line 44
    if-ne v1, v4, :cond_4

    .line 45
    .line 46
    iget-object v0, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 47
    .line 48
    invoke-static {}, Landroid/window/TransitionInfo$AnimationOptions;->makeSceneTransitionAnimOptions()Landroid/window/TransitionInfo$AnimationOptions;

    .line 49
    .line 50
    .line 51
    move-result-object v1

    .line 52
    iget-object v0, v0, Lcom/android/server/wm/TransitionController;->mCollectingTransition:Lcom/android/server/wm/Transition;

    .line 53
    .line 54
    if-nez v0, :cond_3

    .line 55
    .line 56
    goto :goto_0

    .line 57
    :cond_3
    invoke-virtual {v0, v1, v2, v2}, Lcom/android/server/wm/Transition;->setOverrideAnimation(Landroid/window/TransitionInfo$AnimationOptions;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;)V

    .line 58
    .line 59
    .line 60
    :goto_0
    return-void

    .line 61
    :cond_4
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 62
    .line 63
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 64
    .line 65
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationType()I

    .line 66
    .line 67
    .line 68
    move-result v6

    .line 69
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 70
    .line 71
    .line 72
    move-result-object v7

    .line 73
    const/4 v8, -0x1

    .line 74
    if-eq v6, v8, :cond_19

    .line 75
    .line 76
    if-eqz v6, :cond_19

    .line 77
    .line 78
    const/4 v8, 0x1

    .line 79
    if-eq v6, v8, :cond_18

    .line 80
    .line 81
    const/4 v9, 0x2

    .line 82
    if-eq v6, v9, :cond_16

    .line 83
    .line 84
    const/4 v9, 0x4

    .line 85
    const/4 v10, 0x3

    .line 86
    if-eq v6, v10, :cond_11

    .line 87
    .line 88
    if-eq v6, v9, :cond_11

    .line 89
    .line 90
    const/16 v9, 0x9

    .line 91
    .line 92
    const/16 v10, 0x8

    .line 93
    .line 94
    if-eq v6, v10, :cond_a

    .line 95
    .line 96
    if-eq v6, v9, :cond_a

    .line 97
    .line 98
    const/16 v3, 0xb

    .line 99
    .line 100
    if-eq v6, v3, :cond_7

    .line 101
    .line 102
    const/16 v1, 0xc

    .line 103
    .line 104
    if-eq v6, v1, :cond_5

    .line 105
    .line 106
    const-string v1, "applyOptionsLocked: Unknown animationType="

    .line 107
    .line 108
    const-string v3, "WindowManager"

    .line 109
    .line 110
    invoke-static {v6, v1, v3}, Lcom/android/server/NandswapManager$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 111
    .line 112
    .line 113
    goto/16 :goto_4

    .line 114
    .line 115
    :cond_5
    iget-object v1, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 116
    .line 117
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->canOverridePendingAppTransition()Z

    .line 118
    .line 119
    .line 120
    move-result v3

    .line 121
    if-eqz v3, :cond_6

    .line 122
    .line 123
    invoke-virtual {v1, v8}, Lcom/android/server/wm/AppTransition;->clear(Z)V

    .line 124
    .line 125
    .line 126
    iput v9, v1, Lcom/android/server/wm/AppTransition;->mNextAppTransitionType:I

    .line 127
    .line 128
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    .line 129
    .line 130
    .line 131
    :cond_6
    invoke-static {}, Landroid/window/TransitionInfo$AnimationOptions;->makeCrossProfileAnimOptions()Landroid/window/TransitionInfo$AnimationOptions;

    .line 132
    .line 133
    .line 134
    move-result-object v1

    .line 135
    move-object v3, v2

    .line 136
    :goto_1
    move-object v6, v3

    .line 137
    goto/16 :goto_5

    .line 138
    .line 139
    :cond_7
    iget-object v3, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 140
    .line 141
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 142
    .line 143
    .line 144
    move-result v7

    .line 145
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 146
    .line 147
    .line 148
    move-result v4

    .line 149
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 150
    .line 151
    .line 152
    move-result v9

    .line 153
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 154
    .line 155
    .line 156
    move-result v11

    .line 157
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->canOverridePendingAppTransition()Z

    .line 158
    .line 159
    .line 160
    move-result v6

    .line 161
    if-eqz v6, :cond_8

    .line 162
    .line 163
    invoke-virtual {v3, v8}, Lcom/android/server/wm/AppTransition;->clear(Z)V

    .line 164
    .line 165
    .line 166
    iput v10, v3, Lcom/android/server/wm/AppTransition;->mNextAppTransitionType:I

    .line 167
    .line 168
    const/4 v12, 0x0

    .line 169
    move-object v6, v3

    .line 170
    move v8, v4

    .line 171
    move v10, v11

    .line 172
    move-object v11, v12

    .line 173
    invoke-virtual/range {v6 .. v11}, Lcom/android/server/wm/AppTransition;->putDefaultNextAppTransitionCoordinates(IIIILandroid/hardware/HardwareBuffer;)V

    .line 174
    .line 175
    .line 176
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    .line 177
    .line 178
    .line 179
    :cond_8
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 180
    .line 181
    .line 182
    move-result v3

    .line 183
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 184
    .line 185
    .line 186
    move-result v4

    .line 187
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 188
    .line 189
    .line 190
    move-result v6

    .line 191
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 192
    .line 193
    .line 194
    move-result v7

    .line 195
    invoke-static {v3, v4, v6, v7}, Landroid/window/TransitionInfo$AnimationOptions;->makeClipRevealAnimOptions(IIII)Landroid/window/TransitionInfo$AnimationOptions;

    .line 196
    .line 197
    .line 198
    move-result-object v3

    .line 199
    invoke-virtual {v5}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    .line 200
    .line 201
    .line 202
    move-result-object v4

    .line 203
    if-nez v4, :cond_9

    .line 204
    .line 205
    new-instance v4, Landroid/graphics/Rect;

    .line 206
    .line 207
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 208
    .line 209
    .line 210
    move-result v6

    .line 211
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 212
    .line 213
    .line 214
    move-result v7

    .line 215
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 216
    .line 217
    .line 218
    move-result v8

    .line 219
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 220
    .line 221
    .line 222
    move-result v9

    .line 223
    add-int/2addr v9, v8

    .line 224
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 225
    .line 226
    .line 227
    move-result v8

    .line 228
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 229
    .line 230
    .line 231
    move-result v1

    .line 232
    add-int/2addr v1, v8

    .line 233
    invoke-direct {v4, v6, v7, v9, v1}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 234
    .line 235
    .line 236
    invoke-virtual {v5, v4}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 237
    .line 238
    .line 239
    :cond_9
    :goto_2
    move-object v6, v2

    .line 240
    move-object v1, v3

    .line 241
    move-object v3, v6

    .line 242
    goto/16 :goto_5

    .line 243
    .line 244
    :cond_a
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimSpecs()[Landroid/view/AppTransitionAnimationSpec;

    .line 245
    .line 246
    .line 247
    move-result-object v11

    .line 248
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getSpecsFuture()Landroid/view/IAppTransitionAnimationSpecsFuture;

    .line 249
    .line 250
    .line 251
    move-result-object v12

    .line 252
    if-eqz v12, :cond_c

    .line 253
    .line 254
    iget-object v4, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 255
    .line 256
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationStartedListener()Landroid/os/IRemoteCallback;

    .line 257
    .line 258
    .line 259
    move-result-object v1

    .line 260
    if-ne v6, v10, :cond_b

    .line 261
    .line 262
    move v3, v8

    .line 263
    :cond_b
    invoke-virtual {v4, v12, v1, v3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V

    .line 264
    .line 265
    .line 266
    goto/16 :goto_4

    .line 267
    .line 268
    :cond_c
    if-ne v6, v9, :cond_d

    .line 269
    .line 270
    if-eqz v11, :cond_d

    .line 271
    .line 272
    iget-object v4, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 273
    .line 274
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationStartedListener()Landroid/os/IRemoteCallback;

    .line 275
    .line 276
    .line 277
    move-result-object v5

    .line 278
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationFinishedListener()Landroid/os/IRemoteCallback;

    .line 279
    .line 280
    .line 281
    move-result-object v1

    .line 282
    invoke-virtual {v4, v11, v5, v1, v3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumb([Landroid/view/AppTransitionAnimationSpec;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V

    .line 283
    .line 284
    .line 285
    goto/16 :goto_4

    .line 286
    .line 287
    :cond_d
    iget-object v7, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 288
    .line 289
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getThumbnail()Landroid/hardware/HardwareBuffer;

    .line 290
    .line 291
    .line 292
    move-result-object v17

    .line 293
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 294
    .line 295
    .line 296
    move-result v13

    .line 297
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 298
    .line 299
    .line 300
    move-result v14

    .line 301
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 302
    .line 303
    .line 304
    move-result v15

    .line 305
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 306
    .line 307
    .line 308
    move-result v16

    .line 309
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationStartedListener()Landroid/os/IRemoteCallback;

    .line 310
    .line 311
    .line 312
    move-result-object v9

    .line 313
    if-ne v6, v10, :cond_e

    .line 314
    .line 315
    move v3, v8

    .line 316
    :cond_e
    invoke-virtual {v7}, Lcom/android/server/wm/AppTransition;->canOverridePendingAppTransition()Z

    .line 317
    .line 318
    .line 319
    move-result v6

    .line 320
    if-eqz v6, :cond_10

    .line 321
    .line 322
    invoke-virtual {v7, v8}, Lcom/android/server/wm/AppTransition;->clear(Z)V

    .line 323
    .line 324
    .line 325
    if-eqz v3, :cond_f

    .line 326
    .line 327
    goto :goto_3

    .line 328
    :cond_f
    const/4 v4, 0x6

    .line 329
    :goto_3
    iput v4, v7, Lcom/android/server/wm/AppTransition;->mNextAppTransitionType:I

    .line 330
    .line 331
    iput-boolean v3, v7, Lcom/android/server/wm/AppTransition;->mNextAppTransitionScaleUp:Z

    .line 332
    .line 333
    move-object v12, v7

    .line 334
    invoke-virtual/range {v12 .. v17}, Lcom/android/server/wm/AppTransition;->putDefaultNextAppTransitionCoordinates(IIIILandroid/hardware/HardwareBuffer;)V

    .line 335
    .line 336
    .line 337
    invoke-virtual {v7}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    .line 338
    .line 339
    .line 340
    iput-object v9, v7, Lcom/android/server/wm/AppTransition;->mNextAppTransitionCallback:Landroid/os/IRemoteCallback;

    .line 341
    .line 342
    :cond_10
    invoke-virtual {v5}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    .line 343
    .line 344
    .line 345
    move-result-object v3

    .line 346
    if-nez v3, :cond_19

    .line 347
    .line 348
    new-instance v3, Landroid/graphics/Rect;

    .line 349
    .line 350
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 351
    .line 352
    .line 353
    move-result v4

    .line 354
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 355
    .line 356
    .line 357
    move-result v6

    .line 358
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 359
    .line 360
    .line 361
    move-result v7

    .line 362
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 363
    .line 364
    .line 365
    move-result v8

    .line 366
    add-int/2addr v8, v7

    .line 367
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 368
    .line 369
    .line 370
    move-result v7

    .line 371
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 372
    .line 373
    .line 374
    move-result v1

    .line 375
    add-int/2addr v1, v7

    .line 376
    invoke-direct {v3, v4, v6, v8, v1}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 377
    .line 378
    .line 379
    invoke-virtual {v5, v3}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 380
    .line 381
    .line 382
    goto/16 :goto_4

    .line 383
    .line 384
    :cond_11
    if-ne v6, v10, :cond_12

    .line 385
    .line 386
    move v3, v8

    .line 387
    :cond_12
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getThumbnail()Landroid/hardware/HardwareBuffer;

    .line 388
    .line 389
    .line 390
    move-result-object v4

    .line 391
    iget-object v6, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 392
    .line 393
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 394
    .line 395
    .line 396
    move-result v12

    .line 397
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 398
    .line 399
    .line 400
    move-result v13

    .line 401
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationStartedListener()Landroid/os/IRemoteCallback;

    .line 402
    .line 403
    .line 404
    move-result-object v7

    .line 405
    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->canOverridePendingAppTransition()Z

    .line 406
    .line 407
    .line 408
    move-result v11

    .line 409
    if-eqz v11, :cond_14

    .line 410
    .line 411
    invoke-virtual {v6, v8}, Lcom/android/server/wm/AppTransition;->clear(Z)V

    .line 412
    .line 413
    .line 414
    if-eqz v3, :cond_13

    .line 415
    .line 416
    move v9, v10

    .line 417
    :cond_13
    iput v9, v6, Lcom/android/server/wm/AppTransition;->mNextAppTransitionType:I

    .line 418
    .line 419
    iput-boolean v3, v6, Lcom/android/server/wm/AppTransition;->mNextAppTransitionScaleUp:Z

    .line 420
    .line 421
    const/4 v14, 0x0

    .line 422
    const/4 v15, 0x0

    .line 423
    move-object v11, v6

    .line 424
    move-object/from16 v16, v4

    .line 425
    .line 426
    invoke-virtual/range {v11 .. v16}, Lcom/android/server/wm/AppTransition;->putDefaultNextAppTransitionCoordinates(IIIILandroid/hardware/HardwareBuffer;)V

    .line 427
    .line 428
    .line 429
    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    .line 430
    .line 431
    .line 432
    iput-object v7, v6, Lcom/android/server/wm/AppTransition;->mNextAppTransitionCallback:Landroid/os/IRemoteCallback;

    .line 433
    .line 434
    :cond_14
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 435
    .line 436
    .line 437
    move-result v6

    .line 438
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 439
    .line 440
    .line 441
    move-result v7

    .line 442
    invoke-static {v4, v6, v7, v3}, Landroid/window/TransitionInfo$AnimationOptions;->makeThumbnailAnimOptions(Landroid/hardware/HardwareBuffer;IIZ)Landroid/window/TransitionInfo$AnimationOptions;

    .line 443
    .line 444
    .line 445
    move-result-object v3

    .line 446
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationStartedListener()Landroid/os/IRemoteCallback;

    .line 447
    .line 448
    .line 449
    move-result-object v6

    .line 450
    invoke-virtual {v5}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    .line 451
    .line 452
    .line 453
    move-result-object v7

    .line 454
    if-nez v7, :cond_15

    .line 455
    .line 456
    if-eqz v4, :cond_15

    .line 457
    .line 458
    new-instance v7, Landroid/graphics/Rect;

    .line 459
    .line 460
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 461
    .line 462
    .line 463
    move-result v8

    .line 464
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 465
    .line 466
    .line 467
    move-result v9

    .line 468
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 469
    .line 470
    .line 471
    move-result v10

    .line 472
    invoke-virtual {v4}, Landroid/hardware/HardwareBuffer;->getWidth()I

    .line 473
    .line 474
    .line 475
    move-result v11

    .line 476
    add-int/2addr v11, v10

    .line 477
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 478
    .line 479
    .line 480
    move-result v1

    .line 481
    invoke-virtual {v4}, Landroid/hardware/HardwareBuffer;->getHeight()I

    .line 482
    .line 483
    .line 484
    move-result v4

    .line 485
    add-int/2addr v4, v1

    .line 486
    invoke-direct {v7, v8, v9, v11, v4}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 487
    .line 488
    .line 489
    invoke-virtual {v5, v7}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 490
    .line 491
    .line 492
    :cond_15
    move-object v1, v3

    .line 493
    move-object v3, v2

    .line 494
    goto/16 :goto_5

    .line 495
    .line 496
    :cond_16
    iget-object v3, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 497
    .line 498
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 499
    .line 500
    .line 501
    move-result v13

    .line 502
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 503
    .line 504
    .line 505
    move-result v14

    .line 506
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 507
    .line 508
    .line 509
    move-result v15

    .line 510
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 511
    .line 512
    .line 513
    move-result v16

    .line 514
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->canOverridePendingAppTransition()Z

    .line 515
    .line 516
    .line 517
    move-result v4

    .line 518
    if-eqz v4, :cond_17

    .line 519
    .line 520
    invoke-virtual {v3, v8}, Lcom/android/server/wm/AppTransition;->clear(Z)V

    .line 521
    .line 522
    .line 523
    iput v9, v3, Lcom/android/server/wm/AppTransition;->mNextAppTransitionType:I

    .line 524
    .line 525
    const/16 v17, 0x0

    .line 526
    .line 527
    move-object v12, v3

    .line 528
    invoke-virtual/range {v12 .. v17}, Lcom/android/server/wm/AppTransition;->putDefaultNextAppTransitionCoordinates(IIIILandroid/hardware/HardwareBuffer;)V

    .line 529
    .line 530
    .line 531
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    .line 532
    .line 533
    .line 534
    :cond_17
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 535
    .line 536
    .line 537
    move-result v3

    .line 538
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 539
    .line 540
    .line 541
    move-result v4

    .line 542
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 543
    .line 544
    .line 545
    move-result v6

    .line 546
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 547
    .line 548
    .line 549
    move-result v7

    .line 550
    invoke-static {v3, v4, v6, v7}, Landroid/window/TransitionInfo$AnimationOptions;->makeScaleUpAnimOptions(IIII)Landroid/window/TransitionInfo$AnimationOptions;

    .line 551
    .line 552
    .line 553
    move-result-object v3

    .line 554
    invoke-virtual {v5}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    .line 555
    .line 556
    .line 557
    move-result-object v4

    .line 558
    if-nez v4, :cond_9

    .line 559
    .line 560
    new-instance v4, Landroid/graphics/Rect;

    .line 561
    .line 562
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 563
    .line 564
    .line 565
    move-result v6

    .line 566
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 567
    .line 568
    .line 569
    move-result v7

    .line 570
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartX()I

    .line 571
    .line 572
    .line 573
    move-result v8

    .line 574
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getWidth()I

    .line 575
    .line 576
    .line 577
    move-result v9

    .line 578
    add-int/2addr v9, v8

    .line 579
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getStartY()I

    .line 580
    .line 581
    .line 582
    move-result v8

    .line 583
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getHeight()I

    .line 584
    .line 585
    .line 586
    move-result v1

    .line 587
    add-int/2addr v1, v8

    .line 588
    invoke-direct {v4, v6, v7, v9, v1}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 589
    .line 590
    .line 591
    invoke-virtual {v5, v4}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 592
    .line 593
    .line 594
    goto/16 :goto_2

    .line 595
    .line 596
    :cond_18
    iget-object v10, v7, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 597
    .line 598
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getPackageName()Ljava/lang/String;

    .line 599
    .line 600
    .line 601
    move-result-object v11

    .line 602
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getCustomEnterResId()I

    .line 603
    .line 604
    .line 605
    move-result v12

    .line 606
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getCustomExitResId()I

    .line 607
    .line 608
    .line 609
    move-result v13

    .line 610
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getCustomBackgroundColor()I

    .line 611
    .line 612
    .line 613
    move-result v14

    .line 614
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationStartedListener()Landroid/os/IRemoteCallback;

    .line 615
    .line 616
    .line 617
    move-result-object v15

    .line 618
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationFinishedListener()Landroid/os/IRemoteCallback;

    .line 619
    .line 620
    .line 621
    move-result-object v16

    .line 622
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getOverrideTaskTransition()Z

    .line 623
    .line 624
    .line 625
    move-result v17

    .line 626
    invoke-virtual/range {v10 .. v17}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransition(Ljava/lang/String;IIILandroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V

    .line 627
    .line 628
    .line 629
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getPackageName()Ljava/lang/String;

    .line 630
    .line 631
    .line 632
    move-result-object v3

    .line 633
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getCustomEnterResId()I

    .line 634
    .line 635
    .line 636
    move-result v4

    .line 637
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getCustomExitResId()I

    .line 638
    .line 639
    .line 640
    move-result v5

    .line 641
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getCustomBackgroundColor()I

    .line 642
    .line 643
    .line 644
    move-result v6

    .line 645
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getOverrideTaskTransition()Z

    .line 646
    .line 647
    .line 648
    move-result v7

    .line 649
    invoke-static {v3, v4, v5, v6, v7}, Landroid/window/TransitionInfo$AnimationOptions;->makeCustomAnimOptions(Ljava/lang/String;IIIZ)Landroid/window/TransitionInfo$AnimationOptions;

    .line 650
    .line 651
    .line 652
    move-result-object v3

    .line 653
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationStartedListener()Landroid/os/IRemoteCallback;

    .line 654
    .line 655
    .line 656
    move-result-object v6

    .line 657
    invoke-virtual {v1}, Landroid/app/ActivityOptions;->getAnimationFinishedListener()Landroid/os/IRemoteCallback;

    .line 658
    .line 659
    .line 660
    move-result-object v1

    .line 661
    move-object/from16 v18, v3

    .line 662
    .line 663
    move-object v3, v1

    .line 664
    move-object/from16 v1, v18

    .line 665
    .line 666
    goto :goto_5

    .line 667
    :cond_19
    :goto_4
    move-object v1, v2

    .line 668
    move-object v3, v1

    .line 669
    goto/16 :goto_1

    .line 670
    .line 671
    :goto_5
    if-eqz v1, :cond_1b

    .line 672
    .line 673
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 674
    .line 675
    iget-object v4, v4, Lcom/android/server/wm/TransitionController;->mCollectingTransition:Lcom/android/server/wm/Transition;

    .line 676
    .line 677
    if-nez v4, :cond_1a

    .line 678
    .line 679
    goto :goto_6

    .line 680
    :cond_1a
    invoke-virtual {v4, v1, v6, v3}, Lcom/android/server/wm/Transition;->setOverrideAnimation(Landroid/window/TransitionInfo$AnimationOptions;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;)V

    .line 681
    .line 682
    .line 683
    :cond_1b
    :goto_6
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 684
    .line 685
    if-nez v1, :cond_1c

    .line 686
    .line 687
    iput-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 688
    .line 689
    iput-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 690
    .line 691
    iput-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteTransition:Landroid/window/RemoteTransition;

    .line 692
    .line 693
    goto :goto_7

    .line 694
    :cond_1c
    new-instance v0, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;

    .line 695
    .line 696
    const/4 v2, 0x4

    .line 697
    invoke-direct {v0, v2}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;-><init>(I)V

    .line 698
    .line 699
    .line 700
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Consumer;)V

    .line 701
    .line 702
    .line 703
    :goto_7
    return-void
.end method

.method public final areBoundsLetterboxed()Z
    .locals 2

    .line 1
    const/4 v0, 0x1

    .line 2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatState(Z)I

    .line 3
    .line 4
    .line 5
    move-result p0

    .line 6
    const/4 v1, 0x2

    .line 7
    if-eq p0, v1, :cond_0

    .line 8
    .line 9
    goto :goto_0

    .line 10
    :cond_0
    const/4 v0, 0x0

    .line 11
    :goto_0
    return v0
.end method

.method public final asActivityRecord()Lcom/android/server/wm/ActivityRecord;
    .locals 0

    .line 1
    return-object p0
.end method

.method public final associateStartingWindowWithTaskIfNeeded()V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 2
    .line 3
    if-eqz v0, :cond_1

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 6
    .line 7
    if-eqz v0, :cond_1

    .line 8
    .line 9
    iget-object v0, v0, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 10
    .line 11
    if-nez v0, :cond_1

    .line 12
    .line 13
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    .line 14
    .line 15
    if-eqz v0, :cond_0

    .line 16
    .line 17
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isSplitEmbedded()Z

    .line 18
    .line 19
    .line 20
    move-result v0

    .line 21
    if-nez v0, :cond_0

    .line 22
    .line 23
    goto :goto_0

    .line 24
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 25
    .line 26
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 27
    .line 28
    iput-object v1, v0, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 29
    .line 30
    iput-object v0, v1, Lcom/android/server/wm/Task;->mSharedStartingData:Lcom/android/server/wm/StartingData;

    .line 31
    .line 32
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachStartingSurfaceToAssociatedTask()V

    .line 33
    .line 34
    .line 35
    :cond_1
    :goto_0
    return-void
.end method

.method public final attachStartingSurfaceToAssociatedTask()V
    .locals 2

    .line 1
    iget v0, p0, Lcom/android/server/wm/WindowContainer;->mSyncState:I

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isEmbedded()Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_0

    .line 10
    .line 11
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 12
    .line 13
    invoke-virtual {v0, p0}, Lcom/android/server/wm/TransitionController;->collect(Lcom/android/server/wm/WindowContainer;)V

    .line 14
    .line 15
    .line 16
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 17
    .line 18
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 19
    .line 20
    iget-object v1, v1, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 21
    .line 22
    invoke-static {v0, v1}, Lcom/android/server/wm/WindowContainer;->overrideConfigurationPropagation(Lcom/android/server/wm/WindowContainer;Lcom/android/server/wm/WindowContainer;)V

    .line 23
    .line 24
    .line 25
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getSyncTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 26
    .line 27
    .line 28
    move-result-object v0

    .line 29
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 30
    .line 31
    iget-object v1, v1, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 32
    .line 33
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 34
    .line 35
    iget-object p0, p0, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 36
    .line 37
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 38
    .line 39
    invoke-virtual {v0, v1, p0}, Landroid/view/SurfaceControl$Transaction;->reparent(Landroid/view/SurfaceControl;Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 40
    .line 41
    .line 42
    return-void
.end method

.method public final attachStartingWindow(Lcom/android/server/wm/WindowState;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 2
    .line 3
    iput-object v0, p1, Lcom/android/server/wm/WindowState;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 4
    .line 5
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 6
    .line 7
    if-eqz v0, :cond_2

    .line 8
    .line 9
    iget-object p1, v0, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 10
    .line 11
    if-eqz p1, :cond_0

    .line 12
    .line 13
    invoke-virtual {p0}, Lcom/android/server/wm/WindowToken;->hasFixedRotationTransform()Z

    .line 14
    .line 15
    .line 16
    move-result p1

    .line 17
    if-nez p1, :cond_1

    .line 18
    .line 19
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachStartingSurfaceToAssociatedTask()V

    .line 20
    .line 21
    .line 22
    goto :goto_0

    .line 23
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isEmbedded()Z

    .line 24
    .line 25
    .line 26
    move-result p1

    .line 27
    if-eqz p1, :cond_1

    .line 28
    .line 29
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->associateStartingWindowWithTaskIfNeeded()V

    .line 30
    .line 31
    .line 32
    :cond_1
    :goto_0
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 33
    .line 34
    invoke-virtual {p1}, Lcom/android/server/wm/TransitionController;->isCollecting()Z

    .line 35
    .line 36
    .line 37
    move-result p1

    .line 38
    if-eqz p1, :cond_2

    .line 39
    .line 40
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 41
    .line 42
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 43
    .line 44
    invoke-virtual {p0}, Lcom/android/server/wm/TransitionController;->getCollectingTransitionId()I

    .line 45
    .line 46
    .line 47
    move-result p0

    .line 48
    iput p0, p1, Lcom/android/server/wm/StartingData;->mTransitionId:I

    .line 49
    .line 50
    :cond_2
    return-void
.end method

.method public final attachThumbnailAnimation()V
    .locals 13

    .line 1
    const/4 v0, 0x2

    .line 2
    const/4 v1, 0x1

    .line 3
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 11
    .line 12
    .line 13
    move-result-object v0

    .line 14
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 15
    .line 16
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 17
    .line 18
    iget-object v3, v0, Lcom/android/server/wm/AppTransition;->mNextAppTransitionAnimationsSpecs:Landroid/util/SparseArray;

    .line 19
    .line 20
    invoke-virtual {v2}, Ljava/lang/Object;->hashCode()I

    .line 21
    .line 22
    .line 23
    move-result v2

    .line 24
    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 25
    .line 26
    .line 27
    move-result-object v2

    .line 28
    check-cast v2, Landroid/view/AppTransitionAnimationSpec;

    .line 29
    .line 30
    if-nez v2, :cond_1

    .line 31
    .line 32
    iget-object v2, v0, Lcom/android/server/wm/AppTransition;->mDefaultNextAppTransitionAnimationSpec:Landroid/view/AppTransitionAnimationSpec;

    .line 33
    .line 34
    :cond_1
    const/4 v0, 0x0

    .line 35
    if-eqz v2, :cond_2

    .line 36
    .line 37
    iget-object v2, v2, Landroid/view/AppTransitionAnimationSpec;->buffer:Landroid/hardware/HardwareBuffer;

    .line 38
    .line 39
    move-object v6, v2

    .line 40
    goto :goto_0

    .line 41
    :cond_2
    move-object v6, v0

    .line 42
    :goto_0
    const/4 v2, 0x0

    .line 43
    if-nez v6, :cond_4

    .line 44
    .line 45
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_APP_TRANSITIONS_enabled:[Z

    .line 46
    .line 47
    aget-boolean v0, v0, v2

    .line 48
    .line 49
    if-eqz v0, :cond_3

    .line 50
    .line 51
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 52
    .line 53
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 54
    .line 55
    .line 56
    move-result-object p0

    .line 57
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_APP_TRANSITIONS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 58
    .line 59
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 60
    .line 61
    .line 62
    move-result-object v5

    .line 63
    const-wide v1, -0x197d9614892ec4c3L    # -6.259354727955854E185

    .line 64
    .line 65
    .line 66
    .line 67
    .line 68
    const/4 v3, 0x0

    .line 69
    const/4 v4, 0x0

    .line 70
    invoke-static/range {v0 .. v5}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 71
    .line 72
    .line 73
    :cond_3
    return-void

    .line 74
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->clearThumbnail()V

    .line 75
    .line 76
    .line 77
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getAnimatingContainer()Lcom/android/server/wm/WindowContainer;

    .line 78
    .line 79
    .line 80
    move-result-object v3

    .line 81
    invoke-virtual {v3}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 82
    .line 83
    .line 84
    move-result-object v11

    .line 85
    new-instance v12, Lcom/android/server/wm/WindowContainerThumbnail;

    .line 86
    .line 87
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getAnimatingContainer()Lcom/android/server/wm/WindowContainer;

    .line 88
    .line 89
    .line 90
    move-result-object v3

    .line 91
    invoke-direct {v12, v11, v3, v6}, Lcom/android/server/wm/WindowContainerThumbnail;-><init>(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/WindowContainer;Landroid/hardware/HardwareBuffer;)V

    .line 92
    .line 93
    .line 94
    iput-object v12, p0, Lcom/android/server/wm/WindowContainer;->mThumbnail:Lcom/android/server/wm/WindowContainerThumbnail;

    .line 95
    .line 96
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 97
    .line 98
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mDisplayInfo:Landroid/view/DisplayInfo;

    .line 99
    .line 100
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 101
    .line 102
    .line 103
    move-result-object v1

    .line 104
    if-eqz v1, :cond_5

    .line 105
    .line 106
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getInsetsStateWithVisibilityOverride()Landroid/view/InsetsState;

    .line 107
    .line 108
    .line 109
    move-result-object v3

    .line 110
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mWindowFrames:Lcom/android/server/wm/WindowFrames;

    .line 111
    .line 112
    iget-object v4, v4, Lcom/android/server/wm/WindowFrames;->mFrame:Landroid/graphics/Rect;

    .line 113
    .line 114
    invoke-static {}, Landroid/view/WindowInsets$Type;->systemBars()I

    .line 115
    .line 116
    .line 117
    move-result v5

    .line 118
    invoke-virtual {v3, v4, v5, v2}, Landroid/view/InsetsState;->calculateInsets(Landroid/graphics/Rect;IZ)Landroid/graphics/Insets;

    .line 119
    .line 120
    .line 121
    move-result-object v2

    .line 122
    invoke-virtual {v2}, Landroid/graphics/Insets;->toRect()Landroid/graphics/Rect;

    .line 123
    .line 124
    .line 125
    move-result-object v2

    .line 126
    new-instance v3, Landroid/graphics/Rect;

    .line 127
    .line 128
    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mWindowFrames:Lcom/android/server/wm/WindowFrames;

    .line 129
    .line 130
    iget-object v1, v1, Lcom/android/server/wm/WindowFrames;->mFrame:Landroid/graphics/Rect;

    .line 131
    .line 132
    invoke-direct {v3, v1}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 133
    .line 134
    .line 135
    invoke-virtual {v3, v2}, Landroid/graphics/Rect;->inset(Landroid/graphics/Rect;)V

    .line 136
    .line 137
    .line 138
    move-object v5, v2

    .line 139
    move-object v4, v3

    .line 140
    goto :goto_1

    .line 141
    :cond_5
    new-instance v1, Landroid/graphics/Rect;

    .line 142
    .line 143
    iget v4, v3, Landroid/view/DisplayInfo;->appWidth:I

    .line 144
    .line 145
    iget v3, v3, Landroid/view/DisplayInfo;->appHeight:I

    .line 146
    .line 147
    invoke-direct {v1, v2, v2, v4, v3}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 148
    .line 149
    .line 150
    move-object v5, v0

    .line 151
    move-object v4, v1

    .line 152
    :goto_1
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 153
    .line 154
    invoke-virtual {v1}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 155
    .line 156
    .line 157
    move-result-object v1

    .line 158
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 159
    .line 160
    .line 161
    move-result-object v2

    .line 162
    iget-object v2, v2, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 163
    .line 164
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 165
    .line 166
    iget v7, v1, Landroid/content/res/Configuration;->orientation:I

    .line 167
    .line 168
    iget-object v1, v2, Lcom/android/server/wm/AppTransition;->mNextAppTransitionAnimationsSpecs:Landroid/util/SparseArray;

    .line 169
    .line 170
    invoke-virtual {p0}, Ljava/lang/Object;->hashCode()I

    .line 171
    .line 172
    .line 173
    move-result p0

    .line 174
    invoke-virtual {v1, p0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 175
    .line 176
    .line 177
    move-result-object p0

    .line 178
    check-cast p0, Landroid/view/AppTransitionAnimationSpec;

    .line 179
    .line 180
    iget-object v3, v2, Lcom/android/server/wm/AppTransition;->mTransitionAnimation:Lcom/android/internal/policy/TransitionAnimation;

    .line 181
    .line 182
    if-eqz p0, :cond_6

    .line 183
    .line 184
    iget-object p0, p0, Landroid/view/AppTransitionAnimationSpec;->rect:Landroid/graphics/Rect;

    .line 185
    .line 186
    move-object v8, p0

    .line 187
    goto :goto_2

    .line 188
    :cond_6
    move-object v8, v0

    .line 189
    :goto_2
    iget-object p0, v2, Lcom/android/server/wm/AppTransition;->mDefaultNextAppTransitionAnimationSpec:Landroid/view/AppTransitionAnimationSpec;

    .line 190
    .line 191
    if-eqz p0, :cond_7

    .line 192
    .line 193
    iget-object p0, p0, Landroid/view/AppTransitionAnimationSpec;->rect:Landroid/graphics/Rect;

    .line 194
    .line 195
    move-object v9, p0

    .line 196
    goto :goto_3

    .line 197
    :cond_7
    move-object v9, v0

    .line 198
    :goto_3
    iget-boolean v10, v2, Lcom/android/server/wm/AppTransition;->mNextAppTransitionScaleUp:Z

    .line 199
    .line 200
    invoke-virtual/range {v3 .. v10}, Lcom/android/internal/policy/TransitionAnimation;->createThumbnailAspectScaleAnimationLocked(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/hardware/HardwareBuffer;ILandroid/graphics/Rect;Landroid/graphics/Rect;Z)Landroid/view/animation/Animation;

    .line 201
    .line 202
    .line 203
    move-result-object p0

    .line 204
    invoke-virtual {v12, v11, p0, v0}, Lcom/android/server/wm/WindowContainerThumbnail;->startAnimation(Landroid/view/SurfaceControl$Transaction;Landroid/view/animation/Animation;Landroid/graphics/Point;)V

    .line 205
    .line 206
    .line 207
    return-void
.end method

.method public final attachedToProcess()Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasProcess()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 8
    .line 9
    invoke-virtual {p0}, Lcom/android/server/wm/WindowProcessController;->hasThread()Z

    .line 10
    .line 11
    .line 12
    move-result p0

    .line 13
    if-eqz p0, :cond_0

    .line 14
    .line 15
    const/4 p0, 0x1

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    const/4 p0, 0x0

    .line 18
    :goto_0
    return p0
.end method

.method public final canBeTopRunning()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->showToCurrentUser()Z

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    if-eqz p0, :cond_0

    .line 10
    .line 11
    const/4 p0, 0x1

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const/4 p0, 0x0

    .line 14
    :goto_0
    return p0
.end method

.method public final canCustomizeAppTransition()Z
    .locals 0

    .line 1
    const/4 p0, 0x1

    .line 2
    return p0
.end method

.method public final canForceResizeNonResizable(I)Z
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    const/4 v1, 0x2

    .line 3
    if-ne p1, v1, :cond_0

    .line 4
    .line 5
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 6
    .line 7
    invoke-virtual {v2}, Landroid/content/pm/ActivityInfo;->supportsPictureInPicture()Z

    .line 8
    .line 9
    .line 10
    move-result v2

    .line 11
    if-eqz v2, :cond_0

    .line 12
    .line 13
    return v0

    .line 14
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 15
    .line 16
    const/4 v3, 0x1

    .line 17
    if-eqz v2, :cond_3

    .line 18
    .line 19
    invoke-virtual {v2}, Lcom/android/server/wm/TaskFragment;->supportsMultiWindow()Z

    .line 20
    .line 21
    .line 22
    move-result v2

    .line 23
    if-nez v2, :cond_2

    .line 24
    .line 25
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 26
    .line 27
    .line 28
    move-result-object v2

    .line 29
    check-cast v2, Lcom/android/server/wm/TaskDisplayArea;

    .line 30
    .line 31
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->supportsMultiWindowInDisplayArea(Lcom/android/server/wm/TaskDisplayArea;)Z

    .line 32
    .line 33
    .line 34
    move-result v2

    .line 35
    if-eqz v2, :cond_1

    .line 36
    .line 37
    goto :goto_0

    .line 38
    :cond_1
    move v2, v0

    .line 39
    goto :goto_1

    .line 40
    :cond_2
    :goto_0
    move v2, v3

    .line 41
    goto :goto_1

    .line 42
    :cond_3
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 43
    .line 44
    .line 45
    move-result-object v2

    .line 46
    check-cast v2, Lcom/android/server/wm/TaskDisplayArea;

    .line 47
    .line 48
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->supportsMultiWindowInDisplayArea(Lcom/android/server/wm/TaskDisplayArea;)Z

    .line 49
    .line 50
    .line 51
    move-result v2

    .line 52
    :goto_1
    invoke-static {p1}, Landroid/app/WindowConfiguration;->inMultiWindowMode(I)Z

    .line 53
    .line 54
    .line 55
    move-result p1

    .line 56
    if-eqz p1, :cond_4

    .line 57
    .line 58
    if-eqz v2, :cond_4

    .line 59
    .line 60
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 61
    .line 62
    iget-boolean p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mForceResizableActivities:Z

    .line 63
    .line 64
    if-nez p1, :cond_4

    .line 65
    .line 66
    return v0

    .line 67
    :cond_4
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 68
    .line 69
    iget p0, p0, Landroid/content/pm/ActivityInfo;->resizeMode:I

    .line 70
    .line 71
    if-eq p0, v1, :cond_5

    .line 72
    .line 73
    const/high16 p1, 0x100000

    .line 74
    .line 75
    and-int/2addr p1, p0

    .line 76
    if-nez p1, :cond_5

    .line 77
    .line 78
    if-eq p0, v3, :cond_5

    .line 79
    .line 80
    move v0, v3

    .line 81
    :cond_5
    return v0
.end method

.method public canLaunchHomeActivity(ILcom/android/server/wm/ActivityRecord;)Z
    .locals 2

    .line 1
    const/16 v0, 0x3e8

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    if-eq p1, v0, :cond_3

    .line 5
    .line 6
    if-nez p1, :cond_0

    .line 7
    .line 8
    goto :goto_0

    .line 9
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 10
    .line 11
    iget-object p0, p0, Lcom/android/server/wm/ActivityTaskSupervisor;->mService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 12
    .line 13
    iget-object p0, p0, Lcom/android/server/wm/ActivityTaskManagerService;->mRecentTasks:Lcom/android/server/wm/RecentTasks;

    .line 14
    .line 15
    if-eqz p0, :cond_1

    .line 16
    .line 17
    invoke-virtual {p0, p1}, Lcom/android/server/wm/RecentTasks;->isCallerRecents(I)Z

    .line 18
    .line 19
    .line 20
    move-result p0

    .line 21
    if-eqz p0, :cond_1

    .line 22
    .line 23
    return v1

    .line 24
    :cond_1
    if-eqz p2, :cond_2

    .line 25
    .line 26
    invoke-virtual {p2}, Lcom/android/server/wm/ActivityRecord;->isResolverOrDelegateActivity()Z

    .line 27
    .line 28
    .line 29
    move-result p0

    .line 30
    if-eqz p0, :cond_2

    .line 31
    .line 32
    goto :goto_0

    .line 33
    :cond_2
    const/4 v1, 0x0

    .line 34
    :cond_3
    :goto_0
    return v1
.end method

.method public final canResumeByCompat()Z
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    if-eqz v0, :cond_b

    .line 5
    .line 6
    iget-object v2, v0, Lcom/android/server/wm/WindowProcessController;->mInfo:Landroid/content/pm/ApplicationInfo;

    .line 7
    .line 8
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 9
    .line 10
    const/16 v3, 0x1d

    .line 11
    .line 12
    const/4 v4, 0x0

    .line 13
    if-ge v2, v3, :cond_8

    .line 14
    .line 15
    iget-object v2, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 16
    .line 17
    if-ne v2, p0, :cond_0

    .line 18
    .line 19
    goto/16 :goto_3

    .line 20
    .line 21
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isAttached()Z

    .line 22
    .line 23
    .line 24
    move-result v2

    .line 25
    if-nez v2, :cond_1

    .line 26
    .line 27
    move v5, v4

    .line 28
    goto/16 :goto_4

    .line 29
    .line 30
    :cond_1
    iget-object v2, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 31
    .line 32
    const/4 v3, 0x0

    .line 33
    if-eqz v2, :cond_2

    .line 34
    .line 35
    invoke-virtual {v2}, Lcom/android/server/wm/WindowContainer;->isAttached()Z

    .line 36
    .line 37
    .line 38
    move-result v2

    .line 39
    if-eqz v2, :cond_2

    .line 40
    .line 41
    iget-object v2, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 42
    .line 43
    iget-object v2, v2, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 44
    .line 45
    goto :goto_0

    .line 46
    :cond_2
    move-object v2, v3

    .line 47
    :goto_0
    if-eqz v2, :cond_4

    .line 48
    .line 49
    iget-object v5, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 50
    .line 51
    invoke-virtual {v5}, Lcom/android/server/wm/WindowContainer;->isVisibleRequested()Z

    .line 52
    .line 53
    .line 54
    move-result v5

    .line 55
    if-eqz v5, :cond_4

    .line 56
    .line 57
    iget-object v5, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 58
    .line 59
    invoke-virtual {v5}, Lcom/android/server/wm/ActivityRecord;->isFocusable()Z

    .line 60
    .line 61
    .line 62
    move-result v5

    .line 63
    if-nez v5, :cond_3

    .line 64
    .line 65
    goto :goto_1

    .line 66
    :cond_3
    move v5, v4

    .line 67
    goto :goto_2

    .line 68
    :cond_4
    :goto_1
    move v5, v1

    .line 69
    :goto_2
    iget-object v6, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 70
    .line 71
    if-nez v5, :cond_5

    .line 72
    .line 73
    invoke-virtual {v2, v6}, Lcom/android/server/wm/DisplayArea;->compareTo(Lcom/android/server/wm/WindowContainer;)I

    .line 74
    .line 75
    .line 76
    move-result v6

    .line 77
    if-gez v6, :cond_5

    .line 78
    .line 79
    move v5, v1

    .line 80
    :cond_5
    if-nez v5, :cond_6

    .line 81
    .line 82
    new-instance v6, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda11;

    .line 83
    .line 84
    invoke-direct {v6, p0}, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda11;-><init>(Lcom/android/server/wm/ActivityRecord;)V

    .line 85
    .line 86
    .line 87
    iget-object v7, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 88
    .line 89
    invoke-virtual {v2, v6, v1, v7}, Lcom/android/server/wm/DisplayArea;->getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord;

    .line 90
    .line 91
    .line 92
    move-result-object v2

    .line 93
    if-eqz v2, :cond_6

    .line 94
    .line 95
    iget-object v6, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 96
    .line 97
    if-eq v2, v6, :cond_6

    .line 98
    .line 99
    move v5, v1

    .line 100
    :cond_6
    if-eqz v5, :cond_9

    .line 101
    .line 102
    iget-object v2, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 103
    .line 104
    if-eqz v2, :cond_7

    .line 105
    .line 106
    sget-object v6, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 107
    .line 108
    invoke-virtual {v2, v6}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 109
    .line 110
    .line 111
    move-result v2

    .line 112
    if-eqz v2, :cond_7

    .line 113
    .line 114
    iget-object v2, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 115
    .line 116
    invoke-virtual {v2}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 117
    .line 118
    .line 119
    move-result-object v2

    .line 120
    if-eqz v2, :cond_7

    .line 121
    .line 122
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskFragment;->shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z

    .line 123
    .line 124
    .line 125
    move-result v3

    .line 126
    const-string/jumbo v6, "top-resumed-changed"

    .line 127
    .line 128
    .line 129
    invoke-virtual {v2, p0, v6, v3, v4}, Lcom/android/server/wm/TaskFragment;->startPausing$1(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;ZZ)Z

    .line 130
    .line 131
    .line 132
    :cond_7
    iput-object p0, v0, Lcom/android/server/wm/WindowProcessController;->mPreQTopResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 133
    .line 134
    goto :goto_4

    .line 135
    :cond_8
    :goto_3
    move v5, v1

    .line 136
    :cond_9
    :goto_4
    if-eqz v5, :cond_a

    .line 137
    .line 138
    goto :goto_5

    .line 139
    :cond_a
    move v1, v4

    .line 140
    :cond_b
    :goto_5
    return v1
.end method

.method public final canShowWhenLocked()Z
    .locals 2

    .line 8
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 9
    iget-object v1, v0, Lcom/android/server/wm/TaskFragment;->mAdjacentTaskFragment:Lcom/android/server/wm/TaskFragment;

    if-eqz v1, :cond_1

    .line 10
    iget-boolean v0, v0, Lcom/android/server/wm/TaskFragment;->mIsEmbedded:Z

    if-eqz v0, :cond_1

    const/4 v0, 0x1

    .line 11
    invoke-virtual {v1, v0, v0}, Lcom/android/server/wm/TaskFragment;->getTopNonFinishingActivity(ZZ)Lcom/android/server/wm/ActivityRecord;

    move-result-object v1

    .line 12
    invoke-static {p0}, Lcom/android/server/wm/ActivityRecord;->canShowWhenLocked(Lcom/android/server/wm/ActivityRecord;)Z

    move-result p0

    if-eqz p0, :cond_0

    invoke-static {v1}, Lcom/android/server/wm/ActivityRecord;->canShowWhenLocked(Lcom/android/server/wm/ActivityRecord;)Z

    move-result p0

    if-eqz p0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0

    .line 13
    :cond_1
    invoke-static {p0}, Lcom/android/server/wm/ActivityRecord;->canShowWhenLocked(Lcom/android/server/wm/ActivityRecord;)Z

    move-result p0

    return p0
.end method

.method public final canShowWindows()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 2
    .line 3
    invoke-virtual {v0}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    if-eqz v0, :cond_1

    .line 8
    .line 9
    iget p0, p0, Lcom/android/server/wm/WindowContainer;->mSyncState:I

    .line 10
    .line 11
    const/4 v0, 0x1

    .line 12
    if-eq p0, v0, :cond_0

    .line 13
    .line 14
    goto :goto_0

    .line 15
    :cond_0
    const/4 v0, 0x0

    .line 16
    goto :goto_0

    .line 17
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 18
    .line 19
    :goto_0
    return v0
.end method

.method public final canStartChangeTransition()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-boolean v0, v0, Lcom/android/server/wm/Task;->mDragResizing:Z

    .line 6
    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->canStartChangeTransition()Z

    .line 10
    .line 11
    .line 12
    move-result p0

    .line 13
    if-eqz p0, :cond_0

    .line 14
    .line 15
    const/4 p0, 0x1

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    const/4 p0, 0x0

    .line 18
    :goto_0
    return p0
.end method

.method public final canTurnScreenOn()Z
    .locals 4

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mTurnScreenOn:Z

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    const/4 v2, 0x0

    .line 5
    if-nez v0, :cond_1

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->containsTurnScreenOnWindow()Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    goto :goto_0

    .line 14
    :cond_0
    move v0, v2

    .line 15
    goto :goto_1

    .line 16
    :cond_1
    :goto_0
    move v0, v1

    .line 17
    :goto_1
    if-nez v0, :cond_2

    .line 18
    .line 19
    return v2

    .line 20
    :cond_2
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mCurrentLaunchCanTurnScreenOn:Z

    .line 21
    .line 22
    if-eqz v0, :cond_3

    .line 23
    .line 24
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 25
    .line 26
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mKeyguardController:Lcom/android/server/wm/KeyguardController;

    .line 27
    .line 28
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 29
    .line 30
    .line 31
    move-result v3

    .line 32
    invoke-virtual {v0, v3}, Lcom/android/server/wm/KeyguardController;->isKeyguardShowing(I)Z

    .line 33
    .line 34
    .line 35
    move-result v0

    .line 36
    if-eqz v0, :cond_4

    .line 37
    .line 38
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 39
    .line 40
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mKeyguardController:Lcom/android/server/wm/KeyguardController;

    .line 41
    .line 42
    invoke-virtual {v0, p0}, Lcom/android/server/wm/KeyguardController;->checkKeyguardVisibility(Lcom/android/server/wm/ActivityRecord;)Z

    .line 43
    .line 44
    .line 45
    move-result p0

    .line 46
    if-eqz p0, :cond_3

    .line 47
    .line 48
    goto :goto_2

    .line 49
    :cond_3
    move v1, v2

    .line 50
    :cond_4
    :goto_2
    return v1
.end method

.method public final cancelAnimation()V
    .locals 0

    .line 1
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->cancelAnimation()V

    .line 2
    .line 3
    .line 4
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->clearThumbnail()V

    .line 5
    .line 6
    .line 7
    return-void
.end method

.method public final checkAppWindowsReadyToShow()V
    .locals 11

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 2
    .line 3
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastAllDrawn:Z

    .line 4
    .line 5
    if-ne v0, v1, :cond_0

    .line 6
    .line 7
    return-void

    .line 8
    :cond_0
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastAllDrawn:Z

    .line 9
    .line 10
    if-nez v0, :cond_1

    .line 11
    .line 12
    return-void

    .line 13
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mFreezingScreen:Z

    .line 14
    .line 15
    const/4 v1, 0x0

    .line 16
    if-eqz v0, :cond_3

    .line 17
    .line 18
    new-instance v0, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;

    .line 19
    .line 20
    const/4 v2, 0x0

    .line 21
    invoke-direct {v0, v2}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;-><init>(I)V

    .line 22
    .line 23
    .line 24
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 25
    .line 26
    .line 27
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->stopFreezingScreen(Z)V

    .line 28
    .line 29
    .line 30
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ORIENTATION_enabled:[Z

    .line 31
    .line 32
    const/4 v1, 0x2

    .line 33
    aget-boolean v0, v0, v1

    .line 34
    .line 35
    if-eqz v0, :cond_2

    .line 36
    .line 37
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 38
    .line 39
    .line 40
    move-result-object v0

    .line 41
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mNumInterestingWindows:I

    .line 42
    .line 43
    int-to-long v1, v1

    .line 44
    iget v3, p0, Lcom/android/server/wm/ActivityRecord;->mNumDrawnWindows:I

    .line 45
    .line 46
    int-to-long v3, v3

    .line 47
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 48
    .line 49
    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 50
    .line 51
    .line 52
    move-result-object v1

    .line 53
    invoke-static {v3, v4}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 54
    .line 55
    .line 56
    move-result-object v2

    .line 57
    filled-new-array {v0, v1, v2}, [Ljava/lang/Object;

    .line 58
    .line 59
    .line 60
    move-result-object v10

    .line 61
    const/16 v8, 0x14

    .line 62
    .line 63
    const/4 v9, 0x0

    .line 64
    const-wide v6, 0x2ce77bdc36ab333cL    # 2.251646703122232E-92

    .line 65
    .line 66
    .line 67
    .line 68
    .line 69
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 70
    .line 71
    .line 72
    :cond_2
    const/4 v0, 0x4

    .line 73
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->setAppLayoutChanges(I)V

    .line 74
    .line 75
    .line 76
    goto :goto_0

    .line 77
    :cond_3
    const/16 v0, 0x8

    .line 78
    .line 79
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->setAppLayoutChanges(I)V

    .line 80
    .line 81
    .line 82
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 83
    .line 84
    .line 85
    move-result-object v0

    .line 86
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 87
    .line 88
    invoke-virtual {v0, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 89
    .line 90
    .line 91
    move-result v0

    .line 92
    if-nez v0, :cond_4

    .line 93
    .line 94
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->canShowWindows()Z

    .line 95
    .line 96
    .line 97
    move-result v0

    .line 98
    if-eqz v0, :cond_4

    .line 99
    .line 100
    new-instance v0, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;

    .line 101
    .line 102
    const/4 v2, 0x0

    .line 103
    invoke-direct {v0, v2}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;-><init>(I)V

    .line 104
    .line 105
    .line 106
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 107
    .line 108
    .line 109
    :cond_4
    :goto_0
    return-void
.end method

.method public final checkContentUriPermission(Landroid/os/IBinder;Lcom/android/server/uri/GrantUri;I)Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mCallerState:Lcom/android/server/wm/ActivityCallerState;

    .line 2
    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    .line 5
    .line 6
    invoke-static {p3}, Landroid/content/Intent;->isAccessUriMode(I)Z

    .line 7
    .line 8
    .line 9
    move-result v0

    .line 10
    if-eqz v0, :cond_6

    .line 11
    .line 12
    iget-object p0, p0, Lcom/android/server/wm/ActivityCallerState;->mCallerTokenInfoMap:Ljava/util/WeakHashMap;

    .line 13
    .line 14
    const/4 v0, 0x0

    .line 15
    invoke-virtual {p0, p1, v0}, Ljava/util/WeakHashMap;->getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 16
    .line 17
    .line 18
    move-result-object p0

    .line 19
    check-cast p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;

    .line 20
    .line 21
    const/4 p1, 0x0

    .line 22
    if-nez p0, :cond_0

    .line 23
    .line 24
    new-instance p0, Ljava/lang/StringBuilder;

    .line 25
    .line 26
    const-string p3, "Caller not found for checkContentUriPermission of: "

    .line 27
    .line 28
    invoke-direct {p0, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 29
    .line 30
    .line 31
    iget-object p2, p2, Lcom/android/server/uri/GrantUri;->uri:Landroid/net/Uri;

    .line 32
    .line 33
    invoke-virtual {p2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    .line 34
    .line 35
    .line 36
    move-result-object p2

    .line 37
    invoke-virtual {p0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 38
    .line 39
    .line 40
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 41
    .line 42
    .line 43
    move-result-object p0

    .line 44
    const-string p2, "ActivityTaskManager"

    .line 45
    .line 46
    invoke-static {p2, p0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 47
    .line 48
    .line 49
    goto :goto_1

    .line 50
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mInaccessibleContentUris:Landroid/util/ArraySet;

    .line 51
    .line 52
    invoke-virtual {v0, p2}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 53
    .line 54
    .line 55
    move-result v0

    .line 56
    if-eqz v0, :cond_1

    .line 57
    .line 58
    goto :goto_1

    .line 59
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mReadableContentUris:Landroid/util/ArraySet;

    .line 60
    .line 61
    invoke-virtual {v0, p2}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 62
    .line 63
    .line 64
    move-result v0

    .line 65
    iget-object p0, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mWritableContentUris:Landroid/util/ArraySet;

    .line 66
    .line 67
    invoke-virtual {p0, p2}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 68
    .line 69
    .line 70
    move-result p0

    .line 71
    if-nez v0, :cond_3

    .line 72
    .line 73
    if-eqz p0, :cond_2

    .line 74
    .line 75
    goto :goto_0

    .line 76
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 77
    .line 78
    new-instance p1, Ljava/lang/StringBuilder;

    .line 79
    .line 80
    const-string p3, "The supplied URI wasn\'t passed at launch in #getData, #EXTRA_STREAM, nor #getClipData: "

    .line 81
    .line 82
    invoke-direct {p1, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 83
    .line 84
    .line 85
    iget-object p2, p2, Lcom/android/server/uri/GrantUri;->uri:Landroid/net/Uri;

    .line 86
    .line 87
    invoke-virtual {p2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    .line 88
    .line 89
    .line 90
    move-result-object p2

    .line 91
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 92
    .line 93
    .line 94
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 95
    .line 96
    .line 97
    move-result-object p1

    .line 98
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 99
    .line 100
    .line 101
    throw p0

    .line 102
    :cond_3
    :goto_0
    and-int/lit8 p2, p3, 0x1

    .line 103
    .line 104
    if-eqz p2, :cond_4

    .line 105
    .line 106
    if-nez v0, :cond_4

    .line 107
    .line 108
    goto :goto_1

    .line 109
    :cond_4
    and-int/lit8 p2, p3, 0x2

    .line 110
    .line 111
    if-eqz p2, :cond_5

    .line 112
    .line 113
    if-nez p0, :cond_5

    .line 114
    .line 115
    goto :goto_1

    .line 116
    :cond_5
    const/4 p1, 0x1

    .line 117
    :goto_1
    return p1

    .line 118
    :cond_6
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 119
    .line 120
    const-string p1, "Mode flags are not access URI mode flags: "

    .line 121
    .line 122
    invoke-static {p3, p1}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 123
    .line 124
    .line 125
    move-result-object p1

    .line 126
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 127
    .line 128
    .line 129
    throw p0
.end method

.method public final checkEnterPictureInPictureAppOpsState()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->getAppOpsManager()Landroid/app/AppOpsManager;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 8
    .line 9
    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 10
    .line 11
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 12
    .line 13
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 14
    .line 15
    const/16 v2, 0x43

    .line 16
    .line 17
    invoke-virtual {v0, v2, v1, p0}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    .line 18
    .line 19
    .line 20
    move-result p0

    .line 21
    if-nez p0, :cond_0

    .line 22
    .line 23
    const/4 p0, 0x1

    .line 24
    goto :goto_0

    .line 25
    :cond_0
    const/4 p0, 0x0

    .line 26
    :goto_0
    return p0
.end method

.method public final checkEnterPictureInPictureState(Ljava/lang/String;ZZ)Z
    .locals 5

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->supportsPictureInPicture()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x0

    .line 6
    if-nez v0, :cond_0

    .line 7
    .line 8
    return v1

    .line 9
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->checkEnterPictureInPictureAppOpsState()Z

    .line 10
    .line 11
    .line 12
    move-result v0

    .line 13
    if-nez v0, :cond_1

    .line 14
    .line 15
    return v1

    .line 16
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 17
    .line 18
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mVrController:Lcom/android/server/wm/VrController;

    .line 19
    .line 20
    iget v0, v0, Lcom/android/server/wm/VrController;->mVrState:I

    .line 21
    .line 22
    if-eqz v0, :cond_2

    .line 23
    .line 24
    return v1

    .line 25
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 26
    .line 27
    const-string v2, "ActivityTaskManager"

    .line 28
    .line 29
    const/4 v3, 0x1

    .line 30
    if-eqz v0, :cond_4

    .line 31
    .line 32
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDwpcHelper:Lcom/android/server/wm/DisplayWindowPolicyControllerHelper;

    .line 33
    .line 34
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getUid()I

    .line 35
    .line 36
    .line 37
    move-result v4

    .line 38
    iget-object v0, v0, Lcom/android/server/wm/DisplayWindowPolicyControllerHelper;->mDisplayWindowPolicyController:Landroid/window/DisplayWindowPolicyController;

    .line 39
    .line 40
    if-nez v0, :cond_3

    .line 41
    .line 42
    move v0, v3

    .line 43
    goto :goto_0

    .line 44
    :cond_3
    invoke-virtual {v0, v4}, Landroid/window/DisplayWindowPolicyController;->isEnteringPipAllowed(I)Z

    .line 45
    .line 46
    .line 47
    move-result v0

    .line 48
    :goto_0
    if-nez v0, :cond_4

    .line 49
    .line 50
    new-instance p2, Ljava/lang/StringBuilder;

    .line 51
    .line 52
    const-string p3, "Display "

    .line 53
    .line 54
    invoke-direct {p2, p3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 55
    .line 56
    .line 57
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 58
    .line 59
    iget p0, p0, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 60
    .line 61
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 62
    .line 63
    .line 64
    const-string p0, " doesn\'t support enter picture-in-picture mode. caller = "

    .line 65
    .line 66
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 67
    .line 68
    .line 69
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 70
    .line 71
    .line 72
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 73
    .line 74
    .line 75
    move-result-object p0

    .line 76
    invoke-static {v2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 77
    .line 78
    .line 79
    return v1

    .line 80
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->isDexMode()Z

    .line 81
    .line 82
    .line 83
    move-result p1

    .line 84
    if-eqz p1, :cond_5

    .line 85
    .line 86
    return v1

    .line 87
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 88
    .line 89
    .line 90
    move-result-object p1

    .line 91
    if-eqz p1, :cond_6

    .line 92
    .line 93
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 94
    .line 95
    .line 96
    move-result-object p1

    .line 97
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->isMultiTaskingDisplay()Z

    .line 98
    .line 99
    .line 100
    move-result p1

    .line 101
    if-eqz p1, :cond_6

    .line 102
    .line 103
    return v1

    .line 104
    :cond_6
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 105
    .line 106
    iget-boolean p1, p1, Lcom/android/server/wm/WindowManagerService;->mSwitchingUser:Z

    .line 107
    .line 108
    if-eqz p1, :cond_7

    .line 109
    .line 110
    return v1

    .line 111
    :cond_7
    sget-boolean p1, Lcom/samsung/android/rune/CoreRune;->MW_PIP_SHELL_TRANSITION:Z

    .line 112
    .line 113
    if-eqz p1, :cond_8

    .line 114
    .line 115
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 116
    .line 117
    if-eqz p1, :cond_8

    .line 118
    .line 119
    const-string p0, "checkEnterPictureInPictureState: failed, reason=finishing"

    .line 120
    .line 121
    invoke-static {v2, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 122
    .line 123
    .line 124
    return v1

    .line 125
    :cond_8
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 126
    .line 127
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mLockTaskController:Lcom/android/server/wm/LockTaskController;

    .line 128
    .line 129
    iget p1, p1, Lcom/android/server/wm/LockTaskController;->mLockTaskModeState:I

    .line 130
    .line 131
    if-eqz p1, :cond_9

    .line 132
    .line 133
    move p1, v3

    .line 134
    goto :goto_1

    .line 135
    :cond_9
    move p1, v1

    .line 136
    :goto_1
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 137
    .line 138
    .line 139
    move-result-object v0

    .line 140
    check-cast v0, Lcom/android/server/wm/TaskDisplayArea;

    .line 141
    .line 142
    if-eqz v0, :cond_a

    .line 143
    .line 144
    invoke-virtual {v0}, Lcom/android/server/wm/TaskDisplayArea;->hasPinnedTask()Z

    .line 145
    .line 146
    .line 147
    move-result v0

    .line 148
    if-eqz v0, :cond_a

    .line 149
    .line 150
    move v0, v3

    .line 151
    goto :goto_2

    .line 152
    :cond_a
    move v0, v1

    .line 153
    :goto_2
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isKeyguardLocked()Z

    .line 154
    .line 155
    .line 156
    move-result v2

    .line 157
    if-nez v2, :cond_b

    .line 158
    .line 159
    if-nez p1, :cond_b

    .line 160
    .line 161
    move v2, v3

    .line 162
    goto :goto_3

    .line 163
    :cond_b
    move v2, v1

    .line 164
    :goto_3
    if-eqz p2, :cond_c

    .line 165
    .line 166
    if-eqz v0, :cond_c

    .line 167
    .line 168
    return v1

    .line 169
    :cond_c
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 170
    .line 171
    invoke-virtual {v4}, Ljava/lang/Enum;->ordinal()I

    .line 172
    .line 173
    .line 174
    move-result v4

    .line 175
    if-eqz v4, :cond_14

    .line 176
    .line 177
    const/4 p3, 0x2

    .line 178
    if-eq v4, p3, :cond_11

    .line 179
    .line 180
    const/4 p1, 0x3

    .line 181
    if-eq v4, p1, :cond_f

    .line 182
    .line 183
    const/4 p1, 0x4

    .line 184
    if-eq v4, p1, :cond_f

    .line 185
    .line 186
    const/4 p1, 0x5

    .line 187
    if-eq v4, p1, :cond_d

    .line 188
    .line 189
    goto :goto_4

    .line 190
    :cond_d
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->supportsEnterPipOnTaskSwitch:Z

    .line 191
    .line 192
    if-eqz p0, :cond_e

    .line 193
    .line 194
    if-eqz v2, :cond_e

    .line 195
    .line 196
    if-nez v0, :cond_e

    .line 197
    .line 198
    move v1, v3

    .line 199
    :cond_e
    :goto_4
    return v1

    .line 200
    :cond_f
    if-eqz v2, :cond_10

    .line 201
    .line 202
    if-nez v0, :cond_10

    .line 203
    .line 204
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->supportsEnterPipOnTaskSwitch:Z

    .line 205
    .line 206
    if-eqz p0, :cond_10

    .line 207
    .line 208
    move v1, v3

    .line 209
    :cond_10
    return v1

    .line 210
    :cond_11
    if-nez p1, :cond_13

    .line 211
    .line 212
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->supportsEnterPipOnTaskSwitch:Z

    .line 213
    .line 214
    if-nez p0, :cond_12

    .line 215
    .line 216
    if-nez p2, :cond_13

    .line 217
    .line 218
    :cond_12
    move v1, v3

    .line 219
    :cond_13
    return v1

    .line 220
    :cond_14
    return p3
.end method

.method public final checkKeyguardFlagsChanged()V
    .locals 3

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->containsDismissKeyguardWindow()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->containsShowWhenLockedWindow()Z

    .line 6
    .line 7
    .line 8
    move-result v1

    .line 9
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsDismissKeyguardWindow:Z

    .line 10
    .line 11
    if-ne v0, v2, :cond_0

    .line 12
    .line 13
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsShowWhenLockedWindow:Z

    .line 14
    .line 15
    if-eq v1, v2, :cond_1

    .line 16
    .line 17
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 18
    .line 19
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->notifyKeyguardFlagsChanged()V

    .line 20
    .line 21
    .line 22
    :cond_1
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsDismissKeyguardWindow:Z

    .line 23
    .line 24
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsShowWhenLockedWindow:Z

    .line 25
    .line 26
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->containsTurnScreenOnWindow()Z

    .line 27
    .line 28
    .line 29
    move-result v0

    .line 30
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsTurnScreenOnWindow:Z

    .line 31
    .line 32
    return-void
.end method

.method public final cleanUp(ZZ)V
    .locals 10

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    invoke-virtual {v0, p0}, Lcom/android/server/wm/TaskFragment;->cleanUpActivityReferences(Lcom/android/server/wm/ActivityRecord;)V

    .line 6
    .line 7
    .line 8
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastParentBeforePip:Lcom/android/server/wm/Task;

    .line 9
    .line 10
    const/4 v1, 0x0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    iput-object v1, v0, Lcom/android/server/wm/Task;->mChildPipActivity:Lcom/android/server/wm/ActivityRecord;

    .line 14
    .line 15
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastParentBeforePip:Lcom/android/server/wm/Task;

    .line 16
    .line 17
    :cond_0
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mLaunchIntoPipHostActivity:Lcom/android/server/wm/ActivityRecord;

    .line 18
    .line 19
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastTaskFragmentOrganizerBeforePip:Landroid/window/ITaskFragmentOrganizer;

    .line 20
    .line 21
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastEmbeddedParentTfTokenBeforePip:Landroid/os/IBinder;

    .line 22
    .line 23
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 24
    .line 25
    .line 26
    move-result-object v0

    .line 27
    const/4 v2, 0x1

    .line 28
    const/4 v3, 0x0

    .line 29
    if-eqz v0, :cond_6

    .line 30
    .line 31
    iget-object v4, v0, Lcom/android/server/wm/Task;->mTranslucentActivityWaiting:Lcom/android/server/wm/ActivityRecord;

    .line 32
    .line 33
    if-eq p0, v4, :cond_1

    .line 34
    .line 35
    iget-object v5, v0, Lcom/android/server/wm/Task;->mPendingConvertFromTranslucentActivity:Lcom/android/server/wm/ActivityRecord;

    .line 36
    .line 37
    if-eq p0, v5, :cond_1

    .line 38
    .line 39
    goto :goto_0

    .line 40
    :cond_1
    if-eqz v4, :cond_3

    .line 41
    .line 42
    iget-boolean v5, v4, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 43
    .line 44
    if-nez v5, :cond_2

    .line 45
    .line 46
    invoke-virtual {v4, v2, v3}, Lcom/android/server/wm/ActivityRecord;->setOccludesParent(ZZ)Z

    .line 47
    .line 48
    .line 49
    :cond_2
    iput-object v1, v0, Lcom/android/server/wm/Task;->mTranslucentActivityWaiting:Lcom/android/server/wm/ActivityRecord;

    .line 50
    .line 51
    :cond_3
    iget-object v4, v0, Lcom/android/server/wm/Task;->mPendingConvertFromTranslucentActivity:Lcom/android/server/wm/ActivityRecord;

    .line 52
    .line 53
    if-eqz v4, :cond_5

    .line 54
    .line 55
    iget-boolean v5, v4, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 56
    .line 57
    if-nez v5, :cond_4

    .line 58
    .line 59
    invoke-virtual {v4, v2, v3}, Lcom/android/server/wm/ActivityRecord;->setOccludesParent(ZZ)Z

    .line 60
    .line 61
    .line 62
    :cond_4
    iput-object v1, v0, Lcom/android/server/wm/Task;->mPendingConvertFromTranslucentActivity:Lcom/android/server/wm/ActivityRecord;

    .line 63
    .line 64
    :cond_5
    iget-object v4, v0, Lcom/android/server/wm/Task;->mUndrawnActivitiesBelowTopTranslucent:Ljava/util/ArrayList;

    .line 65
    .line 66
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 67
    .line 68
    .line 69
    iget-object v0, v0, Lcom/android/server/wm/Task;->mHandler:Lcom/android/server/wm/Task$ActivityTaskHandler;

    .line 70
    .line 71
    const/16 v4, 0x65

    .line 72
    .line 73
    invoke-virtual {v0, v4}, Landroid/os/Handler;->removeMessages(I)V

    .line 74
    .line 75
    .line 76
    :cond_6
    :goto_0
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mHandleExitSplashScreen:Z

    .line 77
    .line 78
    if-eqz v0, :cond_d

    .line 79
    .line 80
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 81
    .line 82
    if-nez v0, :cond_d

    .line 83
    .line 84
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 85
    .line 86
    const/4 v4, 0x3

    .line 87
    if-eq v0, v4, :cond_7

    .line 88
    .line 89
    if-nez v0, :cond_d

    .line 90
    .line 91
    :cond_7
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 92
    .line 93
    aget-boolean v0, v0, v2

    .line 94
    .line 95
    if-eqz v0, :cond_8

    .line 96
    .line 97
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 98
    .line 99
    .line 100
    move-result-object v0

    .line 101
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 102
    .line 103
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 104
    .line 105
    .line 106
    move-result-object v9

    .line 107
    const/4 v7, 0x0

    .line 108
    const-string v8, "Cleaning splash screen token=%s"

    .line 109
    .line 110
    const-wide v5, -0x120645155da2c839L    # -5.812982579296777E221

    .line 111
    .line 112
    .line 113
    .line 114
    .line 115
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 116
    .line 117
    .line 118
    :cond_8
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 119
    .line 120
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mTaskOrganizerController:Lcom/android/server/wm/TaskOrganizerController;

    .line 121
    .line 122
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 123
    .line 124
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 125
    .line 126
    if-eqz v4, :cond_9

    .line 127
    .line 128
    iget-object v4, v4, Lcom/android/server/wm/StartingSurfaceController$StartingSurface;->mTaskOrganizer:Landroid/window/ITaskOrganizer;

    .line 129
    .line 130
    goto :goto_1

    .line 131
    :cond_9
    move-object v4, v1

    .line 132
    :goto_1
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 133
    .line 134
    .line 135
    invoke-virtual {v2}, Lcom/android/server/wm/TaskFragment;->getRootTask()Lcom/android/server/wm/Task;

    .line 136
    .line 137
    .line 138
    move-result-object v5

    .line 139
    if-nez v5, :cond_a

    .line 140
    .line 141
    goto :goto_3

    .line 142
    :cond_a
    if-eqz v4, :cond_b

    .line 143
    .line 144
    goto :goto_2

    .line 145
    :cond_b
    invoke-virtual {v0}, Lcom/android/server/wm/TaskOrganizerController;->getTaskOrganizer()Landroid/window/ITaskOrganizer;

    .line 146
    .line 147
    .line 148
    move-result-object v4

    .line 149
    :goto_2
    if-nez v4, :cond_c

    .line 150
    .line 151
    goto :goto_3

    .line 152
    :cond_c
    :try_start_0
    iget v0, v2, Lcom/android/server/wm/Task;->mTaskId:I

    .line 153
    .line 154
    invoke-interface {v4, v0}, Landroid/window/ITaskOrganizer;->onAppSplashScreenViewRemoved(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 155
    .line 156
    .line 157
    goto :goto_3

    .line 158
    :catch_0
    move-exception v0

    .line 159
    const-string v2, "TaskOrganizerController"

    .line 160
    .line 161
    const-string v4, "Exception sending onAppSplashScreenViewRemoved callback"

    .line 162
    .line 163
    invoke-static {v2, v4, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 164
    .line 165
    .line 166
    :cond_d
    :goto_3
    if-eqz p2, :cond_e

    .line 167
    .line 168
    sget-object p2, Lcom/android/server/wm/ActivityRecord$State;->DESTROYED:Lcom/android/server/wm/ActivityRecord$State;

    .line 169
    .line 170
    const-string v0, "cleanUp"

    .line 171
    .line 172
    invoke-virtual {p0, p2, v0}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 173
    .line 174
    .line 175
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->detachFromProcess()V

    .line 176
    .line 177
    .line 178
    :cond_e
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 179
    .line 180
    iget-object p2, v4, Lcom/android/server/wm/ActivityTaskSupervisor;->mFinishingActivities:Ljava/util/ArrayList;

    .line 181
    .line 182
    invoke-virtual {p2, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 183
    .line 184
    .line 185
    const/4 v9, 0x0

    .line 186
    const/4 v5, 0x0

    .line 187
    const-wide/16 v7, -0x1

    .line 188
    .line 189
    move-object v6, p0

    .line 190
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/wm/ActivityTaskSupervisor;->reportActivityLaunched(ZLcom/android/server/wm/ActivityRecord;JI)V

    .line 191
    .line 192
    .line 193
    iget-boolean p2, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 194
    .line 195
    if-eqz p2, :cond_11

    .line 196
    .line 197
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 198
    .line 199
    if-eqz p2, :cond_11

    .line 200
    .line 201
    invoke-virtual {p2}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    .line 202
    .line 203
    .line 204
    move-result-object p2

    .line 205
    :cond_f
    :goto_4
    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z

    .line 206
    .line 207
    .line 208
    move-result v0

    .line 209
    if-eqz v0, :cond_10

    .line 210
    .line 211
    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 212
    .line 213
    .line 214
    move-result-object v0

    .line 215
    check-cast v0, Ljava/lang/ref/WeakReference;

    .line 216
    .line 217
    invoke-virtual {v0}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    .line 218
    .line 219
    .line 220
    move-result-object v0

    .line 221
    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    .line 222
    .line 223
    if-eqz v0, :cond_f

    .line 224
    .line 225
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 226
    .line 227
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mPendingIntentController:Lcom/android/server/am/PendingIntentController;

    .line 228
    .line 229
    const/16 v4, 0x10

    .line 230
    .line 231
    invoke-virtual {v2, v0, v3, v4}, Lcom/android/server/am/PendingIntentController;->cancelIntentSender(Lcom/android/server/am/PendingIntentRecord;ZI)V

    .line 232
    .line 233
    .line 234
    goto :goto_4

    .line 235
    :cond_10
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 236
    .line 237
    :cond_11
    if-eqz p1, :cond_12

    .line 238
    .line 239
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->cleanUpActivityServices()V

    .line 240
    .line 241
    .line 242
    :cond_12
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeTimeouts()V

    .line 243
    .line 244
    .line 245
    iget p1, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 246
    .line 247
    if-nez p1, :cond_13

    .line 248
    .line 249
    goto :goto_5

    .line 250
    :cond_13
    iput v3, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 251
    .line 252
    const-wide/16 p1, 0x0

    .line 253
    .line 254
    iput-wide p1, p0, Lcom/android/server/wm/ActivityRecord;->mRelaunchStartTime:J

    .line 255
    .line 256
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 257
    .line 258
    iget-object p1, p1, Lcom/android/server/wm/DisplayContent;->mDisplayPolicy:Lcom/android/server/wm/DisplayPolicy;

    .line 259
    .line 260
    iget-object p2, p1, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 261
    .line 262
    invoke-virtual {p2, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 263
    .line 264
    .line 265
    move-result p0

    .line 266
    iget-object p2, p1, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 267
    .line 268
    invoke-virtual {p2}, Landroid/util/ArraySet;->isEmpty()Z

    .line 269
    .line 270
    .line 271
    move-result p2

    .line 272
    and-int/2addr p0, p2

    .line 273
    if-eqz p0, :cond_14

    .line 274
    .line 275
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayPolicy;->updateSystemBarAttributes()V

    .line 276
    .line 277
    .line 278
    :cond_14
    :goto_5
    return-void
.end method

.method public final cleanUpActivityServices()V
    .locals 3

    .line 1
    monitor-enter p0

    .line 2
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    .line 3
    .line 4
    if-nez v0, :cond_0

    .line 5
    .line 6
    monitor-exit p0

    .line 7
    return-void

    .line 8
    :catchall_0
    move-exception v0

    .line 9
    goto :goto_1

    .line 10
    :cond_0
    iget-object v1, v0, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mConnections:Landroid/util/ArraySet;

    .line 11
    .line 12
    if-eqz v1, :cond_2

    .line 13
    .line 14
    invoke-virtual {v1}, Landroid/util/ArraySet;->isEmpty()Z

    .line 15
    .line 16
    .line 17
    move-result v1

    .line 18
    if-nez v1, :cond_2

    .line 19
    .line 20
    iget-boolean v1, v0, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mIsDisconnecting:Z

    .line 21
    .line 22
    if-eqz v1, :cond_1

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :cond_1
    const/4 v1, 0x1

    .line 26
    iput-boolean v1, v0, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mIsDisconnecting:Z

    .line 27
    .line 28
    iget-object v1, v0, Lcom/android/server/wm/ActivityServiceConnectionsHolder;->mActivity:Lcom/android/server/wm/ActivityRecord;

    .line 29
    .line 30
    iget-object v1, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 31
    .line 32
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 33
    .line 34
    new-instance v2, Lcom/android/server/wm/ActivityServiceConnectionsHolder$$ExternalSyntheticLambda0;

    .line 35
    .line 36
    invoke-direct {v2, v0}, Lcom/android/server/wm/ActivityServiceConnectionsHolder$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/wm/ActivityServiceConnectionsHolder;)V

    .line 37
    .line 38
    .line 39
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 40
    .line 41
    .line 42
    :cond_2
    :goto_0
    const/4 v0, 0x0

    .line 43
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    .line 44
    .line 45
    monitor-exit p0

    .line 46
    return-void

    .line 47
    :goto_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 48
    throw v0
.end method

.method public final clearAnimatingFlags()V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    add-int/lit8 v0, v0, -0x1

    .line 8
    .line 9
    const/4 v1, 0x0

    .line 10
    :goto_0
    if-ltz v0, :cond_0

    .line 11
    .line 12
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 13
    .line 14
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 15
    .line 16
    .line 17
    move-result-object v2

    .line 18
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 19
    .line 20
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->clearAnimatingFlags()Z

    .line 21
    .line 22
    .line 23
    move-result v2

    .line 24
    or-int/2addr v1, v2

    .line 25
    add-int/lit8 v0, v0, -0x1

    .line 26
    .line 27
    goto :goto_0

    .line 28
    :cond_0
    if-eqz v1, :cond_1

    .line 29
    .line 30
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->requestUpdateWallpaperIfNeeded()V

    .line 31
    .line 32
    .line 33
    :cond_1
    return-void
.end method

.method public final clearThumbnail()V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mThumbnail:Lcom/android/server/wm/WindowContainerThumbnail;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainerThumbnail;->destroy()V

    .line 7
    .line 8
    .line 9
    const/4 v0, 0x0

    .line 10
    iput-object v0, p0, Lcom/android/server/wm/WindowContainer;->mThumbnail:Lcom/android/server/wm/WindowContainerThumbnail;

    .line 11
    .line 12
    return-void
.end method

.method public final clearWaitForEnteringPinnedMode(Ljava/lang/String;)V
    .locals 3

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 7
    .line 8
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ConfigurationContainer;->setWindowingMode(I)V

    .line 9
    .line 10
    .line 11
    new-instance v0, Ljava/lang/StringBuilder;

    .line 12
    .line 13
    const-string v2, "clearWaitForEnteringPinnedMode: r="

    .line 14
    .line 15
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 16
    .line 17
    .line 18
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 19
    .line 20
    .line 21
    const-string v2, ", reason="

    .line 22
    .line 23
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24
    .line 25
    .line 26
    const-string v2, "ActivityTaskManager"

    .line 27
    .line 28
    invoke-static {v0, p1, v2}, Lcom/android/server/BootReceiver$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V

    .line 29
    .line 30
    .line 31
    :cond_0
    invoke-virtual {p0, p1, v1}, Lcom/android/server/wm/ActivityRecord;->setEnteringPipFromSplit(Ljava/lang/String;Z)V

    .line 32
    .line 33
    .line 34
    return-void
.end method

.method public final commitVisibility(ZZZ)V
    .locals 19

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move/from16 v1, p1

    .line 4
    .line 5
    const/4 v2, 0x0

    .line 6
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mVisibleSetFromTransferredStartingWindow:Z

    .line 7
    .line 8
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 9
    .line 10
    if-ne v1, v3, :cond_0

    .line 11
    .line 12
    return-void

    .line 13
    :cond_0
    iget-object v3, v0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 14
    .line 15
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 16
    .line 17
    .line 18
    move-result v3

    .line 19
    sget-boolean v4, Lcom/android/server/wm/WindowManagerService;->sEnableShellTransitions:Z

    .line 20
    .line 21
    const/4 v5, 0x1

    .line 22
    const/4 v6, 0x2

    .line 23
    if-eqz v4, :cond_1

    .line 24
    .line 25
    move v4, v1

    .line 26
    goto :goto_0

    .line 27
    :cond_1
    invoke-virtual {v0, v6, v5}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 28
    .line 29
    .line 30
    move-result v4

    .line 31
    :goto_0
    move v7, v2

    .line 32
    :goto_1
    if-ge v7, v3, :cond_2

    .line 33
    .line 34
    iget-object v8, v0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 35
    .line 36
    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 37
    .line 38
    .line 39
    move-result-object v8

    .line 40
    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 41
    .line 42
    invoke-virtual {v8, v1, v4}, Lcom/android/server/wm/WindowState;->onAppVisibilityChanged(ZZ)V

    .line 43
    .line 44
    .line 45
    add-int/lit8 v7, v7, 0x1

    .line 46
    .line 47
    goto :goto_1

    .line 48
    :cond_2
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/ActivityRecord;->setVisible(Z)V

    .line 49
    .line 50
    .line 51
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/ActivityRecord;->setVisibleRequested(Z)Z

    .line 52
    .line 53
    .line 54
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_APP_TRANSITIONS_enabled:[Z

    .line 55
    .line 56
    aget-boolean v3, v3, v5

    .line 57
    .line 58
    if-eqz v3, :cond_3

    .line 59
    .line 60
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 61
    .line 62
    .line 63
    move-result-object v7

    .line 64
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 65
    .line 66
    iget-boolean v8, v0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 67
    .line 68
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->inTransitionSelfOrParent()Z

    .line 69
    .line 70
    .line 71
    move-result v9

    .line 72
    const/4 v10, 0x5

    .line 73
    invoke-static {v10}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 74
    .line 75
    .line 76
    move-result-object v10

    .line 77
    invoke-static {v10}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 78
    .line 79
    .line 80
    move-result-object v12

    .line 81
    sget-object v13, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_APP_TRANSITIONS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 82
    .line 83
    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 84
    .line 85
    .line 86
    move-result-object v3

    .line 87
    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 88
    .line 89
    .line 90
    move-result-object v10

    .line 91
    invoke-static {v9}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 92
    .line 93
    .line 94
    move-result-object v11

    .line 95
    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 96
    .line 97
    .line 98
    move-result-object v4

    .line 99
    move-object v8, v3

    .line 100
    move-object v9, v10

    .line 101
    move-object v10, v11

    .line 102
    move-object v11, v4

    .line 103
    filled-new-array/range {v7 .. v12}, [Ljava/lang/Object;

    .line 104
    .line 105
    .line 106
    move-result-object v18

    .line 107
    const/16 v16, 0x3fc

    .line 108
    .line 109
    const/16 v17, 0x0

    .line 110
    .line 111
    const-wide v14, -0x69f9c58482fc3f0L    # -4.539477339124515E276

    .line 112
    .line 113
    .line 114
    .line 115
    .line 116
    invoke-static/range {v13 .. v18}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 117
    .line 118
    .line 119
    :cond_3
    if-nez v1, :cond_4

    .line 120
    .line 121
    invoke-virtual {v0, v5}, Lcom/android/server/wm/ActivityRecord;->stopFreezingScreen(Z)V

    .line 122
    .line 123
    .line 124
    goto :goto_2

    .line 125
    :cond_4
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 126
    .line 127
    if-eqz v3, :cond_6

    .line 128
    .line 129
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isDrawn()Z

    .line 130
    .line 131
    .line 132
    move-result v3

    .line 133
    if-nez v3, :cond_6

    .line 134
    .line 135
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 136
    .line 137
    if-nez v3, :cond_5

    .line 138
    .line 139
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 140
    .line 141
    if-eqz v3, :cond_6

    .line 142
    .line 143
    :cond_5
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 144
    .line 145
    invoke-virtual {v3, v5}, Lcom/android/server/wm/WindowState;->clearPolicyVisibilityFlag(I)V

    .line 146
    .line 147
    .line 148
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 149
    .line 150
    iput-boolean v2, v3, Lcom/android/server/wm/WindowState;->mLegacyPolicyVisibilityAfterAnim:Z

    .line 151
    .line 152
    :cond_6
    iget-object v3, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 153
    .line 154
    invoke-static {v3}, Ljava/util/Objects;->requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 155
    .line 156
    .line 157
    new-instance v4, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda0;

    .line 158
    .line 159
    const/4 v7, 0x0

    .line 160
    invoke-direct {v4, v7, v3}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda0;-><init>(ILjava/lang/Object;)V

    .line 161
    .line 162
    .line 163
    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 164
    .line 165
    .line 166
    :goto_2
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 167
    .line 168
    const/4 v4, 0x0

    .line 169
    if-eqz v3, :cond_7

    .line 170
    .line 171
    invoke-virtual {v3}, Lcom/android/server/wm/Task;->getOrganizedTask()Lcom/android/server/wm/Task;

    .line 172
    .line 173
    .line 174
    move-result-object v3

    .line 175
    goto :goto_3

    .line 176
    :cond_7
    move-object v3, v4

    .line 177
    :goto_3
    if-eqz v3, :cond_8

    .line 178
    .line 179
    invoke-virtual {v3, v2}, Lcom/android/server/wm/Task;->dispatchTaskInfoChangedIfNeeded(Z)V

    .line 180
    .line 181
    .line 182
    invoke-virtual {v3}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 183
    .line 184
    .line 185
    move-result-object v3

    .line 186
    invoke-virtual {v3}, Lcom/android/server/wm/WindowContainer;->asTask()Lcom/android/server/wm/Task;

    .line 187
    .line 188
    .line 189
    move-result-object v3

    .line 190
    goto :goto_3

    .line 191
    :cond_8
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 192
    .line 193
    .line 194
    move-result-object v3

    .line 195
    iget-object v7, v3, Lcom/android/server/wm/DisplayContent;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 196
    .line 197
    iput-boolean v5, v7, Lcom/android/server/wm/InputMonitor;->mUpdateInputWindowsNeeded:Z

    .line 198
    .line 199
    if-eqz p2, :cond_9

    .line 200
    .line 201
    iget-object v7, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 202
    .line 203
    const/4 v8, 0x3

    .line 204
    invoke-virtual {v7, v8, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 205
    .line 206
    .line 207
    iget-object v7, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 208
    .line 209
    iget-object v7, v7, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    .line 210
    .line 211
    invoke-virtual {v7, v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement(Z)V

    .line 212
    .line 213
    .line 214
    :cond_9
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 215
    .line 216
    invoke-virtual {v3, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 217
    .line 218
    .line 219
    iput v2, v0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 220
    .line 221
    iget-object v3, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 222
    .line 223
    invoke-virtual {v3}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 224
    .line 225
    .line 226
    move-result v3

    .line 227
    if-nez v3, :cond_a

    .line 228
    .line 229
    const/4 v7, 0x6

    .line 230
    const/16 v8, 0x19

    .line 231
    .line 232
    invoke-virtual {v0, v7, v8}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 233
    .line 234
    .line 235
    move-result v7

    .line 236
    if-eqz v7, :cond_a

    .line 237
    .line 238
    move v7, v5

    .line 239
    goto :goto_4

    .line 240
    :cond_a
    move v7, v2

    .line 241
    :goto_4
    if-nez v7, :cond_b

    .line 242
    .line 243
    if-nez v3, :cond_b

    .line 244
    .line 245
    invoke-virtual {v0, v5, v4}, Lcom/android/server/wm/ActivityRecord;->onAnimationFinished(ILcom/android/server/wm/AnimationAdapter;)V

    .line 246
    .line 247
    .line 248
    if-eqz v1, :cond_b

    .line 249
    .line 250
    iput-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mEnteringAnimation:Z

    .line 251
    .line 252
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 253
    .line 254
    iget-object v4, v4, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Lcom/android/server/wm/WindowManagerService$4;

    .line 255
    .line 256
    iget-object v8, v0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 257
    .line 258
    invoke-virtual {v4, v8}, Lcom/android/server/wm/WindowManagerService$4;->onAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    .line 259
    .line 260
    .line 261
    :cond_b
    if-nez v1, :cond_c

    .line 262
    .line 263
    if-nez v3, :cond_c

    .line 264
    .line 265
    const/16 v4, 0x9

    .line 266
    .line 267
    invoke-virtual {v0, v6, v4}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 268
    .line 269
    .line 270
    move-result v4

    .line 271
    if-nez v4, :cond_d

    .line 272
    .line 273
    :cond_c
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/ActivityRecord;->setClientVisible(Z)V

    .line 274
    .line 275
    .line 276
    :cond_d
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 277
    .line 278
    .line 279
    move-result-object v4

    .line 280
    if-nez v1, :cond_e

    .line 281
    .line 282
    iput-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mImeInsetsFrozenUntilStartInput:Z

    .line 283
    .line 284
    sget-boolean v6, Lcom/samsung/android/rune/CoreRune;->MW_SHELL_TRANSITION:Z

    .line 285
    .line 286
    if-eqz v6, :cond_e

    .line 287
    .line 288
    if-eqz v3, :cond_e

    .line 289
    .line 290
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mInsetsStateController:Lcom/android/server/wm/InsetsStateController;

    .line 291
    .line 292
    invoke-virtual {v6}, Lcom/android/server/wm/InsetsStateController;->getImeSourceProvider()Lcom/android/server/wm/ImeInsetsSourceProvider;

    .line 293
    .line 294
    .line 295
    move-result-object v6

    .line 296
    iget-object v6, v6, Lcom/android/server/wm/InsetsSourceProvider;->mControlTarget:Lcom/android/server/wm/InsetsControlTarget;

    .line 297
    .line 298
    iget-object v8, v4, Lcom/android/server/wm/DisplayContent;->mRemoteInsetsControlTarget:Lcom/android/server/wm/DisplayContent$RemoteInsetsControlTarget;

    .line 299
    .line 300
    if-eqz v8, :cond_e

    .line 301
    .line 302
    if-ne v8, v6, :cond_e

    .line 303
    .line 304
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mImeLayeringTarget:Lcom/android/server/wm/WindowState;

    .line 305
    .line 306
    if-eqz v6, :cond_e

    .line 307
    .line 308
    iget-object v6, v6, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 309
    .line 310
    if-ne v6, v0, :cond_e

    .line 311
    .line 312
    invoke-virtual {v4, v5}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 313
    .line 314
    .line 315
    :cond_e
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 316
    .line 317
    invoke-virtual {v6, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 318
    .line 319
    .line 320
    move-result v6

    .line 321
    if-nez v6, :cond_11

    .line 322
    .line 323
    iget-object v6, v4, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 324
    .line 325
    invoke-virtual {v6, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 326
    .line 327
    .line 328
    move-result v6

    .line 329
    if-nez v6, :cond_11

    .line 330
    .line 331
    if-nez p3, :cond_11

    .line 332
    .line 333
    iget-object v6, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 334
    .line 335
    iget-object v6, v6, Lcom/android/server/wm/WindowManagerService;->mSnapshotController:Lcom/android/server/wm/SnapshotController;

    .line 336
    .line 337
    iget-object v6, v6, Lcom/android/server/wm/SnapshotController;->mActivitySnapshotController:Lcom/android/server/wm/ActivitySnapshotController;

    .line 338
    .line 339
    invoke-virtual {v6}, Lcom/android/server/wm/AbsAppSnapshotController;->shouldDisableSnapshots()Z

    .line 340
    .line 341
    .line 342
    move-result v8

    .line 343
    if-eqz v8, :cond_f

    .line 344
    .line 345
    goto :goto_5

    .line 346
    :cond_f
    iget-object v8, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 347
    .line 348
    if-nez v8, :cond_10

    .line 349
    .line 350
    goto :goto_5

    .line 351
    :cond_10
    if-nez v1, :cond_11

    .line 352
    .line 353
    invoke-virtual {v6}, Lcom/android/server/wm/ActivitySnapshotController;->resetTmpFields()V

    .line 354
    .line 355
    .line 356
    iget-object v1, v6, Lcom/android/server/wm/ActivitySnapshotController;->mPendingRemoveActivity:Landroid/util/ArraySet;

    .line 357
    .line 358
    invoke-virtual {v6, v0, v1, v2}, Lcom/android/server/wm/ActivitySnapshotController;->addBelowActivityIfExist(Lcom/android/server/wm/ActivityRecord;Landroid/util/ArraySet;Z)V

    .line 359
    .line 360
    .line 361
    invoke-virtual {v6}, Lcom/android/server/wm/ActivitySnapshotController;->postProcess()V

    .line 362
    .line 363
    .line 364
    :cond_11
    :goto_5
    if-nez v3, :cond_12

    .line 365
    .line 366
    iget-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 367
    .line 368
    if-nez v1, :cond_12

    .line 369
    .line 370
    if-nez v7, :cond_12

    .line 371
    .line 372
    iget-object v1, v4, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 373
    .line 374
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    .line 375
    .line 376
    .line 377
    move-result v1

    .line 378
    if-nez v1, :cond_12

    .line 379
    .line 380
    new-instance v1, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda0;

    .line 381
    .line 382
    const/4 v2, 0x1

    .line 383
    invoke-direct {v1, v2, v0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda0;-><init>(ILjava/lang/Object;)V

    .line 384
    .line 385
    .line 386
    invoke-virtual {v0, v1, v5}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 387
    .line 388
    .line 389
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->scheduleAnimation()V

    .line 390
    .line 391
    .line 392
    :cond_12
    return-void
.end method

.method public final completeFinishing(Ljava/lang/String;Z)Lcom/android/server/wm/ActivityRecord;
    .locals 6

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 2
    .line 3
    if-eqz v0, :cond_f

    .line 4
    .line 5
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 6
    .line 7
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-nez v0, :cond_f

    .line 12
    .line 13
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 14
    .line 15
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 16
    .line 17
    .line 18
    move-result v0

    .line 19
    if-eqz v0, :cond_0

    .line 20
    .line 21
    return-object p0

    .line 22
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 23
    .line 24
    const/4 v1, 0x1

    .line 25
    const/4 v2, 0x0

    .line 26
    if-nez v0, :cond_2

    .line 27
    .line 28
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSED:Lcom/android/server/wm/ActivityRecord$State;

    .line 29
    .line 30
    sget-object v3, Lcom/android/server/wm/ActivityRecord$State;->STARTED:Lcom/android/server/wm/ActivityRecord$State;

    .line 31
    .line 32
    invoke-virtual {p0, v0, v3}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 33
    .line 34
    .line 35
    move-result v0

    .line 36
    if-eqz v0, :cond_1

    .line 37
    .line 38
    goto :goto_0

    .line 39
    :cond_1
    move v0, v2

    .line 40
    goto :goto_1

    .line 41
    :cond_2
    :goto_0
    move v0, v1

    .line 42
    :goto_1
    const/4 v3, 0x0

    .line 43
    if-eqz p2, :cond_4

    .line 44
    .line 45
    if-eqz v0, :cond_4

    .line 46
    .line 47
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 48
    .line 49
    iget-boolean p2, p2, Lcom/android/server/wm/Task;->mReuseTask:Z

    .line 50
    .line 51
    if-nez p2, :cond_4

    .line 52
    .line 53
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->occludesParent(Z)Z

    .line 54
    .line 55
    .line 56
    move-result p2

    .line 57
    if-eqz p2, :cond_3

    .line 58
    .line 59
    goto :goto_2

    .line 60
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isKeyguardLocked()Z

    .line 61
    .line 62
    .line 63
    move-result p2

    .line 64
    if-eqz p2, :cond_4

    .line 65
    .line 66
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 67
    .line 68
    iget-object p2, p2, Lcom/android/server/wm/ActivityTaskSupervisor;->mKeyguardController:Lcom/android/server/wm/KeyguardController;

    .line 69
    .line 70
    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 71
    .line 72
    .line 73
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 74
    .line 75
    .line 76
    move-result v4

    .line 77
    invoke-virtual {p2, v4}, Lcom/android/server/wm/KeyguardController;->getDisplayState(I)Lcom/android/server/wm/KeyguardController$KeyguardDisplayState;

    .line 78
    .line 79
    .line 80
    move-result-object p2

    .line 81
    iget-object p2, p2, Lcom/android/server/wm/KeyguardController$KeyguardDisplayState;->mTopOccludesActivity:Lcom/android/server/wm/ActivityRecord;

    .line 82
    .line 83
    if-ne p2, p0, :cond_4

    .line 84
    .line 85
    :goto_2
    iget-object p2, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 86
    .line 87
    invoke-virtual {p2, v1, v3}, Lcom/android/server/wm/DisplayContent;->ensureActivitiesVisible(ZLcom/android/server/wm/ActivityRecord;)V

    .line 88
    .line 89
    .line 90
    :cond_4
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 91
    .line 92
    .line 93
    move-result-object p2

    .line 94
    check-cast p2, Lcom/android/server/wm/TaskDisplayArea;

    .line 95
    .line 96
    invoke-virtual {p2, v1}, Lcom/android/server/wm/TaskDisplayArea;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 97
    .line 98
    .line 99
    move-result-object p2

    .line 100
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 101
    .line 102
    .line 103
    move-result-object v4

    .line 104
    if-eqz p2, :cond_6

    .line 105
    .line 106
    if-eqz v4, :cond_6

    .line 107
    .line 108
    iget-boolean v5, v4, Lcom/android/server/wm/TaskFragment;->mIsEmbedded:Z

    .line 109
    .line 110
    if-eqz v5, :cond_6

    .line 111
    .line 112
    invoke-virtual {v4}, Lcom/android/server/wm/TaskFragment;->getOrganizedTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 113
    .line 114
    .line 115
    move-result-object v4

    .line 116
    if-eqz v4, :cond_5

    .line 117
    .line 118
    iget-object v5, v4, Lcom/android/server/wm/TaskFragment;->mAdjacentTaskFragment:Lcom/android/server/wm/TaskFragment;

    .line 119
    .line 120
    goto :goto_3

    .line 121
    :cond_5
    move-object v5, v3

    .line 122
    :goto_3
    if-eqz v5, :cond_6

    .line 123
    .line 124
    invoke-virtual {p2, v5}, Lcom/android/server/wm/WindowContainer;->isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z

    .line 125
    .line 126
    .line 127
    move-result v5

    .line 128
    if-eqz v5, :cond_6

    .line 129
    .line 130
    invoke-virtual {v4, v2}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 131
    .line 132
    .line 133
    move-result-object v5

    .line 134
    if-nez v5, :cond_6

    .line 135
    .line 136
    iget-boolean v4, v4, Lcom/android/server/wm/TaskFragment;->mDelayLastActivityRemoval:Z

    .line 137
    .line 138
    goto :goto_4

    .line 139
    :cond_6
    move v4, v2

    .line 140
    :goto_4
    if-eqz p2, :cond_7

    .line 141
    .line 142
    iget-boolean v5, p2, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 143
    .line 144
    if-eqz v5, :cond_8

    .line 145
    .line 146
    invoke-virtual {p2}, Lcom/android/server/wm/WindowContainer;->isVisibleRequested()Z

    .line 147
    .line 148
    .line 149
    move-result v5

    .line 150
    if-nez v5, :cond_7

    .line 151
    .line 152
    goto :goto_5

    .line 153
    :cond_7
    move v1, v2

    .line 154
    :cond_8
    :goto_5
    if-eqz v1, :cond_9

    .line 155
    .line 156
    iget-object v5, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 157
    .line 158
    iget-boolean v5, v5, Lcom/android/server/wm/DisplayContent;->mSleeping:Z

    .line 159
    .line 160
    if-eqz v5, :cond_9

    .line 161
    .line 162
    invoke-virtual {p2}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 163
    .line 164
    .line 165
    move-result-object v5

    .line 166
    iget-object v5, v5, Lcom/android/server/wm/TaskFragment;->mLastPausedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 167
    .line 168
    if-ne p2, v5, :cond_9

    .line 169
    .line 170
    invoke-virtual {p2}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 171
    .line 172
    .line 173
    move-result-object v5

    .line 174
    invoke-virtual {v5}, Lcom/android/server/wm/TaskFragment;->clearLastPausedActivity()V

    .line 175
    .line 176
    .line 177
    :cond_9
    if-eqz v0, :cond_d

    .line 178
    .line 179
    if-nez v1, :cond_c

    .line 180
    .line 181
    if-nez v4, :cond_c

    .line 182
    .line 183
    if-eqz p2, :cond_a

    .line 184
    .line 185
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->inTransitionSelfOrParent()Z

    .line 186
    .line 187
    .line 188
    move-result p2

    .line 189
    if-eqz p2, :cond_a

    .line 190
    .line 191
    goto :goto_6

    .line 192
    :cond_a
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->addToFinishingAndWaitForIdle()Z

    .line 193
    .line 194
    .line 195
    move-result p2

    .line 196
    if-eqz p2, :cond_b

    .line 197
    .line 198
    goto :goto_7

    .line 199
    :cond_b
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->destroyIfPossible(Ljava/lang/String;)Z

    .line 200
    .line 201
    .line 202
    move-result v2

    .line 203
    goto :goto_7

    .line 204
    :cond_c
    :goto_6
    const-string p1, "completeFinishing"

    .line 205
    .line 206
    invoke-virtual {p0, p1, v2, v2}, Lcom/android/server/wm/ActivityRecord;->addToStopping(Ljava/lang/String;ZZ)V

    .line 207
    .line 208
    .line 209
    sget-object p2, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 210
    .line 211
    invoke-virtual {p0, p2, p1}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 212
    .line 213
    .line 214
    goto :goto_7

    .line 215
    :cond_d
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->addToFinishingAndWaitForIdle()Z

    .line 216
    .line 217
    .line 218
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->destroyIfPossible(Ljava/lang/String;)Z

    .line 219
    .line 220
    .line 221
    move-result v2

    .line 222
    :goto_7
    if-eqz v2, :cond_e

    .line 223
    .line 224
    move-object p0, v3

    .line 225
    :cond_e
    return-object p0

    .line 226
    :cond_f
    new-instance p1, Ljava/lang/IllegalArgumentException;

    .line 227
    .line 228
    new-instance p2, Ljava/lang/StringBuilder;

    .line 229
    .line 230
    const-string v0, "Activity must be finishing and not resumed to complete, r="

    .line 231
    .line 232
    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 233
    .line 234
    .line 235
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 236
    .line 237
    .line 238
    const-string v0, ", finishing="

    .line 239
    .line 240
    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 241
    .line 242
    .line 243
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 244
    .line 245
    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 246
    .line 247
    .line 248
    const-string v0, ", state="

    .line 249
    .line 250
    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 251
    .line 252
    .line 253
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 254
    .line 255
    invoke-virtual {p2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 256
    .line 257
    .line 258
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 259
    .line 260
    .line 261
    move-result-object p0

    .line 262
    invoke-direct {p1, p0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 263
    .line 264
    .line 265
    throw p1
.end method

.method public final completeResumeLocked()V
    .locals 10

    .line 1
    const/4 v0, 0x0

    .line 2
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->idle:Z

    .line 3
    .line 4
    const/4 v1, 0x0

    .line 5
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 6
    .line 7
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 8
    .line 9
    const/4 v3, 0x1

    .line 10
    if-eqz v2, :cond_0

    .line 11
    .line 12
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 13
    .line 14
    .line 15
    move-result v2

    .line 16
    if-lez v2, :cond_0

    .line 17
    .line 18
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 19
    .line 20
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 21
    .line 22
    .line 23
    move-result v4

    .line 24
    sub-int/2addr v4, v3

    .line 25
    invoke-virtual {v2, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 26
    .line 27
    .line 28
    move-result-object v2

    .line 29
    check-cast v2, Landroid/content/Intent;

    .line 30
    .line 31
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mLastNewIntent:Landroid/content/Intent;

    .line 32
    .line 33
    :cond_0
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 34
    .line 35
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 36
    .line 37
    invoke-virtual {v2, p0}, Lcom/android/server/wm/ActivityTaskSupervisor;->updateHomeProcessIfNeeded(Lcom/android/server/wm/ActivityRecord;)V

    .line 38
    .line 39
    .line 40
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 41
    .line 42
    if-eqz v2, :cond_1

    .line 43
    .line 44
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 45
    .line 46
    const/4 v9, 0x0

    .line 47
    const/4 v5, 0x0

    .line 48
    const-wide/16 v7, -0x1

    .line 49
    .line 50
    move-object v6, p0

    .line 51
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/wm/ActivityTaskSupervisor;->reportActivityLaunched(ZLcom/android/server/wm/ActivityRecord;JI)V

    .line 52
    .line 53
    .line 54
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 55
    .line 56
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskSupervisor;->mHandler:Lcom/android/server/wm/ActivityTaskSupervisor$ActivityTaskSupervisorHandler;

    .line 57
    .line 58
    const/16 v4, 0xc8

    .line 59
    .line 60
    invoke-virtual {v2, v4, p0}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 61
    .line 62
    .line 63
    move-result-object v4

    .line 64
    sget v5, Lcom/android/server/wm/ActivityTaskSupervisor;->IDLE_TIMEOUT:I

    .line 65
    .line 66
    int-to-long v5, v5

    .line 67
    invoke-virtual {v2, v4, v5, v6}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 68
    .line 69
    .line 70
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 71
    .line 72
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 73
    .line 74
    invoke-virtual {v2, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 75
    .line 76
    .line 77
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 78
    .line 79
    .line 80
    move-result-object v2

    .line 81
    check-cast v2, Lcom/android/server/wm/TaskDisplayArea;

    .line 82
    .line 83
    invoke-virtual {v2}, Lcom/android/server/wm/TaskDisplayArea;->allResumedActivitiesComplete()Z

    .line 84
    .line 85
    .line 86
    move-result v2

    .line 87
    if-eqz v2, :cond_2

    .line 88
    .line 89
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 90
    .line 91
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 92
    .line 93
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->updateAppCompatDisplayInsets()V

    .line 94
    .line 95
    .line 96
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 97
    .line 98
    invoke-virtual {v2}, Lcom/android/server/wm/WindowContainer;->getChildCount()I

    .line 99
    .line 100
    .line 101
    move-result v4

    .line 102
    sub-int/2addr v4, v3

    .line 103
    :goto_0
    if-ltz v4, :cond_2

    .line 104
    .line 105
    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowContainer;->getChildAt(I)Lcom/android/server/wm/WindowContainer;

    .line 106
    .line 107
    .line 108
    move-result-object v5

    .line 109
    check-cast v5, Lcom/android/server/wm/DisplayContent;

    .line 110
    .line 111
    iget-object v5, v5, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 112
    .line 113
    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 114
    .line 115
    .line 116
    add-int/lit8 v4, v4, -0x1

    .line 117
    .line 118
    goto :goto_0

    .line 119
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->resumeKeyDispatchingLocked()V

    .line 120
    .line 121
    .line 122
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 123
    .line 124
    .line 125
    move-result-object v2

    .line 126
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 127
    .line 128
    iget-object v4, v4, Lcom/android/server/wm/ActivityTaskSupervisor;->mNoAnimActivities:Ljava/util/ArrayList;

    .line 129
    .line 130
    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 131
    .line 132
    .line 133
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 134
    .line 135
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->canTurnScreenOn()Z

    .line 136
    .line 137
    .line 138
    move-result v1

    .line 139
    if-eqz v1, :cond_3

    .line 140
    .line 141
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 142
    .line 143
    new-instance v2, Ljava/lang/StringBuilder;

    .line 144
    .line 145
    const-string/jumbo v4, "turnScreenOnFlag::"

    .line 146
    .line 147
    .line 148
    invoke-direct {v2, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 149
    .line 150
    .line 151
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 152
    .line 153
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 154
    .line 155
    .line 156
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 157
    .line 158
    .line 159
    move-result-object v2

    .line 160
    invoke-virtual {v1, v2}, Lcom/android/server/wm/ActivityTaskSupervisor;->wakeUp(Ljava/lang/String;)V

    .line 161
    .line 162
    .line 163
    goto :goto_1

    .line 164
    :cond_3
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->checkReadyForSleep()V

    .line 165
    .line 166
    .line 167
    :goto_1
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 168
    .line 169
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    .line 170
    .line 171
    iget-object v2, v1, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mKeepAliveActivities:Ljava/util/WeakHashMap;

    .line 172
    .line 173
    invoke-virtual {v2, p0}, Ljava/util/WeakHashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 174
    .line 175
    .line 176
    iget-object v2, v1, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mKeepAliveActivities:Ljava/util/WeakHashMap;

    .line 177
    .line 178
    invoke-virtual {v2}, Ljava/util/WeakHashMap;->size()I

    .line 179
    .line 180
    .line 181
    move-result v2

    .line 182
    if-nez v2, :cond_4

    .line 183
    .line 184
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mHasActivitiesKeptAlive:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 185
    .line 186
    invoke-virtual {v1, v3, v0}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z

    .line 187
    .line 188
    .line 189
    :cond_4
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_FLEX_PANEL:Z

    .line 190
    .line 191
    if-eqz v0, :cond_5

    .line 192
    .line 193
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsFlexPanel:Z

    .line 194
    .line 195
    if-eqz v0, :cond_5

    .line 196
    .line 197
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inSplitScreenWindowingMode()Z

    .line 198
    .line 199
    .line 200
    move-result v0

    .line 201
    if-eqz v0, :cond_5

    .line 202
    .line 203
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 204
    .line 205
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getAdjacentTask()Lcom/android/server/wm/Task;

    .line 206
    .line 207
    .line 208
    move-result-object v0

    .line 209
    if-eqz v0, :cond_5

    .line 210
    .line 211
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 212
    .line 213
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getAdjacentTask()Lcom/android/server/wm/Task;

    .line 214
    .line 215
    .line 216
    move-result-object v0

    .line 217
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 218
    .line 219
    .line 220
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 221
    .line 222
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 223
    .line 224
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda2;

    .line 225
    .line 226
    invoke-direct {v2, v0, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda2;-><init>(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;)V

    .line 227
    .line 228
    .line 229
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 230
    .line 231
    .line 232
    :cond_5
    return-void
.end method

.method public final computeCallerInfo(Landroid/os/IBinder;Landroid/content/Intent;ILjava/lang/String;Z)V
    .locals 9

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mCallerState:Lcom/android/server/wm/ActivityCallerState;

    .line 2
    .line 3
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    .line 5
    .line 6
    new-instance v0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;

    .line 7
    .line 8
    invoke-direct {v0, p3, p4, p5}, Lcom/android/server/wm/ActivityCallerState$CallerInfo;-><init>(ILjava/lang/String;Z)V

    .line 9
    .line 10
    .line 11
    iget-object p4, p0, Lcom/android/server/wm/ActivityCallerState;->mCallerTokenInfoMap:Ljava/util/WeakHashMap;

    .line 12
    .line 13
    invoke-virtual {p4, p1, v0}, Ljava/util/WeakHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 14
    .line 15
    .line 16
    invoke-static {p2}, Lcom/android/server/wm/ActivityCallerState;->getContentUrisFromIntent(Landroid/content/Intent;)Landroid/util/ArraySet;

    .line 17
    .line 18
    .line 19
    move-result-object p1

    .line 20
    invoke-virtual {p1}, Landroid/util/ArraySet;->size()I

    .line 21
    .line 22
    .line 23
    move-result p2

    .line 24
    const/4 p4, 0x1

    .line 25
    sub-int/2addr p2, p4

    .line 26
    :goto_0
    if-ltz p2, :cond_3

    .line 27
    .line 28
    invoke-virtual {p1, p2}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 29
    .line 30
    .line 31
    move-result-object p5

    .line 32
    check-cast p5, Landroid/net/Uri;

    .line 33
    .line 34
    iget-object v1, v0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mReadableContentUris:Landroid/util/ArraySet;

    .line 35
    .line 36
    new-instance v2, Lcom/android/server/uri/GrantUri;

    .line 37
    .line 38
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    .line 39
    .line 40
    .line 41
    move-result v3

    .line 42
    invoke-static {p5, v3}, Landroid/content/ContentProvider;->getUserIdFromUri(Landroid/net/Uri;I)I

    .line 43
    .line 44
    .line 45
    move-result v3

    .line 46
    invoke-static {p5}, Landroid/content/ContentProvider;->getUriWithoutUserId(Landroid/net/Uri;)Landroid/net/Uri;

    .line 47
    .line 48
    .line 49
    move-result-object v4

    .line 50
    invoke-direct {v2, v3, p4, v4}, Lcom/android/server/uri/GrantUri;-><init>(IILandroid/net/Uri;)V

    .line 51
    .line 52
    .line 53
    iget-object v3, p0, Lcom/android/server/wm/ActivityCallerState;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 54
    .line 55
    iget-object v4, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 56
    .line 57
    check-cast v4, Lcom/android/server/uri/UriGrantsManagerService$LocalService;

    .line 58
    .line 59
    invoke-virtual {v4, v2, p3, p4, p4}, Lcom/android/server/uri/UriGrantsManagerService$LocalService;->checkUriPermission(Lcom/android/server/uri/GrantUri;IIZ)Z

    .line 60
    .line 61
    .line 62
    move-result v4

    .line 63
    const/4 v5, 0x0

    .line 64
    if-eqz v4, :cond_0

    .line 65
    .line 66
    invoke-virtual {v1, v2}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 67
    .line 68
    .line 69
    move v1, p4

    .line 70
    goto :goto_1

    .line 71
    :cond_0
    move v1, v5

    .line 72
    :goto_1
    iget-object v2, v0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mWritableContentUris:Landroid/util/ArraySet;

    .line 73
    .line 74
    new-instance v4, Lcom/android/server/uri/GrantUri;

    .line 75
    .line 76
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    .line 77
    .line 78
    .line 79
    move-result v6

    .line 80
    invoke-static {p5, v6}, Landroid/content/ContentProvider;->getUserIdFromUri(Landroid/net/Uri;I)I

    .line 81
    .line 82
    .line 83
    move-result v6

    .line 84
    invoke-static {p5}, Landroid/content/ContentProvider;->getUriWithoutUserId(Landroid/net/Uri;)Landroid/net/Uri;

    .line 85
    .line 86
    .line 87
    move-result-object v7

    .line 88
    const/4 v8, 0x2

    .line 89
    invoke-direct {v4, v6, v8, v7}, Lcom/android/server/uri/GrantUri;-><init>(IILandroid/net/Uri;)V

    .line 90
    .line 91
    .line 92
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 93
    .line 94
    check-cast v3, Lcom/android/server/uri/UriGrantsManagerService$LocalService;

    .line 95
    .line 96
    invoke-virtual {v3, v4, p3, v8, p4}, Lcom/android/server/uri/UriGrantsManagerService$LocalService;->checkUriPermission(Lcom/android/server/uri/GrantUri;IIZ)Z

    .line 97
    .line 98
    .line 99
    move-result v3

    .line 100
    if-eqz v3, :cond_1

    .line 101
    .line 102
    invoke-virtual {v2, v4}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 103
    .line 104
    .line 105
    move v2, p4

    .line 106
    goto :goto_2

    .line 107
    :cond_1
    move v2, v5

    .line 108
    :goto_2
    if-nez v1, :cond_2

    .line 109
    .line 110
    if-nez v2, :cond_2

    .line 111
    .line 112
    iget-object v1, v0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mInaccessibleContentUris:Landroid/util/ArraySet;

    .line 113
    .line 114
    new-instance v2, Lcom/android/server/uri/GrantUri;

    .line 115
    .line 116
    invoke-static {p3}, Landroid/os/UserHandle;->getUserId(I)I

    .line 117
    .line 118
    .line 119
    move-result v3

    .line 120
    invoke-static {p5, v3}, Landroid/content/ContentProvider;->getUserIdFromUri(Landroid/net/Uri;I)I

    .line 121
    .line 122
    .line 123
    move-result v3

    .line 124
    invoke-static {p5}, Landroid/content/ContentProvider;->getUriWithoutUserId(Landroid/net/Uri;)Landroid/net/Uri;

    .line 125
    .line 126
    .line 127
    move-result-object p5

    .line 128
    invoke-direct {v2, v3, v5, p5}, Lcom/android/server/uri/GrantUri;-><init>(IILandroid/net/Uri;)V

    .line 129
    .line 130
    .line 131
    invoke-virtual {v1, v2}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 132
    .line 133
    .line 134
    :cond_2
    add-int/lit8 p2, p2, -0x1

    .line 135
    .line 136
    goto :goto_0

    .line 137
    :cond_3
    return-void
.end method

.method public final computeConfigByResolveHint(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 4
    .line 5
    const/4 v2, 0x0

    .line 6
    invoke-virtual {v0, p1, p2, v1, v2}, Lcom/android/server/wm/TaskFragment;->computeConfigResourceOverrides(Landroid/content/res/Configuration;Landroid/content/res/Configuration;Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;)V

    .line 7
    .line 8
    .line 9
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 10
    .line 11
    iput-object v2, p0, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpCompatInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 12
    .line 13
    iput-object v2, p0, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpOverrideDisplayInfo:Landroid/view/DisplayInfo;

    .line 14
    .line 15
    return-void
.end method

.method public final containsDismissKeyguardWindow()Z
    .locals 4

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isRelaunching()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsDismissKeyguardWindow:Z

    .line 8
    .line 9
    return p0

    .line 10
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 11
    .line 12
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 13
    .line 14
    .line 15
    move-result v0

    .line 16
    const/4 v1, 0x1

    .line 17
    sub-int/2addr v0, v1

    .line 18
    :goto_0
    if-ltz v0, :cond_2

    .line 19
    .line 20
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 21
    .line 22
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object v2

    .line 26
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 27
    .line 28
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 29
    .line 30
    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 31
    .line 32
    const/high16 v3, 0x400000

    .line 33
    .line 34
    and-int/2addr v2, v3

    .line 35
    if-eqz v2, :cond_1

    .line 36
    .line 37
    return v1

    .line 38
    :cond_1
    add-int/lit8 v0, v0, -0x1

    .line 39
    .line 40
    goto :goto_0

    .line 41
    :cond_2
    const/4 p0, 0x0

    .line 42
    return p0
.end method

.method public final containsShowWhenLockedWindow()Z
    .locals 4

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isRelaunching()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsShowWhenLockedWindow:Z

    .line 8
    .line 9
    return p0

    .line 10
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 11
    .line 12
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 13
    .line 14
    .line 15
    move-result v0

    .line 16
    const/4 v1, 0x1

    .line 17
    sub-int/2addr v0, v1

    .line 18
    :goto_0
    if-ltz v0, :cond_3

    .line 19
    .line 20
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 21
    .line 22
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object v2

    .line 26
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 27
    .line 28
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 29
    .line 30
    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 31
    .line 32
    const/high16 v3, 0x80000

    .line 33
    .line 34
    and-int/2addr v2, v3

    .line 35
    if-eqz v2, :cond_2

    .line 36
    .line 37
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 38
    .line 39
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 40
    .line 41
    .line 42
    move-result v2

    .line 43
    if-le v2, v1, :cond_1

    .line 44
    .line 45
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 46
    .line 47
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    move-result-object v2

    .line 51
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 52
    .line 53
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 54
    .line 55
    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 56
    .line 57
    const/4 v3, 0x3

    .line 58
    if-eq v2, v3, :cond_2

    .line 59
    .line 60
    :cond_1
    return v1

    .line 61
    :cond_2
    add-int/lit8 v0, v0, -0x1

    .line 62
    .line 63
    goto :goto_0

    .line 64
    :cond_3
    const/4 p0, 0x0

    .line 65
    return p0
.end method

.method public final containsTurnScreenOnWindow()Z
    .locals 4

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isRelaunching()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mLastContainsTurnScreenOnWindow:Z

    .line 8
    .line 9
    return p0

    .line 10
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 11
    .line 12
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 13
    .line 14
    .line 15
    move-result v0

    .line 16
    const/4 v1, 0x1

    .line 17
    sub-int/2addr v0, v1

    .line 18
    :goto_0
    if-ltz v0, :cond_2

    .line 19
    .line 20
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 21
    .line 22
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object v2

    .line 26
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 27
    .line 28
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 29
    .line 30
    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 31
    .line 32
    const/high16 v3, 0x200000

    .line 33
    .line 34
    and-int/2addr v2, v3

    .line 35
    if-eqz v2, :cond_1

    .line 36
    .line 37
    return v1

    .line 38
    :cond_1
    add-int/lit8 v0, v0, -0x1

    .line 39
    .line 40
    goto :goto_0

    .line 41
    :cond_2
    const/4 p0, 0x0

    .line 42
    return p0
.end method

.method public final continueLaunchTicking()Z
    .locals 4

    .line 1
    iget-wide v0, p0, Lcom/android/server/wm/ActivityRecord;->launchTickTime:J

    .line 2
    .line 3
    const-wide/16 v2, 0x0

    .line 4
    .line 5
    cmp-long v0, v0, v2

    .line 6
    .line 7
    const/4 v1, 0x0

    .line 8
    if-nez v0, :cond_0

    .line 9
    .line 10
    return v1

    .line 11
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 12
    .line 13
    .line 14
    move-result-object v0

    .line 15
    if-nez v0, :cond_1

    .line 16
    .line 17
    return v1

    .line 18
    :cond_1
    new-instance v1, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6;

    .line 19
    .line 20
    const/4 v2, 0x5

    .line 21
    invoke-direct {v1, v2}, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6;-><init>(I)V

    .line 22
    .line 23
    .line 24
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Consumer;)V

    .line 25
    .line 26
    .line 27
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 28
    .line 29
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 30
    .line 31
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mLaunchTickRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 32
    .line 33
    const-wide/16 v1, 0x1f4

    .line 34
    .line 35
    invoke-virtual {v0, p0, v1, v2}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 36
    .line 37
    .line 38
    const/4 p0, 0x1

    .line 39
    return p0
.end method

.method public final createRemoteAnimationTarget(Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;)Landroid/view/RemoteAnimationTarget;
    .locals 25

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    const/4 v2, 0x1

    .line 6
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 7
    .line 8
    .line 9
    move-result-object v3

    .line 10
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 11
    .line 12
    const/4 v5, 0x0

    .line 13
    if-eqz v4, :cond_5

    .line 14
    .line 15
    if-nez v3, :cond_0

    .line 16
    .line 17
    goto/16 :goto_3

    .line 18
    .line 19
    :cond_0
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getInsetsStateWithVisibilityOverride()Landroid/view/InsetsState;

    .line 20
    .line 21
    .line 22
    move-result-object v3

    .line 23
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 24
    .line 25
    invoke-virtual {v4}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 26
    .line 27
    .line 28
    move-result-object v4

    .line 29
    invoke-static {}, Landroid/view/WindowInsets$Type;->systemBars()I

    .line 30
    .line 31
    .line 32
    move-result v6

    .line 33
    const/4 v7, 0x0

    .line 34
    invoke-virtual {v3, v4, v6, v7}, Landroid/view/InsetsState;->calculateInsets(Landroid/graphics/Rect;IZ)Landroid/graphics/Insets;

    .line 35
    .line 36
    .line 37
    move-result-object v3

    .line 38
    invoke-virtual {v3}, Landroid/graphics/Insets;->toRect()Landroid/graphics/Rect;

    .line 39
    .line 40
    .line 41
    move-result-object v14

    .line 42
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getLetterboxInsets()Landroid/graphics/Rect;

    .line 43
    .line 44
    .line 45
    move-result-object v3

    .line 46
    invoke-static {v14, v3}, Lcom/android/server/wm/utils/InsetUtils;->addInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 47
    .line 48
    .line 49
    new-instance v3, Landroid/view/RemoteAnimationTarget;

    .line 50
    .line 51
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 52
    .line 53
    iget v9, v4, Lcom/android/server/wm/Task;->mTaskId:I

    .line 54
    .line 55
    iget v10, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->mMode:I

    .line 56
    .line 57
    iget-object v4, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->mAdapter:Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;

    .line 58
    .line 59
    iget-object v11, v4, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;->mCapturedLeash:Landroid/view/SurfaceControl;

    .line 60
    .line 61
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecord;->occludesParent(Z)Z

    .line 62
    .line 63
    .line 64
    move-result v4

    .line 65
    xor-int/lit8 v12, v4, 0x1

    .line 66
    .line 67
    new-instance v13, Landroid/graphics/Rect;

    .line 68
    .line 69
    invoke-direct {v13}, Landroid/graphics/Rect;-><init>()V

    .line 70
    .line 71
    .line 72
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getPrefixOrderIndex()I

    .line 73
    .line 74
    .line 75
    move-result v15

    .line 76
    iget-object v4, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->mAdapter:Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;

    .line 77
    .line 78
    iget-object v6, v4, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;->mPosition:Landroid/graphics/Point;

    .line 79
    .line 80
    iget-object v8, v4, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;->mLocalBounds:Landroid/graphics/Rect;

    .line 81
    .line 82
    iget-object v4, v4, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;->mEndBounds:Landroid/graphics/Rect;

    .line 83
    .line 84
    iget-object v7, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 85
    .line 86
    invoke-virtual {v7}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 87
    .line 88
    .line 89
    move-result-object v19

    .line 90
    iget-object v7, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->mThumbnailAdapter:Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;

    .line 91
    .line 92
    if-eqz v7, :cond_1

    .line 93
    .line 94
    iget-object v5, v7, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationAdapterWrapper;->mCapturedLeash:Landroid/view/SurfaceControl;

    .line 95
    .line 96
    :cond_1
    move-object/from16 v21, v5

    .line 97
    .line 98
    iget-object v5, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->mStartBounds:Landroid/graphics/Rect;

    .line 99
    .line 100
    move-object/from16 v22, v5

    .line 101
    .line 102
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 103
    .line 104
    invoke-virtual {v5}, Lcom/android/server/wm/Task;->getTaskInfo()Landroid/app/ActivityManager$RunningTaskInfo;

    .line 105
    .line 106
    .line 107
    move-result-object v23

    .line 108
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->checkEnterPictureInPictureAppOpsState()Z

    .line 109
    .line 110
    .line 111
    move-result v24

    .line 112
    const/16 v20, 0x0

    .line 113
    .line 114
    move-object v5, v8

    .line 115
    move-object v8, v3

    .line 116
    move-object/from16 v16, v6

    .line 117
    .line 118
    move-object/from16 v17, v5

    .line 119
    .line 120
    move-object/from16 v18, v4

    .line 121
    .line 122
    invoke-direct/range {v8 .. v24}, Landroid/view/RemoteAnimationTarget;-><init>(IILandroid/view/SurfaceControl;ZLandroid/graphics/Rect;Landroid/graphics/Rect;ILandroid/graphics/Point;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/app/WindowConfiguration;ZLandroid/view/SurfaceControl;Landroid/graphics/Rect;Landroid/app/ActivityManager$RunningTaskInfo;Z)V

    .line 123
    .line 124
    .line 125
    iget-boolean v4, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->mShowBackdrop:Z

    .line 126
    .line 127
    invoke-virtual {v3, v4}, Landroid/view/RemoteAnimationTarget;->setShowBackdrop(Z)V

    .line 128
    .line 129
    .line 130
    iget-object v0, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 131
    .line 132
    if-eqz v0, :cond_2

    .line 133
    .line 134
    invoke-virtual {v0}, Lcom/android/server/wm/StartingData;->hasImeSurface()Z

    .line 135
    .line 136
    .line 137
    move-result v0

    .line 138
    if-eqz v0, :cond_2

    .line 139
    .line 140
    move v0, v2

    .line 141
    goto :goto_0

    .line 142
    :cond_2
    const/4 v0, 0x0

    .line 143
    :goto_0
    invoke-virtual {v3, v0}, Landroid/view/RemoteAnimationTarget;->setWillShowImeOnTarget(Z)V

    .line 144
    .line 145
    .line 146
    iget-object v0, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->this$0:Lcom/android/server/wm/RemoteAnimationController;

    .line 147
    .line 148
    iget-object v4, v0, Lcom/android/server/wm/RemoteAnimationController;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 149
    .line 150
    iget-object v4, v4, Lcom/android/server/wm/DisplayContent;->mChangingContainers:Landroid/util/ArraySet;

    .line 151
    .line 152
    invoke-virtual {v4}, Landroid/util/ArraySet;->size()I

    .line 153
    .line 154
    .line 155
    move-result v4

    .line 156
    sub-int/2addr v4, v2

    .line 157
    :goto_1
    if-ltz v4, :cond_4

    .line 158
    .line 159
    iget-object v5, v0, Lcom/android/server/wm/RemoteAnimationController;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 160
    .line 161
    iget-object v5, v5, Lcom/android/server/wm/DisplayContent;->mChangingContainers:Landroid/util/ArraySet;

    .line 162
    .line 163
    invoke-virtual {v5, v4}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 164
    .line 165
    .line 166
    move-result-object v5

    .line 167
    check-cast v5, Lcom/android/server/wm/WindowContainer;

    .line 168
    .line 169
    iget-object v6, v1, Lcom/android/server/wm/RemoteAnimationController$RemoteAnimationRecord;->mWindowContainer:Lcom/android/server/wm/WindowContainer;

    .line 170
    .line 171
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowContainer;->isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z

    .line 172
    .line 173
    .line 174
    move-result v5

    .line 175
    if-eqz v5, :cond_3

    .line 176
    .line 177
    goto :goto_2

    .line 178
    :cond_3
    add-int/lit8 v4, v4, -0x1

    .line 179
    .line 180
    goto :goto_1

    .line 181
    :cond_4
    const/4 v2, 0x0

    .line 182
    :goto_2
    iput-boolean v2, v3, Landroid/view/RemoteAnimationTarget;->hasAnimatingParent:Z

    .line 183
    .line 184
    return-object v3

    .line 185
    :cond_5
    :goto_3
    return-object v5
.end method

.method public final destroyIfPossible(Ljava/lang/String;)Z
    .locals 7

    .line 1
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->FINISHING:Lcom/android/server/wm/ActivityRecord$State;

    .line 2
    .line 3
    const-string v1, "destroyIfPossible"

    .line 4
    .line 5
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 6
    .line 7
    .line 8
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 9
    .line 10
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 11
    .line 12
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 13
    .line 14
    .line 15
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 16
    .line 17
    .line 18
    move-result-object v0

    .line 19
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 20
    .line 21
    .line 22
    move-result-object v1

    .line 23
    check-cast v1, Lcom/android/server/wm/TaskDisplayArea;

    .line 24
    .line 25
    sget-boolean v2, Lcom/samsung/android/rune/CoreRune;->SYSFW_APP_SPEG:Z

    .line 26
    .line 27
    if-eqz v2, :cond_1

    .line 28
    .line 29
    if-eqz v1, :cond_0

    .line 30
    .line 31
    if-nez v0, :cond_1

    .line 32
    .line 33
    :cond_0
    new-instance v2, Ljava/lang/StringBuilder;

    .line 34
    .line 35
    const-string v3, "Impossible to destroy activity: "

    .line 36
    .line 37
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 38
    .line 39
    .line 40
    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 41
    .line 42
    .line 43
    const-string v3, ", task is null"

    .line 44
    .line 45
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    .line 47
    .line 48
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 49
    .line 50
    .line 51
    move-result-object v2

    .line 52
    const-string v3, "SPEG"

    .line 53
    .line 54
    invoke-static {v3, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 55
    .line 56
    .line 57
    :cond_1
    const/4 v2, 0x0

    .line 58
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskDisplayArea;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 59
    .line 60
    .line 61
    move-result-object v3

    .line 62
    if-nez v3, :cond_2

    .line 63
    .line 64
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->isFocusedRootTaskOnDisplay()Z

    .line 65
    .line 66
    .line 67
    move-result v0

    .line 68
    if-eqz v0, :cond_2

    .line 69
    .line 70
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskDisplayArea;->getOrCreateRootHomeTask(Z)Lcom/android/server/wm/Task;

    .line 71
    .line 72
    .line 73
    move-result-object v0

    .line 74
    if-eqz v0, :cond_2

    .line 75
    .line 76
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 77
    .line 78
    .line 79
    move-result v0

    .line 80
    const/4 v1, 0x4

    .line 81
    if-eq v0, v1, :cond_2

    .line 82
    .line 83
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->addToFinishingAndWaitForIdle()Z

    .line 84
    .line 85
    .line 86
    return v2

    .line 87
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->makeFinishingLocked()V

    .line 88
    .line 89
    .line 90
    new-instance v0, Ljava/lang/StringBuilder;

    .line 91
    .line 92
    const-string v1, "finish-imm:"

    .line 93
    .line 94
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 95
    .line 96
    .line 97
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 98
    .line 99
    .line 100
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 101
    .line 102
    .line 103
    move-result-object p1

    .line 104
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->destroyImmediately(Ljava/lang/String;)Z

    .line 105
    .line 106
    .line 107
    move-result p1

    .line 108
    if-nez v3, :cond_3

    .line 109
    .line 110
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 111
    .line 112
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 113
    .line 114
    const/4 v3, 0x0

    .line 115
    const/4 v4, 0x1

    .line 116
    invoke-virtual {v0, v3, v1, v4}, Lcom/android/server/wm/RootWindowContainer;->ensureVisibilityAndConfig(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/DisplayContent;Z)V

    .line 117
    .line 118
    .line 119
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 120
    .line 121
    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContent;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 122
    .line 123
    .line 124
    move-result-object v0

    .line 125
    if-nez v0, :cond_3

    .line 126
    .line 127
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 128
    .line 129
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 130
    .line 131
    invoke-virtual {v0, v1, v4}, Lcom/android/server/wm/TransitionController;->setReady(Lcom/android/server/wm/WindowContainer;Z)V

    .line 132
    .line 133
    .line 134
    :cond_3
    if-eqz p1, :cond_4

    .line 135
    .line 136
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 137
    .line 138
    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->resumeFocusedTasksTopActivities()V

    .line 139
    .line 140
    .line 141
    :cond_4
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_CONTAINERS_enabled:[Z

    .line 142
    .line 143
    aget-boolean v0, v0, v2

    .line 144
    .line 145
    if-eqz v0, :cond_5

    .line 146
    .line 147
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 148
    .line 149
    .line 150
    move-result-object p0

    .line 151
    invoke-static {p1}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 152
    .line 153
    .line 154
    move-result-object v0

    .line 155
    sget-object v1, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONTAINERS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 156
    .line 157
    filled-new-array {p0, v0}, [Ljava/lang/Object;

    .line 158
    .line 159
    .line 160
    move-result-object v6

    .line 161
    const-wide v2, -0x297bcfd520cecc67L    # -5.926592467694985E108

    .line 162
    .line 163
    .line 164
    .line 165
    .line 166
    const/4 v4, 0x0

    .line 167
    const/4 v5, 0x0

    .line 168
    invoke-static/range {v1 .. v6}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 169
    .line 170
    .line 171
    :cond_5
    return p1
.end method

.method public final destroyImmediately(Ljava/lang/String;)Z
    .locals 11

    .line 1
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->DESTROYING:Lcom/android/server/wm/ActivityRecord$State;

    .line 2
    .line 3
    sget-object v1, Lcom/android/server/wm/ActivityRecord$State;->DESTROYED:Lcom/android/server/wm/ActivityRecord$State;

    .line 4
    .line 5
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 6
    .line 7
    .line 8
    move-result v2

    .line 9
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 10
    .line 11
    const/4 v4, 0x0

    .line 12
    const/4 v5, 0x1

    .line 13
    if-eqz v2, :cond_1

    .line 14
    .line 15
    aget-boolean v0, v3, v5

    .line 16
    .line 17
    if-eqz v0, :cond_0

    .line 18
    .line 19
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 20
    .line 21
    .line 22
    move-result-object p0

    .line 23
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 24
    .line 25
    .line 26
    move-result-object p1

    .line 27
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 28
    .line 29
    filled-new-array {p0, p1}, [Ljava/lang/Object;

    .line 30
    .line 31
    .line 32
    move-result-object v10

    .line 33
    const-wide v6, 0x7d99c1d7cadc3d4aL    # 1.0528206026161453E297

    .line 34
    .line 35
    .line 36
    .line 37
    .line 38
    const/4 v8, 0x0

    .line 39
    const/4 v9, 0x0

    .line 40
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 41
    .line 42
    .line 43
    :cond_0
    return v4

    .line 44
    :cond_1
    iget v2, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 45
    .line 46
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 47
    .line 48
    .line 49
    move-result v6

    .line 50
    iget-object v7, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 51
    .line 52
    iget v7, v7, Lcom/android/server/wm/Task;->mTaskId:I

    .line 53
    .line 54
    iget-object v8, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 55
    .line 56
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 57
    .line 58
    .line 59
    move-result-object v2

    .line 60
    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 61
    .line 62
    .line 63
    move-result-object v6

    .line 64
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 65
    .line 66
    .line 67
    move-result-object v7

    .line 68
    filled-new-array {v2, v6, v7, v8, p1}, [Ljava/lang/Object;

    .line 69
    .line 70
    .line 71
    move-result-object v2

    .line 72
    const/16 v6, 0x7542

    .line 73
    .line 74
    invoke-static {v6, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 75
    .line 76
    .line 77
    invoke-virtual {p0, v4, v4}, Lcom/android/server/wm/ActivityRecord;->cleanUp(ZZ)V

    .line 78
    .line 79
    .line 80
    invoke-virtual {p0, v4}, Lcom/android/server/wm/ActivityRecord;->setVisibleRequested(Z)Z

    .line 81
    .line 82
    .line 83
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasProcess()Z

    .line 84
    .line 85
    .line 86
    move-result v2

    .line 87
    if-eqz v2, :cond_7

    .line 88
    .line 89
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 90
    .line 91
    invoke-virtual {v2, v5, p0}, Lcom/android/server/wm/WindowProcessController;->removeActivity(ZLcom/android/server/wm/ActivityRecord;)V

    .line 92
    .line 93
    .line 94
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 95
    .line 96
    iget-boolean v2, v2, Lcom/android/server/wm/WindowProcessController;->mHasActivities:Z

    .line 97
    .line 98
    if-nez v2, :cond_2

    .line 99
    .line 100
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 101
    .line 102
    iget-object v6, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 103
    .line 104
    invoke-virtual {v2, v6}, Lcom/android/server/wm/ActivityTaskManagerService;->clearHeavyWeightProcessIfEquals(Lcom/android/server/wm/WindowProcessController;)V

    .line 105
    .line 106
    .line 107
    :cond_2
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 108
    .line 109
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 110
    .line 111
    iget-object v6, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 112
    .line 113
    iget-object v6, v6, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 114
    .line 115
    iget-object v7, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 116
    .line 117
    iget-boolean v8, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 118
    .line 119
    invoke-static {v7, v8}, Landroid/app/servertransaction/DestroyActivityItem;->obtain(Landroid/os/IBinder;Z)Landroid/app/servertransaction/DestroyActivityItem;

    .line 120
    .line 121
    .line 122
    move-result-object v7

    .line 123
    invoke-virtual {v2, v6, v7}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 124
    .line 125
    .line 126
    goto :goto_1

    .line 127
    :catch_0
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 128
    .line 129
    if-eqz v2, :cond_3

    .line 130
    .line 131
    new-instance v2, Ljava/lang/StringBuilder;

    .line 132
    .line 133
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 134
    .line 135
    .line 136
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 137
    .line 138
    .line 139
    const-string p1, " exceptionInScheduleDestroy"

    .line 140
    .line 141
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 142
    .line 143
    .line 144
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 145
    .line 146
    .line 147
    move-result-object p1

    .line 148
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->removeFromHistory(Ljava/lang/String;)V

    .line 149
    .line 150
    .line 151
    move p1, v5

    .line 152
    :goto_0
    move v2, p1

    .line 153
    goto :goto_2

    .line 154
    :cond_3
    :goto_1
    move p1, v4

    .line 155
    goto :goto_0

    .line 156
    :goto_2
    iput-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 157
    .line 158
    iget-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 159
    .line 160
    if-eqz v4, :cond_5

    .line 161
    .line 162
    if-nez p1, :cond_5

    .line 163
    .line 164
    aget-boolean p1, v3, v5

    .line 165
    .line 166
    if-eqz p1, :cond_4

    .line 167
    .line 168
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 169
    .line 170
    .line 171
    move-result-object p1

    .line 172
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 173
    .line 174
    filled-new-array {p1}, [Ljava/lang/Object;

    .line 175
    .line 176
    .line 177
    move-result-object v8

    .line 178
    const-wide v4, 0x4eb91e07a7b53ab7L    # 1.733532632468599E71

    .line 179
    .line 180
    .line 181
    .line 182
    .line 183
    const/4 v6, 0x0

    .line 184
    const/4 v7, 0x0

    .line 185
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 186
    .line 187
    .line 188
    :cond_4
    const-string p1, "destroyActivityLocked. finishing and not skipping destroy"

    .line 189
    .line 190
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 191
    .line 192
    .line 193
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 194
    .line 195
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 196
    .line 197
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mDestroyTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 198
    .line 199
    const-wide/16 v0, 0x2710

    .line 200
    .line 201
    invoke-virtual {p1, p0, v0, v1}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 202
    .line 203
    .line 204
    goto :goto_3

    .line 205
    :cond_5
    aget-boolean p1, v3, v5

    .line 206
    .line 207
    if-eqz p1, :cond_6

    .line 208
    .line 209
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 210
    .line 211
    .line 212
    move-result-object p1

    .line 213
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 214
    .line 215
    filled-new-array {p1}, [Ljava/lang/Object;

    .line 216
    .line 217
    .line 218
    move-result-object v8

    .line 219
    const-wide v4, -0x197518f30534c481L    # -9.14493571546782E185

    .line 220
    .line 221
    .line 222
    .line 223
    .line 224
    const/4 v6, 0x0

    .line 225
    const/4 v7, 0x0

    .line 226
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 227
    .line 228
    .line 229
    :cond_6
    const-string p1, "destroyActivityLocked. not finishing or skipping destroy"

    .line 230
    .line 231
    invoke-virtual {p0, v1, p1}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 232
    .line 233
    .line 234
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->detachFromProcess()V

    .line 235
    .line 236
    .line 237
    :goto_3
    move v4, v2

    .line 238
    goto :goto_4

    .line 239
    :cond_7
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 240
    .line 241
    if-eqz v0, :cond_8

    .line 242
    .line 243
    new-instance v0, Ljava/lang/StringBuilder;

    .line 244
    .line 245
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 246
    .line 247
    .line 248
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 249
    .line 250
    .line 251
    const-string p1, " hadNoApp"

    .line 252
    .line 253
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 254
    .line 255
    .line 256
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 257
    .line 258
    .line 259
    move-result-object p1

    .line 260
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->removeFromHistory(Ljava/lang/String;)V

    .line 261
    .line 262
    .line 263
    move v4, v5

    .line 264
    goto :goto_4

    .line 265
    :cond_8
    aget-boolean p1, v3, v5

    .line 266
    .line 267
    if-eqz p1, :cond_9

    .line 268
    .line 269
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 270
    .line 271
    .line 272
    move-result-object p1

    .line 273
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 274
    .line 275
    filled-new-array {p1}, [Ljava/lang/Object;

    .line 276
    .line 277
    .line 278
    move-result-object v10

    .line 279
    const-wide v6, 0x2d8c3b9664333f3dL    # 2.7719455001043972E-89

    .line 280
    .line 281
    .line 282
    .line 283
    .line 284
    const/4 v8, 0x0

    .line 285
    const/4 v9, 0x0

    .line 286
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 287
    .line 288
    .line 289
    :cond_9
    const-string p1, "destroyActivityLocked. not finishing and had no app"

    .line 290
    .line 291
    invoke-virtual {p0, v1, p1}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 292
    .line 293
    .line 294
    :goto_4
    return v4
.end method

.method public final destroySurfaces(Z)V
    .locals 6

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 4
    .line 5
    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 6
    .line 7
    .line 8
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 9
    .line 10
    .line 11
    move-result v1

    .line 12
    const/4 v2, 0x1

    .line 13
    sub-int/2addr v1, v2

    .line 14
    const/4 v3, 0x0

    .line 15
    :goto_0
    if-ltz v1, :cond_0

    .line 16
    .line 17
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 18
    .line 19
    .line 20
    move-result-object v4

    .line 21
    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 22
    .line 23
    iget-boolean v5, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 24
    .line 25
    invoke-virtual {v4, p1, v5}, Lcom/android/server/wm/WindowState;->destroySurface(ZZ)Z

    .line 26
    .line 27
    .line 28
    move-result v4

    .line 29
    or-int/2addr v3, v4

    .line 30
    add-int/lit8 v1, v1, -0x1

    .line 31
    .line 32
    goto :goto_0

    .line 33
    :cond_0
    if-eqz v3, :cond_1

    .line 34
    .line 35
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 36
    .line 37
    .line 38
    move-result-object p1

    .line 39
    invoke-virtual {p1, v2}, Lcom/android/server/wm/DisplayContent;->assignWindowLayers(Z)V

    .line 40
    .line 41
    .line 42
    const/4 p1, 0x0

    .line 43
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->updateLetterboxSurfaceIfNeeded(Lcom/android/server/wm/WindowState;)V

    .line 44
    .line 45
    .line 46
    :cond_1
    return-void
.end method

.method public final destroyed(Ljava/lang/String;)V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 4
    .line 5
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mDestroyTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 6
    .line 7
    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 8
    .line 9
    .line 10
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_CONTAINERS_enabled:[Z

    .line 11
    .line 12
    const/4 v1, 0x0

    .line 13
    aget-boolean v0, v0, v1

    .line 14
    .line 15
    if-eqz v0, :cond_0

    .line 16
    .line 17
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 18
    .line 19
    .line 20
    move-result-object v0

    .line 21
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONTAINERS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 22
    .line 23
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 24
    .line 25
    .line 26
    move-result-object v7

    .line 27
    const-wide v3, -0x6f0ba7649b4ccba8L    # -5.367906016571137E-227

    .line 28
    .line 29
    .line 30
    .line 31
    .line 32
    const/4 v5, 0x0

    .line 33
    const/4 v6, 0x0

    .line 34
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 35
    .line 36
    .line 37
    :cond_0
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->DESTROYING:Lcom/android/server/wm/ActivityRecord$State;

    .line 38
    .line 39
    sget-object v2, Lcom/android/server/wm/ActivityRecord$State;->DESTROYED:Lcom/android/server/wm/ActivityRecord$State;

    .line 40
    .line 41
    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 42
    .line 43
    .line 44
    move-result v0

    .line 45
    if-eqz v0, :cond_5

    .line 46
    .line 47
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 48
    .line 49
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 50
    .line 51
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 52
    .line 53
    .line 54
    const/4 v3, 0x1

    .line 55
    if-eqz v2, :cond_3

    .line 56
    .line 57
    iget-boolean v4, v2, Lcom/android/server/wm/Task;->mKillProcessesOnDestroyed:Z

    .line 58
    .line 59
    if-nez v4, :cond_1

    .line 60
    .line 61
    goto :goto_0

    .line 62
    :cond_1
    new-array v4, v3, [I

    .line 63
    .line 64
    new-instance v5, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6;

    .line 65
    .line 66
    const/4 v6, 0x1

    .line 67
    invoke-direct {v5, v6, v4}, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6;-><init>(ILjava/lang/Object;)V

    .line 68
    .line 69
    .line 70
    invoke-virtual {v2, v5}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Consumer;)V

    .line 71
    .line 72
    .line 73
    aget v4, v4, v1

    .line 74
    .line 75
    if-le v4, v3, :cond_2

    .line 76
    .line 77
    goto :goto_0

    .line 78
    :cond_2
    iget-object v4, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mHandler:Lcom/android/server/wm/ActivityTaskSupervisor$ActivityTaskSupervisorHandler;

    .line 79
    .line 80
    const/16 v5, 0xce

    .line 81
    .line 82
    invoke-virtual {v4, v5, v2}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 83
    .line 84
    .line 85
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityTaskSupervisor;->killTaskProcessesIfPossible(Lcom/android/server/wm/Task;)V

    .line 86
    .line 87
    .line 88
    :cond_3
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isInRootTaskLocked()Z

    .line 89
    .line 90
    .line 91
    move-result v0

    .line 92
    if-eqz v0, :cond_4

    .line 93
    .line 94
    invoke-virtual {p0, v3, v1}, Lcom/android/server/wm/ActivityRecord;->cleanUp(ZZ)V

    .line 95
    .line 96
    .line 97
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->removeFromHistory(Ljava/lang/String;)V

    .line 98
    .line 99
    .line 100
    :cond_4
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 101
    .line 102
    invoke-virtual {p0}, Lcom/android/server/wm/RootWindowContainer;->resumeFocusedTasksTopActivities()V

    .line 103
    .line 104
    .line 105
    return-void

    .line 106
    :cond_5
    new-instance p1, Ljava/lang/IllegalStateException;

    .line 107
    .line 108
    new-instance v0, Ljava/lang/StringBuilder;

    .line 109
    .line 110
    const-string v1, "Reported destroyed for activity that is not destroying: r="

    .line 111
    .line 112
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 113
    .line 114
    .line 115
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 116
    .line 117
    .line 118
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 119
    .line 120
    .line 121
    move-result-object p0

    .line 122
    invoke-direct {p1, p0}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 123
    .line 124
    .line 125
    throw p1
.end method

.method public final detachFromProcess()V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    const/4 v1, 0x0

    .line 6
    invoke-virtual {v0, v1, p0}, Lcom/android/server/wm/WindowProcessController;->removeActivity(ZLcom/android/server/wm/ActivityRecord;)V

    .line 7
    .line 8
    .line 9
    :cond_0
    const/4 v0, 0x0

    .line 10
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 11
    .line 12
    sget v0, Landroid/os/InputConstants;->DEFAULT_DISPATCHING_TIMEOUT_MILLIS:I

    .line 13
    .line 14
    int-to-long v0, v0

    .line 15
    iput-wide v0, p0, Lcom/android/server/wm/ActivityRecord;->mInputDispatchingTimeoutMillis:J

    .line 16
    .line 17
    return-void
.end method

.method public final dispatchConfigurationToChild(Lcom/android/server/wm/ConfigurationContainer;Landroid/content/res/Configuration;)V
    .locals 1

    .line 1
    check-cast p1, Lcom/android/server/wm/WindowState;

    .line 2
    .line 3
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isConfigurationDispatchPaused()Z

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    goto :goto_0

    .line 10
    :cond_0
    invoke-super {p0, p1, p2}, Lcom/android/server/wm/ConfigurationContainer;->dispatchConfigurationToChild(Lcom/android/server/wm/ConfigurationContainer;Landroid/content/res/Configuration;)V

    .line 11
    .line 12
    .line 13
    :goto_0
    return-void
.end method

.method public final dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V
    .locals 16
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    move-object/from16 v2, p2

    .line 6
    .line 7
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 8
    .line 9
    .line 10
    move-result-wide v3

    .line 11
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12
    .line 13
    .line 14
    const-string/jumbo v5, "packageName="

    .line 15
    .line 16
    .line 17
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 18
    .line 19
    .line 20
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 21
    .line 22
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 23
    .line 24
    .line 25
    const-string v5, " processName="

    .line 26
    .line 27
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 28
    .line 29
    .line 30
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->processName:Ljava/lang/String;

    .line 31
    .line 32
    const-string v6, "launchedFromUid="

    .line 33
    .line 34
    invoke-static {v1, v5, v2, v6}, Lcom/android/server/am/ProcessList$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 35
    .line 36
    .line 37
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->launchedFromUid:I

    .line 38
    .line 39
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(I)V

    .line 40
    .line 41
    .line 42
    const-string v5, " launchedFromPackage="

    .line 43
    .line 44
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 45
    .line 46
    .line 47
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    .line 48
    .line 49
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 50
    .line 51
    .line 52
    const-string v5, " launchedFromFeature="

    .line 53
    .line 54
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 55
    .line 56
    .line 57
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->launchedFromFeatureId:Ljava/lang/String;

    .line 58
    .line 59
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 60
    .line 61
    .line 62
    const-string v5, " userId="

    .line 63
    .line 64
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 65
    .line 66
    .line 67
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 68
    .line 69
    const-string v6, "app="

    .line 70
    .line 71
    invoke-static {v5, v1, v2, v6}, Lcom/android/server/am/BroadcastStats$$ExternalSyntheticOutline0;->m(ILjava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 72
    .line 73
    .line 74
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 75
    .line 76
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 77
    .line 78
    .line 79
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 80
    .line 81
    .line 82
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 83
    .line 84
    invoke-virtual {v5}, Landroid/content/Intent;->toInsecureString()Ljava/lang/String;

    .line 85
    .line 86
    .line 87
    move-result-object v5

    .line 88
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 89
    .line 90
    .line 91
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 92
    .line 93
    .line 94
    const-string/jumbo v5, "rootOfTask="

    .line 95
    .line 96
    .line 97
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 98
    .line 99
    .line 100
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isRootOfTask()Z

    .line 101
    .line 102
    .line 103
    move-result v5

    .line 104
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 105
    .line 106
    .line 107
    const-string v5, " task="

    .line 108
    .line 109
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 110
    .line 111
    .line 112
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 113
    .line 114
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 115
    .line 116
    .line 117
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 118
    .line 119
    .line 120
    const-string/jumbo v5, "taskAffinity="

    .line 121
    .line 122
    .line 123
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 124
    .line 125
    .line 126
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskAffinity:Ljava/lang/String;

    .line 127
    .line 128
    const-string v6, "mActivityComponent="

    .line 129
    .line 130
    invoke-static {v1, v5, v2, v6}, Lcom/android/server/am/ProcessList$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 131
    .line 132
    .line 133
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 134
    .line 135
    invoke-virtual {v5}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    .line 136
    .line 137
    .line 138
    move-result-object v5

    .line 139
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 140
    .line 141
    .line 142
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 143
    .line 144
    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 145
    .line 146
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 147
    .line 148
    .line 149
    const-string v6, "baseDir="

    .line 150
    .line 151
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 152
    .line 153
    .line 154
    iget-object v6, v5, Landroid/content/pm/ApplicationInfo;->sourceDir:Ljava/lang/String;

    .line 155
    .line 156
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 157
    .line 158
    .line 159
    iget-object v6, v5, Landroid/content/pm/ApplicationInfo;->sourceDir:Ljava/lang/String;

    .line 160
    .line 161
    iget-object v7, v5, Landroid/content/pm/ApplicationInfo;->publicSourceDir:Ljava/lang/String;

    .line 162
    .line 163
    invoke-static {v6, v7}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 164
    .line 165
    .line 166
    move-result v6

    .line 167
    if-nez v6, :cond_0

    .line 168
    .line 169
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 170
    .line 171
    .line 172
    const-string/jumbo v6, "resDir="

    .line 173
    .line 174
    .line 175
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 176
    .line 177
    .line 178
    iget-object v6, v5, Landroid/content/pm/ApplicationInfo;->publicSourceDir:Ljava/lang/String;

    .line 179
    .line 180
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 181
    .line 182
    .line 183
    :cond_0
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 184
    .line 185
    .line 186
    const-string v6, "dataDir="

    .line 187
    .line 188
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 189
    .line 190
    .line 191
    iget-object v6, v5, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    .line 192
    .line 193
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 194
    .line 195
    .line 196
    iget-object v6, v5, Landroid/content/pm/ApplicationInfo;->splitSourceDirs:[Ljava/lang/String;

    .line 197
    .line 198
    if-eqz v6, :cond_1

    .line 199
    .line 200
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 201
    .line 202
    .line 203
    const-string/jumbo v6, "splitDir="

    .line 204
    .line 205
    .line 206
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 207
    .line 208
    .line 209
    iget-object v6, v5, Landroid/content/pm/ApplicationInfo;->splitSourceDirs:[Ljava/lang/String;

    .line 210
    .line 211
    invoke-static {v6}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    .line 212
    .line 213
    .line 214
    move-result-object v6

    .line 215
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 216
    .line 217
    .line 218
    :cond_1
    iget-object v6, v5, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    .line 219
    .line 220
    if-eqz v6, :cond_2

    .line 221
    .line 222
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 223
    .line 224
    .line 225
    const-string v6, "appMetaData="

    .line 226
    .line 227
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 228
    .line 229
    .line 230
    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    .line 231
    .line 232
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 233
    .line 234
    .line 235
    :cond_2
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 236
    .line 237
    .line 238
    const-string/jumbo v5, "stateNotNeeded="

    .line 239
    .line 240
    .line 241
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 242
    .line 243
    .line 244
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->stateNotNeeded:Z

    .line 245
    .line 246
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 247
    .line 248
    .line 249
    const-string v5, " componentSpecified="

    .line 250
    .line 251
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 252
    .line 253
    .line 254
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->componentSpecified:Z

    .line 255
    .line 256
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 257
    .line 258
    .line 259
    const-string v5, " mActivityType="

    .line 260
    .line 261
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 262
    .line 263
    .line 264
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getActivityType()I

    .line 265
    .line 266
    .line 267
    move-result v5

    .line 268
    invoke-static {v5}, Landroid/app/WindowConfiguration;->activityTypeToString(I)Ljava/lang/String;

    .line 269
    .line 270
    .line 271
    move-result-object v5

    .line 272
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 273
    .line 274
    .line 275
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->rootVoiceInteraction:Z

    .line 276
    .line 277
    if-eqz v5, :cond_3

    .line 278
    .line 279
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 280
    .line 281
    .line 282
    const-string/jumbo v5, "rootVoiceInteraction="

    .line 283
    .line 284
    .line 285
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 286
    .line 287
    .line 288
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->rootVoiceInteraction:Z

    .line 289
    .line 290
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Z)V

    .line 291
    .line 292
    .line 293
    :cond_3
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 294
    .line 295
    .line 296
    const-string v5, "compat="

    .line 297
    .line 298
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 299
    .line 300
    .line 301
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 302
    .line 303
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 304
    .line 305
    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 306
    .line 307
    iget-object v5, v5, Lcom/android/server/wm/ActivityTaskManagerService;->mCompatModePackages:Lcom/android/server/wm/CompatModePackages;

    .line 308
    .line 309
    invoke-virtual {v5, v6}, Lcom/android/server/wm/CompatModePackages;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    .line 310
    .line 311
    .line 312
    move-result-object v5

    .line 313
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 314
    .line 315
    .line 316
    const-string v5, " theme=0x"

    .line 317
    .line 318
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 319
    .line 320
    .line 321
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->theme:I

    .line 322
    .line 323
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 324
    .line 325
    .line 326
    move-result-object v5

    .line 327
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 328
    .line 329
    .line 330
    new-instance v5, Ljava/lang/StringBuilder;

    .line 331
    .line 332
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 333
    .line 334
    .line 335
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 336
    .line 337
    .line 338
    const-string/jumbo v6, "mLastReportedConfigurations:"

    .line 339
    .line 340
    .line 341
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 342
    .line 343
    .line 344
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 345
    .line 346
    .line 347
    move-result-object v5

    .line 348
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 349
    .line 350
    .line 351
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 352
    .line 353
    new-instance v6, Ljava/lang/StringBuilder;

    .line 354
    .line 355
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 356
    .line 357
    .line 358
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 359
    .line 360
    .line 361
    const-string v7, "  "

    .line 362
    .line 363
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 364
    .line 365
    .line 366
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 367
    .line 368
    .line 369
    move-result-object v6

    .line 370
    invoke-virtual {v5, v1, v6}, Landroid/util/MergedConfiguration;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 371
    .line 372
    .line 373
    invoke-static {}, Lcom/android/window/flags/Flags;->activityWindowInfoFlag()Z

    .line 374
    .line 375
    .line 376
    move-result v5

    .line 377
    if-eqz v5, :cond_4

    .line 378
    .line 379
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 380
    .line 381
    .line 382
    const-string/jumbo v5, "mLastReportedActivityWindowInfo="

    .line 383
    .line 384
    .line 385
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 386
    .line 387
    .line 388
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mLastReportedActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 389
    .line 390
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 391
    .line 392
    .line 393
    :cond_4
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 394
    .line 395
    .line 396
    const-string v5, "CurrentConfiguration="

    .line 397
    .line 398
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 399
    .line 400
    .line 401
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 402
    .line 403
    .line 404
    move-result-object v5

    .line 405
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 406
    .line 407
    .line 408
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 409
    .line 410
    .line 411
    move-result-object v5

    .line 412
    sget-object v6, Landroid/content/res/Configuration;->EMPTY:Landroid/content/res/Configuration;

    .line 413
    .line 414
    invoke-virtual {v5, v6}, Landroid/content/res/Configuration;->equals(Landroid/content/res/Configuration;)Z

    .line 415
    .line 416
    .line 417
    move-result v5

    .line 418
    if-nez v5, :cond_5

    .line 419
    .line 420
    const-string v5, "RequestedOverrideConfiguration="

    .line 421
    .line 422
    invoke-static {v2, v5}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 423
    .line 424
    .line 425
    move-result-object v5

    .line 426
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 427
    .line 428
    .line 429
    move-result-object v6

    .line 430
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 431
    .line 432
    .line 433
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 434
    .line 435
    .line 436
    move-result-object v5

    .line 437
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 438
    .line 439
    .line 440
    :cond_5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 441
    .line 442
    .line 443
    move-result-object v5

    .line 444
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 445
    .line 446
    .line 447
    move-result-object v6

    .line 448
    invoke-virtual {v5, v6}, Landroid/content/res/Configuration;->equals(Landroid/content/res/Configuration;)Z

    .line 449
    .line 450
    .line 451
    move-result v5

    .line 452
    if-nez v5, :cond_6

    .line 453
    .line 454
    const-string v5, "ResolvedOverrideConfiguration="

    .line 455
    .line 456
    invoke-static {v2, v5}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 457
    .line 458
    .line 459
    move-result-object v5

    .line 460
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 461
    .line 462
    .line 463
    move-result-object v6

    .line 464
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 465
    .line 466
    .line 467
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 468
    .line 469
    .line 470
    move-result-object v5

    .line 471
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 472
    .line 473
    .line 474
    :cond_6
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->matchParentBounds()Z

    .line 475
    .line 476
    .line 477
    move-result v5

    .line 478
    if-nez v5, :cond_7

    .line 479
    .line 480
    const-string v5, "bounds="

    .line 481
    .line 482
    invoke-static {v2, v5}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 483
    .line 484
    .line 485
    move-result-object v5

    .line 486
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getBounds()Landroid/graphics/Rect;

    .line 487
    .line 488
    .line 489
    move-result-object v6

    .line 490
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 491
    .line 492
    .line 493
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 494
    .line 495
    .line 496
    move-result-object v5

    .line 497
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 498
    .line 499
    .line 500
    :cond_7
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 501
    .line 502
    if-nez v5, :cond_8

    .line 503
    .line 504
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->resultWho:Ljava/lang/String;

    .line 505
    .line 506
    if-eqz v5, :cond_9

    .line 507
    .line 508
    :cond_8
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 509
    .line 510
    .line 511
    const-string/jumbo v5, "resultTo="

    .line 512
    .line 513
    .line 514
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 515
    .line 516
    .line 517
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 518
    .line 519
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 520
    .line 521
    .line 522
    const-string v5, " resultWho="

    .line 523
    .line 524
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 525
    .line 526
    .line 527
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->resultWho:Ljava/lang/String;

    .line 528
    .line 529
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 530
    .line 531
    .line 532
    const-string v5, " resultCode="

    .line 533
    .line 534
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 535
    .line 536
    .line 537
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->requestCode:I

    .line 538
    .line 539
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(I)V

    .line 540
    .line 541
    .line 542
    :cond_9
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 543
    .line 544
    const-string/jumbo v6, "null"

    .line 545
    .line 546
    .line 547
    if-eqz v5, :cond_c

    .line 548
    .line 549
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getIconFilename()Ljava/lang/String;

    .line 550
    .line 551
    .line 552
    move-result-object v5

    .line 553
    if-nez v5, :cond_a

    .line 554
    .line 555
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 556
    .line 557
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getLabel()Ljava/lang/String;

    .line 558
    .line 559
    .line 560
    move-result-object v5

    .line 561
    if-nez v5, :cond_a

    .line 562
    .line 563
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 564
    .line 565
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getPrimaryColor()I

    .line 566
    .line 567
    .line 568
    move-result v5

    .line 569
    if-eqz v5, :cond_c

    .line 570
    .line 571
    :cond_a
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 572
    .line 573
    .line 574
    const-string/jumbo v5, "taskDescription:"

    .line 575
    .line 576
    .line 577
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 578
    .line 579
    .line 580
    const-string v5, " label=\""

    .line 581
    .line 582
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 583
    .line 584
    .line 585
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 586
    .line 587
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getLabel()Ljava/lang/String;

    .line 588
    .line 589
    .line 590
    move-result-object v5

    .line 591
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 592
    .line 593
    .line 594
    const-string v5, "\""

    .line 595
    .line 596
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 597
    .line 598
    .line 599
    const-string v5, " icon="

    .line 600
    .line 601
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 602
    .line 603
    .line 604
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 605
    .line 606
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getInMemoryIcon()Landroid/graphics/Bitmap;

    .line 607
    .line 608
    .line 609
    move-result-object v5

    .line 610
    if-eqz v5, :cond_b

    .line 611
    .line 612
    new-instance v5, Ljava/lang/StringBuilder;

    .line 613
    .line 614
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 615
    .line 616
    .line 617
    iget-object v7, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 618
    .line 619
    invoke-virtual {v7}, Landroid/app/ActivityManager$TaskDescription;->getInMemoryIcon()Landroid/graphics/Bitmap;

    .line 620
    .line 621
    .line 622
    move-result-object v7

    .line 623
    invoke-virtual {v7}, Landroid/graphics/Bitmap;->getByteCount()I

    .line 624
    .line 625
    .line 626
    move-result v7

    .line 627
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 628
    .line 629
    .line 630
    const-string v7, " bytes"

    .line 631
    .line 632
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 633
    .line 634
    .line 635
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 636
    .line 637
    .line 638
    move-result-object v5

    .line 639
    goto :goto_0

    .line 640
    :cond_b
    move-object v5, v6

    .line 641
    :goto_0
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 642
    .line 643
    .line 644
    const-string v5, " iconResource="

    .line 645
    .line 646
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 647
    .line 648
    .line 649
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 650
    .line 651
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getIconResourcePackage()Ljava/lang/String;

    .line 652
    .line 653
    .line 654
    move-result-object v5

    .line 655
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 656
    .line 657
    .line 658
    const-string v5, "/"

    .line 659
    .line 660
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 661
    .line 662
    .line 663
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 664
    .line 665
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getIconResource()I

    .line 666
    .line 667
    .line 668
    move-result v5

    .line 669
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(I)V

    .line 670
    .line 671
    .line 672
    const-string v5, " iconFilename="

    .line 673
    .line 674
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 675
    .line 676
    .line 677
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 678
    .line 679
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getIconFilename()Ljava/lang/String;

    .line 680
    .line 681
    .line 682
    move-result-object v5

    .line 683
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 684
    .line 685
    .line 686
    const-string v5, " primaryColor="

    .line 687
    .line 688
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 689
    .line 690
    .line 691
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 692
    .line 693
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getPrimaryColor()I

    .line 694
    .line 695
    .line 696
    move-result v5

    .line 697
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 698
    .line 699
    .line 700
    move-result-object v5

    .line 701
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 702
    .line 703
    .line 704
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 705
    .line 706
    .line 707
    const-string v5, "  backgroundColor="

    .line 708
    .line 709
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 710
    .line 711
    .line 712
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 713
    .line 714
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getBackgroundColor()I

    .line 715
    .line 716
    .line 717
    move-result v5

    .line 718
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 719
    .line 720
    .line 721
    move-result-object v5

    .line 722
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 723
    .line 724
    .line 725
    const-string v5, " statusBarColor="

    .line 726
    .line 727
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 728
    .line 729
    .line 730
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 731
    .line 732
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getStatusBarColor()I

    .line 733
    .line 734
    .line 735
    move-result v5

    .line 736
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 737
    .line 738
    .line 739
    move-result-object v5

    .line 740
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 741
    .line 742
    .line 743
    const-string v5, " navigationBarColor="

    .line 744
    .line 745
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 746
    .line 747
    .line 748
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 749
    .line 750
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getNavigationBarColor()I

    .line 751
    .line 752
    .line 753
    move-result v5

    .line 754
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 755
    .line 756
    .line 757
    move-result-object v5

    .line 758
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 759
    .line 760
    .line 761
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 762
    .line 763
    .line 764
    const-string v5, " backgroundColorFloating="

    .line 765
    .line 766
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 767
    .line 768
    .line 769
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 770
    .line 771
    invoke-virtual {v5}, Landroid/app/ActivityManager$TaskDescription;->getBackgroundColorFloating()I

    .line 772
    .line 773
    .line 774
    move-result v5

    .line 775
    invoke-static {v5}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 776
    .line 777
    .line 778
    move-result-object v5

    .line 779
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 780
    .line 781
    .line 782
    :cond_c
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 783
    .line 784
    if-eqz v5, :cond_d

    .line 785
    .line 786
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 787
    .line 788
    .line 789
    const-string/jumbo v5, "results="

    .line 790
    .line 791
    .line 792
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 793
    .line 794
    .line 795
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 796
    .line 797
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 798
    .line 799
    .line 800
    :cond_d
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 801
    .line 802
    const-string v7, "  - "

    .line 803
    .line 804
    if-eqz v5, :cond_10

    .line 805
    .line 806
    invoke-virtual {v5}, Ljava/util/HashSet;->size()I

    .line 807
    .line 808
    .line 809
    move-result v5

    .line 810
    if-lez v5, :cond_10

    .line 811
    .line 812
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 813
    .line 814
    .line 815
    const-string v5, "Pending Results:"

    .line 816
    .line 817
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 818
    .line 819
    .line 820
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 821
    .line 822
    invoke-virtual {v5}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    .line 823
    .line 824
    .line 825
    move-result-object v5

    .line 826
    :goto_1
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    .line 827
    .line 828
    .line 829
    move-result v8

    .line 830
    if-eqz v8, :cond_10

    .line 831
    .line 832
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 833
    .line 834
    .line 835
    move-result-object v8

    .line 836
    check-cast v8, Ljava/lang/ref/WeakReference;

    .line 837
    .line 838
    if-eqz v8, :cond_e

    .line 839
    .line 840
    invoke-virtual {v8}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    .line 841
    .line 842
    .line 843
    move-result-object v8

    .line 844
    check-cast v8, Lcom/android/server/am/PendingIntentRecord;

    .line 845
    .line 846
    goto :goto_2

    .line 847
    :cond_e
    const/4 v8, 0x0

    .line 848
    :goto_2
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 849
    .line 850
    .line 851
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 852
    .line 853
    .line 854
    if-nez v8, :cond_f

    .line 855
    .line 856
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 857
    .line 858
    .line 859
    goto :goto_1

    .line 860
    :cond_f
    invoke-virtual {v1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 861
    .line 862
    .line 863
    new-instance v9, Ljava/lang/StringBuilder;

    .line 864
    .line 865
    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    .line 866
    .line 867
    .line 868
    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 869
    .line 870
    .line 871
    const-string v10, "    "

    .line 872
    .line 873
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 874
    .line 875
    .line 876
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 877
    .line 878
    .line 879
    move-result-object v9

    .line 880
    invoke-virtual {v8, v1, v9}, Lcom/android/server/am/PendingIntentRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 881
    .line 882
    .line 883
    goto :goto_1

    .line 884
    :cond_10
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 885
    .line 886
    const/4 v8, 0x0

    .line 887
    const/4 v9, 0x1

    .line 888
    if-eqz v5, :cond_12

    .line 889
    .line 890
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 891
    .line 892
    .line 893
    move-result v5

    .line 894
    if-lez v5, :cond_12

    .line 895
    .line 896
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 897
    .line 898
    .line 899
    const-string v5, "Pending New Intents:"

    .line 900
    .line 901
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 902
    .line 903
    .line 904
    move v5, v8

    .line 905
    :goto_3
    iget-object v10, v0, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 906
    .line 907
    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    .line 908
    .line 909
    .line 910
    move-result v10

    .line 911
    if-ge v5, v10, :cond_12

    .line 912
    .line 913
    iget-object v10, v0, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 914
    .line 915
    invoke-virtual {v10, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 916
    .line 917
    .line 918
    move-result-object v10

    .line 919
    check-cast v10, Landroid/content/Intent;

    .line 920
    .line 921
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 922
    .line 923
    .line 924
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 925
    .line 926
    .line 927
    if-nez v10, :cond_11

    .line 928
    .line 929
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 930
    .line 931
    .line 932
    goto :goto_4

    .line 933
    :cond_11
    invoke-virtual {v10, v8, v9, v8, v8}, Landroid/content/Intent;->toShortString(ZZZZ)Ljava/lang/String;

    .line 934
    .line 935
    .line 936
    move-result-object v10

    .line 937
    invoke-virtual {v1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 938
    .line 939
    .line 940
    :goto_4
    add-int/lit8 v5, v5, 0x1

    .line 941
    .line 942
    goto :goto_3

    .line 943
    :cond_12
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 944
    .line 945
    if-eqz v5, :cond_13

    .line 946
    .line 947
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 948
    .line 949
    .line 950
    const-string/jumbo v5, "pendingOptions="

    .line 951
    .line 952
    .line 953
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 954
    .line 955
    .line 956
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 957
    .line 958
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 959
    .line 960
    .line 961
    :cond_13
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 962
    .line 963
    if-eqz v5, :cond_14

    .line 964
    .line 965
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 966
    .line 967
    .line 968
    const-string/jumbo v5, "returningOptions="

    .line 969
    .line 970
    .line 971
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 972
    .line 973
    .line 974
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 975
    .line 976
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 977
    .line 978
    .line 979
    :cond_14
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 980
    .line 981
    iget-object v6, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 982
    .line 983
    const-string v7, ","

    .line 984
    .line 985
    const-string v10, ")"

    .line 986
    .line 987
    if-nez v6, :cond_15

    .line 988
    .line 989
    goto/16 :goto_6

    .line 990
    .line 991
    :cond_15
    const-string v6, "PopOver="

    .line 992
    .line 993
    invoke-static {v2, v6}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 994
    .line 995
    .line 996
    move-result-object v6

    .line 997
    iget-boolean v11, v5, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 998
    .line 999
    const-string v12, " size=land("

    .line 1000
    .line 1001
    invoke-static {v6, v11, v1, v2, v12}, Lcom/android/server/media/MediaRouter2ServiceImpl$UserRecord$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1002
    .line 1003
    .line 1004
    move-result-object v6

    .line 1005
    iget-object v11, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1006
    .line 1007
    iget-object v11, v11, Landroid/app/ActivityOptions;->mPopOverWidthDp:[I

    .line 1008
    .line 1009
    aget v11, v11, v8

    .line 1010
    .line 1011
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1012
    .line 1013
    .line 1014
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1015
    .line 1016
    .line 1017
    iget-object v11, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1018
    .line 1019
    iget-object v11, v11, Landroid/app/ActivityOptions;->mPopOverHeightDp:[I

    .line 1020
    .line 1021
    aget v11, v11, v8

    .line 1022
    .line 1023
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1024
    .line 1025
    .line 1026
    const-string v11, ")/port("

    .line 1027
    .line 1028
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1029
    .line 1030
    .line 1031
    iget-object v12, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1032
    .line 1033
    iget-object v12, v12, Landroid/app/ActivityOptions;->mPopOverWidthDp:[I

    .line 1034
    .line 1035
    aget v12, v12, v9

    .line 1036
    .line 1037
    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1038
    .line 1039
    .line 1040
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1041
    .line 1042
    .line 1043
    iget-object v12, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1044
    .line 1045
    iget-object v12, v12, Landroid/app/ActivityOptions;->mPopOverHeightDp:[I

    .line 1046
    .line 1047
    aget v12, v12, v9

    .line 1048
    .line 1049
    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1050
    .line 1051
    .line 1052
    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1053
    .line 1054
    .line 1055
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1056
    .line 1057
    .line 1058
    move-result-object v6

    .line 1059
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1060
    .line 1061
    .line 1062
    new-instance v6, Ljava/lang/StringBuilder;

    .line 1063
    .line 1064
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 1065
    .line 1066
    .line 1067
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1068
    .line 1069
    .line 1070
    const-string v12, " margin=land("

    .line 1071
    .line 1072
    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1073
    .line 1074
    .line 1075
    iget-object v12, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1076
    .line 1077
    iget-object v12, v12, Landroid/app/ActivityOptions;->mPopOverAnchorMarginDp:[Landroid/graphics/Point;

    .line 1078
    .line 1079
    aget-object v12, v12, v8

    .line 1080
    .line 1081
    invoke-virtual {v6, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 1082
    .line 1083
    .line 1084
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1085
    .line 1086
    .line 1087
    iget-object v11, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1088
    .line 1089
    iget-object v11, v11, Landroid/app/ActivityOptions;->mPopOverAnchorMarginDp:[Landroid/graphics/Point;

    .line 1090
    .line 1091
    aget-object v11, v11, v9

    .line 1092
    .line 1093
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 1094
    .line 1095
    .line 1096
    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1097
    .line 1098
    .line 1099
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1100
    .line 1101
    .line 1102
    move-result-object v6

    .line 1103
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1104
    .line 1105
    .line 1106
    new-instance v6, Ljava/lang/StringBuilder;

    .line 1107
    .line 1108
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 1109
    .line 1110
    .line 1111
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1112
    .line 1113
    .line 1114
    const-string v11, " position=land(0x"

    .line 1115
    .line 1116
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1117
    .line 1118
    .line 1119
    iget-object v11, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1120
    .line 1121
    iget-object v11, v11, Landroid/app/ActivityOptions;->mPopOverAnchorPosition:[I

    .line 1122
    .line 1123
    aget v11, v11, v8

    .line 1124
    .line 1125
    const-string v12, ")/port(0x"

    .line 1126
    .line 1127
    invoke-static {v11, v6, v12}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(ILjava/lang/StringBuilder;Ljava/lang/String;)V

    .line 1128
    .line 1129
    .line 1130
    iget-object v11, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1131
    .line 1132
    iget-object v11, v11, Landroid/app/ActivityOptions;->mPopOverAnchorPosition:[I

    .line 1133
    .line 1134
    aget v11, v11, v9

    .line 1135
    .line 1136
    invoke-static {v11}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1137
    .line 1138
    .line 1139
    move-result-object v11

    .line 1140
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1141
    .line 1142
    .line 1143
    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1144
    .line 1145
    .line 1146
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1147
    .line 1148
    .line 1149
    move-result-object v6

    .line 1150
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1151
    .line 1152
    .line 1153
    iget-boolean v6, v5, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 1154
    .line 1155
    if-nez v6, :cond_16

    .line 1156
    .line 1157
    goto :goto_6

    .line 1158
    :cond_16
    const-string v6, " inherit="

    .line 1159
    .line 1160
    invoke-static {v2, v6}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1161
    .line 1162
    .line 1163
    move-result-object v6

    .line 1164
    iget-object v11, v5, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 1165
    .line 1166
    iget-boolean v11, v11, Landroid/app/ActivityOptions;->mPopOverInheritOptions:Z

    .line 1167
    .line 1168
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1169
    .line 1170
    .line 1171
    const-string v11, ", mLastOccludesParent="

    .line 1172
    .line 1173
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1174
    .line 1175
    .line 1176
    iget-boolean v11, v5, Lcom/android/server/wm/PopOverState;->mLastOccludesParent:Z

    .line 1177
    .line 1178
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1179
    .line 1180
    .line 1181
    const-string v11, ", isBelowAnotherOpaquePopOver="

    .line 1182
    .line 1183
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1184
    .line 1185
    .line 1186
    iget-object v11, v5, Lcom/android/server/wm/PopOverState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 1187
    .line 1188
    invoke-virtual {v11}, Lcom/android/server/wm/ActivityRecord;->getBounds()Landroid/graphics/Rect;

    .line 1189
    .line 1190
    .line 1191
    move-result-object v12

    .line 1192
    iget-object v13, v11, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 1193
    .line 1194
    if-eqz v13, :cond_17

    .line 1195
    .line 1196
    new-instance v14, Lcom/android/server/wm/PopOverState$$ExternalSyntheticLambda0;

    .line 1197
    .line 1198
    const/4 v15, 0x1

    .line 1199
    invoke-direct {v14, v15, v12}, Lcom/android/server/wm/PopOverState$$ExternalSyntheticLambda0;-><init>(ILjava/lang/Object;)V

    .line 1200
    .line 1201
    .line 1202
    invoke-virtual {v13, v14, v11, v8, v8}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;Lcom/android/server/wm/WindowContainer;ZZ)Lcom/android/server/wm/ActivityRecord;

    .line 1203
    .line 1204
    .line 1205
    move-result-object v11

    .line 1206
    if-eqz v11, :cond_17

    .line 1207
    .line 1208
    move v11, v9

    .line 1209
    goto :goto_5

    .line 1210
    :cond_17
    move v11, v8

    .line 1211
    :goto_5
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1212
    .line 1213
    .line 1214
    const-string v11, ", isAboveAnotherOpaquePopOver="

    .line 1215
    .line 1216
    invoke-virtual {v6, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1217
    .line 1218
    .line 1219
    invoke-virtual {v5}, Lcom/android/server/wm/PopOverState;->isAboveAnotherOpaquePopOver()Z

    .line 1220
    .line 1221
    .line 1222
    move-result v5

    .line 1223
    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1224
    .line 1225
    .line 1226
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1227
    .line 1228
    .line 1229
    move-result-object v5

    .line 1230
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1231
    .line 1232
    .line 1233
    :goto_6
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 1234
    .line 1235
    if-eqz v5, :cond_18

    .line 1236
    .line 1237
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1238
    .line 1239
    .line 1240
    const-string/jumbo v5, "pendingRemoteAnimationCallingPid="

    .line 1241
    .line 1242
    .line 1243
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1244
    .line 1245
    .line 1246
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 1247
    .line 1248
    invoke-virtual {v5}, Landroid/view/RemoteAnimationAdapter;->getCallingPid()I

    .line 1249
    .line 1250
    .line 1251
    move-result v5

    .line 1252
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(I)V

    .line 1253
    .line 1254
    .line 1255
    :cond_18
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteTransition:Landroid/window/RemoteTransition;

    .line 1256
    .line 1257
    if-eqz v5, :cond_19

    .line 1258
    .line 1259
    const-string v5, " pendingRemoteTransition="

    .line 1260
    .line 1261
    invoke-static {v2, v5}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1262
    .line 1263
    .line 1264
    move-result-object v5

    .line 1265
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteTransition:Landroid/window/RemoteTransition;

    .line 1266
    .line 1267
    invoke-virtual {v6}, Landroid/window/RemoteTransition;->getRemoteTransition()Landroid/window/IRemoteTransition;

    .line 1268
    .line 1269
    .line 1270
    move-result-object v6

    .line 1271
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 1272
    .line 1273
    .line 1274
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1275
    .line 1276
    .line 1277
    move-result-object v5

    .line 1278
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1279
    .line 1280
    .line 1281
    :cond_19
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->appTimeTracker:Lcom/android/server/am/AppTimeTracker;

    .line 1282
    .line 1283
    if-eqz v5, :cond_1a

    .line 1284
    .line 1285
    invoke-virtual {v5, v1, v2, v8}, Lcom/android/server/am/AppTimeTracker;->dumpWithHeader(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 1286
    .line 1287
    .line 1288
    :cond_1a
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 1289
    .line 1290
    if-eqz v5, :cond_1b

    .line 1291
    .line 1292
    invoke-virtual {v5, v1, v2}, Lcom/android/server/uri/UriPermissionOwner;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 1293
    .line 1294
    .line 1295
    :cond_1b
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1296
    .line 1297
    .line 1298
    const-string v5, "launchFailed="

    .line 1299
    .line 1300
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1301
    .line 1302
    .line 1303
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->launchFailed:Z

    .line 1304
    .line 1305
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1306
    .line 1307
    .line 1308
    const-string v5, " launchCount="

    .line 1309
    .line 1310
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1311
    .line 1312
    .line 1313
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->launchCount:I

    .line 1314
    .line 1315
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(I)V

    .line 1316
    .line 1317
    .line 1318
    const-string v5, " lastLaunchTime="

    .line 1319
    .line 1320
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1321
    .line 1322
    .line 1323
    iget-wide v5, v0, Lcom/android/server/wm/ActivityRecord;->lastLaunchTime:J

    .line 1324
    .line 1325
    const-wide/16 v11, 0x0

    .line 1326
    .line 1327
    cmp-long v13, v5, v11

    .line 1328
    .line 1329
    const-string v14, "0"

    .line 1330
    .line 1331
    if-nez v13, :cond_1c

    .line 1332
    .line 1333
    invoke-virtual {v1, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1334
    .line 1335
    .line 1336
    goto :goto_7

    .line 1337
    :cond_1c
    invoke-static {v5, v6, v3, v4, v1}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 1338
    .line 1339
    .line 1340
    :goto_7
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 1341
    .line 1342
    .line 1343
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchCookie:Landroid/os/IBinder;

    .line 1344
    .line 1345
    if-eqz v5, :cond_1d

    .line 1346
    .line 1347
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1348
    .line 1349
    .line 1350
    const-string v5, "launchCookie="

    .line 1351
    .line 1352
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1353
    .line 1354
    .line 1355
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchCookie:Landroid/os/IBinder;

    .line 1356
    .line 1357
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1358
    .line 1359
    .line 1360
    :cond_1d
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchRootTask:Landroid/window/WindowContainerToken;

    .line 1361
    .line 1362
    if-eqz v5, :cond_1e

    .line 1363
    .line 1364
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1365
    .line 1366
    .line 1367
    const-string/jumbo v5, "mLaunchRootTask="

    .line 1368
    .line 1369
    .line 1370
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1371
    .line 1372
    .line 1373
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchRootTask:Landroid/window/WindowContainerToken;

    .line 1374
    .line 1375
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1376
    .line 1377
    .line 1378
    :cond_1e
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1379
    .line 1380
    .line 1381
    const-string/jumbo v5, "mHaveState="

    .line 1382
    .line 1383
    .line 1384
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1385
    .line 1386
    .line 1387
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mHaveState:Z

    .line 1388
    .line 1389
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1390
    .line 1391
    .line 1392
    const-string v5, " mIcicle="

    .line 1393
    .line 1394
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1395
    .line 1396
    .line 1397
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mIcicle:Landroid/os/Bundle;

    .line 1398
    .line 1399
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1400
    .line 1401
    .line 1402
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1403
    .line 1404
    .line 1405
    const-string/jumbo v5, "state="

    .line 1406
    .line 1407
    .line 1408
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1409
    .line 1410
    .line 1411
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 1412
    .line 1413
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 1414
    .line 1415
    .line 1416
    const-string v5, " delayedResume="

    .line 1417
    .line 1418
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1419
    .line 1420
    .line 1421
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->delayedResume:Z

    .line 1422
    .line 1423
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1424
    .line 1425
    .line 1426
    const-string v5, " finishing="

    .line 1427
    .line 1428
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1429
    .line 1430
    .line 1431
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 1432
    .line 1433
    const-string v6, "keysPaused="

    .line 1434
    .line 1435
    invoke-static {v1, v2, v6, v5}, Lcom/android/server/am/AppBatteryTracker$AppBatteryPolicy$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Z)V

    .line 1436
    .line 1437
    .line 1438
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->keysPaused:Z

    .line 1439
    .line 1440
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1441
    .line 1442
    .line 1443
    const-string v5, " inHistory="

    .line 1444
    .line 1445
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1446
    .line 1447
    .line 1448
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->inHistory:Z

    .line 1449
    .line 1450
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1451
    .line 1452
    .line 1453
    const-string v5, " idle="

    .line 1454
    .line 1455
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1456
    .line 1457
    .line 1458
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->idle:Z

    .line 1459
    .line 1460
    const-string/jumbo v6, "occludesParent="

    .line 1461
    .line 1462
    .line 1463
    invoke-static {v1, v2, v6, v5}, Lcom/android/server/am/AppBatteryTracker$AppBatteryPolicy$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Z)V

    .line 1464
    .line 1465
    .line 1466
    invoke-virtual {v0, v8}, Lcom/android/server/wm/ActivityRecord;->occludesParent(Z)Z

    .line 1467
    .line 1468
    .line 1469
    move-result v5

    .line 1470
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1471
    .line 1472
    .line 1473
    const-string v5, " noDisplay="

    .line 1474
    .line 1475
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1476
    .line 1477
    .line 1478
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->noDisplay:Z

    .line 1479
    .line 1480
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1481
    .line 1482
    .line 1483
    const-string v5, " immersive="

    .line 1484
    .line 1485
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1486
    .line 1487
    .line 1488
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->immersive:Z

    .line 1489
    .line 1490
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1491
    .line 1492
    .line 1493
    const-string v5, " launchMode="

    .line 1494
    .line 1495
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1496
    .line 1497
    .line 1498
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->launchMode:I

    .line 1499
    .line 1500
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(I)V

    .line 1501
    .line 1502
    .line 1503
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1504
    .line 1505
    .line 1506
    const-string v5, "mActivityType="

    .line 1507
    .line 1508
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1509
    .line 1510
    .line 1511
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getActivityType()I

    .line 1512
    .line 1513
    .line 1514
    move-result v5

    .line 1515
    invoke-static {v5}, Landroid/app/WindowConfiguration;->activityTypeToString(I)Ljava/lang/String;

    .line 1516
    .line 1517
    .line 1518
    move-result-object v5

    .line 1519
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1520
    .line 1521
    .line 1522
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1523
    .line 1524
    .line 1525
    const-string/jumbo v5, "mImeInsetsFrozenUntilStartInput="

    .line 1526
    .line 1527
    .line 1528
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1529
    .line 1530
    .line 1531
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mImeInsetsFrozenUntilStartInput:Z

    .line 1532
    .line 1533
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Z)V

    .line 1534
    .line 1535
    .line 1536
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->requestedVrComponent:Landroid/content/ComponentName;

    .line 1537
    .line 1538
    if-eqz v5, :cond_1f

    .line 1539
    .line 1540
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1541
    .line 1542
    .line 1543
    const-string/jumbo v5, "requestedVrComponent="

    .line 1544
    .line 1545
    .line 1546
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1547
    .line 1548
    .line 1549
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->requestedVrComponent:Landroid/content/ComponentName;

    .line 1550
    .line 1551
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 1552
    .line 1553
    .line 1554
    :cond_1f
    invoke-super/range {p0 .. p3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 1555
    .line 1556
    .line 1557
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mVoiceInteraction:Z

    .line 1558
    .line 1559
    if-eqz v5, :cond_20

    .line 1560
    .line 1561
    const-string/jumbo v5, "mVoiceInteraction=true"

    .line 1562
    .line 1563
    .line 1564
    invoke-static {v1, v2, v5}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 1565
    .line 1566
    .line 1567
    :cond_20
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1568
    .line 1569
    .line 1570
    const-string/jumbo v5, "mOccludesParent="

    .line 1571
    .line 1572
    .line 1573
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1574
    .line 1575
    .line 1576
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    .line 1577
    .line 1578
    const-string/jumbo v6, "mStyleFillsParent="

    .line 1579
    .line 1580
    .line 1581
    invoke-static {v1, v2, v6, v5}, Lcom/android/server/am/AppBatteryTracker$AppBatteryPolicy$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Z)V

    .line 1582
    .line 1583
    .line 1584
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mStyleFillsParent:Z

    .line 1585
    .line 1586
    const-string/jumbo v6, "mStyleFloating="

    .line 1587
    .line 1588
    .line 1589
    invoke-static {v1, v2, v6, v5}, Lcom/android/server/am/AppBatteryTracker$AppBatteryPolicy$$ExternalSyntheticOutline0;->m(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Z)V

    .line 1590
    .line 1591
    .line 1592
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mStyleFloating:Z

    .line 1593
    .line 1594
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Z)V

    .line 1595
    .line 1596
    .line 1597
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1598
    .line 1599
    .line 1600
    const-string/jumbo v5, "overrideOrientation="

    .line 1601
    .line 1602
    .line 1603
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1604
    .line 1605
    .line 1606
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 1607
    .line 1608
    .line 1609
    move-result v5

    .line 1610
    invoke-static {v5}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 1611
    .line 1612
    .line 1613
    move-result-object v5

    .line 1614
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1615
    .line 1616
    .line 1617
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1618
    .line 1619
    .line 1620
    const-string/jumbo v5, "requestedOrientation="

    .line 1621
    .line 1622
    .line 1623
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1624
    .line 1625
    .line 1626
    invoke-super/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getOverrideOrientation()I

    .line 1627
    .line 1628
    .line 1629
    move-result v5

    .line 1630
    invoke-static {v5}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 1631
    .line 1632
    .line 1633
    move-result-object v5

    .line 1634
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1635
    .line 1636
    .line 1637
    new-instance v5, Ljava/lang/StringBuilder;

    .line 1638
    .line 1639
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 1640
    .line 1641
    .line 1642
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1643
    .line 1644
    .line 1645
    const-string/jumbo v6, "mVisibleRequested="

    .line 1646
    .line 1647
    .line 1648
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1649
    .line 1650
    .line 1651
    iget-boolean v6, v0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 1652
    .line 1653
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1654
    .line 1655
    .line 1656
    const-string v6, " mVisible="

    .line 1657
    .line 1658
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1659
    .line 1660
    .line 1661
    iget-boolean v6, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 1662
    .line 1663
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1664
    .line 1665
    .line 1666
    const-string v6, " mClientVisible="

    .line 1667
    .line 1668
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1669
    .line 1670
    .line 1671
    iget-boolean v6, v0, Lcom/android/server/wm/WindowToken;->mClientVisible:Z

    .line 1672
    .line 1673
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1674
    .line 1675
    .line 1676
    iget-boolean v6, v0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 1677
    .line 1678
    if-eqz v6, :cond_21

    .line 1679
    .line 1680
    new-instance v6, Ljava/lang/StringBuilder;

    .line 1681
    .line 1682
    const-string v8, " mDeferHidingClient="

    .line 1683
    .line 1684
    invoke-direct {v6, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1685
    .line 1686
    .line 1687
    iget-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 1688
    .line 1689
    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1690
    .line 1691
    .line 1692
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1693
    .line 1694
    .line 1695
    move-result-object v6

    .line 1696
    goto :goto_8

    .line 1697
    :cond_21
    const-string v6, ""

    .line 1698
    .line 1699
    :goto_8
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1700
    .line 1701
    .line 1702
    const-string v6, " reportedDrawn="

    .line 1703
    .line 1704
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1705
    .line 1706
    .line 1707
    iget-boolean v6, v0, Lcom/android/server/wm/ActivityRecord;->mReportedDrawn:Z

    .line 1708
    .line 1709
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1710
    .line 1711
    .line 1712
    const-string v6, " reportedVisible="

    .line 1713
    .line 1714
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1715
    .line 1716
    .line 1717
    iget-boolean v6, v0, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 1718
    .line 1719
    invoke-static {v5, v6, v1}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;)V

    .line 1720
    .line 1721
    .line 1722
    iget-boolean v5, v0, Lcom/android/server/wm/WindowToken;->paused:Z

    .line 1723
    .line 1724
    if-eqz v5, :cond_22

    .line 1725
    .line 1726
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1727
    .line 1728
    .line 1729
    const-string/jumbo v5, "paused="

    .line 1730
    .line 1731
    .line 1732
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1733
    .line 1734
    .line 1735
    iget-boolean v5, v0, Lcom/android/server/wm/WindowToken;->paused:Z

    .line 1736
    .line 1737
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Z)V

    .line 1738
    .line 1739
    .line 1740
    :cond_22
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 1741
    .line 1742
    if-eqz v5, :cond_23

    .line 1743
    .line 1744
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1745
    .line 1746
    .line 1747
    const-string v5, "mAppStopped="

    .line 1748
    .line 1749
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1750
    .line 1751
    .line 1752
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 1753
    .line 1754
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Z)V

    .line 1755
    .line 1756
    .line 1757
    :cond_23
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mNumInterestingWindows:I

    .line 1758
    .line 1759
    if-nez v5, :cond_24

    .line 1760
    .line 1761
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mNumDrawnWindows:I

    .line 1762
    .line 1763
    if-nez v5, :cond_24

    .line 1764
    .line 1765
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 1766
    .line 1767
    if-nez v5, :cond_24

    .line 1768
    .line 1769
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mLastAllDrawn:Z

    .line 1770
    .line 1771
    if-eqz v5, :cond_25

    .line 1772
    .line 1773
    :cond_24
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1774
    .line 1775
    .line 1776
    const-string/jumbo v5, "mNumInterestingWindows="

    .line 1777
    .line 1778
    .line 1779
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1780
    .line 1781
    .line 1782
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mNumInterestingWindows:I

    .line 1783
    .line 1784
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(I)V

    .line 1785
    .line 1786
    .line 1787
    const-string v5, " mNumDrawnWindows="

    .line 1788
    .line 1789
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1790
    .line 1791
    .line 1792
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mNumDrawnWindows:I

    .line 1793
    .line 1794
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(I)V

    .line 1795
    .line 1796
    .line 1797
    const-string v5, " allDrawn="

    .line 1798
    .line 1799
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1800
    .line 1801
    .line 1802
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 1803
    .line 1804
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1805
    .line 1806
    .line 1807
    const-string v5, " lastAllDrawn="

    .line 1808
    .line 1809
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1810
    .line 1811
    .line 1812
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mLastAllDrawn:Z

    .line 1813
    .line 1814
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1815
    .line 1816
    .line 1817
    invoke-virtual {v1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1818
    .line 1819
    .line 1820
    :cond_25
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 1821
    .line 1822
    if-nez v5, :cond_26

    .line 1823
    .line 1824
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 1825
    .line 1826
    if-nez v5, :cond_26

    .line 1827
    .line 1828
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mIsExiting:Z

    .line 1829
    .line 1830
    if-eqz v5, :cond_27

    .line 1831
    .line 1832
    :cond_26
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1833
    .line 1834
    .line 1835
    const-string/jumbo v5, "startingData="

    .line 1836
    .line 1837
    .line 1838
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1839
    .line 1840
    .line 1841
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 1842
    .line 1843
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 1844
    .line 1845
    .line 1846
    const-string v5, " firstWindowDrawn="

    .line 1847
    .line 1848
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1849
    .line 1850
    .line 1851
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 1852
    .line 1853
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1854
    .line 1855
    .line 1856
    const-string v5, " mIsExiting="

    .line 1857
    .line 1858
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1859
    .line 1860
    .line 1861
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mIsExiting:Z

    .line 1862
    .line 1863
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Z)V

    .line 1864
    .line 1865
    .line 1866
    :cond_27
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 1867
    .line 1868
    if-nez v5, :cond_28

    .line 1869
    .line 1870
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 1871
    .line 1872
    if-nez v5, :cond_28

    .line 1873
    .line 1874
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 1875
    .line 1876
    if-nez v5, :cond_28

    .line 1877
    .line 1878
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 1879
    .line 1880
    if-nez v5, :cond_28

    .line 1881
    .line 1882
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mVisibleSetFromTransferredStartingWindow:Z

    .line 1883
    .line 1884
    if-eqz v5, :cond_29

    .line 1885
    .line 1886
    :cond_28
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1887
    .line 1888
    .line 1889
    const-string/jumbo v5, "startingWindow="

    .line 1890
    .line 1891
    .line 1892
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1893
    .line 1894
    .line 1895
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 1896
    .line 1897
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 1898
    .line 1899
    .line 1900
    const-string v5, " startingSurface="

    .line 1901
    .line 1902
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1903
    .line 1904
    .line 1905
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 1906
    .line 1907
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 1908
    .line 1909
    .line 1910
    const-string v5, " startingDisplayed="

    .line 1911
    .line 1912
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1913
    .line 1914
    .line 1915
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isStartingWindowDisplayed()Z

    .line 1916
    .line 1917
    .line 1918
    move-result v5

    .line 1919
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1920
    .line 1921
    .line 1922
    const-string v5, " startingMoved="

    .line 1923
    .line 1924
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1925
    .line 1926
    .line 1927
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 1928
    .line 1929
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 1930
    .line 1931
    .line 1932
    new-instance v5, Ljava/lang/StringBuilder;

    .line 1933
    .line 1934
    const-string v6, " mVisibleSetFromTransferredStartingWindow="

    .line 1935
    .line 1936
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1937
    .line 1938
    .line 1939
    iget-boolean v6, v0, Lcom/android/server/wm/ActivityRecord;->mVisibleSetFromTransferredStartingWindow:Z

    .line 1940
    .line 1941
    invoke-static {v5, v6, v1}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;)V

    .line 1942
    .line 1943
    .line 1944
    :cond_29
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 1945
    .line 1946
    if-eqz v5, :cond_2a

    .line 1947
    .line 1948
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1949
    .line 1950
    .line 1951
    const-string/jumbo v5, "mPendingRelaunchCount="

    .line 1952
    .line 1953
    .line 1954
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1955
    .line 1956
    .line 1957
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 1958
    .line 1959
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(I)V

    .line 1960
    .line 1961
    .line 1962
    :cond_2a
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->mRemovingFromDisplay:Z

    .line 1963
    .line 1964
    if-eqz v5, :cond_2b

    .line 1965
    .line 1966
    const-string/jumbo v5, "mRemovingFromDisplay="

    .line 1967
    .line 1968
    .line 1969
    invoke-static {v2, v5}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1970
    .line 1971
    .line 1972
    move-result-object v5

    .line 1973
    iget-boolean v6, v0, Lcom/android/server/wm/ActivityRecord;->mRemovingFromDisplay:Z

    .line 1974
    .line 1975
    invoke-static {v5, v6, v1}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;)V

    .line 1976
    .line 1977
    .line 1978
    :cond_2b
    sget-boolean v5, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 1979
    .line 1980
    if-eqz v5, :cond_2c

    .line 1981
    .line 1982
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 1983
    .line 1984
    if-eqz v5, :cond_2c

    .line 1985
    .line 1986
    invoke-virtual {v5}, Lcom/android/server/wm/SizeCompatAttributes;->hasBounds()Z

    .line 1987
    .line 1988
    .line 1989
    move-result v5

    .line 1990
    if-eqz v5, :cond_2c

    .line 1991
    .line 1992
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 1993
    .line 1994
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1995
    .line 1996
    .line 1997
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 1998
    .line 1999
    .line 2000
    const-string v6, "SizeCompatAttributes: "

    .line 2001
    .line 2002
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2003
    .line 2004
    .line 2005
    new-instance v6, Ljava/lang/StringBuilder;

    .line 2006
    .line 2007
    const-string/jumbo v8, "mScale="

    .line 2008
    .line 2009
    .line 2010
    invoke-direct {v6, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2011
    .line 2012
    .line 2013
    iget v8, v5, Lcom/android/server/wm/SizeCompatAttributes;->mScale:F

    .line 2014
    .line 2015
    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2016
    .line 2017
    .line 2018
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2019
    .line 2020
    .line 2021
    move-result-object v6

    .line 2022
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2023
    .line 2024
    .line 2025
    const-string v6, ", mBounds="

    .line 2026
    .line 2027
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2028
    .line 2029
    .line 2030
    new-instance v6, Ljava/lang/StringBuilder;

    .line 2031
    .line 2032
    const-string v8, "("

    .line 2033
    .line 2034
    invoke-direct {v6, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2035
    .line 2036
    .line 2037
    iget-object v13, v5, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 2038
    .line 2039
    iget v13, v13, Landroid/graphics/Rect;->left:I

    .line 2040
    .line 2041
    invoke-virtual {v6, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2042
    .line 2043
    .line 2044
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2045
    .line 2046
    .line 2047
    iget-object v7, v5, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 2048
    .line 2049
    iget v7, v7, Landroid/graphics/Rect;->top:I

    .line 2050
    .line 2051
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2052
    .line 2053
    .line 2054
    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2055
    .line 2056
    .line 2057
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2058
    .line 2059
    .line 2060
    move-result-object v6

    .line 2061
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2062
    .line 2063
    .line 2064
    new-instance v6, Ljava/lang/StringBuilder;

    .line 2065
    .line 2066
    invoke-direct {v6, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2067
    .line 2068
    .line 2069
    iget-object v7, v5, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 2070
    .line 2071
    invoke-virtual {v7}, Landroid/graphics/Rect;->width()I

    .line 2072
    .line 2073
    .line 2074
    move-result v7

    .line 2075
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2076
    .line 2077
    .line 2078
    const-string/jumbo v7, "x"

    .line 2079
    .line 2080
    .line 2081
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2082
    .line 2083
    .line 2084
    iget-object v7, v5, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 2085
    .line 2086
    invoke-virtual {v7}, Landroid/graphics/Rect;->height()I

    .line 2087
    .line 2088
    .line 2089
    move-result v7

    .line 2090
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2091
    .line 2092
    .line 2093
    invoke-virtual {v6, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2094
    .line 2095
    .line 2096
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2097
    .line 2098
    .line 2099
    move-result-object v6

    .line 2100
    invoke-virtual {v1, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2101
    .line 2102
    .line 2103
    new-instance v6, Ljava/lang/StringBuilder;

    .line 2104
    .line 2105
    const-string v7, ", mReason="

    .line 2106
    .line 2107
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2108
    .line 2109
    .line 2110
    iget-object v5, v5, Lcom/android/server/wm/SizeCompatAttributes;->mReason:Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;

    .line 2111
    .line 2112
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 2113
    .line 2114
    .line 2115
    invoke-static {v9}, Lcom/samsung/android/core/SizeCompatInfo;->sizeCompatModeToString(I)Ljava/lang/String;

    .line 2116
    .line 2117
    .line 2118
    move-result-object v5

    .line 2119
    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2120
    .line 2121
    .line 2122
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2123
    .line 2124
    .line 2125
    move-result-object v5

    .line 2126
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2127
    .line 2128
    .line 2129
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 2130
    .line 2131
    .line 2132
    :cond_2c
    iget-wide v5, v0, Lcom/android/server/wm/ActivityRecord;->lastVisibleTime:J

    .line 2133
    .line 2134
    cmp-long v5, v5, v11

    .line 2135
    .line 2136
    if-nez v5, :cond_2d

    .line 2137
    .line 2138
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 2139
    .line 2140
    if-eqz v5, :cond_2f

    .line 2141
    .line 2142
    :cond_2d
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2143
    .line 2144
    .line 2145
    const-string/jumbo v5, "nowVisible="

    .line 2146
    .line 2147
    .line 2148
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2149
    .line 2150
    .line 2151
    iget-boolean v5, v0, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 2152
    .line 2153
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 2154
    .line 2155
    .line 2156
    const-string v5, " lastVisibleTime="

    .line 2157
    .line 2158
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2159
    .line 2160
    .line 2161
    iget-wide v5, v0, Lcom/android/server/wm/ActivityRecord;->lastVisibleTime:J

    .line 2162
    .line 2163
    cmp-long v7, v5, v11

    .line 2164
    .line 2165
    if-nez v7, :cond_2e

    .line 2166
    .line 2167
    invoke-virtual {v1, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2168
    .line 2169
    .line 2170
    goto :goto_9

    .line 2171
    :cond_2e
    invoke-static {v5, v6, v3, v4, v1}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 2172
    .line 2173
    .line 2174
    :goto_9
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 2175
    .line 2176
    .line 2177
    :cond_2f
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 2178
    .line 2179
    if-eqz v3, :cond_30

    .line 2180
    .line 2181
    const-string v3, "mDeferHidingClient="

    .line 2182
    .line 2183
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2184
    .line 2185
    .line 2186
    move-result-object v3

    .line 2187
    iget-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 2188
    .line 2189
    invoke-static {v3, v4, v1}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;)V

    .line 2190
    .line 2191
    .line 2192
    :cond_30
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    .line 2193
    .line 2194
    if-eqz v3, :cond_31

    .line 2195
    .line 2196
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2197
    .line 2198
    .line 2199
    const-string v3, "connections="

    .line 2200
    .line 2201
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2202
    .line 2203
    .line 2204
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mServiceConnectionsHolder:Lcom/android/server/wm/ActivityServiceConnectionsHolder;

    .line 2205
    .line 2206
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 2207
    .line 2208
    .line 2209
    :cond_31
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2210
    .line 2211
    if-eqz v3, :cond_3a

    .line 2212
    .line 2213
    const-string/jumbo v3, "resizeMode="

    .line 2214
    .line 2215
    .line 2216
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2217
    .line 2218
    .line 2219
    move-result-object v3

    .line 2220
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2221
    .line 2222
    iget v4, v4, Landroid/content/pm/ActivityInfo;->resizeMode:I

    .line 2223
    .line 2224
    invoke-static {v4}, Landroid/content/pm/ActivityInfo;->resizeModeToString(I)Ljava/lang/String;

    .line 2225
    .line 2226
    .line 2227
    move-result-object v4

    .line 2228
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2229
    .line 2230
    .line 2231
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2232
    .line 2233
    .line 2234
    move-result-object v3

    .line 2235
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2236
    .line 2237
    .line 2238
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2239
    .line 2240
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 2241
    .line 2242
    .line 2243
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2244
    .line 2245
    .line 2246
    const-string/jumbo v4, "mLastReportedMultiWindowMode="

    .line 2247
    .line 2248
    .line 2249
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2250
    .line 2251
    .line 2252
    iget-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mLastReportedMultiWindowMode:Z

    .line 2253
    .line 2254
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2255
    .line 2256
    .line 2257
    const-string v4, " mLastReportedPictureInPictureMode="

    .line 2258
    .line 2259
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2260
    .line 2261
    .line 2262
    iget-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mLastReportedPictureInPictureMode:Z

    .line 2263
    .line 2264
    invoke-static {v3, v4, v1}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;)V

    .line 2265
    .line 2266
    .line 2267
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2268
    .line 2269
    invoke-virtual {v3}, Landroid/content/pm/ActivityInfo;->supportsPictureInPicture()Z

    .line 2270
    .line 2271
    .line 2272
    move-result v3

    .line 2273
    if-eqz v3, :cond_32

    .line 2274
    .line 2275
    const-string/jumbo v3, "supportsPictureInPicture="

    .line 2276
    .line 2277
    .line 2278
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2279
    .line 2280
    .line 2281
    move-result-object v3

    .line 2282
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2283
    .line 2284
    invoke-virtual {v4}, Landroid/content/pm/ActivityInfo;->supportsPictureInPicture()Z

    .line 2285
    .line 2286
    .line 2287
    move-result v4

    .line 2288
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2289
    .line 2290
    .line 2291
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2292
    .line 2293
    .line 2294
    move-result-object v3

    .line 2295
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2296
    .line 2297
    .line 2298
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2299
    .line 2300
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 2301
    .line 2302
    .line 2303
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2304
    .line 2305
    .line 2306
    const-string/jumbo v4, "supportsEnterPipOnTaskSwitch: "

    .line 2307
    .line 2308
    .line 2309
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2310
    .line 2311
    .line 2312
    iget-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->supportsEnterPipOnTaskSwitch:Z

    .line 2313
    .line 2314
    const-string/jumbo v5, "mPauseSchedulePendingForPip="

    .line 2315
    .line 2316
    .line 2317
    invoke-static {v3, v4, v1, v2, v5}, Lcom/android/server/media/MediaRouter2ServiceImpl$UserRecord$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2318
    .line 2319
    .line 2320
    move-result-object v3

    .line 2321
    iget-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mPauseSchedulePendingForPip:Z

    .line 2322
    .line 2323
    const-string/jumbo v5, "supportPictureInPictureAppOps="

    .line 2324
    .line 2325
    .line 2326
    invoke-static {v3, v4, v1, v2, v5}, Lcom/android/server/media/MediaRouter2ServiceImpl$UserRecord$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2327
    .line 2328
    .line 2329
    move-result-object v3

    .line 2330
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->checkEnterPictureInPictureAppOpsState()Z

    .line 2331
    .line 2332
    .line 2333
    move-result v4

    .line 2334
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2335
    .line 2336
    .line 2337
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2338
    .line 2339
    .line 2340
    move-result-object v3

    .line 2341
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2342
    .line 2343
    .line 2344
    :cond_32
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getMaxAspectRatio()F

    .line 2345
    .line 2346
    .line 2347
    move-result v3

    .line 2348
    const/4 v4, 0x0

    .line 2349
    cmpl-float v3, v3, v4

    .line 2350
    .line 2351
    if-eqz v3, :cond_33

    .line 2352
    .line 2353
    const-string/jumbo v3, "maxAspectRatio="

    .line 2354
    .line 2355
    .line 2356
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2357
    .line 2358
    .line 2359
    move-result-object v3

    .line 2360
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getMaxAspectRatio()F

    .line 2361
    .line 2362
    .line 2363
    move-result v5

    .line 2364
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2365
    .line 2366
    .line 2367
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2368
    .line 2369
    .line 2370
    move-result-object v3

    .line 2371
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2372
    .line 2373
    .line 2374
    :cond_33
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getMinAspectRatio()F

    .line 2375
    .line 2376
    .line 2377
    move-result v3

    .line 2378
    cmpl-float v5, v3, v4

    .line 2379
    .line 2380
    if-eqz v5, :cond_34

    .line 2381
    .line 2382
    new-instance v5, Ljava/lang/StringBuilder;

    .line 2383
    .line 2384
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 2385
    .line 2386
    .line 2387
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2388
    .line 2389
    .line 2390
    const-string/jumbo v6, "minAspectRatio="

    .line 2391
    .line 2392
    .line 2393
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2394
    .line 2395
    .line 2396
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2397
    .line 2398
    .line 2399
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2400
    .line 2401
    .line 2402
    move-result-object v5

    .line 2403
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2404
    .line 2405
    .line 2406
    :cond_34
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2407
    .line 2408
    invoke-virtual {v5}, Landroid/content/pm/ActivityInfo;->getManifestMinAspectRatio()F

    .line 2409
    .line 2410
    .line 2411
    move-result v5

    .line 2412
    cmpl-float v3, v3, v5

    .line 2413
    .line 2414
    if-eqz v3, :cond_35

    .line 2415
    .line 2416
    const-string/jumbo v3, "manifestMinAspectRatio="

    .line 2417
    .line 2418
    .line 2419
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2420
    .line 2421
    .line 2422
    move-result-object v3

    .line 2423
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2424
    .line 2425
    invoke-virtual {v5}, Landroid/content/pm/ActivityInfo;->getManifestMinAspectRatio()F

    .line 2426
    .line 2427
    .line 2428
    move-result v5

    .line 2429
    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2430
    .line 2431
    .line 2432
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2433
    .line 2434
    .line 2435
    move-result-object v3

    .line 2436
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2437
    .line 2438
    .line 2439
    :cond_35
    sget-boolean v3, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ASPECT_RATIO_POLICY:Z

    .line 2440
    .line 2441
    if-eqz v3, :cond_36

    .line 2442
    .line 2443
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2444
    .line 2445
    iget-object v3, v3, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 2446
    .line 2447
    invoke-virtual {v3}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isUserOrSystemMinAspectRatioApplied()Z

    .line 2448
    .line 2449
    .line 2450
    move-result v3

    .line 2451
    if-eqz v3, :cond_36

    .line 2452
    .line 2453
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2454
    .line 2455
    iget-object v3, v3, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 2456
    .line 2457
    iget v3, v3, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mUserOrSystemMinAspectRatio:F

    .line 2458
    .line 2459
    cmpl-float v4, v3, v4

    .line 2460
    .line 2461
    if-eqz v4, :cond_36

    .line 2462
    .line 2463
    new-instance v4, Ljava/lang/StringBuilder;

    .line 2464
    .line 2465
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 2466
    .line 2467
    .line 2468
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2469
    .line 2470
    .line 2471
    const-string/jumbo v5, "userOrSystemMinAspectRatio="

    .line 2472
    .line 2473
    .line 2474
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2475
    .line 2476
    .line 2477
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2478
    .line 2479
    .line 2480
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2481
    .line 2482
    .line 2483
    move-result-object v3

    .line 2484
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2485
    .line 2486
    .line 2487
    :cond_36
    const-string/jumbo v3, "supportsSizeChanges="

    .line 2488
    .line 2489
    .line 2490
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2491
    .line 2492
    .line 2493
    move-result-object v3

    .line 2494
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->supportsSizeChanges()I

    .line 2495
    .line 2496
    .line 2497
    move-result v4

    .line 2498
    invoke-static {v4}, Landroid/content/pm/ActivityInfo;->sizeChangesSupportModeToString(I)Ljava/lang/String;

    .line 2499
    .line 2500
    .line 2501
    move-result-object v4

    .line 2502
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2503
    .line 2504
    .line 2505
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2506
    .line 2507
    .line 2508
    move-result-object v3

    .line 2509
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2510
    .line 2511
    .line 2512
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2513
    .line 2514
    iget v3, v3, Landroid/content/pm/ActivityInfo;->configChanges:I

    .line 2515
    .line 2516
    if-eqz v3, :cond_37

    .line 2517
    .line 2518
    const-string v3, "configChanges=0x"

    .line 2519
    .line 2520
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2521
    .line 2522
    .line 2523
    move-result-object v3

    .line 2524
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2525
    .line 2526
    iget v4, v4, Landroid/content/pm/ActivityInfo;->configChanges:I

    .line 2527
    .line 2528
    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 2529
    .line 2530
    .line 2531
    move-result-object v4

    .line 2532
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2533
    .line 2534
    .line 2535
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2536
    .line 2537
    .line 2538
    move-result-object v3

    .line 2539
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2540
    .line 2541
    .line 2542
    :cond_37
    const-string/jumbo v3, "neverSandboxDisplayApis="

    .line 2543
    .line 2544
    .line 2545
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2546
    .line 2547
    .line 2548
    move-result-object v3

    .line 2549
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2550
    .line 2551
    sget-object v5, Lcom/android/server/wm/ActivityRecord;->sConstrainDisplayApisConfig:Landroid/content/pm/ConstrainDisplayApisConfig;

    .line 2552
    .line 2553
    invoke-virtual {v4, v5}, Landroid/content/pm/ActivityInfo;->neverSandboxDisplayApis(Landroid/content/pm/ConstrainDisplayApisConfig;)Z

    .line 2554
    .line 2555
    .line 2556
    move-result v4

    .line 2557
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2558
    .line 2559
    .line 2560
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2561
    .line 2562
    .line 2563
    move-result-object v3

    .line 2564
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2565
    .line 2566
    .line 2567
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2568
    .line 2569
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 2570
    .line 2571
    .line 2572
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2573
    .line 2574
    .line 2575
    const-string v4, "alwaysSandboxDisplayApis="

    .line 2576
    .line 2577
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2578
    .line 2579
    .line 2580
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2581
    .line 2582
    sget-object v5, Lcom/android/server/wm/ActivityRecord;->sConstrainDisplayApisConfig:Landroid/content/pm/ConstrainDisplayApisConfig;

    .line 2583
    .line 2584
    invoke-virtual {v4, v5}, Landroid/content/pm/ActivityInfo;->alwaysSandboxDisplayApis(Landroid/content/pm/ConstrainDisplayApisConfig;)Z

    .line 2585
    .line 2586
    .line 2587
    move-result v4

    .line 2588
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2589
    .line 2590
    .line 2591
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2592
    .line 2593
    .line 2594
    move-result-object v3

    .line 2595
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2596
    .line 2597
    .line 2598
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mIgnoreDevSettingForNonResizable:Z

    .line 2599
    .line 2600
    if-eqz v3, :cond_38

    .line 2601
    .line 2602
    const-string/jumbo v3, "mIgnoreDevSettingForNonResizable=true"

    .line 2603
    .line 2604
    .line 2605
    invoke-static {v1, v2, v3}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 2606
    .line 2607
    .line 2608
    :cond_38
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mIsAllowedSeamlessRotation:Z

    .line 2609
    .line 2610
    if-eqz v3, :cond_39

    .line 2611
    .line 2612
    const-string/jumbo v3, "mIsAllowedSeamlessRotation=true"

    .line 2613
    .line 2614
    .line 2615
    invoke-static {v1, v2, v3}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 2616
    .line 2617
    .line 2618
    :cond_39
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2619
    .line 2620
    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    .line 2621
    .line 2622
    if-eqz v3, :cond_3a

    .line 2623
    .line 2624
    const-string v3, "activityMetaData="

    .line 2625
    .line 2626
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2627
    .line 2628
    .line 2629
    move-result-object v3

    .line 2630
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2631
    .line 2632
    iget-object v4, v4, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    .line 2633
    .line 2634
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 2635
    .line 2636
    .line 2637
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2638
    .line 2639
    .line 2640
    move-result-object v3

    .line 2641
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2642
    .line 2643
    .line 2644
    :cond_3a
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mLastParentBeforePip:Lcom/android/server/wm/Task;

    .line 2645
    .line 2646
    if-eqz v3, :cond_3b

    .line 2647
    .line 2648
    const-string v3, "lastParentTaskIdBeforePip="

    .line 2649
    .line 2650
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2651
    .line 2652
    .line 2653
    move-result-object v3

    .line 2654
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mLastParentBeforePip:Lcom/android/server/wm/Task;

    .line 2655
    .line 2656
    iget v4, v4, Lcom/android/server/wm/Task;->mTaskId:I

    .line 2657
    .line 2658
    invoke-static {v3, v4, v1}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/io/PrintWriter;)V

    .line 2659
    .line 2660
    .line 2661
    :cond_3b
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchIntoPipHostActivity:Lcom/android/server/wm/ActivityRecord;

    .line 2662
    .line 2663
    if-eqz v3, :cond_3c

    .line 2664
    .line 2665
    const-string v3, "launchIntoPipHostActivity="

    .line 2666
    .line 2667
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2668
    .line 2669
    .line 2670
    move-result-object v3

    .line 2671
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchIntoPipHostActivity:Lcom/android/server/wm/ActivityRecord;

    .line 2672
    .line 2673
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 2674
    .line 2675
    .line 2676
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2677
    .line 2678
    .line 2679
    move-result-object v3

    .line 2680
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2681
    .line 2682
    .line 2683
    :cond_3c
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 2684
    .line 2685
    const-string/jumbo v4, "mWaitForEnteringPinnedMode=true"

    .line 2686
    .line 2687
    .line 2688
    if-eqz v3, :cond_3d

    .line 2689
    .line 2690
    invoke-virtual/range {p1 .. p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2691
    .line 2692
    .line 2693
    invoke-virtual {v1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2694
    .line 2695
    .line 2696
    :cond_3d
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2697
    .line 2698
    iget-object v5, v3, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 2699
    .line 2700
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 2701
    .line 2702
    .line 2703
    new-instance v6, Ljava/lang/StringBuilder;

    .line 2704
    .line 2705
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 2706
    .line 2707
    .line 2708
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2709
    .line 2710
    .line 2711
    const-string v7, "isTransparentPolicyRunning="

    .line 2712
    .line 2713
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2714
    .line 2715
    .line 2716
    iget-object v5, v5, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 2717
    .line 2718
    invoke-virtual {v5}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->isRunning()Z

    .line 2719
    .line 2720
    .line 2721
    move-result v5

    .line 2722
    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2723
    .line 2724
    .line 2725
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2726
    .line 2727
    .line 2728
    move-result-object v5

    .line 2729
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2730
    .line 2731
    .line 2732
    iget-object v5, v3, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 2733
    .line 2734
    iget-object v6, v5, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2735
    .line 2736
    const/4 v7, 0x1

    .line 2737
    invoke-virtual {v6, v7}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 2738
    .line 2739
    .line 2740
    move-result-object v8

    .line 2741
    if-nez v8, :cond_3e

    .line 2742
    .line 2743
    goto/16 :goto_c

    .line 2744
    .line 2745
    :cond_3e
    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->areAppWindowBoundsLetterboxed()Z

    .line 2746
    .line 2747
    .line 2748
    move-result v9

    .line 2749
    new-instance v10, Ljava/lang/StringBuilder;

    .line 2750
    .line 2751
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    .line 2752
    .line 2753
    .line 2754
    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2755
    .line 2756
    .line 2757
    const-string v11, "areBoundsLetterboxed="

    .line 2758
    .line 2759
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2760
    .line 2761
    .line 2762
    invoke-virtual {v10, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2763
    .line 2764
    .line 2765
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2766
    .line 2767
    .line 2768
    move-result-object v10

    .line 2769
    invoke-virtual {v1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2770
    .line 2771
    .line 2772
    new-instance v10, Ljava/lang/StringBuilder;

    .line 2773
    .line 2774
    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    .line 2775
    .line 2776
    .line 2777
    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2778
    .line 2779
    .line 2780
    const-string v11, "isLetterboxRunning="

    .line 2781
    .line 2782
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2783
    .line 2784
    .line 2785
    iget-object v11, v5, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 2786
    .line 2787
    invoke-virtual {v11}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->isRunning()Z

    .line 2788
    .line 2789
    .line 2790
    move-result v11

    .line 2791
    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2792
    .line 2793
    .line 2794
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2795
    .line 2796
    .line 2797
    move-result-object v10

    .line 2798
    invoke-virtual {v1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2799
    .line 2800
    .line 2801
    if-nez v9, :cond_3f

    .line 2802
    .line 2803
    goto/16 :goto_c

    .line 2804
    .line 2805
    :cond_3f
    const-string v9, "  letterboxReason="

    .line 2806
    .line 2807
    invoke-static {v2, v9}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2808
    .line 2809
    .line 2810
    move-result-object v9

    .line 2811
    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->inSizeCompatMode()Z

    .line 2812
    .line 2813
    .line 2814
    move-result v10

    .line 2815
    if-eqz v10, :cond_40

    .line 2816
    .line 2817
    const-string v10, "SIZE_COMPAT_MODE"

    .line 2818
    .line 2819
    goto :goto_a

    .line 2820
    :cond_40
    iget-object v10, v6, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2821
    .line 2822
    iget-object v10, v10, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 2823
    .line 2824
    invoke-virtual {v10}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isLetterboxedForFixedOrientationAndAspectRatio()Z

    .line 2825
    .line 2826
    .line 2827
    move-result v11

    .line 2828
    if-eqz v11, :cond_41

    .line 2829
    .line 2830
    const-string v10, "FIXED_ORIENTATION"

    .line 2831
    .line 2832
    goto :goto_a

    .line 2833
    :cond_41
    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->isLetterboxedForDisplayCutout()Z

    .line 2834
    .line 2835
    .line 2836
    move-result v11

    .line 2837
    if-eqz v11, :cond_42

    .line 2838
    .line 2839
    const-string v10, "DISPLAY_CUTOUT"

    .line 2840
    .line 2841
    goto :goto_a

    .line 2842
    :cond_42
    iget-object v10, v10, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 2843
    .line 2844
    iget-object v10, v10, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mLetterboxBoundsForAspectRatio:Landroid/graphics/Rect;

    .line 2845
    .line 2846
    if-eqz v10, :cond_43

    .line 2847
    .line 2848
    const-string v10, "ASPECT_RATIO"

    .line 2849
    .line 2850
    goto :goto_a

    .line 2851
    :cond_43
    const-string v10, "UNKNOWN_REASON"

    .line 2852
    .line 2853
    :goto_a
    invoke-static {v9, v10, v1}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 2854
    .line 2855
    .line 2856
    iget-object v9, v6, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2857
    .line 2858
    iget-object v9, v9, Lcom/android/server/wm/AppCompatController;->mAppCompatReachabilityPolicy:Lcom/android/server/wm/AppCompatReachabilityPolicy;

    .line 2859
    .line 2860
    iget-object v9, v9, Lcom/android/server/wm/AppCompatReachabilityPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2861
    .line 2862
    iget-object v10, v9, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2863
    .line 2864
    iget-object v10, v10, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 2865
    .line 2866
    iget-object v10, v10, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatReachabilityOverrides:Lcom/android/server/wm/AppCompatReachabilityOverrides;

    .line 2867
    .line 2868
    const-string v11, "  isVerticalThinLetterboxed="

    .line 2869
    .line 2870
    invoke-static {v2, v11}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2871
    .line 2872
    .line 2873
    move-result-object v11

    .line 2874
    invoke-virtual {v10}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->isVerticalThinLetterboxed()Z

    .line 2875
    .line 2876
    .line 2877
    move-result v12

    .line 2878
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2879
    .line 2880
    .line 2881
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2882
    .line 2883
    .line 2884
    move-result-object v11

    .line 2885
    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2886
    .line 2887
    .line 2888
    new-instance v11, Ljava/lang/StringBuilder;

    .line 2889
    .line 2890
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    .line 2891
    .line 2892
    .line 2893
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2894
    .line 2895
    .line 2896
    const-string v12, "  isHorizontalThinLetterboxed="

    .line 2897
    .line 2898
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2899
    .line 2900
    .line 2901
    invoke-virtual {v10}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->isHorizontalThinLetterboxed()Z

    .line 2902
    .line 2903
    .line 2904
    move-result v12

    .line 2905
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2906
    .line 2907
    .line 2908
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2909
    .line 2910
    .line 2911
    move-result-object v11

    .line 2912
    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2913
    .line 2914
    .line 2915
    new-instance v11, Ljava/lang/StringBuilder;

    .line 2916
    .line 2917
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    .line 2918
    .line 2919
    .line 2920
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2921
    .line 2922
    .line 2923
    const-string v12, "  isHorizontalReachabilityEnabled="

    .line 2924
    .line 2925
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2926
    .line 2927
    .line 2928
    iget-object v12, v10, Lcom/android/server/wm/AppCompatReachabilityOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2929
    .line 2930
    invoke-virtual {v12}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 2931
    .line 2932
    .line 2933
    move-result-object v12

    .line 2934
    invoke-virtual {v12}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 2935
    .line 2936
    .line 2937
    move-result-object v12

    .line 2938
    invoke-virtual {v10, v12}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->isHorizontalReachabilityEnabled(Landroid/content/res/Configuration;)Z

    .line 2939
    .line 2940
    .line 2941
    move-result v12

    .line 2942
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2943
    .line 2944
    .line 2945
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2946
    .line 2947
    .line 2948
    move-result-object v11

    .line 2949
    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2950
    .line 2951
    .line 2952
    new-instance v11, Ljava/lang/StringBuilder;

    .line 2953
    .line 2954
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    .line 2955
    .line 2956
    .line 2957
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2958
    .line 2959
    .line 2960
    const-string v12, "  isVerticalReachabilityEnabled="

    .line 2961
    .line 2962
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2963
    .line 2964
    .line 2965
    iget-object v12, v10, Lcom/android/server/wm/AppCompatReachabilityOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 2966
    .line 2967
    invoke-virtual {v12}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 2968
    .line 2969
    .line 2970
    move-result-object v12

    .line 2971
    invoke-virtual {v12}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 2972
    .line 2973
    .line 2974
    move-result-object v12

    .line 2975
    invoke-virtual {v10, v12}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->isVerticalReachabilityEnabled(Landroid/content/res/Configuration;)Z

    .line 2976
    .line 2977
    .line 2978
    move-result v12

    .line 2979
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2980
    .line 2981
    .line 2982
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2983
    .line 2984
    .line 2985
    move-result-object v11

    .line 2986
    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2987
    .line 2988
    .line 2989
    new-instance v11, Ljava/lang/StringBuilder;

    .line 2990
    .line 2991
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    .line 2992
    .line 2993
    .line 2994
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2995
    .line 2996
    .line 2997
    const-string v12, "  letterboxHorizontalPositionMultiplier="

    .line 2998
    .line 2999
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3000
    .line 3001
    .line 3002
    invoke-virtual {v9}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 3003
    .line 3004
    .line 3005
    move-result-object v12

    .line 3006
    invoke-virtual {v12}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 3007
    .line 3008
    .line 3009
    move-result-object v12

    .line 3010
    invoke-virtual {v10, v12}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->getHorizontalPositionMultiplier(Landroid/content/res/Configuration;)F

    .line 3011
    .line 3012
    .line 3013
    move-result v12

    .line 3014
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3015
    .line 3016
    .line 3017
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3018
    .line 3019
    .line 3020
    move-result-object v11

    .line 3021
    invoke-virtual {v1, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3022
    .line 3023
    .line 3024
    new-instance v11, Ljava/lang/StringBuilder;

    .line 3025
    .line 3026
    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    .line 3027
    .line 3028
    .line 3029
    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3030
    .line 3031
    .line 3032
    const-string v12, "  letterboxVerticalPositionMultiplier="

    .line 3033
    .line 3034
    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3035
    .line 3036
    .line 3037
    invoke-virtual {v9}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 3038
    .line 3039
    .line 3040
    move-result-object v9

    .line 3041
    invoke-virtual {v9}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 3042
    .line 3043
    .line 3044
    move-result-object v9

    .line 3045
    iget-object v12, v10, Lcom/android/server/wm/AppCompatReachabilityOverrides;->mAppCompatDeviceStateQuery:Lcom/android/server/wm/AppCompatDeviceStateQuery;

    .line 3046
    .line 3047
    invoke-virtual {v12, v7}, Lcom/android/server/wm/AppCompatDeviceStateQuery;->isDisplayFullScreenAndInPosture(Z)Z

    .line 3048
    .line 3049
    .line 3050
    move-result v7

    .line 3051
    invoke-virtual {v10, v9}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->isVerticalReachabilityEnabled(Landroid/content/res/Configuration;)Z

    .line 3052
    .line 3053
    .line 3054
    move-result v9

    .line 3055
    iget-object v10, v10, Lcom/android/server/wm/AppCompatReachabilityOverrides;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 3056
    .line 3057
    if-eqz v9, :cond_44

    .line 3058
    .line 3059
    invoke-virtual {v10, v7}, Lcom/android/server/wm/AppCompatConfiguration;->getVerticalMultiplierForReachability(Z)F

    .line 3060
    .line 3061
    .line 3062
    move-result v7

    .line 3063
    goto :goto_b

    .line 3064
    :cond_44
    if-eqz v7, :cond_45

    .line 3065
    .line 3066
    iget v7, v10, Lcom/android/server/wm/AppCompatConfiguration;->mLetterboxTabletopModePositionMultiplier:F

    .line 3067
    .line 3068
    goto :goto_b

    .line 3069
    :cond_45
    iget v7, v10, Lcom/android/server/wm/AppCompatConfiguration;->mLetterboxVerticalPositionMultiplier:F

    .line 3070
    .line 3071
    :goto_b
    invoke-static {v11, v7, v1}, Lcom/android/server/chimera/AggressivePolicyHandler$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;FLjava/io/PrintWriter;)V

    .line 3072
    .line 3073
    .line 3074
    iget-object v6, v6, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 3075
    .line 3076
    iget-object v6, v6, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 3077
    .line 3078
    iget-object v6, v6, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatLetterboxOverrides:Lcom/android/server/wm/AppCompatLetterboxOverrides;

    .line 3079
    .line 3080
    const-string v7, "  letterboxBackgroundColor="

    .line 3081
    .line 3082
    invoke-static {v2, v7}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3083
    .line 3084
    .line 3085
    move-result-object v7

    .line 3086
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatLetterboxOverrides;->getLetterboxBackgroundColor()Landroid/graphics/Color;

    .line 3087
    .line 3088
    .line 3089
    move-result-object v9

    .line 3090
    invoke-virtual {v9}, Landroid/graphics/Color;->toArgb()I

    .line 3091
    .line 3092
    .line 3093
    move-result v9

    .line 3094
    invoke-static {v9}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 3095
    .line 3096
    .line 3097
    move-result-object v9

    .line 3098
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3099
    .line 3100
    .line 3101
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3102
    .line 3103
    .line 3104
    move-result-object v7

    .line 3105
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3106
    .line 3107
    .line 3108
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3109
    .line 3110
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3111
    .line 3112
    .line 3113
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3114
    .line 3115
    .line 3116
    const-string v9, "  letterboxBackgroundType="

    .line 3117
    .line 3118
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3119
    .line 3120
    .line 3121
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatLetterboxOverrides;->getLetterboxBackgroundType()I

    .line 3122
    .line 3123
    .line 3124
    move-result v9

    .line 3125
    invoke-static {v9}, Lcom/android/server/wm/AppCompatConfiguration;->letterboxBackgroundTypeToString(I)Ljava/lang/String;

    .line 3126
    .line 3127
    .line 3128
    move-result-object v9

    .line 3129
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3130
    .line 3131
    .line 3132
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3133
    .line 3134
    .line 3135
    move-result-object v7

    .line 3136
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3137
    .line 3138
    .line 3139
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3140
    .line 3141
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3142
    .line 3143
    .line 3144
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3145
    .line 3146
    .line 3147
    const-string v9, "  letterboxCornerRadius="

    .line 3148
    .line 3149
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3150
    .line 3151
    .line 3152
    iget-object v9, v5, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mAppCompatRoundedCorners:Lcom/android/server/wm/AppCompatRoundedCorners;

    .line 3153
    .line 3154
    invoke-virtual {v9, v8}, Lcom/android/server/wm/AppCompatRoundedCorners;->getRoundedCornersRadius(Lcom/android/server/wm/WindowState;)I

    .line 3155
    .line 3156
    .line 3157
    move-result v9

    .line 3158
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3159
    .line 3160
    .line 3161
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3162
    .line 3163
    .line 3164
    move-result-object v7

    .line 3165
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3166
    .line 3167
    .line 3168
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatLetterboxOverrides;->getLetterboxBackgroundType()I

    .line 3169
    .line 3170
    .line 3171
    move-result v7

    .line 3172
    const/4 v9, 0x3

    .line 3173
    if-ne v7, v9, :cond_46

    .line 3174
    .line 3175
    const-string v7, "  isLetterboxWallpaperBlurSupported="

    .line 3176
    .line 3177
    invoke-static {v2, v7}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3178
    .line 3179
    .line 3180
    move-result-object v7

    .line 3181
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatLetterboxOverrides;->isLetterboxWallpaperBlurSupported()Z

    .line 3182
    .line 3183
    .line 3184
    move-result v9

    .line 3185
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 3186
    .line 3187
    .line 3188
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3189
    .line 3190
    .line 3191
    move-result-object v7

    .line 3192
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3193
    .line 3194
    .line 3195
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3196
    .line 3197
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3198
    .line 3199
    .line 3200
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3201
    .line 3202
    .line 3203
    const-string v9, "  letterboxBackgroundWallpaperDarkScrimAlpha="

    .line 3204
    .line 3205
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3206
    .line 3207
    .line 3208
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatLetterboxOverrides;->getLetterboxWallpaperDarkScrimAlpha()F

    .line 3209
    .line 3210
    .line 3211
    move-result v9

    .line 3212
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3213
    .line 3214
    .line 3215
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3216
    .line 3217
    .line 3218
    move-result-object v7

    .line 3219
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3220
    .line 3221
    .line 3222
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3223
    .line 3224
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3225
    .line 3226
    .line 3227
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3228
    .line 3229
    .line 3230
    const-string v9, "  letterboxBackgroundWallpaperBlurRadius="

    .line 3231
    .line 3232
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3233
    .line 3234
    .line 3235
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatLetterboxOverrides;->getLetterboxWallpaperBlurRadiusPx()I

    .line 3236
    .line 3237
    .line 3238
    move-result v9

    .line 3239
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3240
    .line 3241
    .line 3242
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3243
    .line 3244
    .line 3245
    move-result-object v7

    .line 3246
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3247
    .line 3248
    .line 3249
    :cond_46
    iget-object v5, v5, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 3250
    .line 3251
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 3252
    .line 3253
    .line 3254
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3255
    .line 3256
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3257
    .line 3258
    .line 3259
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3260
    .line 3261
    .line 3262
    const-string v9, "  letterboxPositionForHorizontalReachability="

    .line 3263
    .line 3264
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3265
    .line 3266
    .line 3267
    iget-object v9, v5, Lcom/android/server/wm/AppCompatConfiguration;->mAppCompatConfigurationPersister:Lcom/android/server/wm/AppCompatConfigurationPersister;

    .line 3268
    .line 3269
    iget v10, v9, Lcom/android/server/wm/AppCompatConfigurationPersister;->mLetterboxPositionForHorizontalReachability:I

    .line 3270
    .line 3271
    invoke-static {v10}, Lcom/android/server/wm/AppCompatConfiguration;->letterboxHorizontalReachabilityPositionToString(I)Ljava/lang/String;

    .line 3272
    .line 3273
    .line 3274
    move-result-object v10

    .line 3275
    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3276
    .line 3277
    .line 3278
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3279
    .line 3280
    .line 3281
    move-result-object v7

    .line 3282
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3283
    .line 3284
    .line 3285
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3286
    .line 3287
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3288
    .line 3289
    .line 3290
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3291
    .line 3292
    .line 3293
    const-string v10, "  letterboxPositionForVerticalReachability="

    .line 3294
    .line 3295
    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3296
    .line 3297
    .line 3298
    iget v9, v9, Lcom/android/server/wm/AppCompatConfigurationPersister;->mLetterboxPositionForVerticalReachability:I

    .line 3299
    .line 3300
    invoke-static {v9}, Lcom/android/server/wm/AppCompatConfiguration;->letterboxVerticalReachabilityPositionToString(I)Ljava/lang/String;

    .line 3301
    .line 3302
    .line 3303
    move-result-object v9

    .line 3304
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3305
    .line 3306
    .line 3307
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3308
    .line 3309
    .line 3310
    move-result-object v7

    .line 3311
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3312
    .line 3313
    .line 3314
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3315
    .line 3316
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3317
    .line 3318
    .line 3319
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3320
    .line 3321
    .line 3322
    const-string v9, "  fixedOrientationLetterboxAspectRatio="

    .line 3323
    .line 3324
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3325
    .line 3326
    .line 3327
    iget v9, v5, Lcom/android/server/wm/AppCompatConfiguration;->mFixedOrientationLetterboxAspectRatio:F

    .line 3328
    .line 3329
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3330
    .line 3331
    .line 3332
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3333
    .line 3334
    .line 3335
    move-result-object v7

    .line 3336
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3337
    .line 3338
    .line 3339
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3340
    .line 3341
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3342
    .line 3343
    .line 3344
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3345
    .line 3346
    .line 3347
    const-string v9, "  defaultMinAspectRatioForUnresizableApps="

    .line 3348
    .line 3349
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3350
    .line 3351
    .line 3352
    iget v9, v5, Lcom/android/server/wm/AppCompatConfiguration;->mDefaultMinAspectRatioForUnresizableApps:F

    .line 3353
    .line 3354
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3355
    .line 3356
    .line 3357
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3358
    .line 3359
    .line 3360
    move-result-object v7

    .line 3361
    invoke-virtual {v1, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3362
    .line 3363
    .line 3364
    new-instance v7, Ljava/lang/StringBuilder;

    .line 3365
    .line 3366
    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    .line 3367
    .line 3368
    .line 3369
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3370
    .line 3371
    .line 3372
    const-string v9, "  isSplitScreenAspectRatioForUnresizableAppsEnabled="

    .line 3373
    .line 3374
    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3375
    .line 3376
    .line 3377
    iget-boolean v9, v5, Lcom/android/server/wm/AppCompatConfiguration;->mIsSplitScreenAspectRatioForUnresizableAppsEnabled:Z

    .line 3378
    .line 3379
    const-string v10, "  isDisplayAspectRatioEnabledForFixedOrientationLetterbox="

    .line 3380
    .line 3381
    invoke-static {v7, v9, v1, v2, v10}, Lcom/android/server/media/MediaRouter2ServiceImpl$UserRecord$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3382
    .line 3383
    .line 3384
    move-result-object v7

    .line 3385
    iget-boolean v5, v5, Lcom/android/server/wm/AppCompatConfiguration;->mIsDisplayAspectRatioEnabledForFixedOrientationLetterbox:Z

    .line 3386
    .line 3387
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 3388
    .line 3389
    .line 3390
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3391
    .line 3392
    .line 3393
    move-result-object v5

    .line 3394
    invoke-virtual {v1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3395
    .line 3396
    .line 3397
    invoke-virtual {v6, v8}, Lcom/android/server/wm/AppCompatLetterboxOverrides;->shouldHideLetterboxSurface(Lcom/android/server/wm/WindowState;)Z

    .line 3398
    .line 3399
    .line 3400
    move-result v5

    .line 3401
    if-eqz v5, :cond_47

    .line 3402
    .line 3403
    const-string v5, "  shouldHideLetterboxSurface=true"

    .line 3404
    .line 3405
    invoke-static {v1, v2, v5}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 3406
    .line 3407
    .line 3408
    :cond_47
    :goto_c
    iget-object v3, v3, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 3409
    .line 3410
    iget v5, v3, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 3411
    .line 3412
    const/high16 v6, 0x3f800000    # 1.0f

    .line 3413
    .line 3414
    cmpl-float v5, v5, v6

    .line 3415
    .line 3416
    if-nez v5, :cond_48

    .line 3417
    .line 3418
    invoke-virtual {v3}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 3419
    .line 3420
    .line 3421
    move-result v5

    .line 3422
    if-eqz v5, :cond_49

    .line 3423
    .line 3424
    :cond_48
    const-string/jumbo v5, "mSizeCompatScale="

    .line 3425
    .line 3426
    .line 3427
    invoke-static {v2, v5}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3428
    .line 3429
    .line 3430
    move-result-object v5

    .line 3431
    iget v6, v3, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 3432
    .line 3433
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3434
    .line 3435
    .line 3436
    const-string v6, " mSizeCompatBounds="

    .line 3437
    .line 3438
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3439
    .line 3440
    .line 3441
    iget-object v3, v3, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 3442
    .line 3443
    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 3444
    .line 3445
    .line 3446
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3447
    .line 3448
    .line 3449
    move-result-object v3

    .line 3450
    invoke-virtual {v1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3451
    .line 3452
    .line 3453
    :cond_49
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 3454
    .line 3455
    if-eqz v3, :cond_4a

    .line 3456
    .line 3457
    invoke-static {v1, v2, v4}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 3458
    .line 3459
    .line 3460
    :cond_4a
    sget-boolean v3, Lcom/samsung/android/rune/CoreRune;->MW_PIP_SHELL_TRANSITION:Z

    .line 3461
    .line 3462
    if-eqz v3, :cond_4c

    .line 3463
    .line 3464
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mIsEnteringPipFromSplit:Z

    .line 3465
    .line 3466
    if-eqz v3, :cond_4b

    .line 3467
    .line 3468
    const-string/jumbo v3, "mIsEnteringPipFromSplit=true"

    .line 3469
    .line 3470
    .line 3471
    invoke-static {v1, v2, v3}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 3472
    .line 3473
    .line 3474
    :cond_4b
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mHiddenWhileEnteringPinnedMode:Z

    .line 3475
    .line 3476
    if-eqz v3, :cond_4c

    .line 3477
    .line 3478
    const-string/jumbo v3, "mHiddenWhileEnteringPinnedMode=true"

    .line 3479
    .line 3480
    .line 3481
    invoke-static {v1, v2, v3}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 3482
    .line 3483
    .line 3484
    :cond_4c
    const-string/jumbo v3, "mLastSurfaceShowing="

    .line 3485
    .line 3486
    .line 3487
    invoke-static {v2, v3}, Lcom/android/internal/util/jobs/Preconditions$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3488
    .line 3489
    .line 3490
    move-result-object v3

    .line 3491
    iget-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mLastSurfaceShowing:Z

    .line 3492
    .line 3493
    invoke-static {v3, v4, v1}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/io/PrintWriter;)V

    .line 3494
    .line 3495
    .line 3496
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 3497
    .line 3498
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    .line 3499
    .line 3500
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mKeepAliveActivities:Ljava/util/WeakHashMap;

    .line 3501
    .line 3502
    invoke-virtual {v3, v0}, Ljava/util/WeakHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 3503
    .line 3504
    .line 3505
    move-result-object v0

    .line 3506
    if-eqz v0, :cond_4d

    .line 3507
    .line 3508
    const-string v0, "keepAlive=true"

    .line 3509
    .line 3510
    invoke-static {v1, v2, v0}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;)V

    .line 3511
    .line 3512
    .line 3513
    :cond_4d
    return-void
.end method

.method public final dumpDebug(Landroid/util/proto/ProtoOutputStream;JI)V
    .locals 5

    .line 1
    const/4 v0, 0x2

    .line 2
    if-ne p4, v0, :cond_0

    .line 3
    .line 4
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 5
    .line 6
    if-nez v0, :cond_0

    .line 7
    .line 8
    return-void

    .line 9
    :cond_0
    invoke-virtual {p1, p2, p3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 10
    .line 11
    .line 12
    move-result-wide p2

    .line 13
    const-wide v0, 0x10900000001L

    .line 14
    .line 15
    .line 16
    .line 17
    .line 18
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 19
    .line 20
    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 21
    .line 22
    .line 23
    const-wide v0, 0x10b00000002L

    .line 24
    .line 25
    .line 26
    .line 27
    .line 28
    invoke-super {p0, p1, v0, v1, p4}, Lcom/android/server/wm/WindowToken;->dumpDebug(Landroid/util/proto/ProtoOutputStream;JI)V

    .line 29
    .line 30
    .line 31
    const-wide v0, 0x10800000003L

    .line 32
    .line 33
    .line 34
    .line 35
    .line 36
    iget-boolean p4, p0, Lcom/android/server/wm/ActivityRecord;->mLastSurfaceShowing:Z

    .line 37
    .line 38
    invoke-virtual {p1, v0, v1, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 39
    .line 40
    .line 41
    const-wide v0, 0x10800000004L

    .line 42
    .line 43
    .line 44
    .line 45
    .line 46
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isWaitingForTransitionStart()Z

    .line 47
    .line 48
    .line 49
    move-result p4

    .line 50
    invoke-virtual {p1, v0, v1, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 51
    .line 52
    .line 53
    const/4 p4, 0x7

    .line 54
    const/16 v0, 0x11

    .line 55
    .line 56
    invoke-virtual {p0, p4, v0}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 57
    .line 58
    .line 59
    move-result p4

    .line 60
    const-wide v0, 0x10800000005L

    .line 61
    .line 62
    .line 63
    .line 64
    .line 65
    invoke-virtual {p1, v0, v1, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 66
    .line 67
    .line 68
    iget-object p4, p0, Lcom/android/server/wm/WindowContainer;->mThumbnail:Lcom/android/server/wm/WindowContainerThumbnail;

    .line 69
    .line 70
    if-eqz p4, :cond_2

    .line 71
    .line 72
    const-wide v0, 0x10b00000006L

    .line 73
    .line 74
    .line 75
    .line 76
    .line 77
    invoke-virtual {p1, v0, v1}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 78
    .line 79
    .line 80
    move-result-wide v0

    .line 81
    const-wide v2, 0x10500000001L

    .line 82
    .line 83
    .line 84
    .line 85
    .line 86
    iget v4, p4, Lcom/android/server/wm/WindowContainerThumbnail;->mWidth:I

    .line 87
    .line 88
    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 89
    .line 90
    .line 91
    const-wide v2, 0x10500000002L

    .line 92
    .line 93
    .line 94
    .line 95
    .line 96
    iget v4, p4, Lcom/android/server/wm/WindowContainerThumbnail;->mHeight:I

    .line 97
    .line 98
    invoke-virtual {p1, v2, v3, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 99
    .line 100
    .line 101
    iget-object p4, p4, Lcom/android/server/wm/WindowContainerThumbnail;->mSurfaceAnimator:Lcom/android/server/wm/SurfaceAnimator;

    .line 102
    .line 103
    invoke-virtual {p4}, Lcom/android/server/wm/SurfaceAnimator;->isAnimating()Z

    .line 104
    .line 105
    .line 106
    move-result v2

    .line 107
    if-eqz v2, :cond_1

    .line 108
    .line 109
    const-wide v2, 0x10b00000003L

    .line 110
    .line 111
    .line 112
    .line 113
    .line 114
    invoke-virtual {p4, p1, v2, v3}, Lcom/android/server/wm/SurfaceAnimator;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 115
    .line 116
    .line 117
    :cond_1
    invoke-virtual {p1, v0, v1}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 118
    .line 119
    .line 120
    :cond_2
    const/4 p4, 0x1

    .line 121
    invoke-virtual {p0, p4}, Lcom/android/server/wm/ActivityRecord;->occludesParent(Z)Z

    .line 122
    .line 123
    .line 124
    move-result v0

    .line 125
    const-wide v1, 0x10800000007L

    .line 126
    .line 127
    .line 128
    .line 129
    .line 130
    invoke-virtual {p1, v1, v2, v0}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 131
    .line 132
    .line 133
    const-wide v0, 0x10800000008L

    .line 134
    .line 135
    .line 136
    .line 137
    .line 138
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 139
    .line 140
    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 141
    .line 142
    .line 143
    const/4 v0, 0x0

    .line 144
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->occludesParent(Z)Z

    .line 145
    .line 146
    .line 147
    move-result v1

    .line 148
    xor-int/2addr v1, p4

    .line 149
    const-wide v2, 0x1080000001eL

    .line 150
    .line 151
    .line 152
    .line 153
    .line 154
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 155
    .line 156
    .line 157
    const-wide v1, 0x10800000018L

    .line 158
    .line 159
    .line 160
    .line 161
    .line 162
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 163
    .line 164
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 165
    .line 166
    .line 167
    const-wide v1, 0x10800000009L

    .line 168
    .line 169
    .line 170
    .line 171
    .line 172
    iget-boolean v3, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 173
    .line 174
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 175
    .line 176
    .line 177
    iget-boolean v1, p0, Lcom/android/server/wm/WindowToken;->mClientVisible:Z

    .line 178
    .line 179
    const-wide v2, 0x1080000000aL

    .line 180
    .line 181
    .line 182
    .line 183
    .line 184
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 185
    .line 186
    .line 187
    const-wide v1, 0x1080000000bL

    .line 188
    .line 189
    .line 190
    .line 191
    .line 192
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 193
    .line 194
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 195
    .line 196
    .line 197
    const-wide v1, 0x1080000000cL

    .line 198
    .line 199
    .line 200
    .line 201
    .line 202
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mReportedDrawn:Z

    .line 203
    .line 204
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 205
    .line 206
    .line 207
    const-wide v1, 0x1080000000dL

    .line 208
    .line 209
    .line 210
    .line 211
    .line 212
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 213
    .line 214
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 215
    .line 216
    .line 217
    const-wide v1, 0x1050000000eL

    .line 218
    .line 219
    .line 220
    .line 221
    .line 222
    iget v3, p0, Lcom/android/server/wm/ActivityRecord;->mNumInterestingWindows:I

    .line 223
    .line 224
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 225
    .line 226
    .line 227
    const-wide v1, 0x1050000000fL

    .line 228
    .line 229
    .line 230
    .line 231
    .line 232
    iget v3, p0, Lcom/android/server/wm/ActivityRecord;->mNumDrawnWindows:I

    .line 233
    .line 234
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 235
    .line 236
    .line 237
    const-wide v1, 0x10800000010L

    .line 238
    .line 239
    .line 240
    .line 241
    .line 242
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 243
    .line 244
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 245
    .line 246
    .line 247
    const-wide v1, 0x10800000011L

    .line 248
    .line 249
    .line 250
    .line 251
    .line 252
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mLastAllDrawn:Z

    .line 253
    .line 254
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 255
    .line 256
    .line 257
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 258
    .line 259
    if-eqz v1, :cond_3

    .line 260
    .line 261
    const-wide v2, 0x10b00000013L

    .line 262
    .line 263
    .line 264
    .line 265
    .line 266
    invoke-virtual {v1, p1, v2, v3}, Lcom/android/server/wm/WindowState;->writeIdentifierToProto(Landroid/util/proto/ProtoOutputStream;J)V

    .line 267
    .line 268
    .line 269
    :cond_3
    const-wide v1, 0x10800000014L

    .line 270
    .line 271
    .line 272
    .line 273
    .line 274
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isStartingWindowDisplayed()Z

    .line 275
    .line 276
    .line 277
    move-result v3

    .line 278
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 279
    .line 280
    .line 281
    const-wide v1, 0x108000000c9L

    .line 282
    .line 283
    .line 284
    .line 285
    .line 286
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 287
    .line 288
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 289
    .line 290
    .line 291
    const-wide v1, 0x10800000016L

    .line 292
    .line 293
    .line 294
    .line 295
    .line 296
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mVisibleSetFromTransferredStartingWindow:Z

    .line 297
    .line 298
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 299
    .line 300
    .line 301
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 302
    .line 303
    invoke-virtual {v1}, Ljava/lang/Enum;->toString()Ljava/lang/String;

    .line 304
    .line 305
    .line 306
    move-result-object v1

    .line 307
    const-wide v2, 0x1090000001bL

    .line 308
    .line 309
    .line 310
    .line 311
    .line 312
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 313
    .line 314
    .line 315
    const-wide v1, 0x1080000001cL

    .line 316
    .line 317
    .line 318
    .line 319
    .line 320
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isRootOfTask()Z

    .line 321
    .line 322
    .line 323
    move-result v3

    .line 324
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 325
    .line 326
    .line 327
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasProcess()Z

    .line 328
    .line 329
    .line 330
    move-result v1

    .line 331
    if-eqz v1, :cond_4

    .line 332
    .line 333
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 334
    .line 335
    iget v1, v1, Lcom/android/server/wm/WindowProcessController;->mPid:I

    .line 336
    .line 337
    const-wide v2, 0x1050000001dL

    .line 338
    .line 339
    .line 340
    .line 341
    .line 342
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 343
    .line 344
    .line 345
    :cond_4
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->pictureInPictureArgs:Landroid/app/PictureInPictureParams;

    .line 346
    .line 347
    invoke-virtual {v1}, Landroid/app/PictureInPictureParams;->isAutoEnterEnabled()Z

    .line 348
    .line 349
    .line 350
    move-result v1

    .line 351
    const-wide v2, 0x1080000001fL

    .line 352
    .line 353
    .line 354
    .line 355
    .line 356
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 357
    .line 358
    .line 359
    const-wide v1, 0x10800000020L

    .line 360
    .line 361
    .line 362
    .line 363
    .line 364
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->inSizeCompatMode()Z

    .line 365
    .line 366
    .line 367
    move-result v3

    .line 368
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 369
    .line 370
    .line 371
    const-wide v1, 0x10200000021L

    .line 372
    .line 373
    .line 374
    .line 375
    .line 376
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getMinAspectRatio()F

    .line 377
    .line 378
    .line 379
    move-result v3

    .line 380
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 381
    .line 382
    .line 383
    const-wide v1, 0x10800000022L

    .line 384
    .line 385
    .line 386
    .line 387
    .line 388
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->providesMaxBounds()Z

    .line 389
    .line 390
    .line 391
    move-result v3

    .line 392
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 393
    .line 394
    .line 395
    const-wide v1, 0x10800000023L

    .line 396
    .line 397
    .line 398
    .line 399
    .line 400
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mEnableRecentsScreenshot:Z

    .line 401
    .line 402
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 403
    .line 404
    .line 405
    const-wide v1, 0x10500000024L

    .line 406
    .line 407
    .line 408
    .line 409
    .line 410
    iget v3, p0, Lcom/android/server/wm/ActivityRecord;->mLastDropInputMode:I

    .line 411
    .line 412
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 413
    .line 414
    .line 415
    const-wide v1, 0x10500000025L

    .line 416
    .line 417
    .line 418
    .line 419
    .line 420
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 421
    .line 422
    .line 423
    move-result v3

    .line 424
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 425
    .line 426
    .line 427
    const-wide v1, 0x10800000026L

    .line 428
    .line 429
    .line 430
    .line 431
    .line 432
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->shouldSendCompatFakeFocus()Z

    .line 433
    .line 434
    .line 435
    move-result v3

    .line 436
    invoke-virtual {p1, v1, v2, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 437
    .line 438
    .line 439
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 440
    .line 441
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 442
    .line 443
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 444
    .line 445
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatCameraOverrides;->shouldForceRotateForCameraCompat()Z

    .line 446
    .line 447
    .line 448
    move-result v1

    .line 449
    const-wide v2, 0x10800000027L

    .line 450
    .line 451
    .line 452
    .line 453
    .line 454
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 455
    .line 456
    .line 457
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 458
    .line 459
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 460
    .line 461
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 462
    .line 463
    iget-object v2, v1, Lcom/android/server/wm/AppCompatCameraOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 464
    .line 465
    iget-object v2, v2, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 466
    .line 467
    const-wide/32 v3, 0xfc0f74b

    .line 468
    .line 469
    .line 470
    invoke-virtual {v2, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 471
    .line 472
    .line 473
    move-result v2

    .line 474
    iget-object v1, v1, Lcom/android/server/wm/AppCompatCameraOverrides;->mCameraCompatAllowRefreshOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 475
    .line 476
    iget-object v3, v1, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->mCondition:Ljava/util/function/BooleanSupplier;

    .line 477
    .line 478
    invoke-interface {v3}, Ljava/util/function/BooleanSupplier;->getAsBoolean()Z

    .line 479
    .line 480
    .line 481
    move-result v3

    .line 482
    if-nez v3, :cond_6

    .line 483
    .line 484
    :cond_5
    move v1, v0

    .line 485
    goto :goto_0

    .line 486
    :cond_6
    invoke-virtual {v1}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->getValue()I

    .line 487
    .line 488
    .line 489
    move-result v1

    .line 490
    if-eqz v1, :cond_5

    .line 491
    .line 492
    if-nez v2, :cond_5

    .line 493
    .line 494
    move v1, p4

    .line 495
    :goto_0
    const-wide v2, 0x10800000028L

    .line 496
    .line 497
    .line 498
    .line 499
    .line 500
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 501
    .line 502
    .line 503
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 504
    .line 505
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 506
    .line 507
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 508
    .line 509
    iget-object v2, v1, Lcom/android/server/wm/AppCompatCameraOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 510
    .line 511
    iget-object v2, v2, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 512
    .line 513
    const-wide/32 v3, 0xfc0ec12

    .line 514
    .line 515
    .line 516
    invoke-virtual {v2, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 517
    .line 518
    .line 519
    move-result v2

    .line 520
    iget-object v1, v1, Lcom/android/server/wm/AppCompatCameraOverrides;->mCameraCompatEnableRefreshViaPauseOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 521
    .line 522
    invoke-virtual {v1, v2}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOverrideAndProperty(Z)Z

    .line 523
    .line 524
    .line 525
    move-result v1

    .line 526
    const-wide v2, 0x10800000029L

    .line 527
    .line 528
    .line 529
    .line 530
    .line 531
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 532
    .line 533
    .line 534
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 535
    .line 536
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 537
    .line 538
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 539
    .line 540
    iget-object v2, v1, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 541
    .line 542
    iget-object v2, v2, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 543
    .line 544
    const-wide/32 v3, 0xa5faf64

    .line 545
    .line 546
    .line 547
    invoke-virtual {v2, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 548
    .line 549
    .line 550
    move-result v2

    .line 551
    iget-object v1, v1, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mAllowMinAspectRatioOverrideOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 552
    .line 553
    invoke-virtual {v1, v2}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOptInOverrideAndOptOutProperty(Z)Z

    .line 554
    .line 555
    .line 556
    move-result v1

    .line 557
    const-wide v2, 0x1080000002aL

    .line 558
    .line 559
    .line 560
    .line 561
    .line 562
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 563
    .line 564
    .line 565
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 566
    .line 567
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 568
    .line 569
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatOrientationOverrides:Lcom/android/server/wm/AppCompatOrientationOverrides;

    .line 570
    .line 571
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatOrientationOverrides;->shouldIgnoreOrientationRequestLoop()Z

    .line 572
    .line 573
    .line 574
    move-result v1

    .line 575
    const-wide v2, 0x1080000002bL

    .line 576
    .line 577
    .line 578
    .line 579
    .line 580
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 581
    .line 582
    .line 583
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 584
    .line 585
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 586
    .line 587
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatResizeOverrides:Lcom/android/server/wm/AppCompatResizeOverrides;

    .line 588
    .line 589
    iget-object v2, v1, Lcom/android/server/wm/AppCompatResizeOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 590
    .line 591
    iget-object v2, v2, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 592
    .line 593
    const-wide/32 v3, 0xa5faf38

    .line 594
    .line 595
    .line 596
    invoke-virtual {v2, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 597
    .line 598
    .line 599
    move-result v2

    .line 600
    iget-object v1, v1, Lcom/android/server/wm/AppCompatResizeOverrides;->mAllowForceResizeOverrideOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 601
    .line 602
    invoke-virtual {v1, v2}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOptInOverrideAndOptOutProperty(Z)Z

    .line 603
    .line 604
    .line 605
    move-result v1

    .line 606
    const-wide v2, 0x1080000002cL

    .line 607
    .line 608
    .line 609
    .line 610
    .line 611
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 612
    .line 613
    .line 614
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 615
    .line 616
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 617
    .line 618
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 619
    .line 620
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->shouldEnableUserAspectRatioSettings()Z

    .line 621
    .line 622
    .line 623
    move-result v1

    .line 624
    const-wide v2, 0x1080000002dL

    .line 625
    .line 626
    .line 627
    .line 628
    .line 629
    invoke-virtual {p1, v2, v3, v1}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 630
    .line 631
    .line 632
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 633
    .line 634
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 635
    .line 636
    iget-object p0, p0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 637
    .line 638
    iget-object v1, p0, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mAllowUserAspectRatioOverrideOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 639
    .line 640
    invoke-virtual {v1}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->isFalse()Z

    .line 641
    .line 642
    .line 643
    move-result v1

    .line 644
    if-nez v1, :cond_7

    .line 645
    .line 646
    iget-object v1, p0, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mAllowUserAspectRatioFullscreenOverrideOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 647
    .line 648
    invoke-virtual {v1}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->isFalse()Z

    .line 649
    .line 650
    .line 651
    move-result v1

    .line 652
    if-nez v1, :cond_7

    .line 653
    .line 654
    iget-object p0, p0, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 655
    .line 656
    invoke-virtual {p0}, Lcom/android/server/wm/AppCompatConfiguration;->isUserAppAspectRatioFullscreenEnabled()Z

    .line 657
    .line 658
    .line 659
    move-result p0

    .line 660
    if-nez p0, :cond_8

    .line 661
    .line 662
    :cond_7
    move p4, v0

    .line 663
    :cond_8
    const-wide v0, 0x1080000002eL

    .line 664
    .line 665
    .line 666
    .line 667
    .line 668
    invoke-virtual {p1, v0, v1, p4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 669
    .line 670
    .line 671
    invoke-virtual {p1, p2, p3}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 672
    .line 673
    .line 674
    return-void
.end method

.method public final ensureActivityConfiguration(Z)Z
    .locals 9

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    iget-boolean v0, v0, Lcom/android/server/wm/Task;->mConfigWillChange:Z

    .line 6
    .line 7
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_CONFIGURATION_enabled:[Z

    .line 8
    .line 9
    const/4 v2, 0x1

    .line 10
    if-eqz v0, :cond_1

    .line 11
    .line 12
    aget-boolean p1, v1, v2

    .line 13
    .line 14
    if-eqz p1, :cond_0

    .line 15
    .line 16
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 17
    .line 18
    .line 19
    move-result-object p0

    .line 20
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 21
    .line 22
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object v8

    .line 26
    const-wide v4, -0x77c3fe8c2696c108L    # -5.30114781034195E-269

    .line 27
    .line 28
    .line 29
    .line 30
    .line 31
    const/4 v6, 0x0

    .line 32
    const/4 v7, 0x0

    .line 33
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 34
    .line 35
    .line 36
    :cond_0
    return v2

    .line 37
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 38
    .line 39
    if-eqz v0, :cond_3

    .line 40
    .line 41
    aget-boolean p1, v1, v2

    .line 42
    .line 43
    if-eqz p1, :cond_2

    .line 44
    .line 45
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 46
    .line 47
    .line 48
    move-result-object p0

    .line 49
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 50
    .line 51
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 52
    .line 53
    .line 54
    move-result-object v8

    .line 55
    const-wide v4, -0x373115ed2975c856L    # -5.386039383742283E42

    .line 56
    .line 57
    .line 58
    .line 59
    .line 60
    const/4 v6, 0x0

    .line 61
    const/4 v7, 0x0

    .line 62
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 63
    .line 64
    .line 65
    :cond_2
    return v2

    .line 66
    :cond_3
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->DESTROYED:Lcom/android/server/wm/ActivityRecord$State;

    .line 67
    .line 68
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 69
    .line 70
    .line 71
    move-result v0

    .line 72
    if-eqz v0, :cond_5

    .line 73
    .line 74
    aget-boolean p1, v1, v2

    .line 75
    .line 76
    if-eqz p1, :cond_4

    .line 77
    .line 78
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 79
    .line 80
    .line 81
    move-result-object p0

    .line 82
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 83
    .line 84
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 85
    .line 86
    .line 87
    move-result-object v8

    .line 88
    const-wide v4, -0xe63523b1d82c378L    # -1.867485893045515E239

    .line 89
    .line 90
    .line 91
    .line 92
    .line 93
    const/4 v6, 0x0

    .line 94
    const/4 v7, 0x0

    .line 95
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 96
    .line 97
    .line 98
    :cond_4
    return v2

    .line 99
    :cond_5
    if-nez p1, :cond_8

    .line 100
    .line 101
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 102
    .line 103
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 104
    .line 105
    if-eq p1, v0, :cond_6

    .line 106
    .line 107
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->STOPPED:Lcom/android/server/wm/ActivityRecord$State;

    .line 108
    .line 109
    if-eq p1, v0, :cond_6

    .line 110
    .line 111
    const/4 p1, 0x0

    .line 112
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldBeVisible(Z)Z

    .line 113
    .line 114
    .line 115
    move-result p1

    .line 116
    if-nez p1, :cond_8

    .line 117
    .line 118
    :cond_6
    aget-boolean p1, v1, v2

    .line 119
    .line 120
    if-eqz p1, :cond_7

    .line 121
    .line 122
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 123
    .line 124
    .line 125
    move-result-object p0

    .line 126
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 127
    .line 128
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 129
    .line 130
    .line 131
    move-result-object v8

    .line 132
    const-wide v4, -0x5acdaef40021c514L    # -1.65153005661337E-129

    .line 133
    .line 134
    .line 135
    .line 136
    .line 137
    const/4 v6, 0x0

    .line 138
    const/4 v7, 0x0

    .line 139
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 140
    .line 141
    .line 142
    :cond_7
    return v2

    .line 143
    :cond_8
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isConfigurationDispatchPaused()Z

    .line 144
    .line 145
    .line 146
    move-result p1

    .line 147
    if-eqz p1, :cond_9

    .line 148
    .line 149
    return v2

    .line 150
    :cond_9
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->updateReportedConfigurationAndSend()Z

    .line 151
    .line 152
    .line 153
    move-result p0

    .line 154
    return p0
.end method

.method public final fillsParent()Z
    .locals 1

    .line 1
    const/4 v0, 0x1

    .line 2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->occludesParent(Z)Z

    .line 3
    .line 4
    .line 5
    move-result p0

    .line 6
    return p0
.end method

.method public final findMainWindow(Z)Lcom/android/server/wm/WindowState;
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x1

    .line 8
    sub-int/2addr v0, v1

    .line 9
    const/4 v2, 0x0

    .line 10
    :goto_0
    if-ltz v0, :cond_3

    .line 11
    .line 12
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 13
    .line 14
    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 15
    .line 16
    .line 17
    move-result-object v3

    .line 18
    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 19
    .line 20
    iget-object v4, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 21
    .line 22
    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 23
    .line 24
    if-eq v4, v1, :cond_0

    .line 25
    .line 26
    if-eqz p1, :cond_1

    .line 27
    .line 28
    const/4 v5, 0x3

    .line 29
    if-ne v4, v5, :cond_1

    .line 30
    .line 31
    :cond_0
    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 32
    .line 33
    if-eqz v2, :cond_2

    .line 34
    .line 35
    move-object v2, v3

    .line 36
    :cond_1
    add-int/lit8 v0, v0, -0x1

    .line 37
    .line 38
    goto :goto_0

    .line 39
    :cond_2
    return-object v3

    .line 40
    :cond_3
    return-object v2
.end method

.method public final finishActivityResults(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;)V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_6

    .line 5
    .line 6
    iget v0, v0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 7
    .line 8
    iget v2, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 9
    .line 10
    if-eq v0, v2, :cond_0

    .line 11
    .line 12
    if-eqz p2, :cond_0

    .line 13
    .line 14
    invoke-virtual {p2, v2}, Landroid/content/Intent;->prepareToLeaveUser(I)V

    .line 15
    .line 16
    .line 17
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 18
    .line 19
    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 20
    .line 21
    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 22
    .line 23
    if-lez v0, :cond_1

    .line 24
    .line 25
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 26
    .line 27
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 28
    .line 29
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 30
    .line 31
    invoke-virtual {v2}, Lcom/android/server/wm/ActivityRecord;->getUriPermissionsLocked()Lcom/android/server/uri/UriPermissionOwner;

    .line 32
    .line 33
    .line 34
    move-result-object v2

    .line 35
    check-cast v0, Lcom/android/server/uri/UriGrantsManagerService$LocalService;

    .line 36
    .line 37
    invoke-virtual {v0, p3, v2}, Lcom/android/server/uri/UriGrantsManagerService$LocalService;->grantUriPermissionUncheckedFromIntent(Lcom/android/server/uri/NeededUriGrants;Lcom/android/server/uri/UriPermissionOwner;)V

    .line 38
    .line 39
    .line 40
    :cond_1
    new-instance v0, Landroid/os/Binder;

    .line 41
    .line 42
    invoke-direct {v0}, Landroid/os/Binder;-><init>()V

    .line 43
    .line 44
    .line 45
    invoke-static {}, Landroid/security/Flags;->contentUriPermissionApis()Z

    .line 46
    .line 47
    .line 48
    move-result v2

    .line 49
    if-eqz v2, :cond_2

    .line 50
    .line 51
    :try_start_0
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 52
    .line 53
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getUid()I

    .line 54
    .line 55
    .line 56
    move-result v6

    .line 57
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 58
    .line 59
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 60
    .line 61
    .line 62
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    .line 63
    .line 64
    .line 65
    move-result-object v2

    .line 66
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getUid()I

    .line 67
    .line 68
    .line 69
    move-result v4

    .line 70
    invoke-interface {v2, v4}, Landroid/content/pm/IPackageManager;->getNameForUid(I)Ljava/lang/String;

    .line 71
    .line 72
    .line 73
    move-result-object v7

    .line 74
    const/4 v8, 0x0

    .line 75
    move-object v4, v0

    .line 76
    move-object v5, p2

    .line 77
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/wm/ActivityRecord;->computeCallerInfo(Landroid/os/IBinder;Landroid/content/Intent;ILjava/lang/String;Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 78
    .line 79
    .line 80
    goto :goto_0

    .line 81
    :catch_0
    move-exception p0

    .line 82
    new-instance p1, Ljava/lang/RuntimeException;

    .line 83
    .line 84
    invoke-direct {p1, p0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/Throwable;)V

    .line 85
    .line 86
    .line 87
    throw p1

    .line 88
    :cond_2
    :goto_0
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mForceSendResultForMediaProjection:Z

    .line 89
    .line 90
    if-nez v2, :cond_5

    .line 91
    .line 92
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 93
    .line 94
    sget-object v3, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 95
    .line 96
    invoke-virtual {v2, v3}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 97
    .line 98
    .line 99
    move-result v2

    .line 100
    if-eqz v2, :cond_3

    .line 101
    .line 102
    goto :goto_1

    .line 103
    :cond_3
    iget-object p3, p0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 104
    .line 105
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->resultWho:Ljava/lang/String;

    .line 106
    .line 107
    iget v6, p0, Lcom/android/server/wm/ActivityRecord;->requestCode:I

    .line 108
    .line 109
    invoke-virtual {p3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 110
    .line 111
    .line 112
    new-instance v2, Lcom/android/server/wm/ActivityResult;

    .line 113
    .line 114
    move-object v3, v2

    .line 115
    move-object v4, p0

    .line 116
    move v7, p1

    .line 117
    move-object v8, p2

    .line 118
    move-object v9, v0

    .line 119
    invoke-direct/range {v3 .. v9}, Lcom/android/server/wm/ActivityResult;-><init>(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;IILandroid/content/Intent;Landroid/os/IBinder;)V

    .line 120
    .line 121
    .line 122
    iget-object p1, p3, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 123
    .line 124
    if-nez p1, :cond_4

    .line 125
    .line 126
    new-instance p1, Ljava/util/ArrayList;

    .line 127
    .line 128
    invoke-direct {p1}, Ljava/util/ArrayList;-><init>()V

    .line 129
    .line 130
    .line 131
    iput-object p1, p3, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 132
    .line 133
    :cond_4
    iget-object p1, p3, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 134
    .line 135
    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 136
    .line 137
    .line 138
    goto :goto_2

    .line 139
    :cond_5
    :goto_1
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 140
    .line 141
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 142
    .line 143
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 144
    .line 145
    new-instance v10, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda6;

    .line 146
    .line 147
    move-object v3, v10

    .line 148
    move-object v4, p0

    .line 149
    move v6, p1

    .line 150
    move-object v7, p2

    .line 151
    move-object v8, v0

    .line 152
    move-object v9, p3

    .line 153
    invoke-direct/range {v3 .. v9}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda6;-><init>(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/ActivityRecord;ILandroid/content/Intent;Landroid/os/IBinder;Lcom/android/server/uri/NeededUriGrants;)V

    .line 154
    .line 155
    .line 156
    invoke-virtual {v2, v10}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 157
    .line 158
    .line 159
    :goto_2
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->resultTo:Lcom/android/server/wm/ActivityRecord;

    .line 160
    .line 161
    :cond_6
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 162
    .line 163
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 164
    .line 165
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 166
    .line 167
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mIcicle:Landroid/os/Bundle;

    .line 168
    .line 169
    const/4 p1, 0x0

    .line 170
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mHaveState:Z

    .line 171
    .line 172
    return-void
.end method

.method public final finishIfPossible(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;Ljava/lang/String;Z)I
    .locals 23

    move-object/from16 v1, p0

    move-object/from16 v0, p4

    .line 2
    const-string v2, "Collect next="

    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    const/4 v4, 0x1

    aget-boolean v5, v3, v4

    if-eqz v5, :cond_0

    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v5

    move/from16 v6, p1

    int-to-long v7, v6

    invoke-static/range {p2 .. p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v9

    invoke-static/range {p4 .. p4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v10

    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    invoke-static {v7, v8}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v7

    filled-new-array {v5, v7, v9, v10}, [Ljava/lang/Object;

    move-result-object v16

    const/4 v14, 0x4

    const/4 v15, 0x0

    const-wide v12, 0x3374792b5daf3e85L    # 7.962860654113133E-61

    invoke-static/range {v11 .. v16}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    goto :goto_0

    :cond_0
    move/from16 v6, p1

    .line 3
    :goto_0
    iget-boolean v5, v1, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    const/4 v7, 0x0

    const-string v8, "ActivityTaskManager"

    if-eqz v5, :cond_1

    .line 4
    new-instance v0, Ljava/lang/StringBuilder;

    const-string v2, "Duplicate finish request for r="

    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v8, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v7

    .line 5
    :cond_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isInRootTaskLocked()Z

    move-result v5

    if-nez v5, :cond_2

    .line 6
    new-instance v0, Ljava/lang/StringBuilder;

    const-string v2, "Finish request when not in root task for r="

    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v8, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    return v7

    .line 7
    :cond_2
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    move-result-object v5

    .line 8
    sget-object v9, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    invoke-virtual {v1, v9}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    move-result v10

    if-nez v10, :cond_3

    invoke-virtual {v5}, Lcom/android/server/wm/Task;->getTopResumedActivity()Lcom/android/server/wm/ActivityRecord;

    move-result-object v10

    if-nez v10, :cond_4

    .line 9
    :cond_3
    invoke-virtual {v5}, Lcom/android/server/wm/Task;->isFocusedRootTaskOnDisplay()Z

    move-result v10

    if-eqz v10, :cond_4

    iget-object v10, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 10
    iget-boolean v10, v10, Lcom/android/server/wm/Task;->mReuseTask:Z

    if-nez v10, :cond_4

    move v10, v4

    goto :goto_1

    :cond_4
    move v10, v7

    :goto_1
    if-eqz v10, :cond_6

    .line 11
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    if-eqz v5, :cond_5

    .line 12
    invoke-virtual {v11}, Lcom/android/server/wm/RootWindowContainer;->getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task;

    move-result-object v11

    if-ne v5, v11, :cond_6

    move v11, v4

    goto :goto_2

    .line 13
    :cond_5
    invoke-virtual {v11}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    :cond_6
    move v11, v7

    .line 14
    :goto_2
    iget-object v12, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v12}, Lcom/android/server/wm/ActivityTaskManagerService;->deferWindowLayout()V

    .line 15
    :try_start_0
    iget-object v12, v1, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    iget-object v12, v12, Lcom/android/server/wm/ActivityTaskSupervisor;->mNoHistoryActivities:Ljava/util/ArrayList;

    invoke-virtual {v12, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 16
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->makeFinishingLocked()V

    .line 17
    iget-object v12, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 18
    iget v13, v1, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    invoke-static/range {p0 .. p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v14

    iget v15, v12, Lcom/android/server/wm/Task;->mTaskId:I

    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 19
    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    invoke-static {v14}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    invoke-static {v15}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v15

    filled-new-array {v13, v14, v15, v7, v0}, [Ljava/lang/Object;

    move-result-object v7

    const/16 v13, 0x7531

    invoke-static {v13, v7}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 20
    invoke-virtual {v12, v1}, Lcom/android/server/wm/WindowContainer;->getActivityAbove(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v7

    if-eqz v7, :cond_7

    .line 21
    iget-object v13, v1, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v13}, Landroid/content/Intent;->getFlags()I

    move-result v13

    const/high16 v14, 0x80000

    and-int/2addr v13, v14

    if-eqz v13, :cond_7

    .line 22
    iget-object v7, v7, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7, v14}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    goto :goto_3

    :catchall_0
    move-exception v0

    goto/16 :goto_11

    .line 23
    :cond_7
    :goto_3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->pauseKeyDispatchingLocked()V

    if-eqz v10, :cond_8

    .line 24
    invoke-virtual {v12, v4}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    move-result-object v7

    if-nez v7, :cond_8

    .line 25
    const-string v7, "finish-top"

    const/4 v13, 0x0

    invoke-virtual {v12, v7, v13, v11}, Lcom/android/server/wm/Task;->adjustFocusToNextFocusableTask(Ljava/lang/String;ZZ)Lcom/android/server/wm/Task;

    .line 26
    :cond_8
    invoke-virtual/range {p0 .. p3}, Lcom/android/server/wm/ActivityRecord;->finishActivityResults(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;)V

    .line 27
    invoke-virtual {v12, v4, v4}, Lcom/android/server/wm/TaskFragment;->getTopNonFinishingActivity(ZZ)Lcom/android/server/wm/ActivityRecord;

    move-result-object v6

    if-nez v6, :cond_9

    .line 28
    iget-boolean v6, v12, Lcom/android/server/wm/Task;->mReuseTask:Z

    if-nez v6, :cond_9

    move v6, v4

    goto :goto_4

    :cond_9
    const/4 v6, 0x0

    :goto_4
    if-eqz v6, :cond_a

    move-object v7, v12

    goto :goto_5

    :cond_a
    move-object v7, v1

    .line 29
    :goto_5
    iget-object v11, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 30
    invoke-virtual {v11, v7}, Lcom/android/server/wm/TransitionController;->requestCloseTransitionIfNeeded(Lcom/android/server/wm/WindowContainer;)Lcom/android/server/wm/Transition;

    move-result-object v11

    .line 31
    const-string v13, "clear-task-all"

    .line 32
    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    if-nez v13, :cond_c

    const-string v13, "clear-task-stack"

    .line 33
    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    if-nez v13, :cond_c

    const-string v13, "clear-task-top"

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_b

    goto :goto_6

    :cond_b
    const/4 v0, 0x0

    goto :goto_7

    :cond_c
    :goto_6
    move v0, v4

    :goto_7
    if-nez v0, :cond_d

    .line 34
    iget-object v13, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v13, v13, Lcom/android/server/wm/ActivityTaskManagerService;->mDexCompatController:Lcom/android/server/wm/DexCompatController;

    const/4 v14, 0x0

    .line 35
    invoke-virtual {v5, v14}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    move-result-object v15

    .line 36
    invoke-virtual {v13, v12, v15}, Lcom/android/server/wm/DexCompatController;->changeWindowingModeIfNeeded(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;)V

    .line 37
    :cond_d
    sget-boolean v13, Lcom/samsung/android/rune/CoreRune;->MW_SHELL_CHANGE_TRANSITION:Z

    if-eqz v13, :cond_e

    .line 38
    iget-object v14, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v14, v14, Lcom/android/server/wm/ActivityTaskManagerService;->mChangeTransitController:Lcom/android/server/wm/ChangeTransitionController;

    .line 39
    const-string v15, "finished"

    .line 40
    invoke-virtual {v14, v1, v15}, Lcom/android/server/wm/ChangeTransitionController;->removeFromSyncDeferredForAllDrawn(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;)V

    :cond_e
    if-eqz v11, :cond_f

    .line 41
    invoke-virtual {v11, v7}, Lcom/android/server/wm/Transition;->collectClose(Lcom/android/server/wm/WindowContainer;)V

    goto :goto_8

    .line 42
    :cond_f
    iget-object v14, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    invoke-virtual {v14}, Lcom/android/server/wm/TransitionController;->isCollecting()Z

    move-result v14

    if-eqz v14, :cond_10

    .line 43
    iget-object v14, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 44
    iget-object v14, v14, Lcom/android/server/wm/TransitionController;->mCollectingTransition:Lcom/android/server/wm/Transition;

    .line 45
    invoke-virtual {v14, v7}, Lcom/android/server/wm/Transition;->collectClose(Lcom/android/server/wm/WindowContainer;)V

    .line 46
    :cond_10
    :goto_8
    sget-boolean v7, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    const/4 v14, 0x0

    if-eqz v7, :cond_11

    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    if-eqz v7, :cond_11

    if-nez v6, :cond_11

    .line 47
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isSplitEmbedded()Z

    move-result v7

    if-eqz v7, :cond_11

    invoke-virtual {v12}, Lcom/android/server/wm/WindowContainer;->getTopMostActivity()Lcom/android/server/wm/ActivityRecord;

    move-result-object v7

    if-ne v7, v1, :cond_11

    .line 48
    invoke-virtual {v12}, Lcom/android/server/wm/TaskFragment;->getNonFinishingActivityCount()I

    move-result v7

    if-eqz v7, :cond_11

    .line 49
    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 50
    invoke-virtual {v7, v14}, Lcom/android/server/wm/WindowProcessController;->updateActivityConfigurationListener(Lcom/android/server/wm/ActivityRecord;)V

    .line 51
    :cond_11
    sget-boolean v7, Lcom/samsung/android/rune/CoreRune;->FW_FLEX_PANEL:Z

    if-eqz v7, :cond_12

    iget-boolean v7, v1, Lcom/android/server/wm/ActivityRecord;->mIsFlexPanel:Z

    if-eqz v7, :cond_12

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->isAttached()Z

    move-result v7

    if-eqz v7, :cond_12

    .line 52
    iget-object v7, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->reconfigureDisplayLocked()V

    .line 53
    :cond_12
    sget-boolean v7, Lcom/samsung/android/rune/CoreRune;->MW_SPLIT_SHELL_TRANSITION:Z

    if-eqz v7, :cond_16

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->inSplitScreenWindowingMode()Z

    move-result v7

    if-eqz v7, :cond_16

    iget-object v7, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 54
    invoke-virtual {v7}, Lcom/android/server/wm/TransitionController;->getCollectingTransitionType()I

    move-result v7

    const/4 v15, 0x3

    if-ne v7, v15, :cond_16

    .line 55
    iget-object v7, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 56
    iget-object v7, v7, Lcom/android/server/wm/TransitionController;->mCollectingTransition:Lcom/android/server/wm/Transition;

    .line 57
    iget-object v15, v7, Lcom/android/server/wm/Transition;->mChanges:Landroid/util/ArrayMap;

    invoke-virtual {v15, v12}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Transition$ChangeInfo;

    if-eqz v0, :cond_13

    .line 58
    iget-boolean v0, v12, Lcom/android/server/wm/Task;->mReuseTask:Z

    if-eqz v0, :cond_13

    move v0, v4

    goto :goto_9

    :cond_13
    const/4 v0, 0x0

    :goto_9
    if-eqz v15, :cond_16

    .line 59
    invoke-virtual {v12}, Lcom/android/server/wm/TaskFragment;->getNonFinishingActivityCount()I

    move-result v17

    if-eqz v0, :cond_14

    .line 60
    iput-boolean v4, v15, Lcom/android/server/wm/Transition$ChangeInfo;->mForceChangeSplitTask:Z

    :goto_a
    const/4 v0, 0x0

    goto :goto_c

    :cond_14
    if-lez v17, :cond_15

    move v0, v4

    goto :goto_b

    :cond_15
    const/4 v0, 0x0

    .line 61
    :goto_b
    iput-boolean v0, v15, Lcom/android/server/wm/Transition$ChangeInfo;->mForceChangeSplitTask:Z

    goto :goto_a

    .line 62
    :goto_c
    invoke-virtual {v12, v0}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    move-result-object v15

    if-eqz v15, :cond_16

    .line 63
    invoke-virtual {v15, v0}, Lcom/android/server/wm/ActivityRecord;->shouldBeVisible(Z)Z

    move-result v16

    if-eqz v16, :cond_16

    .line 64
    invoke-virtual {v15}, Lcom/android/server/wm/WindowContainer;->isVisibleRequested()Z

    move-result v16

    if-nez v16, :cond_16

    .line 65
    iget-boolean v0, v12, Lcom/android/server/wm/Task;->mReuseTask:Z

    if-nez v0, :cond_16

    .line 66
    invoke-virtual {v12, v4, v14}, Lcom/android/server/wm/Task;->ensureActivitiesVisible(ZLcom/android/server/wm/ActivityRecord;)V

    const/4 v0, 0x0

    .line 67
    invoke-virtual {v7, v15, v0}, Lcom/android/server/wm/Transition;->collect(Lcom/android/server/wm/WindowContainer;Z)V

    .line 68
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    const-string v2, ", reason=prev_top_finished"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v8, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 69
    :cond_16
    invoke-virtual {v1, v9}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    move-result v0

    const/4 v2, 0x2

    if-eqz v0, :cond_1e

    if-eqz v6, :cond_17

    .line 70
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 71
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mTaskChangeNotificationController:Lcom/android/server/wm/TaskChangeNotificationController;

    .line 72
    invoke-virtual {v12}, Lcom/android/server/wm/Task;->getTaskInfo()Landroid/app/ActivityManager$RunningTaskInfo;

    move-result-object v7

    .line 73
    iget-object v8, v0, Lcom/android/server/wm/TaskChangeNotificationController;->mHandler:Lcom/android/server/wm/TaskChangeNotificationController$MainHandler;

    const/16 v9, 0xd

    .line 74
    invoke-virtual {v8, v9, v7}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v7

    .line 75
    iget-object v8, v0, Lcom/android/server/wm/TaskChangeNotificationController;->mNotifyTaskRemovalStarted:Lcom/android/server/wm/TaskChangeNotificationController$$ExternalSyntheticLambda0;

    invoke-virtual {v0, v8, v7}, Lcom/android/server/wm/TaskChangeNotificationController;->forAllLocalListeners(Lcom/android/server/wm/TaskChangeNotificationController$$ExternalSyntheticLambda0;Landroid/os/Message;)V

    .line 76
    invoke-virtual {v7}, Landroid/os/Message;->sendToTarget()V

    .line 77
    :cond_17
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v7, 0x0

    .line 78
    invoke-virtual {v0, v2, v7}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(II)V

    .line 79
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    invoke-virtual {v0}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    move-result v0

    if-nez v0, :cond_18

    .line 80
    invoke-virtual {v12}, Lcom/android/server/wm/Task;->isAnimatingByRecents()Z

    move-result v0

    if-nez v0, :cond_18

    .line 81
    filled-new-array {v12}, [Lcom/android/server/wm/Task;

    move-result-object v0

    invoke-static {v0}, Lcom/google/android/collect/Sets;->newArraySet([Ljava/lang/Object;)Landroid/util/ArraySet;

    move-result-object v0

    .line 82
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v2, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    invoke-virtual {v2, v0}, Lcom/android/server/wm/TaskSnapshotController;->snapshotTasks(Landroid/util/ArraySet;)V

    .line 83
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v2, Lcom/android/server/wm/WindowManagerService;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    .line 84
    invoke-virtual {v2, v0}, Lcom/android/server/wm/TaskSnapshotController;->addSkipClosingAppSnapshotTasks(Ljava/util/Set;)V

    :cond_18
    const/4 v0, 0x0

    .line 85
    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityRecord;->setVisibility(Z)V

    .line 86
    iget-boolean v2, v1, Lcom/android/server/wm/ActivityRecord;->mLastImeShown:Z

    if-eqz v2, :cond_19

    iget-object v2, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    invoke-virtual {v2}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    move-result v2

    if-eqz v2, :cond_19

    .line 87
    invoke-virtual {v12, v0}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    move-result-object v2

    if-eqz v2, :cond_19

    .line 88
    iput-boolean v4, v2, Lcom/android/server/wm/ActivityRecord;->mLastImeShown:Z

    .line 89
    :cond_19
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    move-result-object v0

    .line 90
    iget-object v0, v0, Lcom/android/server/wm/TaskFragment;->mPausingActivity:Lcom/android/server/wm/ActivityRecord;

    if-eqz v0, :cond_1a

    goto :goto_d

    .line 91
    :cond_1a
    aget-boolean v0, v3, v4

    if-eqz v0, :cond_1b

    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    sget-object v17, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    filled-new-array {v0}, [Ljava/lang/Object;

    move-result-object v22

    const/16 v20, 0x0

    const/16 v21, 0x0

    const-wide v18, -0x333b2ba35a5ccca2L    # -6.694355630287763E61

    invoke-static/range {v17 .. v22}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 92
    :cond_1b
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    move-result-object v0

    const-string v2, "finish"

    const/4 v3, 0x0

    invoke-virtual {v0, v14, v2, v3, v3}, Lcom/android/server/wm/TaskFragment;->startPausing$1(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;ZZ)Z

    :goto_d
    if-eqz v6, :cond_1c

    .line 93
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 94
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mLockTaskController:Lcom/android/server/wm/LockTaskController;

    .line 95
    invoke-virtual {v0, v12}, Lcom/android/server/wm/LockTaskController;->clearLockedTask(Lcom/android/server/wm/Task;)V

    if-eqz v10, :cond_1c

    .line 96
    iput-boolean v4, v1, Lcom/android/server/wm/WindowContainer;->mNeedsZBoost:Z

    .line 97
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContent;->assignWindowLayers(Z)V

    :cond_1c
    if-eqz v13, :cond_1d

    .line 98
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MW_SHELL_TRANSITION_BUG_FIX:Z

    if-eqz v0, :cond_1d

    if-nez v6, :cond_1d

    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mChangeTransitController:Lcom/android/server/wm/ChangeTransitionController;

    .line 99
    invoke-virtual {v0, v12}, Lcom/android/server/wm/ChangeTransitionController;->isInChangeTransition(Lcom/android/server/wm/WindowContainer;)Z

    move-result v0

    if-eqz v0, :cond_1d

    .line 100
    invoke-virtual {v5, v4, v14}, Lcom/android/server/wm/Task;->ensureActivitiesVisible(ZLcom/android/server/wm/ActivityRecord;)V

    .line 101
    :cond_1d
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MW_SHELL_TRANSITION_BUG_FIX:Z

    if-eqz v0, :cond_24

    iget-boolean v0, v1, Lcom/android/server/wm/ActivityRecord;->noDisplay:Z

    if-eqz v0, :cond_24

    .line 102
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->inFreeformWindowingMode()Z

    move-result v0

    if-eqz v0, :cond_24

    if-eqz v6, :cond_24

    .line 103
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v2, 0x5

    invoke-virtual {v0, v2, v4}, Lcom/android/server/wm/DisplayContent;->getRootTask(II)Lcom/android/server/wm/Task;

    move-result-object v0

    if-eq v12, v0, :cond_24

    if-eqz v0, :cond_24

    .line 104
    iget-boolean v2, v0, Lcom/android/server/wm/Task;->mIsAliasManaged:Z

    if-eqz v2, :cond_24

    .line 105
    invoke-virtual {v0, v4, v14}, Lcom/android/server/wm/Task;->ensureActivitiesVisible(ZLcom/android/server/wm/ActivityRecord;)V

    goto :goto_10

    .line 106
    :cond_1e
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    move-result v0

    if-nez v0, :cond_25

    .line 107
    iget-boolean v0, v1, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    if-eqz v0, :cond_20

    .line 108
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    invoke-virtual {v0}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    move-result v0

    if-eqz v0, :cond_1f

    const/4 v0, 0x0

    .line 109
    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityRecord;->setVisibility(Z)V

    if-eqz v11, :cond_20

    .line 110
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v11, v0, v4}, Lcom/android/server/wm/Transition;->setReady(Lcom/android/server/wm/WindowContainer;Z)V

    goto :goto_e

    .line 111
    :cond_1f
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v3, 0x0

    .line 112
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/DisplayContent;->prepareAppTransition(II)V

    .line 113
    invoke-virtual {v1, v3}, Lcom/android/server/wm/ActivityRecord;->setVisibility(Z)V

    .line 114
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 115
    :cond_20
    :goto_e
    const-string v0, "finishIfPossible"

    const/4 v3, 0x1

    .line 116
    invoke-virtual {v1, v0, v3}, Lcom/android/server/wm/ActivityRecord;->completeFinishing(Ljava/lang/String;Z)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    if-nez v0, :cond_21

    move v13, v4

    goto :goto_f

    :cond_21
    const/4 v13, 0x0

    :goto_f
    if-eqz p5, :cond_22

    .line 117
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    move-result v0

    if-eqz v0, :cond_22

    .line 118
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateOomAdj()V

    :cond_22
    const/4 v0, 0x0

    .line 119
    invoke-virtual {v12, v0}, Lcom/android/server/wm/Task;->onlyHasTaskOverlayActivities(Z)Z

    move-result v0

    if-eqz v0, :cond_23

    .line 120
    new-instance v0, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;

    const/4 v3, 0x1

    invoke-direct {v0, v3}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;-><init>(I)V

    invoke-virtual {v12, v0}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Consumer;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_23
    if-eqz v13, :cond_24

    move v4, v2

    .line 121
    :cond_24
    :goto_10
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->continueWindowLayout()V

    return v4

    .line 122
    :cond_25
    :try_start_1
    aget-boolean v0, v3, v4

    if-eqz v0, :cond_24

    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    filled-new-array {v0}, [Ljava/lang/Object;

    move-result-object v10

    const/4 v8, 0x0

    const/4 v9, 0x0

    const-wide v6, 0x50ae2f9377be3f40L    # 4.4739608754666086E80

    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_10

    .line 123
    :goto_11
    iget-object v1, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v1}, Lcom/android/server/wm/ActivityTaskManagerService;->continueWindowLayout()V

    .line 124
    throw v0
.end method

.method public final finishIfPossible(Ljava/lang/String;Z)I
    .locals 6

    const/4 v3, 0x0

    const/4 v1, 0x0

    const/4 v2, 0x0

    move-object v0, p0

    move-object v4, p1

    move v5, p2

    .line 1
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/ActivityRecord;->finishIfPossible(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;Ljava/lang/String;Z)I

    move-result p0

    return p0
.end method

.method public final finishRelaunching()V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 4
    .line 5
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatOrientationOverrides:Lcom/android/server/wm/AppCompatOrientationOverrides;

    .line 6
    .line 7
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOrientationOverrides;->mOrientationOverridesState:Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;

    .line 8
    .line 9
    const/4 v1, 0x0

    .line 10
    iput-boolean v1, v0, Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;->mIsRelaunchingAfterRequestedOrientationChanged:Z

    .line 11
    .line 12
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 13
    .line 14
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mActivityMetricsLogger:Lcom/android/server/wm/ActivityMetricsLogger;

    .line 15
    .line 16
    invoke-virtual {v0, p0}, Lcom/android/server/wm/ActivityMetricsLogger;->getActiveTransitionInfo(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;

    .line 17
    .line 18
    .line 19
    move-result-object v0

    .line 20
    const/4 v1, 0x1

    .line 21
    if-eqz v0, :cond_0

    .line 22
    .line 23
    iput-boolean v1, v0, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;->mRelaunched:Z

    .line 24
    .line 25
    :cond_0
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 26
    .line 27
    if-lez v0, :cond_1

    .line 28
    .line 29
    sub-int/2addr v0, v1

    .line 30
    iput v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 31
    .line 32
    if-nez v0, :cond_2

    .line 33
    .line 34
    iget-boolean v0, p0, Lcom/android/server/wm/WindowToken;->mClientVisible:Z

    .line 35
    .line 36
    if-nez v0, :cond_2

    .line 37
    .line 38
    const-wide/16 v2, 0x0

    .line 39
    .line 40
    iput-wide v2, p0, Lcom/android/server/wm/ActivityRecord;->mRelaunchStartTime:J

    .line 41
    .line 42
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 43
    .line 44
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDisplayPolicy:Lcom/android/server/wm/DisplayPolicy;

    .line 45
    .line 46
    iget-object v2, v0, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 47
    .line 48
    invoke-virtual {v2, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 49
    .line 50
    .line 51
    move-result v2

    .line 52
    iget-object v3, v0, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 53
    .line 54
    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    .line 55
    .line 56
    .line 57
    move-result v3

    .line 58
    and-int/2addr v2, v3

    .line 59
    if-eqz v2, :cond_2

    .line 60
    .line 61
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayPolicy;->updateSystemBarAttributes()V

    .line 62
    .line 63
    .line 64
    goto :goto_0

    .line 65
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->checkKeyguardFlagsChanged()V

    .line 66
    .line 67
    .line 68
    :cond_2
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 69
    .line 70
    .line 71
    move-result-object p0

    .line 72
    if-eqz p0, :cond_3

    .line 73
    .line 74
    invoke-virtual {p0}, Lcom/android/server/wm/TaskFragment;->shouldSleepOrShutDownActivities()Z

    .line 75
    .line 76
    .line 77
    move-result v0

    .line 78
    if-eqz v0, :cond_3

    .line 79
    .line 80
    const/4 v0, 0x0

    .line 81
    invoke-virtual {p0, v1, v0}, Lcom/android/server/wm/Task;->ensureActivitiesVisible(ZLcom/android/server/wm/ActivityRecord;)V

    .line 82
    .line 83
    .line 84
    :cond_3
    return-void
.end method

.method public final finishSync(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/BLASTSyncEngine$SyncGroup;Z)V
    .locals 1

    .line 1
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowContainer;->isDifferentSyncGroup(Lcom/android/server/wm/BLASTSyncEngine$SyncGroup;)Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    return-void

    .line 8
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->allSyncFinished()Z

    .line 9
    .line 10
    .line 11
    move-result v0

    .line 12
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastAllReadyAtSync:Z

    .line 13
    .line 14
    invoke-super {p0, p1, p2, p3}, Lcom/android/server/wm/WindowContainer;->finishSync(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/BLASTSyncEngine$SyncGroup;Z)V

    .line 15
    .line 16
    .line 17
    return-void
.end method

.method public final forAllActivities(Ljava/util/function/Consumer;Z)V
    .locals 0

    .line 2
    invoke-interface {p1, p0}, Ljava/util/function/Consumer;->accept(Ljava/lang/Object;)V

    return-void
.end method

.method public final forAllActivities(Ljava/util/function/Predicate;Z)Z
    .locals 0

    .line 1
    invoke-interface {p1, p0}, Ljava/util/function/Predicate;->test(Ljava/lang/Object;)Z

    move-result p0

    return p0
.end method

.method public final getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord;
    .locals 0

    .line 1
    invoke-interface {p1, p0}, Ljava/util/function/Predicate;->test(Ljava/lang/Object;)Z

    .line 2
    .line 3
    .line 4
    move-result p1

    .line 5
    if-eqz p1, :cond_0

    .line 6
    .line 7
    goto :goto_0

    .line 8
    :cond_0
    const/4 p0, 0x0

    .line 9
    :goto_0
    return-object p0
.end method

.method public final getActivityWindowInfo()Landroid/window/ActivityWindowInfo;
    .locals 4

    .line 1
    invoke-static {}, Lcom/android/window/flags/Flags;->activityWindowInfoFlag()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_3

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isAttached()Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-nez v0, :cond_0

    .line 12
    .line 13
    goto :goto_1

    .line 14
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowToken;->isFixedRotationTransforming()Z

    .line 15
    .line 16
    .line 17
    move-result v0

    .line 18
    const/4 v1, 0x0

    .line 19
    if-eqz v0, :cond_1

    .line 20
    .line 21
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getBounds()Landroid/graphics/Rect;

    .line 22
    .line 23
    .line 24
    move-result-object v0

    .line 25
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mTmpActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 26
    .line 27
    invoke-virtual {v2, v1, v0, v0}, Landroid/window/ActivityWindowInfo;->set(ZLandroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 28
    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTmpActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 32
    .line 33
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOrganizedTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 34
    .line 35
    .line 36
    move-result-object v2

    .line 37
    if-eqz v2, :cond_2

    .line 38
    .line 39
    invoke-virtual {v2}, Lcom/android/server/wm/TaskFragment;->isEmbeddedWithBoundsOverride()Z

    .line 40
    .line 41
    .line 42
    move-result v2

    .line 43
    if-eqz v2, :cond_2

    .line 44
    .line 45
    const/4 v1, 0x1

    .line 46
    :cond_2
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 47
    .line 48
    invoke-virtual {v2}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 49
    .line 50
    .line 51
    move-result-object v2

    .line 52
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 53
    .line 54
    .line 55
    move-result-object v3

    .line 56
    invoke-virtual {v3}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 57
    .line 58
    .line 59
    move-result-object v3

    .line 60
    invoke-virtual {v0, v1, v2, v3}, Landroid/window/ActivityWindowInfo;->set(ZLandroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 61
    .line 62
    .line 63
    :goto_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mTmpActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 64
    .line 65
    return-object p0

    .line 66
    :cond_3
    :goto_1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mTmpActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 67
    .line 68
    return-object p0
.end method

.method public getAnimationBounds(I)Landroid/graphics/Rect;
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 2
    .line 3
    .line 4
    move-result-object p1

    .line 5
    if-eqz p1, :cond_0

    .line 6
    .line 7
    invoke-virtual {p1}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 8
    .line 9
    .line 10
    move-result-object p0

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getBounds()Landroid/graphics/Rect;

    .line 13
    .line 14
    .line 15
    move-result-object p0

    .line 16
    :goto_0
    return-object p0
.end method

.method public final getAnimationFrames(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .locals 1

    .line 1
    const/4 v0, 0x1

    .line 2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 3
    .line 4
    .line 5
    move-result-object p0

    .line 6
    if-nez p0, :cond_0

    .line 7
    .line 8
    return-void

    .line 9
    :cond_0
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/server/wm/WindowState;->getAnimationFrames(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 10
    .line 11
    .line 12
    return-void
.end method

.method public final getAnimationLeashParent()Landroid/view/SurfaceControl;
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-nez v0, :cond_1

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inFreeformWindowingMode()Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    goto :goto_0

    .line 14
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParentSurfaceControl()Landroid/view/SurfaceControl;

    .line 15
    .line 16
    .line 17
    move-result-object p0

    .line 18
    return-object p0

    .line 19
    :cond_1
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 20
    .line 21
    .line 22
    move-result-object p0

    .line 23
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 24
    .line 25
    return-object p0
.end method

.method public final getAnimationPosition(Landroid/graphics/Point;)V
    .locals 0

    .line 1
    const/4 p0, 0x0

    .line 2
    invoke-virtual {p1, p0, p0}, Landroid/graphics/Point;->set(II)V

    .line 3
    .line 4
    .line 5
    return-void
.end method

.method public final getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 6
    .line 7
    iget-object v0, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 8
    .line 9
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 10
    .line 11
    iget-object v1, v0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 12
    .line 13
    invoke-virtual {v1}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->isRunning()Z

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    if-eqz v1, :cond_0

    .line 18
    .line 19
    iget-object v0, v0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 20
    .line 21
    iget-object v0, v0, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->mInheritedAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 22
    .line 23
    goto :goto_0

    .line 24
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 25
    .line 26
    :goto_0
    if-eqz v0, :cond_1

    .line 27
    .line 28
    goto :goto_1

    .line 29
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mPreCreatedAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 30
    .line 31
    :goto_1
    return-object v0
.end method

.method public final getAppCompatState(Z)I
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 2
    .line 3
    iget-boolean p1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 4
    .line 5
    if-nez p1, :cond_0

    .line 6
    .line 7
    const/4 p0, 0x1

    .line 8
    return p0

    .line 9
    :cond_0
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 10
    .line 11
    iget-object p1, p1, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 12
    .line 13
    iget-object p1, p1, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 14
    .line 15
    invoke-virtual {p1}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->isRunning()Z

    .line 16
    .line 17
    .line 18
    move-result p1

    .line 19
    if-eqz p1, :cond_1

    .line 20
    .line 21
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 22
    .line 23
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 24
    .line 25
    iget-object p0, p0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 26
    .line 27
    iget p0, p0, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->mInheritedAppCompatState:I

    .line 28
    .line 29
    return p0

    .line 30
    :cond_1
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 31
    .line 32
    iget-object v0, p1, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 33
    .line 34
    iget-boolean v0, v0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mInSizeCompatModeForBounds:Z

    .line 35
    .line 36
    if-eqz v0, :cond_2

    .line 37
    .line 38
    const/4 p0, 0x3

    .line 39
    return p0

    .line 40
    :cond_2
    iget-object p1, p1, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 41
    .line 42
    invoke-virtual {p1}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isLetterboxedForFixedOrientationAndAspectRatio()Z

    .line 43
    .line 44
    .line 45
    move-result p1

    .line 46
    if-eqz p1, :cond_3

    .line 47
    .line 48
    const/4 p0, 0x4

    .line 49
    return p0

    .line 50
    :cond_3
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 51
    .line 52
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 53
    .line 54
    iget-object p0, p0, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 55
    .line 56
    iget-object p0, p0, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mLetterboxBoundsForAspectRatio:Landroid/graphics/Rect;

    .line 57
    .line 58
    if-eqz p0, :cond_4

    .line 59
    .line 60
    const/4 p0, 0x5

    .line 61
    return p0

    .line 62
    :cond_4
    const/4 p0, 0x2

    .line 63
    return p0
.end method

.method public final getBounds()Landroid/graphics/Rect;
    .locals 3

    .line 1
    invoke-super {p0}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 6
    .line 7
    if-eqz v1, :cond_0

    .line 8
    .line 9
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 10
    .line 11
    if-eqz v1, :cond_0

    .line 12
    .line 13
    invoke-virtual {v1}, Lcom/android/server/wm/SizeCompatAttributes;->hasBounds()Z

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    if-eqz v1, :cond_0

    .line 18
    .line 19
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 20
    .line 21
    invoke-virtual {p0}, Lcom/android/server/wm/SizeCompatAttributes;->getBounds()Landroid/graphics/Rect;

    .line 22
    .line 23
    .line 24
    move-result-object p0

    .line 25
    return-object p0

    .line 26
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 27
    .line 28
    iget-object v1, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 29
    .line 30
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 31
    .line 32
    iget-object p0, p0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 33
    .line 34
    invoke-virtual {p0}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->findOpaqueNotFinishingActivityBelow()Ljava/util/Optional;

    .line 35
    .line 36
    .line 37
    move-result-object p0

    .line 38
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda16;

    .line 39
    .line 40
    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    .line 41
    .line 42
    .line 43
    invoke-virtual {p0, v2}, Ljava/util/Optional;->map(Ljava/util/function/Function;)Ljava/util/Optional;

    .line 44
    .line 45
    .line 46
    move-result-object p0

    .line 47
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda17;

    .line 48
    .line 49
    invoke-direct {v2, v1, v0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda17;-><init>(Lcom/android/server/wm/AppCompatSizeCompatModePolicy;Landroid/graphics/Rect;)V

    .line 50
    .line 51
    .line 52
    invoke-virtual {p0, v2}, Ljava/util/Optional;->orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;

    .line 53
    .line 54
    .line 55
    move-result-object p0

    .line 56
    check-cast p0, Landroid/graphics/Rect;

    .line 57
    .line 58
    return-object p0
.end method

.method public final getCompatScale()F
    .locals 2

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 6
    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    invoke-virtual {v0}, Lcom/android/server/wm/SizeCompatAttributes;->hasBounds()Z

    .line 10
    .line 11
    .line 12
    move-result v0

    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 16
    .line 17
    iget p0, p0, Lcom/android/server/wm/SizeCompatAttributes;->mScale:F

    .line 18
    .line 19
    return p0

    .line 20
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 21
    .line 22
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 23
    .line 24
    new-instance v1, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda19;

    .line 25
    .line 26
    invoke-direct {v1, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda19;-><init>(Lcom/android/server/wm/ActivityRecord;)V

    .line 27
    .line 28
    .line 29
    invoke-virtual {v0}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 30
    .line 31
    .line 32
    move-result p0

    .line 33
    if-eqz p0, :cond_1

    .line 34
    .line 35
    iget p0, v0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 36
    .line 37
    goto :goto_0

    .line 38
    :cond_1
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda19;->getAsDouble()D

    .line 39
    .line 40
    .line 41
    move-result-wide v0

    .line 42
    double-to-float p0, v0

    .line 43
    :goto_0
    return p0
.end method

.method public final bridge synthetic getDisplayArea()Lcom/android/server/wm/DisplayArea;
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayArea()Lcom/android/server/wm/TaskDisplayArea;

    move-result-object p0

    return-object p0
.end method

.method public final getDisplayArea()Lcom/android/server/wm/TaskDisplayArea;
    .locals 0

    .line 2
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    move-result-object p0

    check-cast p0, Lcom/android/server/wm/TaskDisplayArea;

    return-object p0
.end method

.method public final getDisplayId()I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    if-eqz p0, :cond_0

    .line 4
    .line 5
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 6
    .line 7
    if-eqz p0, :cond_0

    .line 8
    .line 9
    iget p0, p0, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 10
    .line 11
    goto :goto_0

    .line 12
    :cond_0
    const/4 p0, -0x1

    .line 13
    :goto_0
    return p0
.end method

.method public final getFilteredReferrer(Ljava/lang/String;)Ljava/lang/String;
    .locals 3

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->SYSFW_APP_SPEG:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    const-string v0, "com.samsung.speg"

    .line 6
    .line 7
    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    const-string p0, "SPEG"

    .line 14
    .line 15
    const-string v0, "Passing referrer value"

    .line 16
    .line 17
    invoke-static {p0, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18
    .line 19
    .line 20
    return-object p1

    .line 21
    :cond_0
    if-eqz p1, :cond_2

    .line 22
    .line 23
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 24
    .line 25
    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 26
    .line 27
    .line 28
    move-result v0

    .line 29
    if-nez v0, :cond_1

    .line 30
    .line 31
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 32
    .line 33
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPmInternal:Landroid/content/pm/PackageManagerInternal;

    .line 34
    .line 35
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 36
    .line 37
    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 38
    .line 39
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 40
    .line 41
    iget p0, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 42
    .line 43
    const/4 v2, 0x1

    .line 44
    invoke-virtual {v0, v1, p0, p1, v2}, Landroid/content/pm/PackageManagerInternal;->filterAppAccess(IILjava/lang/String;Z)Z

    .line 45
    .line 46
    .line 47
    move-result p0

    .line 48
    if-eqz p0, :cond_1

    .line 49
    .line 50
    goto :goto_0

    .line 51
    :cond_1
    return-object p1

    .line 52
    :cond_2
    :goto_0
    const/4 p0, 0x0

    .line 53
    return-object p0
.end method

.method public final getInputApplicationHandle(Z)Landroid/view/InputApplicationHandle;
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mInputApplicationHandle:Landroid/view/InputApplicationHandle;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    new-instance p1, Landroid/view/InputApplicationHandle;

    .line 6
    .line 7
    iget-object v0, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 8
    .line 9
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->toString()Ljava/lang/String;

    .line 10
    .line 11
    .line 12
    move-result-object v1

    .line 13
    iget-wide v2, p0, Lcom/android/server/wm/ActivityRecord;->mInputDispatchingTimeoutMillis:J

    .line 14
    .line 15
    invoke-direct {p1, v0, v1, v2, v3}, Landroid/view/InputApplicationHandle;-><init>(Landroid/os/IBinder;Ljava/lang/String;J)V

    .line 16
    .line 17
    .line 18
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mInputApplicationHandle:Landroid/view/InputApplicationHandle;

    .line 19
    .line 20
    goto :goto_0

    .line 21
    :cond_0
    if-eqz p1, :cond_2

    .line 22
    .line 23
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->toString()Ljava/lang/String;

    .line 24
    .line 25
    .line 26
    move-result-object p1

    .line 27
    iget-wide v0, p0, Lcom/android/server/wm/ActivityRecord;->mInputDispatchingTimeoutMillis:J

    .line 28
    .line 29
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mInputApplicationHandle:Landroid/view/InputApplicationHandle;

    .line 30
    .line 31
    iget-wide v3, v2, Landroid/view/InputApplicationHandle;->dispatchingTimeoutMillis:J

    .line 32
    .line 33
    cmp-long v0, v0, v3

    .line 34
    .line 35
    if-nez v0, :cond_1

    .line 36
    .line 37
    iget-object v0, v2, Landroid/view/InputApplicationHandle;->name:Ljava/lang/String;

    .line 38
    .line 39
    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 40
    .line 41
    .line 42
    move-result v0

    .line 43
    if-nez v0, :cond_2

    .line 44
    .line 45
    :cond_1
    new-instance v0, Landroid/view/InputApplicationHandle;

    .line 46
    .line 47
    iget-object v1, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 48
    .line 49
    iget-wide v2, p0, Lcom/android/server/wm/ActivityRecord;->mInputDispatchingTimeoutMillis:J

    .line 50
    .line 51
    invoke-direct {v0, v1, p1, v2, v3}, Landroid/view/InputApplicationHandle;-><init>(Landroid/os/IBinder;Ljava/lang/String;J)V

    .line 52
    .line 53
    .line 54
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mInputApplicationHandle:Landroid/view/InputApplicationHandle;

    .line 55
    .line 56
    :cond_2
    :goto_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mInputApplicationHandle:Landroid/view/InputApplicationHandle;

    .line 57
    .line 58
    return-object p0
.end method

.method public final getLetterboxInsets()Landroid/graphics/Rect;
    .locals 5

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 4
    .line 5
    iget-object p0, p0, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->isRunning()Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    iget-object p0, p0, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->mLetterbox:Lcom/android/server/wm/Letterbox;

    .line 14
    .line 15
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 16
    .line 17
    .line 18
    new-instance v0, Landroid/graphics/Rect;

    .line 19
    .line 20
    iget-object v1, p0, Lcom/android/server/wm/Letterbox;->mLeft:Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 21
    .line 22
    iget-object v1, v1, Lcom/android/server/wm/Letterbox$LetterboxSurface;->mLayoutFrameGlobal:Landroid/graphics/Rect;

    .line 23
    .line 24
    invoke-virtual {v1}, Landroid/graphics/Rect;->width()I

    .line 25
    .line 26
    .line 27
    move-result v1

    .line 28
    const/4 v2, 0x0

    .line 29
    invoke-static {v2, v1}, Ljava/lang/Math;->max(II)I

    .line 30
    .line 31
    .line 32
    move-result v1

    .line 33
    iget-object v3, p0, Lcom/android/server/wm/Letterbox;->mTop:Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 34
    .line 35
    iget-object v3, v3, Lcom/android/server/wm/Letterbox$LetterboxSurface;->mLayoutFrameGlobal:Landroid/graphics/Rect;

    .line 36
    .line 37
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    .line 38
    .line 39
    .line 40
    move-result v3

    .line 41
    invoke-static {v2, v3}, Ljava/lang/Math;->max(II)I

    .line 42
    .line 43
    .line 44
    move-result v3

    .line 45
    iget-object v4, p0, Lcom/android/server/wm/Letterbox;->mRight:Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 46
    .line 47
    iget-object v4, v4, Lcom/android/server/wm/Letterbox$LetterboxSurface;->mLayoutFrameGlobal:Landroid/graphics/Rect;

    .line 48
    .line 49
    invoke-virtual {v4}, Landroid/graphics/Rect;->width()I

    .line 50
    .line 51
    .line 52
    move-result v4

    .line 53
    invoke-static {v2, v4}, Ljava/lang/Math;->max(II)I

    .line 54
    .line 55
    .line 56
    move-result v4

    .line 57
    iget-object p0, p0, Lcom/android/server/wm/Letterbox;->mBottom:Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 58
    .line 59
    iget-object p0, p0, Lcom/android/server/wm/Letterbox$LetterboxSurface;->mLayoutFrameGlobal:Landroid/graphics/Rect;

    .line 60
    .line 61
    invoke-virtual {p0}, Landroid/graphics/Rect;->height()I

    .line 62
    .line 63
    .line 64
    move-result p0

    .line 65
    invoke-static {v2, p0}, Ljava/lang/Math;->max(II)I

    .line 66
    .line 67
    .line 68
    move-result p0

    .line 69
    invoke-direct {v0, v1, v3, v4, p0}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 70
    .line 71
    .line 72
    goto :goto_0

    .line 73
    :cond_0
    new-instance v0, Landroid/graphics/Rect;

    .line 74
    .line 75
    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 76
    .line 77
    .line 78
    :goto_0
    return-object v0
.end method

.method public final getMaxAspectRatio()F
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 6
    .line 7
    iget-object v1, v0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 8
    .line 9
    invoke-virtual {v1}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->isRunning()Z

    .line 10
    .line 11
    .line 12
    move-result v1

    .line 13
    if-eqz v1, :cond_0

    .line 14
    .line 15
    iget-object p0, v0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 16
    .line 17
    iget p0, p0, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->mInheritedMaxAspectRatio:F

    .line 18
    .line 19
    goto :goto_0

    .line 20
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 21
    .line 22
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 23
    .line 24
    invoke-virtual {p0}, Landroid/content/pm/ActivityInfo;->getMaxAspectRatio()F

    .line 25
    .line 26
    .line 27
    move-result p0

    .line 28
    :goto_0
    return p0
.end method

.method public final getMinAspectRatio()F
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->getMinAspectRatio()F

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    return p0
.end method

.method public final getMinDimensions()Landroid/graphics/Point;
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2
    .line 3
    iget-object p0, p0, Landroid/content/pm/ActivityInfo;->windowLayout:Landroid/content/pm/ActivityInfo$WindowLayout;

    .line 4
    .line 5
    if-nez p0, :cond_0

    .line 6
    .line 7
    const/4 p0, 0x0

    .line 8
    return-object p0

    .line 9
    :cond_0
    new-instance v0, Landroid/graphics/Point;

    .line 10
    .line 11
    iget v1, p0, Landroid/content/pm/ActivityInfo$WindowLayout;->minWidth:I

    .line 12
    .line 13
    iget p0, p0, Landroid/content/pm/ActivityInfo$WindowLayout;->minHeight:I

    .line 14
    .line 15
    invoke-direct {v0, v1, p0}, Landroid/graphics/Point;-><init>(II)V

    .line 16
    .line 17
    .line 18
    return-object v0
.end method

.method public final getOrganizedTaskFragment()Lcom/android/server/wm/TaskFragment;
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    if-eqz p0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/TaskFragment;->getOrganizedTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 8
    .line 9
    .line 10
    move-result-object p0

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    const/4 p0, 0x0

    .line 13
    :goto_0
    return-object p0
.end method

.method public final getOrientation(I)I
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 2
    .line 3
    const/4 v1, -0x2

    .line 4
    if-nez v0, :cond_2

    .line 5
    .line 6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->shouldIgnoreOrientationRequests()Z

    .line 7
    .line 8
    .line 9
    move-result v0

    .line 10
    if-eqz v0, :cond_0

    .line 11
    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const/4 v0, 0x3

    .line 14
    if-ne p1, v0, :cond_1

    .line 15
    .line 16
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 17
    .line 18
    .line 19
    move-result p0

    .line 20
    return p0

    .line 21
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isVisibleRequested()Z

    .line 22
    .line 23
    .line 24
    move-result p1

    .line 25
    if-eqz p1, :cond_2

    .line 26
    .line 27
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 28
    .line 29
    .line 30
    move-result p0

    .line 31
    return p0

    .line 32
    :cond_2
    :goto_0
    return v1
.end method

.method public final getOverrideOrientation()I
    .locals 15

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mOrientationPolicy:Lcom/android/server/wm/AppCompatOrientationPolicy;

    .line 4
    .line 5
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getOverrideOrientation()I

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    iget-object v1, v0, Lcom/android/server/wm/AppCompatOrientationPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 10
    .line 11
    iget-object v2, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 12
    .line 13
    const/4 v3, 0x1

    .line 14
    if-eqz v2, :cond_0

    .line 15
    .line 16
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayArea;->getIgnoreOrientationRequest()Z

    .line 17
    .line 18
    .line 19
    move-result v4

    .line 20
    if-eqz v4, :cond_0

    .line 21
    .line 22
    move v4, v3

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    const/4 v4, 0x0

    .line 25
    :goto_0
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOrientationPolicy;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 26
    .line 27
    iget-object v5, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 28
    .line 29
    invoke-virtual {v5}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->shouldApplyUserFullscreenOverride()Z

    .line 30
    .line 31
    .line 32
    move-result v5

    .line 33
    iget-object v6, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 34
    .line 35
    const-string v7, " by user aspect ratio settings."

    .line 36
    .line 37
    const-string v8, "Requested orientation "

    .line 38
    .line 39
    const/4 v9, 0x2

    .line 40
    const-string v10, " is overridden to "

    .line 41
    .line 42
    const-string v11, " for "

    .line 43
    .line 44
    const-string v12, "ActivityTaskManager"

    .line 45
    .line 46
    if-eqz v5, :cond_1

    .line 47
    .line 48
    if-eqz v4, :cond_1

    .line 49
    .line 50
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatCameraOverrides;->isCameraActive()Z

    .line 51
    .line 52
    .line 53
    move-result v5

    .line 54
    if-nez v5, :cond_1

    .line 55
    .line 56
    new-instance v0, Ljava/lang/StringBuilder;

    .line 57
    .line 58
    invoke-direct {v0, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 59
    .line 60
    .line 61
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 62
    .line 63
    .line 64
    move-result-object p0

    .line 65
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 66
    .line 67
    .line 68
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 69
    .line 70
    .line 71
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 72
    .line 73
    .line 74
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 75
    .line 76
    .line 77
    invoke-static {v9}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 78
    .line 79
    .line 80
    move-result-object p0

    .line 81
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 82
    .line 83
    .line 84
    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 85
    .line 86
    .line 87
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 88
    .line 89
    .line 90
    move-result-object p0

    .line 91
    invoke-static {v12, p0}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 92
    .line 93
    .line 94
    :goto_1
    move v3, v9

    .line 95
    goto/16 :goto_5

    .line 96
    .line 97
    :cond_1
    iget-object v5, v1, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 98
    .line 99
    iget-boolean v13, v5, Lcom/android/server/wm/WindowManagerService;->mIsIgnoreOrientationRequestDisabled:Z

    .line 100
    .line 101
    if-nez v13, :cond_2

    .line 102
    .line 103
    goto :goto_2

    .line 104
    :cond_2
    iget-object v5, v5, Lcom/android/server/wm/WindowManagerService;->mOrientationMapping:Landroid/util/SparseIntArray;

    .line 105
    .line 106
    invoke-virtual {v5, p0, p0}, Landroid/util/SparseIntArray;->get(II)I

    .line 107
    .line 108
    .line 109
    move-result p0

    .line 110
    :goto_2
    iget-object v5, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 111
    .line 112
    invoke-virtual {v5}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->shouldApplyUserMinAspectRatioOverride()Z

    .line 113
    .line 114
    .line 115
    move-result v13

    .line 116
    sget-boolean v14, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ORIENTATION_POLICY:Z

    .line 117
    .line 118
    if-eqz v14, :cond_3

    .line 119
    .line 120
    if-eqz v2, :cond_3

    .line 121
    .line 122
    iget-boolean v14, v2, Lcom/android/server/wm/DisplayArea;->mSetIgnoreOrientationRequestOverride:Z

    .line 123
    .line 124
    if-eqz v14, :cond_3

    .line 125
    .line 126
    goto :goto_3

    .line 127
    :cond_3
    if-eqz v13, :cond_5

    .line 128
    .line 129
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->isFixedOrientation(I)Z

    .line 130
    .line 131
    .line 132
    move-result v13

    .line 133
    if-eqz v13, :cond_4

    .line 134
    .line 135
    const/16 v13, 0xe

    .line 136
    .line 137
    if-ne p0, v13, :cond_5

    .line 138
    .line 139
    :cond_4
    new-instance v0, Ljava/lang/StringBuilder;

    .line 140
    .line 141
    invoke-direct {v0, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 142
    .line 143
    .line 144
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 145
    .line 146
    .line 147
    move-result-object p0

    .line 148
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 149
    .line 150
    .line 151
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 152
    .line 153
    .line 154
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 155
    .line 156
    .line 157
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 158
    .line 159
    .line 160
    invoke-static {v3}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 161
    .line 162
    .line 163
    move-result-object p0

    .line 164
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 165
    .line 166
    .line 167
    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 168
    .line 169
    .line 170
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 171
    .line 172
    .line 173
    move-result-object p0

    .line 174
    invoke-static {v12, p0}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 175
    .line 176
    .line 177
    goto/16 :goto_5

    .line 178
    .line 179
    :cond_5
    :goto_3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatOrientationOverrides:Lcom/android/server/wm/AppCompatOrientationOverrides;

    .line 180
    .line 181
    iget-object v7, v0, Lcom/android/server/wm/AppCompatOrientationOverrides;->mAllowOrientationOverrideOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 182
    .line 183
    invoke-virtual {v7}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->isFalse()Z

    .line 184
    .line 185
    .line 186
    move-result v7

    .line 187
    if-eqz v7, :cond_7

    .line 188
    .line 189
    :cond_6
    :goto_4
    move v3, p0

    .line 190
    goto/16 :goto_5

    .line 191
    .line 192
    :cond_7
    if-eqz v2, :cond_8

    .line 193
    .line 194
    iget-object v7, v6, Lcom/android/server/wm/AppCompatCameraOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 195
    .line 196
    iget-object v7, v7, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 197
    .line 198
    const-wide/32 v13, 0xfd28b98

    .line 199
    .line 200
    .line 201
    invoke-virtual {v7, v13, v14}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 202
    .line 203
    .line 204
    move-result v7

    .line 205
    if-eqz v7, :cond_8

    .line 206
    .line 207
    iget-object v2, v2, Lcom/android/server/wm/DisplayContent;->mAppCompatCameraPolicy:Lcom/android/server/wm/AppCompatCameraPolicy;

    .line 208
    .line 209
    iget-object v2, v2, Lcom/android/server/wm/AppCompatCameraPolicy;->mDisplayRotationCompatPolicy:Lcom/android/server/wm/DisplayRotationCompatPolicy;

    .line 210
    .line 211
    if-eqz v2, :cond_6

    .line 212
    .line 213
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayRotationCompatPolicy;->isTreatmentEnabledForDisplay()Z

    .line 214
    .line 215
    .line 216
    move-result v7

    .line 217
    if-eqz v7, :cond_6

    .line 218
    .line 219
    invoke-virtual {v2, v3, v1}, Lcom/android/server/wm/DisplayRotationCompatPolicy;->isCameraActive(ZLcom/android/server/wm/ActivityRecord;)Z

    .line 220
    .line 221
    .line 222
    move-result v2

    .line 223
    if-eqz v2, :cond_6

    .line 224
    .line 225
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 226
    .line 227
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 228
    .line 229
    iget-object v2, v2, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 230
    .line 231
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatCameraOverrides;->shouldForceRotateForCameraCompat()Z

    .line 232
    .line 233
    .line 234
    move-result v2

    .line 235
    if-eqz v2, :cond_6

    .line 236
    .line 237
    :cond_8
    invoke-virtual {v5}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->isSystemOverrideToFullscreenEnabled()Z

    .line 238
    .line 239
    .line 240
    move-result v2

    .line 241
    const-string v5, "Requested orientation  "

    .line 242
    .line 243
    if-eqz v2, :cond_9

    .line 244
    .line 245
    if-eqz v4, :cond_9

    .line 246
    .line 247
    invoke-virtual {v6}, Lcom/android/server/wm/AppCompatCameraOverrides;->isCameraActive()Z

    .line 248
    .line 249
    .line 250
    move-result v2

    .line 251
    if-nez v2, :cond_9

    .line 252
    .line 253
    new-instance v0, Ljava/lang/StringBuilder;

    .line 254
    .line 255
    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 256
    .line 257
    .line 258
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 259
    .line 260
    .line 261
    move-result-object p0

    .line 262
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 263
    .line 264
    .line 265
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 266
    .line 267
    .line 268
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 269
    .line 270
    .line 271
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 272
    .line 273
    .line 274
    invoke-static {v9}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 275
    .line 276
    .line 277
    move-result-object p0

    .line 278
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 279
    .line 280
    .line 281
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 282
    .line 283
    .line 284
    move-result-object p0

    .line 285
    invoke-static {v12, p0}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 286
    .line 287
    .line 288
    goto/16 :goto_1

    .line 289
    .line 290
    :cond_9
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOrientationOverrides;->mOrientationOverridesState:Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;

    .line 291
    .line 292
    iget-boolean v2, v0, Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;->mIsOverrideToReverseLandscapeOrientationEnabled:Z

    .line 293
    .line 294
    iget-boolean v4, v0, Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;->mIsOverrideAnyOrientationEnabled:Z

    .line 295
    .line 296
    if-eqz v2, :cond_b

    .line 297
    .line 298
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->isFixedOrientationLandscape(I)Z

    .line 299
    .line 300
    .line 301
    move-result v2

    .line 302
    if-nez v2, :cond_a

    .line 303
    .line 304
    if-eqz v4, :cond_b

    .line 305
    .line 306
    :cond_a
    new-instance v0, Ljava/lang/StringBuilder;

    .line 307
    .line 308
    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 309
    .line 310
    .line 311
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 312
    .line 313
    .line 314
    move-result-object p0

    .line 315
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 316
    .line 317
    .line 318
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 319
    .line 320
    .line 321
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 322
    .line 323
    .line 324
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 325
    .line 326
    .line 327
    const/16 v3, 0x8

    .line 328
    .line 329
    invoke-static {v3}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 330
    .line 331
    .line 332
    move-result-object p0

    .line 333
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 334
    .line 335
    .line 336
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 337
    .line 338
    .line 339
    move-result-object p0

    .line 340
    invoke-static {v12, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 341
    .line 342
    .line 343
    goto :goto_5

    .line 344
    :cond_b
    if-nez v4, :cond_c

    .line 345
    .line 346
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->isFixedOrientation(I)Z

    .line 347
    .line 348
    .line 349
    move-result v2

    .line 350
    if-eqz v2, :cond_c

    .line 351
    .line 352
    goto/16 :goto_4

    .line 353
    .line 354
    :cond_c
    iget-boolean v2, v0, Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;->mIsOverrideToPortraitOrientationEnabled:Z

    .line 355
    .line 356
    if-eqz v2, :cond_d

    .line 357
    .line 358
    new-instance v0, Ljava/lang/StringBuilder;

    .line 359
    .line 360
    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 361
    .line 362
    .line 363
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 364
    .line 365
    .line 366
    move-result-object p0

    .line 367
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 368
    .line 369
    .line 370
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 371
    .line 372
    .line 373
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 374
    .line 375
    .line 376
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 377
    .line 378
    .line 379
    invoke-static {v3}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 380
    .line 381
    .line 382
    move-result-object p0

    .line 383
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 384
    .line 385
    .line 386
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 387
    .line 388
    .line 389
    move-result-object p0

    .line 390
    invoke-static {v12, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 391
    .line 392
    .line 393
    goto :goto_5

    .line 394
    :cond_d
    iget-boolean v0, v0, Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;->mIsOverrideToNosensorOrientationEnabled:Z

    .line 395
    .line 396
    if-eqz v0, :cond_6

    .line 397
    .line 398
    new-instance v0, Ljava/lang/StringBuilder;

    .line 399
    .line 400
    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 401
    .line 402
    .line 403
    invoke-static {p0}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 404
    .line 405
    .line 406
    move-result-object p0

    .line 407
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 408
    .line 409
    .line 410
    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 411
    .line 412
    .line 413
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 414
    .line 415
    .line 416
    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 417
    .line 418
    .line 419
    const/4 v3, 0x5

    .line 420
    invoke-static {v3}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 421
    .line 422
    .line 423
    move-result-object p0

    .line 424
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 425
    .line 426
    .line 427
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 428
    .line 429
    .line 430
    move-result-object p0

    .line 431
    invoke-static {v12, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 432
    .line 433
    .line 434
    :goto_5
    return v3
.end method

.method public final getPid()I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 2
    .line 3
    if-eqz p0, :cond_0

    .line 4
    .line 5
    iget p0, p0, Lcom/android/server/wm/WindowProcessController;->mPid:I

    .line 6
    .line 7
    goto :goto_0

    .line 8
    :cond_0
    const/4 p0, 0x0

    .line 9
    :goto_0
    return p0
.end method

.method public final getProcessGlobalConfiguration()Landroid/content/res/Configuration;
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 6
    .line 7
    .line 8
    move-result-object v0

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 11
    .line 12
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskManagerService;->getGlobalConfiguration()Landroid/content/res/Configuration;

    .line 13
    .line 14
    .line 15
    move-result-object v0

    .line 16
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 17
    .line 18
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mDexCompatController:Lcom/android/server/wm/DexCompatController;

    .line 19
    .line 20
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mProcessAppInfo:Landroid/content/pm/ApplicationInfo;

    .line 21
    .line 22
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 23
    .line 24
    .line 25
    move-result v3

    .line 26
    invoke-virtual {v1, p0, v2, v3}, Lcom/android/server/wm/DexCompatController;->shouldBeApplyDexCompatConfigurationLocked(Lcom/android/server/wm/ActivityRecord;Landroid/content/pm/ApplicationInfo;I)Z

    .line 27
    .line 28
    .line 29
    move-result v1

    .line 30
    if-eqz v1, :cond_c

    .line 31
    .line 32
    new-instance v1, Landroid/content/res/Configuration;

    .line 33
    .line 34
    invoke-direct {v1, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 35
    .line 36
    .line 37
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 38
    .line 39
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mDexCompatController:Lcom/android/server/wm/DexCompatController;

    .line 40
    .line 41
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mProcessAppInfo:Landroid/content/pm/ApplicationInfo;

    .line 42
    .line 43
    invoke-static {}, Landroid/os/Debug;->getCaller()Ljava/lang/String;

    .line 44
    .line 45
    .line 46
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->toString()Ljava/lang/String;

    .line 47
    .line 48
    .line 49
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 50
    .line 51
    .line 52
    if-eqz v2, :cond_b

    .line 53
    .line 54
    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    .line 55
    .line 56
    if-nez v2, :cond_1

    .line 57
    .line 58
    goto/16 :goto_7

    .line 59
    .line 60
    :cond_1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 61
    .line 62
    const/4 v2, 0x0

    .line 63
    const/4 v3, 0x1

    .line 64
    const/4 v4, 0x2

    .line 65
    if-eqz p0, :cond_4

    .line 66
    .line 67
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getMergedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 68
    .line 69
    .line 70
    move-result-object v5

    .line 71
    iget v5, v5, Landroid/content/res/Configuration;->dexCompatEnabled:I

    .line 72
    .line 73
    if-ne v5, v4, :cond_2

    .line 74
    .line 75
    move v5, v3

    .line 76
    goto :goto_1

    .line 77
    :cond_2
    move v5, v2

    .line 78
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getMergedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 79
    .line 80
    .line 81
    move-result-object v6

    .line 82
    iget v6, v6, Landroid/content/res/Configuration;->orientation:I

    .line 83
    .line 84
    if-ne v6, v4, :cond_3

    .line 85
    .line 86
    move v6, v4

    .line 87
    goto :goto_3

    .line 88
    :cond_3
    :goto_2
    move v6, v3

    .line 89
    goto :goto_3

    .line 90
    :cond_4
    move v5, v2

    .line 91
    goto :goto_2

    .line 92
    :goto_3
    if-eqz v5, :cond_5

    .line 93
    .line 94
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getMergedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 95
    .line 96
    .line 97
    move-result-object p0

    .line 98
    invoke-virtual {v1, p0}, Landroid/content/res/Configuration;->updateFromDexCompatTaskConfig(Landroid/content/res/Configuration;)I

    .line 99
    .line 100
    .line 101
    goto/16 :goto_6

    .line 102
    .line 103
    :cond_5
    iget-object p0, v0, Lcom/android/server/wm/DexCompatController;->mAtm:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 104
    .line 105
    iget-object v5, p0, Lcom/android/server/wm/ActivityTaskManagerService;->mDexController:Lcom/android/server/wm/DexController;

    .line 106
    .line 107
    invoke-virtual {v5}, Lcom/android/server/wm/DexController;->getDexModeLocked()I

    .line 108
    .line 109
    .line 110
    move-result v5

    .line 111
    if-ne v5, v3, :cond_6

    .line 112
    .line 113
    goto :goto_4

    .line 114
    :cond_6
    move v2, v4

    .line 115
    :goto_4
    iget-object p0, p0, Lcom/android/server/wm/ActivityTaskManagerService;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 116
    .line 117
    invoke-virtual {p0, v2}, Lcom/android/server/wm/RootWindowContainer;->getDisplayContent(I)Lcom/android/server/wm/DisplayContent;

    .line 118
    .line 119
    .line 120
    move-result-object p0

    .line 121
    if-nez p0, :cond_7

    .line 122
    .line 123
    goto :goto_7

    .line 124
    :cond_7
    iget-object v2, v0, Lcom/android/server/wm/DexCompatController;->mTmpRect:Landroid/graphics/Rect;

    .line 125
    .line 126
    invoke-virtual {p0, v2}, Lcom/android/server/wm/DisplayContent;->getStableRect(Landroid/graphics/Rect;)V

    .line 127
    .line 128
    .line 129
    iget-object p0, v0, Lcom/android/server/wm/DexCompatController;->mTmpRect:Landroid/graphics/Rect;

    .line 130
    .line 131
    invoke-virtual {p0}, Landroid/graphics/Rect;->width()I

    .line 132
    .line 133
    .line 134
    move-result p0

    .line 135
    iget-object v0, v0, Lcom/android/server/wm/DexCompatController;->mTmpRect:Landroid/graphics/Rect;

    .line 136
    .line 137
    invoke-virtual {v0}, Landroid/graphics/Rect;->height()I

    .line 138
    .line 139
    .line 140
    move-result v0

    .line 141
    invoke-static {p0, v0}, Ljava/lang/Math;->min(II)I

    .line 142
    .line 143
    .line 144
    move-result p0

    .line 145
    invoke-static {v5, p0}, Lcom/android/server/wm/DexCompatBoundsProvider;->getDefaultWidth(II)I

    .line 146
    .line 147
    .line 148
    move-result v0

    .line 149
    invoke-static {v5, p0}, Lcom/android/server/wm/DexCompatBoundsProvider;->getDefaultHeight(II)I

    .line 150
    .line 151
    .line 152
    move-result p0

    .line 153
    if-lez v0, :cond_8

    .line 154
    .line 155
    if-gtz p0, :cond_9

    .line 156
    .line 157
    :cond_8
    const-string v2, "applyDexCompatConfigurationLocked: Invalid size, "

    .line 158
    .line 159
    const-string/jumbo v5, "x"

    .line 160
    .line 161
    .line 162
    const-string v7, "DexCompatController"

    .line 163
    .line 164
    invoke-static {v0, p0, v2, v5, v7}, Lcom/android/server/am/PendingIntentController$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 165
    .line 166
    .line 167
    :cond_9
    if-ne v6, v3, :cond_a

    .line 168
    .line 169
    invoke-static {v0, p0}, Ljava/lang/Math;->min(II)I

    .line 170
    .line 171
    .line 172
    move-result v2

    .line 173
    invoke-static {v0, p0}, Ljava/lang/Math;->max(II)I

    .line 174
    .line 175
    .line 176
    move-result p0

    .line 177
    goto :goto_5

    .line 178
    :cond_a
    invoke-static {v0, p0}, Ljava/lang/Math;->max(II)I

    .line 179
    .line 180
    .line 181
    move-result v2

    .line 182
    invoke-static {v0, p0}, Ljava/lang/Math;->min(II)I

    .line 183
    .line 184
    .line 185
    move-result p0

    .line 186
    :goto_5
    iget v0, v1, Landroid/content/res/Configuration;->densityDpi:I

    .line 187
    .line 188
    int-to-float v0, v0

    .line 189
    const v3, 0x3bcccccd    # 0.00625f

    .line 190
    .line 191
    .line 192
    mul-float/2addr v0, v3

    .line 193
    int-to-float v2, v2

    .line 194
    div-float/2addr v2, v0

    .line 195
    const/high16 v3, 0x3f000000    # 0.5f

    .line 196
    .line 197
    add-float/2addr v2, v3

    .line 198
    float-to-int v2, v2

    .line 199
    int-to-float p0, p0

    .line 200
    div-float/2addr p0, v0

    .line 201
    add-float/2addr p0, v3

    .line 202
    float-to-int p0, p0

    .line 203
    iget v0, v1, Landroid/content/res/Configuration;->screenLayout:I

    .line 204
    .line 205
    invoke-static {v0}, Landroid/content/res/Configuration;->resetScreenLayout(I)I

    .line 206
    .line 207
    .line 208
    move-result v0

    .line 209
    invoke-static {v2, p0}, Ljava/lang/Math;->max(II)I

    .line 210
    .line 211
    .line 212
    move-result v3

    .line 213
    invoke-static {v2, p0}, Ljava/lang/Math;->min(II)I

    .line 214
    .line 215
    .line 216
    move-result v5

    .line 217
    iput v2, v1, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 218
    .line 219
    iput p0, v1, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 220
    .line 221
    iput v5, v1, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    .line 222
    .line 223
    iput v6, v1, Landroid/content/res/Configuration;->orientation:I

    .line 224
    .line 225
    invoke-static {v0, v3, v5}, Landroid/content/res/Configuration;->reduceScreenLayout(III)I

    .line 226
    .line 227
    .line 228
    move-result p0

    .line 229
    iput p0, v1, Landroid/content/res/Configuration;->screenLayout:I

    .line 230
    .line 231
    :goto_6
    iput v4, v1, Landroid/content/res/Configuration;->dexCompatEnabled:I

    .line 232
    .line 233
    :cond_b
    :goto_7
    move-object v0, v1

    .line 234
    :cond_c
    return-object v0
.end method

.method public final getProtoFieldId()J
    .locals 2

    .line 1
    const-wide v0, 0x10b00000006L

    .line 2
    .line 3
    .line 4
    .line 5
    .line 6
    return-wide v0
.end method

.method public final getRemoteAnimationDefinition()Landroid/view/RemoteAnimationDefinition;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mRemoteAnimationDefinition:Landroid/view/RemoteAnimationDefinition;

    .line 2
    .line 3
    return-object p0
.end method

.method public final getRequestedConfigurationOrientation(Z)I
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    move-result v0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/ActivityRecord;->getRequestedConfigurationOrientation(ZI)I

    move-result p0

    return p0
.end method

.method public final getRequestedConfigurationOrientation(ZI)I
    .locals 4

    .line 2
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 4
    iget-object v1, v0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 5
    invoke-virtual {v1}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->isRunning()Z

    move-result v1

    const/4 v2, 0x1

    if-eqz v1, :cond_3

    .line 6
    iget-object v0, v0, Lcom/android/server/wm/TransparentPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 7
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    move-result v0

    const/4 v1, -0x1

    if-eq v0, v1, :cond_3

    .line 8
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getRootDisplayArea()Lcom/android/server/wm/RootDisplayArea;

    move-result-object p2

    if-eqz p1, :cond_2

    if-eqz p2, :cond_2

    .line 9
    invoke-virtual {p2}, Lcom/android/server/wm/RootDisplayArea;->isOrientationDifferentFromDisplay()Z

    move-result p1

    if-eqz p1, :cond_2

    .line 10
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 11
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 12
    iget-object p0, p0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 13
    iget p0, p0, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->mInheritedOrientation:I

    const/4 p1, 0x2

    if-eq p0, v2, :cond_0

    if-eq p0, p1, :cond_1

    move v2, p0

    goto :goto_0

    :cond_0
    move v2, p1

    :cond_1
    :goto_0
    return v2

    .line 14
    :cond_2
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 15
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 16
    iget-object p0, p0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 17
    iget p0, p0, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->mInheritedOrientation:I

    return p0

    .line 18
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    if-eqz v0, :cond_4

    const/4 v1, 0x3

    if-ne p2, v1, :cond_4

    .line 19
    new-instance v1, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;

    const/4 v3, 0x4

    invoke-direct {v1, v3}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;-><init>(I)V

    const/4 v3, 0x0

    invoke-virtual {v0, v1, p0, v3, v2}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;Lcom/android/server/wm/WindowContainer;ZZ)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 20
    invoke-virtual {v0, p1}, Lcom/android/server/wm/ActivityRecord;->getRequestedConfigurationOrientation(Z)I

    move-result p0

    return p0

    .line 21
    :cond_4
    invoke-super {p0, p1, p2}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation(ZI)I

    move-result p0

    return p0
.end method

.method public final getRequestedOrientation()I
    .locals 0

    .line 1
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getOverrideOrientation()I

    .line 2
    .line 3
    .line 4
    move-result p0

    .line 5
    return p0
.end method

.method public final getRootTask()Lcom/android/server/wm/Task;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    if-eqz p0, :cond_0

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/TaskFragment;->getRootTask()Lcom/android/server/wm/Task;

    .line 6
    .line 7
    .line 8
    move-result-object p0

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    const/4 p0, 0x0

    .line 11
    :goto_0
    return-object p0
.end method

.method public final getScreenResolvedBounds()Landroid/graphics/Rect;
    .locals 2

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    iget-object v0, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 6
    .line 7
    invoke-virtual {v0}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 8
    .line 9
    .line 10
    move-result-object v0

    .line 11
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 12
    .line 13
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 14
    .line 15
    invoke-virtual {p0}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 16
    .line 17
    .line 18
    move-result v1

    .line 19
    if-eqz v1, :cond_0

    .line 20
    .line 21
    iget-object v0, p0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 22
    .line 23
    :cond_0
    return-object v0
.end method

.method public final getTask()Lcom/android/server/wm/Task;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    return-object p0
.end method

.method public final getTaskFragment()Lcom/android/server/wm/TaskFragment;
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    if-eqz p0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->asTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 8
    .line 9
    .line 10
    move-result-object p0

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    const/4 p0, 0x0

    .line 13
    :goto_0
    return-object p0
.end method

.method public final getUid()I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2
    .line 3
    iget-object p0, p0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 4
    .line 5
    iget p0, p0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 6
    .line 7
    return p0
.end method

.method public final getUriPermissionsLocked()Lcom/android/server/uri/UriPermissionOwner;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    new-instance v0, Lcom/android/server/uri/UriPermissionOwner;

    .line 6
    .line 7
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 8
    .line 9
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 10
    .line 11
    invoke-direct {v0, v1, p0}, Lcom/android/server/uri/UriPermissionOwner;-><init>(Lcom/android/server/uri/UriGrantsManagerInternal;Ljava/lang/Object;)V

    .line 12
    .line 13
    .line 14
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 15
    .line 16
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 17
    .line 18
    return-object p0
.end method

.method public final handleAlreadyVisible()V
    .locals 2

    .line 1
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {v0}, Landroid/app/ActivityOptions;->getAnimationType()I

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    const/4 v1, 0x5

    .line 10
    if-ne v0, v1, :cond_0

    .line 11
    .line 12
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 13
    .line 14
    invoke-virtual {v0}, Landroid/app/ActivityOptions;->getSceneTransitionInfo()Landroid/app/ActivityOptions$SceneTransitionInfo;

    .line 15
    .line 16
    .line 17
    move-result-object v0

    .line 18
    if-eqz v0, :cond_0

    .line 19
    .line 20
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 21
    .line 22
    iget-object v0, v0, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 23
    .line 24
    iget-object v1, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 25
    .line 26
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 27
    .line 28
    invoke-virtual {p0}, Landroid/app/ActivityOptions;->getSceneTransitionInfo()Landroid/app/ActivityOptions$SceneTransitionInfo;

    .line 29
    .line 30
    .line 31
    move-result-object p0

    .line 32
    invoke-interface {v0, v1, p0}, Landroid/app/IApplicationThread;->scheduleOnNewSceneTransitionInfo(Landroid/os/IBinder;Landroid/app/ActivityOptions$SceneTransitionInfo;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 33
    .line 34
    .line 35
    :catch_0
    :cond_0
    return-void
.end method

.method public final handleCompleteDeferredRemoval()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsExiting:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeIfPossible()V

    .line 6
    .line 7
    .line 8
    :cond_0
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->handleCompleteDeferredRemoval()Z

    .line 9
    .line 10
    .line 11
    move-result p0

    .line 12
    return p0
.end method

.method public final handlesOrientationChangeFromDescendant(I)Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->shouldIgnoreOrientationRequests()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    const/4 p0, 0x0

    .line 8
    return p0

    .line 9
    :cond_0
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->handlesOrientationChangeFromDescendant(I)Z

    .line 10
    .line 11
    .line 12
    move-result p0

    .line 13
    return p0
.end method

.method public final hasActivity()Z
    .locals 0

    .line 1
    const/4 p0, 0x1

    .line 2
    return p0
.end method

.method public final hasDeskResources()Z
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mHasDeskResources:Ljava/lang/Boolean;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    return p0

    .line 10
    :cond_0
    sget-object v0, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 11
    .line 12
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mHasDeskResources:Ljava/lang/Boolean;

    .line 13
    .line 14
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 15
    .line 16
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mContext:Landroid/content/Context;

    .line 17
    .line 18
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 19
    .line 20
    iget v2, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 21
    .line 22
    invoke-static {v2}, Landroid/os/UserHandle;->of(I)Landroid/os/UserHandle;

    .line 23
    .line 24
    .line 25
    move-result-object v2

    .line 26
    const/4 v3, 0x0

    .line 27
    invoke-virtual {v0, v1, v3, v2}, Landroid/content/Context;->createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context;

    .line 28
    .line 29
    .line 30
    move-result-object v0

    .line 31
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 32
    .line 33
    .line 34
    move-result-object v0

    .line 35
    invoke-virtual {v0}, Landroid/content/res/Resources;->getSizeAndUiModeConfigurations()[Landroid/content/res/Configuration;

    .line 36
    .line 37
    .line 38
    move-result-object v0

    .line 39
    array-length v1, v0

    .line 40
    :goto_0
    if-ge v3, v1, :cond_2

    .line 41
    .line 42
    aget-object v2, v0, v3

    .line 43
    .line 44
    iget v2, v2, Landroid/content/res/Configuration;->uiMode:I

    .line 45
    .line 46
    and-int/lit8 v2, v2, 0xf

    .line 47
    .line 48
    const/4 v4, 0x2

    .line 49
    if-ne v2, v4, :cond_1

    .line 50
    .line 51
    sget-object v0, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    .line 52
    .line 53
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mHasDeskResources:Ljava/lang/Boolean;
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 54
    .line 55
    goto :goto_2

    .line 56
    :catch_0
    move-exception v0

    .line 57
    goto :goto_1

    .line 58
    :cond_1
    add-int/lit8 v3, v3, 0x1

    .line 59
    .line 60
    goto :goto_0

    .line 61
    :goto_1
    new-instance v1, Ljava/lang/StringBuilder;

    .line 62
    .line 63
    const-string v2, "Exception thrown during checking for desk resources "

    .line 64
    .line 65
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 66
    .line 67
    .line 68
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 69
    .line 70
    .line 71
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 72
    .line 73
    .line 74
    move-result-object v1

    .line 75
    const-string v2, "ActivityTaskManager"

    .line 76
    .line 77
    invoke-static {v2, v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 78
    .line 79
    .line 80
    :cond_2
    :goto_2
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mHasDeskResources:Ljava/lang/Boolean;

    .line 81
    .line 82
    invoke-virtual {p0}, Ljava/lang/Boolean;->booleanValue()Z

    .line 83
    .line 84
    .line 85
    move-result p0

    .line 86
    return p0
.end method

.method public final hasProcess()Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 2
    .line 3
    if-eqz p0, :cond_0

    .line 4
    .line 5
    const/4 p0, 0x1

    .line 6
    goto :goto_0

    .line 7
    :cond_0
    const/4 p0, 0x0

    .line 8
    :goto_0
    return p0
.end method

.method public final hasSizeCompatBounds()Z
    .locals 1

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 6
    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    invoke-virtual {v0}, Lcom/android/server/wm/SizeCompatAttributes;->hasBounds()Z

    .line 10
    .line 11
    .line 12
    move-result v0

    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    const/4 p0, 0x1

    .line 16
    return p0

    .line 17
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 18
    .line 19
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 20
    .line 21
    invoke-virtual {p0}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 22
    .line 23
    .line 24
    move-result p0

    .line 25
    return p0
.end method

.method public final hasStartingWindow()Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    return v1

    .line 7
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 8
    .line 9
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 10
    .line 11
    .line 12
    move-result v0

    .line 13
    sub-int/2addr v0, v1

    .line 14
    :goto_0
    if-ltz v0, :cond_2

    .line 15
    .line 16
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowContainer;->getChildAt(I)Lcom/android/server/wm/WindowContainer;

    .line 17
    .line 18
    .line 19
    move-result-object v2

    .line 20
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 21
    .line 22
    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 23
    .line 24
    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 25
    .line 26
    const/4 v3, 0x3

    .line 27
    if-ne v2, v3, :cond_1

    .line 28
    .line 29
    return v1

    .line 30
    :cond_1
    add-int/lit8 v0, v0, -0x1

    .line 31
    .line 32
    goto :goto_0

    .line 33
    :cond_2
    const/4 p0, 0x0

    .line 34
    return p0
.end method

.method public final inSizeCompatMode()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 4
    .line 5
    iget-boolean v0, v0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mInSizeCompatModeForBounds:Z

    .line 6
    .line 7
    const/4 v1, 0x1

    .line 8
    if-eqz v0, :cond_0

    .line 9
    .line 10
    return v1

    .line 11
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 12
    .line 13
    .line 14
    move-result-object v0

    .line 15
    const/4 v2, 0x0

    .line 16
    if-eqz v0, :cond_5

    .line 17
    .line 18
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->shouldCreateAppCompatDisplayInsets()Z

    .line 19
    .line 20
    .line 21
    move-result v0

    .line 22
    if-eqz v0, :cond_5

    .line 23
    .line 24
    invoke-virtual {p0}, Lcom/android/server/wm/WindowToken;->isFixedRotationTransforming()Z

    .line 25
    .line 26
    .line 27
    move-result v0

    .line 28
    if-eqz v0, :cond_1

    .line 29
    .line 30
    goto :goto_1

    .line 31
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 32
    .line 33
    .line 34
    move-result-object v0

    .line 35
    iget-object v0, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 36
    .line 37
    invoke-virtual {v0}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 38
    .line 39
    .line 40
    move-result-object v0

    .line 41
    if-nez v0, :cond_2

    .line 42
    .line 43
    return v2

    .line 44
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 45
    .line 46
    .line 47
    move-result-object v0

    .line 48
    if-nez v0, :cond_3

    .line 49
    .line 50
    return v2

    .line 51
    :cond_3
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 52
    .line 53
    .line 54
    move-result-object v0

    .line 55
    iget v0, v0, Landroid/content/res/Configuration;->densityDpi:I

    .line 56
    .line 57
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 58
    .line 59
    .line 60
    move-result-object p0

    .line 61
    iget p0, p0, Landroid/content/res/Configuration;->densityDpi:I

    .line 62
    .line 63
    if-eq v0, p0, :cond_4

    .line 64
    .line 65
    goto :goto_0

    .line 66
    :cond_4
    move v1, v2

    .line 67
    :goto_0
    return v1

    .line 68
    :cond_5
    :goto_1
    return v2
.end method

.method public final inputDispatchingTimedOut(ILcom/android/internal/os/TimeoutRecord;)V
    .locals 13

    .line 1
    const-wide/16 v0, 0x40

    .line 2
    .line 3
    :try_start_0
    const-string v2, "ActivityRecord#inputDispatchingTimedOut()"

    .line 4
    .line 5
    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 6
    .line 7
    .line 8
    iget-object v2, p2, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    .line 9
    .line 10
    invoke-virtual {v2}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnGlobalLockStarted()V

    .line 11
    .line 12
    .line 13
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 14
    .line 15
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    .line 16
    .line 17
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 18
    .line 19
    .line 20
    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 21
    :try_start_1
    iget-object v3, p2, Lcom/android/internal/os/TimeoutRecord;->mLatencyTracker:Lcom/android/internal/os/anr/AnrLatencyTracker;

    .line 22
    .line 23
    invoke-virtual {v3}, Lcom/android/internal/os/anr/AnrLatencyTracker;->waitingOnGlobalLockEnded()V

    .line 24
    .line 25
    .line 26
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 27
    .line 28
    if-eqz v3, :cond_0

    .line 29
    .line 30
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 31
    .line 32
    invoke-virtual {v3}, Lcom/android/server/wm/RootWindowContainer;->getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task;

    .line 33
    .line 34
    .line 35
    move-result-object v3

    .line 36
    if-nez v3, :cond_1

    .line 37
    .line 38
    :cond_0
    move-object v4, p0

    .line 39
    goto :goto_0

    .line 40
    :cond_1
    invoke-virtual {v3}, Lcom/android/server/wm/Task;->getTopResumedActivity()Lcom/android/server/wm/ActivityRecord;

    .line 41
    .line 42
    .line 43
    move-result-object v4

    .line 44
    if-nez v4, :cond_2

    .line 45
    .line 46
    invoke-virtual {v3}, Lcom/android/server/wm/Task;->getTopPausingActivity()Lcom/android/server/wm/ActivityRecord;

    .line 47
    .line 48
    .line 49
    move-result-object v4

    .line 50
    :cond_2
    if-eqz v4, :cond_0

    .line 51
    .line 52
    :goto_0
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 53
    .line 54
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasProcess()Z

    .line 55
    .line 56
    .line 57
    move-result v5

    .line 58
    const/4 v6, 0x0

    .line 59
    if-eqz v5, :cond_4

    .line 60
    .line 61
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 62
    .line 63
    iget v5, v5, Lcom/android/server/wm/WindowProcessController;->mPid:I

    .line 64
    .line 65
    if-eq v5, p1, :cond_3

    .line 66
    .line 67
    const/4 v5, -0x1

    .line 68
    if-ne p1, v5, :cond_4

    .line 69
    .line 70
    :cond_3
    const/4 v5, 0x1

    .line 71
    goto :goto_1

    .line 72
    :catchall_0
    move-exception p0

    .line 73
    goto :goto_2

    .line 74
    :cond_4
    move v5, v6

    .line 75
    :goto_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 76
    :try_start_2
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 77
    .line 78
    .line 79
    if-eqz v5, :cond_5

    .line 80
    .line 81
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 82
    .line 83
    iget-object v5, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    .line 84
    .line 85
    iget-object v6, v3, Lcom/android/server/wm/WindowProcessController;->mOwner:Ljava/lang/Object;

    .line 86
    .line 87
    iget-object v7, v4, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 88
    .line 89
    iget-object p1, v4, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 90
    .line 91
    iget-object v8, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 92
    .line 93
    iget-object v9, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 94
    .line 95
    iget-object v10, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 96
    .line 97
    const/4 v11, 0x0

    .line 98
    move-object v12, p2

    .line 99
    invoke-virtual/range {v5 .. v12}, Landroid/app/ActivityManagerInternal;->inputDispatchingTimedOut(Ljava/lang/Object;Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Ljava/lang/Object;ZLcom/android/internal/os/TimeoutRecord;)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 100
    .line 101
    .line 102
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 103
    .line 104
    .line 105
    return-void

    .line 106
    :catchall_1
    move-exception p0

    .line 107
    goto :goto_3

    .line 108
    :cond_5
    :try_start_3
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 109
    .line 110
    iget-object p0, p0, Lcom/android/server/wm/ActivityTaskManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    .line 111
    .line 112
    invoke-virtual {p0, p1, v6, p2}, Landroid/app/ActivityManagerInternal;->inputDispatchingTimedOut(IZLcom/android/internal/os/TimeoutRecord;)J
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 113
    .line 114
    .line 115
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 116
    .line 117
    .line 118
    return-void

    .line 119
    :goto_2
    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 120
    :try_start_5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 121
    .line 122
    .line 123
    throw p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 124
    :goto_3
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 125
    .line 126
    .line 127
    throw p0
.end method

.method public final isAlwaysOnTop()Z
    .locals 2

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_APPLOCK:Z

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsAppLockExceptionActivity:Z

    .line 7
    .line 8
    if-eqz v0, :cond_0

    .line 9
    .line 10
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mNotToBeTopForAppLockException:Z

    .line 11
    .line 12
    if-eqz v0, :cond_0

    .line 13
    .line 14
    return v1

    .line 15
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskOverlay:Z

    .line 16
    .line 17
    if-nez v0, :cond_1

    .line 18
    .line 19
    invoke-super {p0}, Lcom/android/server/wm/ConfigurationContainer;->isAlwaysOnTop()Z

    .line 20
    .line 21
    .line 22
    move-result p0

    .line 23
    if-eqz p0, :cond_2

    .line 24
    .line 25
    :cond_1
    const/4 v1, 0x1

    .line 26
    :cond_2
    return v1
.end method

.method public final isConfigurationDispatchPaused()Z
    .locals 0

    .line 1
    iget p0, p0, Lcom/android/server/wm/ActivityRecord;->mPauseConfigurationDispatchCount:I

    .line 2
    .line 3
    if-lez p0, :cond_0

    .line 4
    .line 5
    const/4 p0, 0x1

    .line 6
    goto :goto_0

    .line 7
    :cond_0
    const/4 p0, 0x0

    .line 8
    :goto_0
    return p0
.end method

.method public final isDestroyable()Z
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-nez v0, :cond_3

    .line 5
    .line 6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasProcess()Z

    .line 7
    .line 8
    .line 9
    move-result v0

    .line 10
    if-nez v0, :cond_0

    .line 11
    .line 12
    goto :goto_0

    .line 13
    :cond_0
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 14
    .line 15
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 16
    .line 17
    .line 18
    move-result v0

    .line 19
    if-nez v0, :cond_3

    .line 20
    .line 21
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 22
    .line 23
    .line 24
    move-result-object v0

    .line 25
    if-eqz v0, :cond_3

    .line 26
    .line 27
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 28
    .line 29
    .line 30
    move-result-object v0

    .line 31
    iget-object v0, v0, Lcom/android/server/wm/TaskFragment;->mPausingActivity:Lcom/android/server/wm/ActivityRecord;

    .line 32
    .line 33
    if-eq p0, v0, :cond_3

    .line 34
    .line 35
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mHaveState:Z

    .line 36
    .line 37
    if-eqz v0, :cond_3

    .line 38
    .line 39
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 40
    .line 41
    if-nez v0, :cond_1

    .line 42
    .line 43
    goto :goto_0

    .line 44
    :cond_1
    iget-boolean p0, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 45
    .line 46
    if-eqz p0, :cond_2

    .line 47
    .line 48
    return v1

    .line 49
    :cond_2
    const/4 p0, 0x1

    .line 50
    return p0

    .line 51
    :cond_3
    :goto_0
    return v1
.end method

.method public final isEligibleForLetterboxEducation()Z
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 4
    .line 5
    iget-boolean v0, v0, Lcom/android/server/wm/AppCompatConfiguration;->mIsEducationEnabled:Z

    .line 6
    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsEligibleForFixedOrientationLetterbox:Z

    .line 10
    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getWindowingMode()I

    .line 14
    .line 15
    .line 16
    move-result v0

    .line 17
    const/4 v1, 0x1

    .line 18
    if-ne v0, v1, :cond_0

    .line 19
    .line 20
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 21
    .line 22
    .line 23
    move-result v0

    .line 24
    if-ne v0, v1, :cond_0

    .line 25
    .line 26
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 27
    .line 28
    if-nez p0, :cond_0

    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_0
    const/4 v1, 0x0

    .line 32
    :goto_0
    return v1
.end method

.method public final isEmbedded()Z
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    if-eqz p0, :cond_0

    .line 6
    .line 7
    iget-boolean p0, p0, Lcom/android/server/wm/TaskFragment;->mIsEmbedded:Z

    .line 8
    .line 9
    if-eqz p0, :cond_0

    .line 10
    .line 11
    const/4 p0, 0x1

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const/4 p0, 0x0

    .line 14
    :goto_0
    return p0
.end method

.method public final isFirstChildWindowGreaterThanSecond(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)Z
    .locals 2

    .line 1
    iget-object p0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 2
    .line 3
    iget p0, p0, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 4
    .line 5
    iget-object p1, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 6
    .line 7
    iget p1, p1, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 8
    .line 9
    const/4 p2, 0x0

    .line 10
    const/4 v0, 0x1

    .line 11
    if-ne p0, v0, :cond_0

    .line 12
    .line 13
    if-eq p1, v0, :cond_0

    .line 14
    .line 15
    return p2

    .line 16
    :cond_0
    if-eq p0, v0, :cond_1

    .line 17
    .line 18
    if-ne p1, v0, :cond_1

    .line 19
    .line 20
    return v0

    .line 21
    :cond_1
    const/4 v1, 0x3

    .line 22
    if-ne p0, v1, :cond_2

    .line 23
    .line 24
    if-eq p1, v1, :cond_2

    .line 25
    .line 26
    return v0

    .line 27
    :cond_2
    if-eq p0, v1, :cond_3

    .line 28
    .line 29
    if-ne p1, v1, :cond_3

    .line 30
    .line 31
    return p2

    .line 32
    :cond_3
    return v0
.end method

.method public final isFocusable()Z
    .locals 1

    .line 1
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->isFocusable()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_2

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 8
    .line 9
    .line 10
    move-result-object v0

    .line 11
    invoke-virtual {v0}, Landroid/app/WindowConfiguration;->canReceiveKeys()Z

    .line 12
    .line 13
    .line 14
    move-result v0

    .line 15
    if-eqz v0, :cond_0

    .line 16
    .line 17
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 18
    .line 19
    if-nez v0, :cond_0

    .line 20
    .line 21
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 22
    .line 23
    if-eqz v0, :cond_1

    .line 24
    .line 25
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->isFreeformStashed()Z

    .line 26
    .line 27
    .line 28
    move-result v0

    .line 29
    if-nez v0, :cond_0

    .line 30
    .line 31
    goto :goto_0

    .line 32
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 33
    .line 34
    iget p0, p0, Landroid/content/pm/ActivityInfo;->flags:I

    .line 35
    .line 36
    const/high16 v0, 0x40000

    .line 37
    .line 38
    and-int/2addr p0, v0

    .line 39
    if-eqz p0, :cond_2

    .line 40
    .line 41
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 42
    goto :goto_1

    .line 43
    :cond_2
    const/4 p0, 0x0

    .line 44
    :goto_1
    return p0
.end method

.method public final isIconStylePreferred(I)Z
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    if-nez p1, :cond_0

    .line 3
    .line 4
    return v0

    .line 5
    :cond_0
    invoke-static {}, Lcom/android/internal/policy/AttributeCache;->instance()Lcom/android/internal/policy/AttributeCache;

    .line 6
    .line 7
    .line 8
    move-result-object v1

    .line 9
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 10
    .line 11
    sget-object v3, Lcom/android/internal/R$styleable;->Window:[I

    .line 12
    .line 13
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 14
    .line 15
    iget p0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 16
    .line 17
    invoke-virtual {v1, v2, p1, v3, p0}, Lcom/android/internal/policy/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/internal/policy/AttributeCache$Entry;

    .line 18
    .line 19
    .line 20
    move-result-object p0

    .line 21
    if-eqz p0, :cond_1

    .line 22
    .line 23
    iget-object p1, p0, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 24
    .line 25
    const/16 v1, 0x3d

    .line 26
    .line 27
    invoke-virtual {p1, v1}, Landroid/content/res/TypedArray;->hasValue(I)Z

    .line 28
    .line 29
    .line 30
    move-result p1

    .line 31
    if-eqz p1, :cond_1

    .line 32
    .line 33
    iget-object p0, p0, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 34
    .line 35
    invoke-virtual {p0, v1, v0}, Landroid/content/res/TypedArray;->getInt(II)I

    .line 36
    .line 37
    .line 38
    move-result p0

    .line 39
    const/4 p1, 0x1

    .line 40
    if-ne p0, p1, :cond_1

    .line 41
    .line 42
    move v0, p1

    .line 43
    :cond_1
    return v0
.end method

.method public final isInLetterboxAnimation()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mNeedsLetterboxedAnimation:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isAnimating()Z

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    if-eqz p0, :cond_0

    .line 10
    .line 11
    const/4 p0, 0x1

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const/4 p0, 0x0

    .line 14
    :goto_0
    return p0
.end method

.method public final isInRootTaskLocked()Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowContainer;->isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z

    move-result v0

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    if-eqz p0, :cond_1

    const/4 p0, 0x1

    goto :goto_1

    :cond_1
    const/4 p0, 0x0

    :goto_1
    return p0
.end method

.method public final isInterestingToUserLocked()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 6
    .line 7
    if-nez v0, :cond_1

    .line 8
    .line 9
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 10
    .line 11
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 12
    .line 13
    if-eq p0, v0, :cond_1

    .line 14
    .line 15
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 16
    .line 17
    if-ne p0, v0, :cond_0

    .line 18
    .line 19
    goto :goto_0

    .line 20
    :cond_0
    const/4 p0, 0x0

    .line 21
    goto :goto_1

    .line 22
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 23
    :goto_1
    return p0
.end method

.method public final isKeyguardLocked()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isKeyguardLocked()Z

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 11
    .line 12
    iget-object p0, p0, Lcom/android/server/wm/RootWindowContainer;->mDefaultDisplay:Lcom/android/server/wm/DisplayContent;

    .line 13
    .line 14
    invoke-virtual {p0}, Lcom/android/server/wm/DisplayContent;->isKeyguardLocked()Z

    .line 15
    .line 16
    .line 17
    move-result p0

    .line 18
    :goto_0
    return p0
.end method

.method public final isLaunchAdjacent()Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 2
    .line 3
    if-eqz p0, :cond_0

    .line 4
    .line 5
    invoke-virtual {p0}, Landroid/content/Intent;->getFlags()I

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    const v0, 0x10001000

    .line 10
    .line 11
    .line 12
    and-int/2addr p0, v0

    .line 13
    if-ne p0, v0, :cond_0

    .line 14
    .line 15
    const/4 p0, 0x1

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    const/4 p0, 0x0

    .line 18
    :goto_0
    return p0
.end method

.method public final isPersistable()Z
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2
    .line 3
    iget v0, v0, Landroid/content/pm/ActivityInfo;->persistableMode:I

    .line 4
    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    const/4 v1, 0x2

    .line 8
    if-ne v0, v1, :cond_1

    .line 9
    .line 10
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 11
    .line 12
    if-eqz p0, :cond_2

    .line 13
    .line 14
    invoke-virtual {p0}, Landroid/content/Intent;->getFlags()I

    .line 15
    .line 16
    .line 17
    move-result p0

    .line 18
    const/high16 v0, 0x800000

    .line 19
    .line 20
    and-int/2addr p0, v0

    .line 21
    if-nez p0, :cond_1

    .line 22
    .line 23
    goto :goto_0

    .line 24
    :cond_1
    const/4 p0, 0x0

    .line 25
    goto :goto_1

    .line 26
    :cond_2
    :goto_0
    const/4 p0, 0x1

    .line 27
    :goto_1
    return p0
.end method

.method public final isProcessRunning()Z
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 6
    .line 7
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    .line 8
    .line 9
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->processName:Ljava/lang/String;

    .line 10
    .line 11
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 12
    .line 13
    iget-object p0, p0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 14
    .line 15
    iget p0, p0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 16
    .line 17
    invoke-virtual {v0, v1, p0}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    .line 18
    .line 19
    .line 20
    move-result-object p0

    .line 21
    move-object v0, p0

    .line 22
    check-cast v0, Lcom/android/server/wm/WindowProcessController;

    .line 23
    .line 24
    :cond_0
    if-eqz v0, :cond_1

    .line 25
    .line 26
    invoke-virtual {v0}, Lcom/android/server/wm/WindowProcessController;->hasThread()Z

    .line 27
    .line 28
    .line 29
    move-result p0

    .line 30
    if-eqz p0, :cond_1

    .line 31
    .line 32
    const/4 p0, 0x1

    .line 33
    goto :goto_0

    .line 34
    :cond_1
    const/4 p0, 0x0

    .line 35
    :goto_0
    return p0
.end method

.method public final isRelaunching()Z
    .locals 0

    .line 1
    iget p0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 2
    .line 3
    if-lez p0, :cond_0

    .line 4
    .line 5
    const/4 p0, 0x1

    .line 6
    goto :goto_0

    .line 7
    :cond_0
    const/4 p0, 0x0

    .line 8
    :goto_0
    return p0
.end method

.method public final isResizeable(Z)Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2
    .line 3
    iget v0, v0, Landroid/content/pm/ActivityInfo;->resizeMode:I

    .line 4
    .line 5
    const/16 v1, 0xa

    .line 6
    .line 7
    const/4 v2, 0x0

    .line 8
    if-ne v0, v1, :cond_0

    .line 9
    .line 10
    return v2

    .line 11
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 12
    .line 13
    iget-boolean v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mForceResizableActivities:Z

    .line 14
    .line 15
    if-nez v1, :cond_2

    .line 16
    .line 17
    invoke-static {v0}, Landroid/content/pm/ActivityInfo;->isResizeableMode(I)Z

    .line 18
    .line 19
    .line 20
    move-result v0

    .line 21
    if-nez v0, :cond_2

    .line 22
    .line 23
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 24
    .line 25
    invoke-virtual {v0}, Landroid/content/pm/ActivityInfo;->supportsPictureInPicture()Z

    .line 26
    .line 27
    .line 28
    move-result v0

    .line 29
    if-eqz v0, :cond_1

    .line 30
    .line 31
    if-nez p1, :cond_2

    .line 32
    .line 33
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isEmbedded()Z

    .line 34
    .line 35
    .line 36
    move-result p0

    .line 37
    if-eqz p0, :cond_3

    .line 38
    .line 39
    :cond_2
    const/4 v2, 0x1

    .line 40
    :cond_3
    return v2
.end method

.method public final isResolverOrChildActivity()Z
    .locals 3

    .line 1
    const-string v0, "android"

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 4
    .line 5
    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    const/4 v1, 0x0

    .line 10
    if-nez v0, :cond_0

    .line 11
    .line 12
    return v1

    .line 13
    :cond_0
    :try_start_0
    const-class v0, Lcom/android/internal/app/ResolverActivity;

    .line 14
    .line 15
    const-class v2, Ljava/lang/Object;

    .line 16
    .line 17
    invoke-virtual {v2}, Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;

    .line 18
    .line 19
    .line 20
    move-result-object v2

    .line 21
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 22
    .line 23
    invoke-virtual {p0}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 24
    .line 25
    .line 26
    move-result-object p0

    .line 27
    invoke-virtual {v2, p0}, Ljava/lang/ClassLoader;->loadClass(Ljava/lang/String;)Ljava/lang/Class;

    .line 28
    .line 29
    .line 30
    move-result-object p0

    .line 31
    invoke-virtual {v0, p0}, Ljava/lang/Class;->isAssignableFrom(Ljava/lang/Class;)Z

    .line 32
    .line 33
    .line 34
    move-result p0
    :try_end_0
    .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 35
    return p0

    .line 36
    :catch_0
    return v1
.end method

.method public final isResolverOrDelegateActivity()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    const-class v1, Lcom/android/internal/app/ResolverActivity;

    .line 8
    .line 9
    invoke-virtual {v1}, Ljava/lang/Class;->getName()Ljava/lang/String;

    .line 10
    .line 11
    .line 12
    move-result-object v1

    .line 13
    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 14
    .line 15
    .line 16
    move-result v0

    .line 17
    if-nez v0, :cond_2

    .line 18
    .line 19
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 20
    .line 21
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 22
    .line 23
    iget-object p0, p0, Lcom/android/server/wm/ActivityTaskManagerService;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 24
    .line 25
    iget-object v1, p0, Lcom/android/server/wm/ActivityTaskSupervisor;->mSystemChooserActivity:Landroid/content/ComponentName;

    .line 26
    .line 27
    if-nez v1, :cond_0

    .line 28
    .line 29
    iget-object v1, p0, Lcom/android/server/wm/ActivityTaskSupervisor;->mService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 30
    .line 31
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mContext:Landroid/content/Context;

    .line 32
    .line 33
    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 34
    .line 35
    .line 36
    move-result-object v1

    .line 37
    const v2, 0x10402f5

    .line 38
    .line 39
    .line 40
    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    .line 41
    .line 42
    .line 43
    move-result-object v1

    .line 44
    invoke-static {v1}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;

    .line 45
    .line 46
    .line 47
    move-result-object v1

    .line 48
    iput-object v1, p0, Lcom/android/server/wm/ActivityTaskSupervisor;->mSystemChooserActivity:Landroid/content/ComponentName;

    .line 49
    .line 50
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityTaskSupervisor;->mSystemChooserActivity:Landroid/content/ComponentName;

    .line 51
    .line 52
    invoke-static {v0, p0}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 53
    .line 54
    .line 55
    move-result p0

    .line 56
    if-eqz p0, :cond_1

    .line 57
    .line 58
    goto :goto_0

    .line 59
    :cond_1
    const/4 p0, 0x0

    .line 60
    goto :goto_1

    .line 61
    :cond_2
    :goto_0
    const/4 p0, 0x1

    .line 62
    :goto_1
    return p0
.end method

.method public final isRootOfTask()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-nez v0, :cond_0

    .line 5
    .line 6
    return v1

    .line 7
    :cond_0
    const/4 v2, 0x1

    .line 8
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/Task;->getRootActivity(ZZ)Lcom/android/server/wm/ActivityRecord;

    .line 9
    .line 10
    .line 11
    move-result-object v0

    .line 12
    if-ne p0, v0, :cond_1

    .line 13
    .line 14
    move v1, v2

    .line 15
    :cond_1
    return v1
.end method

.method public isSnapshotCompatible(Landroid/window/TaskSnapshot;)Z
    .locals 6

    .line 1
    const/4 v0, 0x0

    .line 2
    if-nez p1, :cond_0

    .line 3
    .line 4
    return v0

    .line 5
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 6
    .line 7
    invoke-virtual {v1}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 8
    .line 9
    .line 10
    move-result-object v1

    .line 11
    invoke-virtual {v1}, Landroid/graphics/Rect;->width()I

    .line 12
    .line 13
    .line 14
    move-result v1

    .line 15
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 16
    .line 17
    invoke-virtual {v2}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 18
    .line 19
    .line 20
    move-result-object v2

    .line 21
    invoke-virtual {v2}, Landroid/graphics/Rect;->height()I

    .line 22
    .line 23
    .line 24
    move-result v2

    .line 25
    invoke-virtual {p1}, Landroid/window/TaskSnapshot;->getTaskSize()Landroid/graphics/Point;

    .line 26
    .line 27
    .line 28
    move-result-object v3

    .line 29
    iget v4, v3, Landroid/graphics/Point;->x:I

    .line 30
    .line 31
    if-ne v1, v4, :cond_1

    .line 32
    .line 33
    iget v5, v3, Landroid/graphics/Point;->y:I

    .line 34
    .line 35
    if-eq v2, v5, :cond_2

    .line 36
    .line 37
    :cond_1
    iget v3, v3, Landroid/graphics/Point;->y:I

    .line 38
    .line 39
    if-ne v1, v3, :cond_5

    .line 40
    .line 41
    if-ne v2, v4, :cond_5

    .line 42
    .line 43
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/WindowToken;->hasFixedRotationTransform()Z

    .line 44
    .line 45
    .line 46
    move-result v1

    .line 47
    if-eqz v1, :cond_3

    .line 48
    .line 49
    invoke-virtual {p1}, Landroid/window/TaskSnapshot;->hasImeSurface()Z

    .line 50
    .line 51
    .line 52
    move-result v1

    .line 53
    if-eqz v1, :cond_3

    .line 54
    .line 55
    const-string p0, "ActivityTaskManager"

    .line 56
    .line 57
    const-string p1, "IME will be hidden by async rotation cause fixed launching.So, snapshot which include ime is not compatible."

    .line 58
    .line 59
    invoke-static {p0, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 60
    .line 61
    .line 62
    return v0

    .line 63
    :cond_3
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mDisableSnapshot:Z

    .line 64
    .line 65
    if-eqz v1, :cond_4

    .line 66
    .line 67
    return v0

    .line 68
    :cond_4
    invoke-virtual {p1}, Landroid/window/TaskSnapshot;->getTopActivityComponent()Landroid/content/ComponentName;

    .line 69
    .line 70
    .line 71
    move-result-object v1

    .line 72
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 73
    .line 74
    invoke-virtual {v1, v2}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    .line 75
    .line 76
    .line 77
    move-result v1

    .line 78
    if-eqz v1, :cond_5

    .line 79
    .line 80
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->isSnapshotOrientationCompatible(Landroid/window/TaskSnapshot;)Z

    .line 81
    .line 82
    .line 83
    move-result p0

    .line 84
    if-eqz p0, :cond_5

    .line 85
    .line 86
    const/4 v0, 0x1

    .line 87
    :cond_5
    return v0
.end method

.method public final isSnapshotOrientationCompatible(Landroid/window/TaskSnapshot;)Z
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 2
    .line 3
    invoke-virtual {v0, p0}, Lcom/android/server/wm/DisplayContent;->rotationForActivityInDifferentOrientation(Lcom/android/server/wm/ActivityRecord;)I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 8
    .line 9
    invoke-virtual {v1}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 10
    .line 11
    .line 12
    move-result-object v1

    .line 13
    invoke-virtual {v1}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    const/4 v2, -0x1

    .line 18
    if-eq v0, v2, :cond_0

    .line 19
    .line 20
    goto :goto_0

    .line 21
    :cond_0
    move v0, v1

    .line 22
    :goto_0
    invoke-virtual {p1}, Landroid/window/TaskSnapshot;->getRotation()I

    .line 23
    .line 24
    .line 25
    move-result v2

    .line 26
    const/4 v3, 0x0

    .line 27
    if-eq v2, v0, :cond_1

    .line 28
    .line 29
    return v3

    .line 30
    :cond_1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 31
    .line 32
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 33
    .line 34
    .line 35
    move-result-object p0

    .line 36
    invoke-virtual {p0}, Landroid/graphics/Rect;->width()I

    .line 37
    .line 38
    .line 39
    move-result v2

    .line 40
    invoke-virtual {p0}, Landroid/graphics/Rect;->height()I

    .line 41
    .line 42
    .line 43
    move-result p0

    .line 44
    invoke-virtual {p1}, Landroid/window/TaskSnapshot;->getTaskSize()Landroid/graphics/Point;

    .line 45
    .line 46
    .line 47
    move-result-object p1

    .line 48
    sub-int/2addr v1, v0

    .line 49
    invoke-static {v1}, Ljava/lang/Math;->abs(I)I

    .line 50
    .line 51
    .line 52
    move-result v0

    .line 53
    rem-int/lit8 v0, v0, 0x2

    .line 54
    .line 55
    const/4 v1, 0x1

    .line 56
    if-ne v0, v1, :cond_2

    .line 57
    .line 58
    move v4, v2

    .line 59
    move v2, p0

    .line 60
    move p0, v4

    .line 61
    :cond_2
    iget v0, p1, Landroid/graphics/Point;->x:I

    .line 62
    .line 63
    int-to-float v0, v0

    .line 64
    iget p1, p1, Landroid/graphics/Point;->y:I

    .line 65
    .line 66
    invoke-static {p1, v1}, Ljava/lang/Math;->max(II)I

    .line 67
    .line 68
    .line 69
    move-result p1

    .line 70
    int-to-float p1, p1

    .line 71
    div-float/2addr v0, p1

    .line 72
    int-to-float p1, v2

    .line 73
    invoke-static {p0, v1}, Ljava/lang/Math;->max(II)I

    .line 74
    .line 75
    .line 76
    move-result p0

    .line 77
    int-to-float p0, p0

    .line 78
    div-float/2addr p1, p0

    .line 79
    sub-float/2addr v0, p1

    .line 80
    invoke-static {v0}, Ljava/lang/Math;->abs(F)F

    .line 81
    .line 82
    .line 83
    move-result p0

    .line 84
    const p1, 0x3c23d70a    # 0.01f

    .line 85
    .line 86
    .line 87
    cmpg-float p0, p0, p1

    .line 88
    .line 89
    if-gtz p0, :cond_3

    .line 90
    .line 91
    move v3, v1

    .line 92
    :cond_3
    return v3
.end method

.method public final isSplitEmbedded()Z
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isEmbedded()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 8
    .line 9
    .line 10
    move-result-object p0

    .line 11
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->matchParentBounds()Z

    .line 12
    .line 13
    .line 14
    move-result p0

    .line 15
    if-nez p0, :cond_0

    .line 16
    .line 17
    const/4 p0, 0x1

    .line 18
    goto :goto_0

    .line 19
    :cond_0
    const/4 p0, 0x0

    .line 20
    :goto_0
    return p0
.end method

.method public final isStartingWindowDisplayed()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    goto :goto_0

    .line 6
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 7
    .line 8
    if-eqz p0, :cond_1

    .line 9
    .line 10
    iget-object v0, p0, Lcom/android/server/wm/Task;->mSharedStartingData:Lcom/android/server/wm/StartingData;

    .line 11
    .line 12
    goto :goto_0

    .line 13
    :cond_1
    const/4 v0, 0x0

    .line 14
    :goto_0
    if-eqz v0, :cond_2

    .line 15
    .line 16
    iget-boolean p0, v0, Lcom/android/server/wm/StartingData;->mIsDisplayed:Z

    .line 17
    .line 18
    if-eqz p0, :cond_2

    .line 19
    .line 20
    const/4 p0, 0x1

    .line 21
    goto :goto_1

    .line 22
    :cond_2
    const/4 p0, 0x0

    .line 23
    :goto_1
    return p0
.end method

.method public final isState(Lcom/android/server/wm/ActivityRecord$State;)Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    if-ne p1, p0, :cond_0

    const/4 p0, 0x1

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    :goto_0
    return p0
.end method

.method public final isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z
    .locals 0

    .line 2
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    if-eq p1, p0, :cond_1

    if-ne p2, p0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p0, 0x1

    :goto_1
    return p0
.end method

.method public final isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z
    .locals 0

    .line 3
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    if-eq p1, p0, :cond_1

    if-eq p2, p0, :cond_1

    if-eq p3, p0, :cond_1

    if-ne p4, p0, :cond_0

    goto :goto_0

    :cond_0
    const/4 p0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 p0, 0x1

    :goto_1
    return p0
.end method

.method public final isState$1(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z
    .locals 1

    .line 1
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->STARTED:Lcom/android/server/wm/ActivityRecord$State;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 4
    .line 5
    if-eq v0, p0, :cond_1

    .line 6
    .line 7
    if-eq p1, p0, :cond_1

    .line 8
    .line 9
    if-eq p2, p0, :cond_1

    .line 10
    .line 11
    if-eq p3, p0, :cond_1

    .line 12
    .line 13
    if-ne p4, p0, :cond_0

    .line 14
    .line 15
    goto :goto_0

    .line 16
    :cond_0
    const/4 p0, 0x0

    .line 17
    goto :goto_1

    .line 18
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 19
    :goto_1
    return p0
.end method

.method public final isSyncFinished(Lcom/android/server/wm/BLASTSyncEngine$SyncGroup;)Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    iget-object v2, v0, Lcom/android/server/wm/Task;->mSharedStartingData:Lcom/android/server/wm/StartingData;

    .line 7
    .line 8
    if-eqz v2, :cond_0

    .line 9
    .line 10
    new-instance v2, Lcom/android/server/wm/Task$$ExternalSyntheticLambda0;

    .line 11
    .line 12
    const/4 v3, 0x6

    .line 13
    invoke-direct {v2, v3}, Lcom/android/server/wm/Task$$ExternalSyntheticLambda0;-><init>(I)V

    .line 14
    .line 15
    .line 16
    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowContainer;->getWindow(Ljava/util/function/Predicate;)Lcom/android/server/wm/WindowState;

    .line 17
    .line 18
    .line 19
    move-result-object v0

    .line 20
    if-eqz v0, :cond_0

    .line 21
    .line 22
    iget v0, v0, Lcom/android/server/wm/WindowContainer;->mSyncState:I

    .line 23
    .line 24
    const/4 v2, 0x2

    .line 25
    if-ne v0, v2, :cond_0

    .line 26
    .line 27
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 28
    .line 29
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 30
    .line 31
    iget-object v0, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 32
    .line 33
    invoke-virtual {v0}, Landroid/util/ArrayMap;->isEmpty()Z

    .line 34
    .line 35
    .line 36
    move-result v0

    .line 37
    if-eqz v0, :cond_0

    .line 38
    .line 39
    return v1

    .line 40
    :cond_0
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->isSyncFinished(Lcom/android/server/wm/BLASTSyncEngine$SyncGroup;)Z

    .line 41
    .line 42
    .line 43
    move-result p1

    .line 44
    const/4 v0, 0x0

    .line 45
    if-nez p1, :cond_1

    .line 46
    .line 47
    return v0

    .line 48
    :cond_1
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 49
    .line 50
    if-eqz p1, :cond_3

    .line 51
    .line 52
    iget-object p1, p1, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 53
    .line 54
    iget-object v2, p1, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 55
    .line 56
    invoke-virtual {v2}, Landroid/util/ArrayMap;->isEmpty()Z

    .line 57
    .line 58
    .line 59
    move-result v2

    .line 60
    if-eqz v2, :cond_2

    .line 61
    .line 62
    move p1, v0

    .line 63
    goto :goto_0

    .line 64
    :cond_2
    iget-object p1, p1, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 65
    .line 66
    invoke-virtual {p1, p0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    .line 67
    .line 68
    .line 69
    move-result p1

    .line 70
    :goto_0
    if-eqz p1, :cond_3

    .line 71
    .line 72
    return v0

    .line 73
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isVisibleRequested()Z

    .line 74
    .line 75
    .line 76
    move-result p1

    .line 77
    if-nez p1, :cond_4

    .line 78
    .line 79
    return v1

    .line 80
    :cond_4
    iget p1, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 81
    .line 82
    if-lez p1, :cond_5

    .line 83
    .line 84
    return v0

    .line 85
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isAttached()Z

    .line 86
    .line 87
    .line 88
    move-result p1

    .line 89
    if-nez p1, :cond_6

    .line 90
    .line 91
    return v0

    .line 92
    :cond_6
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 93
    .line 94
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    .line 95
    .line 96
    .line 97
    move-result p1

    .line 98
    sub-int/2addr p1, v1

    .line 99
    :goto_1
    if-ltz p1, :cond_8

    .line 100
    .line 101
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 102
    .line 103
    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 104
    .line 105
    .line 106
    move-result-object v2

    .line 107
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 108
    .line 109
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleRequested()Z

    .line 110
    .line 111
    .line 112
    move-result v2

    .line 113
    if-eqz v2, :cond_7

    .line 114
    .line 115
    return v1

    .line 116
    :cond_7
    add-int/lit8 p1, p1, -0x1

    .line 117
    .line 118
    goto :goto_1

    .line 119
    :cond_8
    return v0
.end method

.method public final isTopRunningActivity()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 2
    .line 3
    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->topRunningActivity()Lcom/android/server/wm/ActivityRecord;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    if-ne v0, p0, :cond_0

    .line 8
    .line 9
    const/4 p0, 0x1

    .line 10
    goto :goto_0

    .line 11
    :cond_0
    const/4 p0, 0x0

    .line 12
    :goto_0
    return p0
.end method

.method public final isUid(I)Z
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2
    .line 3
    iget-object p0, p0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 4
    .line 5
    iget p0, p0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 6
    .line 7
    if-ne p0, p1, :cond_0

    .line 8
    .line 9
    const/4 p0, 0x1

    .line 10
    goto :goto_0

    .line 11
    :cond_0
    const/4 p0, 0x0

    .line 12
    :goto_0
    return p0
.end method

.method public final isVisible()Z
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 2
    .line 3
    return p0
.end method

.method public final isWaitingForTransitionStart()Z
    .locals 2

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    if-eqz v0, :cond_1

    .line 6
    .line 7
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 8
    .line 9
    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    .line 10
    .line 11
    .line 12
    move-result v1

    .line 13
    if-eqz v1, :cond_1

    .line 14
    .line 15
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 16
    .line 17
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 18
    .line 19
    .line 20
    move-result v1

    .line 21
    if-nez v1, :cond_0

    .line 22
    .line 23
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 24
    .line 25
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 26
    .line 27
    .line 28
    move-result v1

    .line 29
    if-nez v1, :cond_0

    .line 30
    .line 31
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mChangingContainers:Landroid/util/ArraySet;

    .line 32
    .line 33
    invoke-virtual {v0, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 34
    .line 35
    .line 36
    move-result p0

    .line 37
    if-eqz p0, :cond_1

    .line 38
    .line 39
    :cond_0
    const/4 p0, 0x1

    .line 40
    goto :goto_0

    .line 41
    :cond_1
    const/4 p0, 0x0

    .line 42
    :goto_0
    return p0
.end method

.method public final logAppCompatState()V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mActivityMetricsLogger:Lcom/android/server/wm/ActivityMetricsLogger;

    .line 4
    .line 5
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    .line 7
    .line 8
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 9
    .line 10
    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 11
    .line 12
    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 13
    .line 14
    const/4 v2, 0x0

    .line 15
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->getAppCompatState(Z)I

    .line 16
    .line 17
    .line 18
    move-result v3

    .line 19
    iget-object v4, v0, Lcom/android/server/wm/ActivityMetricsLogger;->mPackageUidToCompatStateInfo:Landroid/util/SparseArray;

    .line 20
    .line 21
    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->contains(I)Z

    .line 22
    .line 23
    .line 24
    move-result v4

    .line 25
    if-nez v4, :cond_0

    .line 26
    .line 27
    iget-object v4, v0, Lcom/android/server/wm/ActivityMetricsLogger;->mPackageUidToCompatStateInfo:Landroid/util/SparseArray;

    .line 28
    .line 29
    new-instance v5, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;

    .line 30
    .line 31
    invoke-direct {v5}, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;-><init>()V

    .line 32
    .line 33
    .line 34
    invoke-virtual {v4, v1, v5}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 35
    .line 36
    .line 37
    :cond_0
    iget-object v4, v0, Lcom/android/server/wm/ActivityMetricsLogger;->mPackageUidToCompatStateInfo:Landroid/util/SparseArray;

    .line 38
    .line 39
    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 40
    .line 41
    .line 42
    move-result-object v4

    .line 43
    check-cast v4, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;

    .line 44
    .line 45
    iget v5, v4, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mLastLoggedState:I

    .line 46
    .line 47
    iget-object v6, v4, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mLastLoggedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 48
    .line 49
    const/4 v7, 0x1

    .line 50
    if-eq v3, v7, :cond_1

    .line 51
    .line 52
    move v8, v7

    .line 53
    goto :goto_0

    .line 54
    :cond_1
    move v8, v2

    .line 55
    :goto_0
    iget-object v9, v4, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mVisibleActivities:Ljava/util/ArrayList;

    .line 56
    .line 57
    if-eqz v8, :cond_2

    .line 58
    .line 59
    invoke-virtual {v9, p0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 60
    .line 61
    .line 62
    move-result v10

    .line 63
    if-nez v10, :cond_2

    .line 64
    .line 65
    invoke-virtual {v9, p0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 66
    .line 67
    .line 68
    goto :goto_1

    .line 69
    :cond_2
    if-nez v8, :cond_3

    .line 70
    .line 71
    invoke-virtual {v9, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 72
    .line 73
    .line 74
    invoke-virtual {v9}, Ljava/util/ArrayList;->isEmpty()Z

    .line 75
    .line 76
    .line 77
    move-result v10

    .line 78
    if-eqz v10, :cond_3

    .line 79
    .line 80
    iget-object v0, v0, Lcom/android/server/wm/ActivityMetricsLogger;->mPackageUidToCompatStateInfo:Landroid/util/SparseArray;

    .line 81
    .line 82
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->remove(I)V

    .line 83
    .line 84
    .line 85
    :cond_3
    :goto_1
    if-ne v3, v5, :cond_4

    .line 86
    .line 87
    goto :goto_4

    .line 88
    :cond_4
    const/4 v0, 0x2

    .line 89
    if-nez v8, :cond_b

    .line 90
    .line 91
    invoke-virtual {v9}, Ljava/util/ArrayList;->isEmpty()Z

    .line 92
    .line 93
    .line 94
    move-result v8

    .line 95
    if-nez v8, :cond_b

    .line 96
    .line 97
    if-eqz v6, :cond_5

    .line 98
    .line 99
    if-ne p0, v6, :cond_d

    .line 100
    .line 101
    :cond_5
    iget-object p0, v4, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mVisibleActivities:Ljava/util/ArrayList;

    .line 102
    .line 103
    iget v3, v4, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mLastLoggedState:I

    .line 104
    .line 105
    const/4 v5, 0x0

    .line 106
    move v6, v2

    .line 107
    move v8, v7

    .line 108
    :goto_2
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    .line 109
    .line 110
    .line 111
    move-result v9

    .line 112
    if-ge v6, v9, :cond_a

    .line 113
    .line 114
    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 115
    .line 116
    .line 117
    move-result-object v9

    .line 118
    check-cast v9, Lcom/android/server/wm/ActivityRecord;

    .line 119
    .line 120
    invoke-virtual {v9, v2}, Lcom/android/server/wm/ActivityRecord;->getAppCompatState(Z)I

    .line 121
    .line 122
    .line 123
    move-result v10

    .line 124
    if-ne v10, v3, :cond_6

    .line 125
    .line 126
    iput-object v9, v4, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mLastLoggedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 127
    .line 128
    goto :goto_4

    .line 129
    :cond_6
    if-ne v10, v7, :cond_7

    .line 130
    .line 131
    const-string v9, "Visible activity with NOT_VISIBLE App Compat state for package UID: "

    .line 132
    .line 133
    const-string v10, "ActivityTaskManager"

    .line 134
    .line 135
    invoke-static {v1, v9, v10}, Lcom/android/server/DeviceIdleController$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;)V

    .line 136
    .line 137
    .line 138
    goto :goto_3

    .line 139
    :cond_7
    if-eq v8, v7, :cond_8

    .line 140
    .line 141
    if-ne v8, v0, :cond_9

    .line 142
    .line 143
    if-eq v10, v0, :cond_9

    .line 144
    .line 145
    :cond_8
    move-object v5, v9

    .line 146
    move v8, v10

    .line 147
    :cond_9
    :goto_3
    add-int/lit8 v6, v6, 0x1

    .line 148
    .line 149
    goto :goto_2

    .line 150
    :cond_a
    if-eqz v5, :cond_d

    .line 151
    .line 152
    if-eq v8, v7, :cond_d

    .line 153
    .line 154
    invoke-static {v5, v8, v4}, Lcom/android/server/wm/ActivityMetricsLogger;->logAppCompatStateInternal(Lcom/android/server/wm/ActivityRecord;ILcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;)V

    .line 155
    .line 156
    .line 157
    goto :goto_4

    .line 158
    :cond_b
    if-eqz v6, :cond_c

    .line 159
    .line 160
    if-eq p0, v6, :cond_c

    .line 161
    .line 162
    if-eq v5, v7, :cond_c

    .line 163
    .line 164
    if-eq v5, v0, :cond_c

    .line 165
    .line 166
    goto :goto_4

    .line 167
    :cond_c
    invoke-static {p0, v3, v4}, Lcom/android/server/wm/ActivityMetricsLogger;->logAppCompatStateInternal(Lcom/android/server/wm/ActivityRecord;ILcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;)V

    .line 168
    .line 169
    .line 170
    :cond_d
    :goto_4
    return-void
.end method

.method public final logForMultiWindowModeChanged(II)V
    .locals 1

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MW_SA_LOGGING:Z

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 7
    .line 8
    invoke-virtual {p0}, Landroid/util/MergedConfiguration;->getOverrideConfiguration()Landroid/content/res/Configuration;

    .line 9
    .line 10
    .line 11
    move-result-object p0

    .line 12
    iget-object p0, p0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 13
    .line 14
    invoke-virtual {p0}, Landroid/app/WindowConfiguration;->getWindowingMode()I

    .line 15
    .line 16
    .line 17
    move-result v0

    .line 18
    invoke-virtual {p0}, Landroid/app/WindowConfiguration;->getStageType()I

    .line 19
    .line 20
    .line 21
    move-result p0

    .line 22
    invoke-static {p1, v0, p2, p0}, Lcom/samsung/android/multiwindow/MultiWindowUtils;->logForMultiWindowModeChange(IIII)V

    .line 23
    .line 24
    .line 25
    return-void
.end method

.method public final logStartActivity(ILcom/android/server/wm/Task;Ljava/lang/String;)V
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    invoke-virtual {v0}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    .line 10
    .line 11
    .line 12
    move-result-object v0

    .line 13
    goto :goto_0

    .line 14
    :cond_0
    const/4 v0, 0x0

    .line 15
    :goto_0
    if-eqz v0, :cond_1

    .line 16
    .line 17
    const-string/jumbo v1, "nfc://secure"

    .line 18
    .line 19
    .line 20
    invoke-virtual {v0, v1}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    .line 21
    .line 22
    .line 23
    move-result v1

    .line 24
    if-eqz v1, :cond_1

    .line 25
    .line 26
    const-string/jumbo v0, "nfc://secure:it should not be shown"

    .line 27
    .line 28
    .line 29
    :cond_1
    move-object v7, v0

    .line 30
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 31
    .line 32
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 33
    .line 34
    .line 35
    move-result-object v1

    .line 36
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 37
    .line 38
    .line 39
    move-result v0

    .line 40
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 41
    .line 42
    .line 43
    move-result-object v2

    .line 44
    iget p2, p2, Lcom/android/server/wm/Task;->mTaskId:I

    .line 45
    .line 46
    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 47
    .line 48
    .line 49
    move-result-object v3

    .line 50
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 51
    .line 52
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 53
    .line 54
    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    .line 55
    .line 56
    .line 57
    move-result-object v5

    .line 58
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 59
    .line 60
    invoke-virtual {p2}, Landroid/content/Intent;->getType()Ljava/lang/String;

    .line 61
    .line 62
    .line 63
    move-result-object v6

    .line 64
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 65
    .line 66
    invoke-virtual {p0}, Landroid/content/Intent;->getFlags()I

    .line 67
    .line 68
    .line 69
    move-result p0

    .line 70
    invoke-static {p0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 71
    .line 72
    .line 73
    move-result-object v8

    .line 74
    move-object v9, p3

    .line 75
    filled-new-array/range {v1 .. v9}, [Ljava/lang/Object;

    .line 76
    .line 77
    .line 78
    move-result-object p0

    .line 79
    invoke-static {p1, p0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 80
    .line 81
    .line 82
    return-void
.end method

.method public final makeActiveIfNeeded(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 6

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldResumeActivity(Lcom/android/server/wm/ActivityRecord;)Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x0

    .line 6
    const/4 v2, 0x0

    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 10
    .line 11
    .line 12
    move-result-object p0

    .line 13
    invoke-virtual {p0, p1, v1, v2}, Lcom/android/server/wm/Task;->resumeTopActivityUncheckedLocked(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Z)Z

    .line 14
    .line 15
    .line 16
    move-result p0

    .line 17
    return p0

    .line 18
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldPauseActivity(Lcom/android/server/wm/ActivityRecord;)Z

    .line 19
    .line 20
    .line 21
    move-result p1

    .line 22
    const-string v0, "ActivityTaskManager"

    .line 23
    .line 24
    const-string/jumbo v3, "makeActiveIfNeeded"

    .line 25
    .line 26
    .line 27
    if-eqz p1, :cond_1

    .line 28
    .line 29
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 30
    .line 31
    invoke-virtual {p0, p1, v3}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 32
    .line 33
    .line 34
    iget p1, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 35
    .line 36
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 37
    .line 38
    .line 39
    move-result v1

    .line 40
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 41
    .line 42
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 43
    .line 44
    .line 45
    move-result-object p1

    .line 46
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 47
    .line 48
    .line 49
    move-result-object v1

    .line 50
    const-string/jumbo v4, "userLeaving=false"

    .line 51
    .line 52
    .line 53
    const-string/jumbo v5, "make-active"

    .line 54
    .line 55
    .line 56
    filled-new-array {p1, v1, v3, v4, v5}, [Ljava/lang/Object;

    .line 57
    .line 58
    .line 59
    move-result-object p1

    .line 60
    const/16 v1, 0x753d

    .line 61
    .line 62
    invoke-static {v1, p1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 63
    .line 64
    .line 65
    :try_start_0
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 66
    .line 67
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 68
    .line 69
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 70
    .line 71
    iget-object v1, v1, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 72
    .line 73
    iget-object v3, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 74
    .line 75
    iget-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 76
    .line 77
    iget-boolean v5, p0, Lcom/android/server/wm/ActivityRecord;->mAutoEnteringPip:Z

    .line 78
    .line 79
    invoke-static {v3, v4, v2, v2, v5}, Landroid/app/servertransaction/PauseActivityItem;->obtain(Landroid/os/IBinder;ZZZZ)Landroid/app/servertransaction/PauseActivityItem;

    .line 80
    .line 81
    .line 82
    move-result-object v3

    .line 83
    invoke-virtual {p1, v1, v3}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 84
    .line 85
    .line 86
    goto :goto_2

    .line 87
    :catch_0
    move-exception p1

    .line 88
    new-instance v1, Ljava/lang/StringBuilder;

    .line 89
    .line 90
    const-string v3, "Exception thrown sending pause: "

    .line 91
    .line 92
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 93
    .line 94
    .line 95
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 96
    .line 97
    invoke-virtual {p0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    .line 98
    .line 99
    .line 100
    move-result-object p0

    .line 101
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 102
    .line 103
    .line 104
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 105
    .line 106
    .line 107
    move-result-object p0

    .line 108
    invoke-static {v0, p0, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 109
    .line 110
    .line 111
    goto :goto_2

    .line 112
    :cond_1
    iget-boolean p1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 113
    .line 114
    if-eqz p1, :cond_4

    .line 115
    .line 116
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->STOPPED:Lcom/android/server/wm/ActivityRecord$State;

    .line 117
    .line 118
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 119
    .line 120
    .line 121
    move-result p1

    .line 122
    if-nez p1, :cond_2

    .line 123
    .line 124
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 125
    .line 126
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 127
    .line 128
    .line 129
    move-result p1

    .line 130
    if-eqz p1, :cond_4

    .line 131
    .line 132
    :cond_2
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->STARTED:Lcom/android/server/wm/ActivityRecord$State;

    .line 133
    .line 134
    invoke-virtual {p0, p1, v3}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 135
    .line 136
    .line 137
    :try_start_1
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 138
    .line 139
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 140
    .line 141
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 142
    .line 143
    iget-object v3, v3, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 144
    .line 145
    iget-object v4, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 146
    .line 147
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 148
    .line 149
    if-nez v5, :cond_3

    .line 150
    .line 151
    goto :goto_0

    .line 152
    :cond_3
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 153
    .line 154
    invoke-virtual {v5}, Landroid/app/ActivityOptions;->getSceneTransitionInfo()Landroid/app/ActivityOptions$SceneTransitionInfo;

    .line 155
    .line 156
    .line 157
    move-result-object v1

    .line 158
    :goto_0
    invoke-static {v4, v1}, Landroid/app/servertransaction/StartActivityItem;->obtain(Landroid/os/IBinder;Landroid/app/ActivityOptions$SceneTransitionInfo;)Landroid/app/servertransaction/StartActivityItem;

    .line 159
    .line 160
    .line 161
    move-result-object v1

    .line 162
    invoke-virtual {p1, v3, v1}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 163
    .line 164
    .line 165
    goto :goto_1

    .line 166
    :catch_1
    move-exception p1

    .line 167
    new-instance v1, Ljava/lang/StringBuilder;

    .line 168
    .line 169
    const-string v3, "Exception thrown sending start: "

    .line 170
    .line 171
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 172
    .line 173
    .line 174
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 175
    .line 176
    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    .line 177
    .line 178
    .line 179
    move-result-object v3

    .line 180
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 181
    .line 182
    .line 183
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 184
    .line 185
    .line 186
    move-result-object v1

    .line 187
    invoke-static {v0, v1, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 188
    .line 189
    .line 190
    :goto_1
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 191
    .line 192
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 193
    .line 194
    invoke-virtual {p1, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 195
    .line 196
    .line 197
    :cond_4
    :goto_2
    return v2
.end method

.method public final makeFinishingLocked()V
    .locals 4

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    const/4 v0, 0x1

    .line 7
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 8
    .line 9
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mLaunchCookie:Landroid/os/IBinder;

    .line 10
    .line 11
    if-eqz v1, :cond_1

    .line 12
    .line 13
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 14
    .line 15
    sget-object v2, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 16
    .line 17
    if-eq v1, v2, :cond_1

    .line 18
    .line 19
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 20
    .line 21
    if-eqz v1, :cond_1

    .line 22
    .line 23
    iget-boolean v2, v1, Lcom/android/server/wm/Task;->mInRemoveTask:Z

    .line 24
    .line 25
    if-nez v2, :cond_1

    .line 26
    .line 27
    iget-boolean v2, v1, Lcom/android/server/wm/Task;->mReuseTask:Z

    .line 28
    .line 29
    if-nez v2, :cond_1

    .line 30
    .line 31
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;

    .line 32
    .line 33
    const/4 v3, 0x3

    .line 34
    invoke-direct {v2, v3, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    .line 35
    .line 36
    .line 37
    const/4 v3, 0x0

    .line 38
    invoke-virtual {v1, v2, p0, v3, v3}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;Lcom/android/server/wm/WindowContainer;ZZ)Lcom/android/server/wm/ActivityRecord;

    .line 39
    .line 40
    .line 41
    move-result-object v1

    .line 42
    if-eqz v1, :cond_1

    .line 43
    .line 44
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mLaunchCookie:Landroid/os/IBinder;

    .line 45
    .line 46
    iput-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mLaunchCookie:Landroid/os/IBinder;

    .line 47
    .line 48
    const/4 v1, 0x0

    .line 49
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mLaunchCookie:Landroid/os/IBinder;

    .line 50
    .line 51
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 52
    .line 53
    .line 54
    move-result-object v1

    .line 55
    if-eqz v1, :cond_3

    .line 56
    .line 57
    invoke-virtual {v1}, Lcom/android/server/wm/TaskFragment;->getTask()Lcom/android/server/wm/Task;

    .line 58
    .line 59
    .line 60
    move-result-object v2

    .line 61
    if-eqz v2, :cond_2

    .line 62
    .line 63
    iget-boolean v2, v2, Lcom/android/server/wm/Task;->mReuseTask:Z

    .line 64
    .line 65
    if-eqz v2, :cond_2

    .line 66
    .line 67
    invoke-virtual {v1, v0, v0}, Lcom/android/server/wm/TaskFragment;->getTopNonFinishingActivity(ZZ)Lcom/android/server/wm/ActivityRecord;

    .line 68
    .line 69
    .line 70
    move-result-object v2

    .line 71
    if-nez v2, :cond_2

    .line 72
    .line 73
    iput-boolean v0, v1, Lcom/android/server/wm/TaskFragment;->mClearedTaskForReuse:Z

    .line 74
    .line 75
    :cond_2
    invoke-virtual {v1}, Lcom/android/server/wm/TaskFragment;->sendTaskFragmentInfoChanged()V

    .line 76
    .line 77
    .line 78
    :cond_3
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 79
    .line 80
    if-eqz v0, :cond_4

    .line 81
    .line 82
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->abortAndClearOptionsAnimation()V

    .line 83
    .line 84
    .line 85
    :cond_4
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 86
    .line 87
    if-eqz v0, :cond_5

    .line 88
    .line 89
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 90
    .line 91
    invoke-virtual {v0, p0}, Lcom/android/server/wm/UnknownAppVisibilityController;->appRemovedOrHidden(Lcom/android/server/wm/ActivityRecord;)V

    .line 92
    .line 93
    .line 94
    :cond_5
    return-void
.end method

.method public final makeInvisible()V
    .locals 8

    .line 1
    const-string/jumbo v0, "makeInvisible"

    .line 2
    .line 3
    .line 4
    iget-boolean v1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 5
    .line 6
    if-nez v1, :cond_0

    .line 7
    .line 8
    return-void

    .line 9
    :cond_0
    const/4 v1, 0x1

    .line 10
    const/4 v2, 0x0

    .line 11
    :try_start_0
    invoke-virtual {p0, v0, v1, v2}, Lcom/android/server/wm/ActivityRecord;->checkEnterPictureInPictureState(Ljava/lang/String;ZZ)Z

    .line 12
    .line 13
    .line 14
    move-result v3

    .line 15
    if-eqz v3, :cond_1

    .line 16
    .line 17
    sget-object v4, Lcom/android/server/wm/ActivityRecord$State;->STARTED:Lcom/android/server/wm/ActivityRecord$State;

    .line 18
    .line 19
    sget-object v5, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 20
    .line 21
    sget-object v6, Lcom/android/server/wm/ActivityRecord$State;->STOPPED:Lcom/android/server/wm/ActivityRecord$State;

    .line 22
    .line 23
    sget-object v7, Lcom/android/server/wm/ActivityRecord$State;->PAUSED:Lcom/android/server/wm/ActivityRecord$State;

    .line 24
    .line 25
    invoke-virtual {p0, v4, v5, v6, v7}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 26
    .line 27
    .line 28
    move-result v4

    .line 29
    if-nez v4, :cond_1

    .line 30
    .line 31
    move v4, v1

    .line 32
    goto :goto_0

    .line 33
    :catch_0
    move-exception v0

    .line 34
    goto :goto_1

    .line 35
    :cond_1
    move v4, v2

    .line 36
    :goto_0
    invoke-virtual {p0, v4}, Lcom/android/server/wm/ActivityRecord;->setDeferHidingClient(Z)V

    .line 37
    .line 38
    .line 39
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->setVisibility(Z)V

    .line 40
    .line 41
    .line 42
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 43
    .line 44
    invoke-virtual {v4}, Ljava/lang/Enum;->ordinal()I

    .line 45
    .line 46
    .line 47
    move-result v4

    .line 48
    packed-switch v4, :pswitch_data_0

    .line 49
    .line 50
    .line 51
    goto :goto_2

    .line 52
    :pswitch_0
    iput-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->supportsEnterPipOnTaskSwitch:Z

    .line 53
    .line 54
    goto :goto_2

    .line 55
    :pswitch_1
    invoke-virtual {p0, v0, v1, v3}, Lcom/android/server/wm/ActivityRecord;->addToStopping(Ljava/lang/String;ZZ)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 56
    .line 57
    .line 58
    goto :goto_2

    .line 59
    :goto_1
    new-instance v1, Ljava/lang/StringBuilder;

    .line 60
    .line 61
    const-string v2, "Exception thrown making hidden: "

    .line 62
    .line 63
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 64
    .line 65
    .line 66
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 67
    .line 68
    invoke-virtual {p0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    .line 69
    .line 70
    .line 71
    move-result-object p0

    .line 72
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 73
    .line 74
    .line 75
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 76
    .line 77
    .line 78
    move-result-object p0

    .line 79
    const-string v1, "ActivityTaskManager"

    .line 80
    .line 81
    invoke-static {v1, p0, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 82
    .line 83
    .line 84
    :goto_2
    return-void

    .line 85
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_1
        :pswitch_1
        :pswitch_1
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public final matchParentBounds()Z
    .locals 3

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideBounds()Landroid/graphics/Rect;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    invoke-virtual {v0}, Landroid/graphics/Rect;->isEmpty()Z

    .line 6
    .line 7
    .line 8
    move-result v1

    .line 9
    const/4 v2, 0x1

    .line 10
    if-eqz v1, :cond_0

    .line 11
    .line 12
    return v2

    .line 13
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 14
    .line 15
    .line 16
    move-result-object p0

    .line 17
    if-eqz p0, :cond_2

    .line 18
    .line 19
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 20
    .line 21
    .line 22
    move-result-object p0

    .line 23
    invoke-virtual {p0, v0}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    .line 24
    .line 25
    .line 26
    move-result p0

    .line 27
    if-eqz p0, :cond_1

    .line 28
    .line 29
    goto :goto_0

    .line 30
    :cond_1
    const/4 v2, 0x0

    .line 31
    :cond_2
    :goto_0
    return v2
.end method

.method public final moveFocusableActivityToTop(Ljava/lang/String;)Z
    .locals 13

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isFocusable()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_FOCUS_enabled:[Z

    .line 6
    .line 7
    const/4 v2, 0x0

    .line 8
    if-nez v0, :cond_1

    .line 9
    .line 10
    aget-boolean p1, v1, v2

    .line 11
    .line 12
    if-eqz p1, :cond_0

    .line 13
    .line 14
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 15
    .line 16
    .line 17
    move-result-object p0

    .line 18
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 19
    .line 20
    const/4 v7, 0x0

    .line 21
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 22
    .line 23
    .line 24
    move-result-object v8

    .line 25
    const-wide v4, -0x7d3ea8930f1bc258L    # -2.12129502900972E-295

    .line 26
    .line 27
    .line 28
    .line 29
    .line 30
    const/4 v6, 0x0

    .line 31
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 32
    .line 33
    .line 34
    :cond_0
    return v2

    .line 35
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 36
    .line 37
    .line 38
    move-result-object v0

    .line 39
    if-nez v0, :cond_2

    .line 40
    .line 41
    new-instance p1, Ljava/lang/StringBuilder;

    .line 42
    .line 43
    const-string/jumbo v0, "moveFocusableActivityToTop: invalid root task: activity="

    .line 44
    .line 45
    .line 46
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 47
    .line 48
    .line 49
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 50
    .line 51
    .line 52
    const-string v0, " task="

    .line 53
    .line 54
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 55
    .line 56
    .line 57
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 58
    .line 59
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 60
    .line 61
    .line 62
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 63
    .line 64
    .line 65
    move-result-object p0

    .line 66
    const-string p1, "ActivityTaskManager"

    .line 67
    .line 68
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 69
    .line 70
    .line 71
    return v2

    .line 72
    :cond_2
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 73
    .line 74
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    .line 75
    .line 76
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 77
    .line 78
    invoke-virtual {v4}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 79
    .line 80
    .line 81
    move-result-object v4

    .line 82
    if-eqz v4, :cond_3

    .line 83
    .line 84
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 85
    .line 86
    invoke-virtual {v4}, Lcom/android/server/wm/RootWindowContainer;->getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 87
    .line 88
    .line 89
    move-result-object v4

    .line 90
    iget v4, v4, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 91
    .line 92
    goto :goto_0

    .line 93
    :cond_3
    const/4 v4, -0x1

    .line 94
    :goto_0
    sget-object v5, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 95
    .line 96
    const/4 v6, 0x1

    .line 97
    if-eqz v3, :cond_a

    .line 98
    .line 99
    iget-object v7, v3, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 100
    .line 101
    iget-object v8, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 102
    .line 103
    if-ne v7, v8, :cond_a

    .line 104
    .line 105
    iget-object v7, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 106
    .line 107
    iget v8, v7, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 108
    .line 109
    if-ne v4, v8, :cond_a

    .line 110
    .line 111
    new-instance v4, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;

    .line 112
    .line 113
    const/4 v8, 0x3

    .line 114
    invoke-direct {v4, v8}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;-><init>(I)V

    .line 115
    .line 116
    .line 117
    invoke-virtual {v7, v4, v6}, Lcom/android/server/wm/DisplayArea;->getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task;

    .line 118
    .line 119
    .line 120
    move-result-object v4

    .line 121
    iget-object v7, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 122
    .line 123
    if-ne v7, v4, :cond_a

    .line 124
    .line 125
    if-ne v3, p0, :cond_4

    .line 126
    .line 127
    aget-boolean v0, v1, v2

    .line 128
    .line 129
    if-eqz v0, :cond_6

    .line 130
    .line 131
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 132
    .line 133
    .line 134
    move-result-object v0

    .line 135
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 136
    .line 137
    const/4 v11, 0x0

    .line 138
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 139
    .line 140
    .line 141
    move-result-object v12

    .line 142
    const-wide v8, 0x1dcf887f97f389aL

    .line 143
    .line 144
    .line 145
    .line 146
    .line 147
    const/4 v10, 0x0

    .line 148
    invoke-static/range {v7 .. v12}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 149
    .line 150
    .line 151
    goto :goto_1

    .line 152
    :cond_4
    aget-boolean v0, v1, v2

    .line 153
    .line 154
    if-eqz v0, :cond_5

    .line 155
    .line 156
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 157
    .line 158
    .line 159
    move-result-object v0

    .line 160
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 161
    .line 162
    const/4 v11, 0x0

    .line 163
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 164
    .line 165
    .line 166
    move-result-object v12

    .line 167
    const-wide v8, -0xeb0fb648a69c7d2L    # -6.311903457092669E237

    .line 168
    .line 169
    .line 170
    .line 171
    .line 172
    const/4 v10, 0x0

    .line 173
    invoke-static/range {v7 .. v12}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 174
    .line 175
    .line 176
    :cond_5
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 177
    .line 178
    invoke-virtual {v0, p0}, Lcom/android/server/wm/DisplayContent;->setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z

    .line 179
    .line 180
    .line 181
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 182
    .line 183
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    .line 184
    .line 185
    invoke-virtual {v0, v2, v6}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 186
    .line 187
    .line 188
    :cond_6
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 189
    .line 190
    .line 191
    move-result-object v0

    .line 192
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 193
    .line 194
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mLastResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 195
    .line 196
    if-eqz v1, :cond_7

    .line 197
    .line 198
    invoke-virtual {v1}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 199
    .line 200
    .line 201
    move-result-object v1

    .line 202
    goto :goto_2

    .line 203
    :cond_7
    const/4 v1, 0x0

    .line 204
    :goto_2
    if-eqz v1, :cond_9

    .line 205
    .line 206
    if-eqz v0, :cond_9

    .line 207
    .line 208
    if-eq v1, v0, :cond_9

    .line 209
    .line 210
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->isMultiTaskingDisplay()Z

    .line 211
    .line 212
    .line 213
    move-result v1

    .line 214
    if-nez v1, :cond_8

    .line 215
    .line 216
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isMultiTaskingDisplay()Z

    .line 217
    .line 218
    .line 219
    move-result v0

    .line 220
    if-eqz v0, :cond_9

    .line 221
    .line 222
    :cond_8
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 223
    .line 224
    invoke-virtual {v0, p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setLastResumedActivityUncheckLocked(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;)V

    .line 225
    .line 226
    .line 227
    :cond_9
    invoke-virtual {p0, v5}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 228
    .line 229
    .line 230
    move-result p0

    .line 231
    xor-int/2addr p0, v6

    .line 232
    return p0

    .line 233
    :cond_a
    aget-boolean v1, v1, v2

    .line 234
    .line 235
    if-eqz v1, :cond_b

    .line 236
    .line 237
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 238
    .line 239
    .line 240
    move-result-object v1

    .line 241
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 242
    .line 243
    const/4 v11, 0x0

    .line 244
    filled-new-array {v1}, [Ljava/lang/Object;

    .line 245
    .line 246
    .line 247
    move-result-object v12

    .line 248
    const-wide v8, 0xa250eb5f02138a4L

    .line 249
    .line 250
    .line 251
    .line 252
    .line 253
    const/4 v10, 0x0

    .line 254
    invoke-static/range {v7 .. v12}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 255
    .line 256
    .line 257
    :cond_b
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 258
    .line 259
    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/Task;->moveToFront(Ljava/lang/String;Lcom/android/server/wm/Task;)V

    .line 260
    .line 261
    .line 262
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 263
    .line 264
    if-ne v0, v5, :cond_c

    .line 265
    .line 266
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 267
    .line 268
    invoke-virtual {v0}, Lcom/android/server/wm/RootWindowContainer;->getTopResumedActivity()Lcom/android/server/wm/ActivityRecord;

    .line 269
    .line 270
    .line 271
    move-result-object v0

    .line 272
    if-ne v0, p0, :cond_c

    .line 273
    .line 274
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 275
    .line 276
    invoke-virtual {v0, p0, p1}, Lcom/android/server/wm/ActivityTaskManagerService;->setLastResumedActivityUncheckLocked(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;)V

    .line 277
    .line 278
    .line 279
    :cond_c
    return v6
.end method

.method public final needsZBoost()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mNeedsZBoost:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->needsZBoost()Z

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    if-eqz p0, :cond_0

    .line 10
    .line 11
    goto :goto_0

    .line 12
    :cond_0
    const/4 p0, 0x0

    .line 13
    goto :goto_1

    .line 14
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 15
    :goto_1
    return p0
.end method

.method public final notifyActivityRefresherAboutConfigurationChange(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V
    .locals 8

    .line 1
    const/4 v0, 0x0

    .line 2
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->shouldBeResumed(Lcom/android/server/wm/ActivityRecord;)Z

    .line 3
    .line 4
    .line 5
    move-result v0

    .line 6
    if-nez v0, :cond_0

    .line 7
    .line 8
    return-void

    .line 9
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 10
    .line 11
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mAppCompatCameraPolicy:Lcom/android/server/wm/AppCompatCameraPolicy;

    .line 12
    .line 13
    iget-object v0, v0, Lcom/android/server/wm/AppCompatCameraPolicy;->mActivityRefresher:Lcom/android/server/wm/ActivityRefresher;

    .line 14
    .line 15
    if-eqz v0, :cond_5

    .line 16
    .line 17
    iget-object v1, v0, Lcom/android/server/wm/ActivityRefresher;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 18
    .line 19
    iget-object v2, v1, Lcom/android/server/wm/WindowManagerService;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 20
    .line 21
    iget-boolean v2, v2, Lcom/android/server/wm/AppCompatConfiguration;->mIsCameraCompatTreatmentRefreshEnabled:Z

    .line 22
    .line 23
    if-eqz v2, :cond_5

    .line 24
    .line 25
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 26
    .line 27
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 28
    .line 29
    iget-object v2, v2, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 30
    .line 31
    iget-object v3, v2, Lcom/android/server/wm/AppCompatCameraOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 32
    .line 33
    iget-object v3, v3, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 34
    .line 35
    const-wide/32 v4, 0xfc0f74b

    .line 36
    .line 37
    .line 38
    invoke-virtual {v3, v4, v5}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 39
    .line 40
    .line 41
    move-result v3

    .line 42
    iget-object v2, v2, Lcom/android/server/wm/AppCompatCameraOverrides;->mCameraCompatAllowRefreshOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 43
    .line 44
    iget-object v4, v2, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->mCondition:Ljava/util/function/BooleanSupplier;

    .line 45
    .line 46
    invoke-interface {v4}, Ljava/util/function/BooleanSupplier;->getAsBoolean()Z

    .line 47
    .line 48
    .line 49
    move-result v4

    .line 50
    if-nez v4, :cond_1

    .line 51
    .line 52
    goto/16 :goto_2

    .line 53
    .line 54
    :cond_1
    invoke-virtual {v2}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->getValue()I

    .line 55
    .line 56
    .line 57
    move-result v2

    .line 58
    if-eqz v2, :cond_5

    .line 59
    .line 60
    if-nez v3, :cond_5

    .line 61
    .line 62
    iget-object v2, v0, Lcom/android/server/wm/ActivityRefresher;->mEvaluators:Ljava/util/ArrayList;

    .line 63
    .line 64
    invoke-virtual {v2}, Ljava/util/ArrayList;->toArray()[Ljava/lang/Object;

    .line 65
    .line 66
    .line 67
    move-result-object v2

    .line 68
    new-instance v3, Lcom/android/server/wm/ActivityRefresher$$ExternalSyntheticLambda1;

    .line 69
    .line 70
    invoke-direct {v3, p0, p1, p2}, Lcom/android/server/wm/ActivityRefresher$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/wm/ActivityRecord;Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 71
    .line 72
    .line 73
    invoke-static {v2, v3}, Lcom/android/internal/util/ArrayUtils;->find([Ljava/lang/Object;Ljava/util/function/Predicate;)Ljava/lang/Object;

    .line 74
    .line 75
    .line 76
    move-result-object p1

    .line 77
    if-eqz p1, :cond_5

    .line 78
    .line 79
    iget-object p1, v1, Lcom/android/server/wm/WindowManagerService;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 80
    .line 81
    iget-boolean p1, p1, Lcom/android/server/wm/AppCompatConfiguration;->mIsCameraCompatRefreshCycleThroughStopEnabled:Z

    .line 82
    .line 83
    const/4 p2, 0x1

    .line 84
    const/4 v1, 0x0

    .line 85
    if-eqz p1, :cond_2

    .line 86
    .line 87
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 88
    .line 89
    iget-object p1, p1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 90
    .line 91
    iget-object p1, p1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 92
    .line 93
    iget-object v2, p1, Lcom/android/server/wm/AppCompatCameraOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 94
    .line 95
    iget-object v2, v2, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 96
    .line 97
    const-wide/32 v3, 0xfc0ec12

    .line 98
    .line 99
    .line 100
    invoke-virtual {v2, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 101
    .line 102
    .line 103
    move-result v2

    .line 104
    iget-object p1, p1, Lcom/android/server/wm/AppCompatCameraOverrides;->mCameraCompatEnableRefreshViaPauseOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 105
    .line 106
    invoke-virtual {p1, v2}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOverrideAndProperty(Z)Z

    .line 107
    .line 108
    .line 109
    move-result p1

    .line 110
    if-nez p1, :cond_2

    .line 111
    .line 112
    move p1, p2

    .line 113
    goto :goto_0

    .line 114
    :cond_2
    move p1, v1

    .line 115
    :goto_0
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 116
    .line 117
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 118
    .line 119
    iget-object v2, v2, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 120
    .line 121
    iget-object v2, v2, Lcom/android/server/wm/AppCompatCameraOverrides;->mAppCompatCameraOverridesState:Lcom/android/server/wm/AppCompatCameraOverrides$AppCompatCameraOverridesState;

    .line 122
    .line 123
    iput-boolean p2, v2, Lcom/android/server/wm/AppCompatCameraOverrides$AppCompatCameraOverridesState;->mIsRefreshRequested:Z

    .line 124
    .line 125
    sget-object v2, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 126
    .line 127
    aget-boolean p2, v2, p2

    .line 128
    .line 129
    if-eqz p2, :cond_3

    .line 130
    .line 131
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 132
    .line 133
    .line 134
    move-result-object p2

    .line 135
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 136
    .line 137
    filled-new-array {p2}, [Ljava/lang/Object;

    .line 138
    .line 139
    .line 140
    move-result-object v7

    .line 141
    const/4 v6, 0x0

    .line 142
    const-wide v3, 0x6413691bf2e03f6eL    # 1.200206803860267E174

    .line 143
    .line 144
    .line 145
    .line 146
    .line 147
    const/4 v5, 0x0

    .line 148
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 149
    .line 150
    .line 151
    :cond_3
    iget-object p2, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 152
    .line 153
    if-eqz p1, :cond_4

    .line 154
    .line 155
    const/4 p1, 0x5

    .line 156
    goto :goto_1

    .line 157
    :cond_4
    const/4 p1, 0x4

    .line 158
    :goto_1
    invoke-static {p2, p1}, Landroid/app/servertransaction/RefreshCallbackItem;->obtain(Landroid/os/IBinder;I)Landroid/app/servertransaction/RefreshCallbackItem;

    .line 159
    .line 160
    .line 161
    move-result-object p1

    .line 162
    iget-object p2, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 163
    .line 164
    invoke-static {p2, v1, v1}, Landroid/app/servertransaction/ResumeActivityItem;->obtain(Landroid/os/IBinder;ZZ)Landroid/app/servertransaction/ResumeActivityItem;

    .line 165
    .line 166
    .line 167
    move-result-object p2

    .line 168
    :try_start_0
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 169
    .line 170
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 171
    .line 172
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 173
    .line 174
    iget-object v3, v3, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 175
    .line 176
    invoke-virtual {v2, v3, p1, p2, v1}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionAndLifecycleItems(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;Landroid/app/servertransaction/ActivityLifecycleItem;Z)V

    .line 177
    .line 178
    .line 179
    iget-object p1, v0, Lcom/android/server/wm/ActivityRefresher;->mHandler:Landroid/os/Handler;

    .line 180
    .line 181
    new-instance p2, Lcom/android/server/wm/ActivityRefresher$$ExternalSyntheticLambda0;

    .line 182
    .line 183
    invoke-direct {p2, v0, p0}, Lcom/android/server/wm/ActivityRefresher$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/wm/ActivityRefresher;Lcom/android/server/wm/ActivityRecord;)V

    .line 184
    .line 185
    .line 186
    const-wide/16 v2, 0x7d0

    .line 187
    .line 188
    invoke-virtual {p1, p2, v2, v3}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 189
    .line 190
    .line 191
    goto :goto_2

    .line 192
    :catch_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 193
    .line 194
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 195
    .line 196
    iget-object p0, p0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 197
    .line 198
    iget-object p0, p0, Lcom/android/server/wm/AppCompatCameraOverrides;->mAppCompatCameraOverridesState:Lcom/android/server/wm/AppCompatCameraOverrides$AppCompatCameraOverridesState;

    .line 199
    .line 200
    iput-boolean v1, p0, Lcom/android/server/wm/AppCompatCameraOverrides$AppCompatCameraOverridesState;->mIsRefreshRequested:Z

    .line 201
    .line 202
    :cond_5
    :goto_2
    return-void
.end method

.method public final notifyAppResumed()V
    .locals 9

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    if-nez v0, :cond_0

    .line 6
    .line 7
    new-instance v0, Ljava/lang/StringBuilder;

    .line 8
    .line 9
    const-string v1, "Attempted to notify resumed of non-existing app token: "

    .line 10
    .line 11
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 12
    .line 13
    .line 14
    iget-object p0, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 15
    .line 16
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 17
    .line 18
    .line 19
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 20
    .line 21
    .line 22
    move-result-object p0

    .line 23
    const-string v0, "WindowManager"

    .line 24
    .line 25
    invoke-static {v0, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 26
    .line 27
    .line 28
    return-void

    .line 29
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 30
    .line 31
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ADD_REMOVE_enabled:[Z

    .line 32
    .line 33
    const/4 v2, 0x1

    .line 34
    aget-boolean v1, v1, v2

    .line 35
    .line 36
    if-eqz v1, :cond_1

    .line 37
    .line 38
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 39
    .line 40
    .line 41
    move-result-object v1

    .line 42
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 43
    .line 44
    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 45
    .line 46
    .line 47
    move-result-object v4

    .line 48
    filled-new-array {v4, v1}, [Ljava/lang/Object;

    .line 49
    .line 50
    .line 51
    move-result-object v8

    .line 52
    const-wide v4, 0xcd9f3665a413b47L

    .line 53
    .line 54
    .line 55
    .line 56
    .line 57
    const/4 v6, 0x3

    .line 58
    const/4 v7, 0x0

    .line 59
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 60
    .line 61
    .line 62
    :cond_1
    const/4 v1, 0x0

    .line 63
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 64
    .line 65
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 66
    .line 67
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mActivityStartController:Lcom/android/server/wm/ActivityStartController;

    .line 68
    .line 69
    iget-boolean v1, v1, Lcom/android/server/wm/ActivityStartController;->mInExecution:Z

    .line 70
    .line 71
    if-eqz v1, :cond_2

    .line 72
    .line 73
    iput-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mCurrentLaunchCanTurnScreenOn:Z

    .line 74
    .line 75
    :cond_2
    if-nez v0, :cond_3

    .line 76
    .line 77
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->destroySurfaces(Z)V

    .line 78
    .line 79
    .line 80
    :cond_3
    return-void
.end method

.method public final notifyUnknownVisibilityLaunchedForKeyguardTransition()V
    .locals 4

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->noDisplay:Z

    .line 2
    .line 3
    if-nez v0, :cond_3

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isKeyguardLocked()Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 10
    .line 11
    goto :goto_1

    .line 12
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 13
    .line 14
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 15
    .line 16
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 17
    .line 18
    .line 19
    iget-boolean v1, p0, Lcom/android/server/wm/WindowContainer;->mLaunchTaskBehind:Z

    .line 20
    .line 21
    const/4 v2, 0x2

    .line 22
    const/4 v3, 0x1

    .line 23
    if-nez v1, :cond_1

    .line 24
    .line 25
    iget-object v0, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 26
    .line 27
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 28
    .line 29
    .line 30
    move-result-object v1

    .line 31
    invoke-virtual {v0, p0, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 32
    .line 33
    .line 34
    goto :goto_0

    .line 35
    :cond_1
    iget-object v0, v0, Lcom/android/server/wm/UnknownAppVisibilityController;->mUnknownApps:Landroid/util/ArrayMap;

    .line 36
    .line 37
    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 38
    .line 39
    .line 40
    move-result-object v1

    .line 41
    invoke-virtual {v0, p0, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 42
    .line 43
    .line 44
    :goto_0
    new-instance v0, Ljava/lang/StringBuilder;

    .line 45
    .line 46
    const-string v1, "App launched activity="

    .line 47
    .line 48
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 49
    .line 50
    .line 51
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 52
    .line 53
    .line 54
    const-string v1, ", state="

    .line 55
    .line 56
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 57
    .line 58
    .line 59
    iget-boolean p0, p0, Lcom/android/server/wm/WindowContainer;->mLaunchTaskBehind:Z

    .line 60
    .line 61
    if-nez p0, :cond_2

    .line 62
    .line 63
    move v2, v3

    .line 64
    :cond_2
    const-string p0, "WindowManager"

    .line 65
    .line 66
    invoke-static {v0, v2, p0}, Lcom/android/server/DeviceIdleController$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 67
    .line 68
    .line 69
    :cond_3
    :goto_1
    return-void
.end method

.method public occludesParent(Z)Z
    .locals 1

    .line 1
    const/4 v0, 0x0

    .line 2
    if-nez p1, :cond_0

    .line 3
    .line 4
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 5
    .line 6
    if-eqz p1, :cond_0

    .line 7
    .line 8
    return v0

    .line 9
    :cond_0
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    .line 10
    .line 11
    if-nez p1, :cond_1

    .line 12
    .line 13
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->showWallpaper()Z

    .line 14
    .line 15
    .line 16
    move-result p0

    .line 17
    if-eqz p0, :cond_2

    .line 18
    .line 19
    :cond_1
    const/4 v0, 0x1

    .line 20
    :cond_2
    return v0
.end method

.method public final onAnimationFinished(ILcom/android/server/wm/AnimationAdapter;)V
    .locals 12

    .line 1
    invoke-super {p0, p1, p2}, Lcom/android/server/wm/WindowContainer;->onAnimationFinished(ILcom/android/server/wm/AnimationAdapter;)V

    .line 2
    .line 3
    .line 4
    const-wide/16 p1, 0x20

    .line 5
    .line 6
    const-string v0, "AR#onAnimationFinished"

    .line 7
    .line 8
    invoke-static {p1, p2, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 9
    .line 10
    .line 11
    const/4 v0, -0x1

    .line 12
    iput v0, p0, Lcom/android/server/wm/WindowContainer;->mTransit:I

    .line 13
    .line 14
    const/4 v0, 0x0

    .line 15
    iput v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitFlags:I

    .line 16
    .line 17
    const/16 v1, 0xc

    .line 18
    .line 19
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->setAppLayoutChanges(I)V

    .line 20
    .line 21
    .line 22
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->clearThumbnail()V

    .line 23
    .line 24
    .line 25
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 26
    .line 27
    const/4 v2, 0x1

    .line 28
    if-nez v1, :cond_1

    .line 29
    .line 30
    iget-boolean v1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 31
    .line 32
    if-eqz v1, :cond_0

    .line 33
    .line 34
    goto :goto_0

    .line 35
    :cond_0
    move v1, v0

    .line 36
    goto :goto_1

    .line 37
    :cond_1
    :goto_0
    move v1, v2

    .line 38
    :goto_1
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->setClientVisible(Z)V

    .line 39
    .line 40
    .line 41
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 42
    .line 43
    .line 44
    move-result-object v1

    .line 45
    iget-object v3, v1, Lcom/android/server/wm/DisplayContent;->mImeLayeringTarget:Lcom/android/server/wm/WindowState;

    .line 46
    .line 47
    if-eqz v3, :cond_2

    .line 48
    .line 49
    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 50
    .line 51
    if-ne v3, p0, :cond_2

    .line 52
    .line 53
    invoke-virtual {v1, v2}, Lcom/android/server/wm/DisplayContent;->computeImeTarget(Z)Lcom/android/server/wm/WindowState;

    .line 54
    .line 55
    .line 56
    :cond_2
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ANIM_enabled:[Z

    .line 57
    .line 58
    aget-boolean v1, v1, v2

    .line 59
    .line 60
    if-eqz v1, :cond_3

    .line 61
    .line 62
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 63
    .line 64
    .line 65
    move-result-object v1

    .line 66
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 67
    .line 68
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->okToDisplay()Z

    .line 69
    .line 70
    .line 71
    move-result v3

    .line 72
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->okToAnimate()Z

    .line 73
    .line 74
    .line 75
    move-result v4

    .line 76
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isStartingWindowDisplayed()Z

    .line 77
    .line 78
    .line 79
    move-result v5

    .line 80
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ANIM:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 81
    .line 82
    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 83
    .line 84
    .line 85
    move-result-object v2

    .line 86
    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 87
    .line 88
    .line 89
    move-result-object v3

    .line 90
    invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 91
    .line 92
    .line 93
    move-result-object v4

    .line 94
    invoke-static {v5}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 95
    .line 96
    .line 97
    move-result-object v5

    .line 98
    filled-new-array {v1, v2, v3, v4, v5}, [Ljava/lang/Object;

    .line 99
    .line 100
    .line 101
    move-result-object v11

    .line 102
    const/16 v9, 0x3fc

    .line 103
    .line 104
    const/4 v10, 0x0

    .line 105
    const-wide v7, -0x7a41b6b0aa88c820L

    .line 106
    .line 107
    .line 108
    .line 109
    .line 110
    invoke-static/range {v6 .. v11}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 111
    .line 112
    .line 113
    :cond_3
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mThumbnail:Lcom/android/server/wm/WindowContainerThumbnail;

    .line 114
    .line 115
    if-eqz v1, :cond_4

    .line 116
    .line 117
    invoke-virtual {v1}, Lcom/android/server/wm/WindowContainerThumbnail;->destroy()V

    .line 118
    .line 119
    .line 120
    const/4 v1, 0x0

    .line 121
    iput-object v1, p0, Lcom/android/server/wm/WindowContainer;->mThumbnail:Lcom/android/server/wm/WindowContainerThumbnail;

    .line 122
    .line 123
    :cond_4
    new-instance v1, Ljava/util/ArrayList;

    .line 124
    .line 125
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 126
    .line 127
    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 128
    .line 129
    .line 130
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;

    .line 131
    .line 132
    const/4 v3, 0x3

    .line 133
    invoke-direct {v2, v3}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;-><init>(I)V

    .line 134
    .line 135
    .line 136
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->forEach(Ljava/util/function/Consumer;)V

    .line 137
    .line 138
    .line 139
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 140
    .line 141
    if-eqz v1, :cond_5

    .line 142
    .line 143
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 144
    .line 145
    if-eqz v2, :cond_5

    .line 146
    .line 147
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;

    .line 148
    .line 149
    const/4 v3, 0x2

    .line 150
    invoke-direct {v2, v3}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;-><init>(I)V

    .line 151
    .line 152
    .line 153
    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowContainer;->getWindow(Ljava/util/function/Predicate;)Lcom/android/server/wm/WindowState;

    .line 154
    .line 155
    .line 156
    move-result-object v1

    .line 157
    if-eqz v1, :cond_5

    .line 158
    .line 159
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 160
    .line 161
    if-eqz v2, :cond_5

    .line 162
    .line 163
    const/16 v2, 0x10

    .line 164
    .line 165
    invoke-virtual {v1, v0, v2}, Lcom/android/server/wm/WindowState;->isSelfAnimating(II)Z

    .line 166
    .line 167
    .line 168
    move-result v0

    .line 169
    if-nez v0, :cond_5

    .line 170
    .line 171
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->onExitAnimationDone()V

    .line 172
    .line 173
    .line 174
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 175
    .line 176
    .line 177
    move-result-object v0

    .line 178
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 179
    .line 180
    iget-object v1, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 181
    .line 182
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTransition;->notifyAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    .line 183
    .line 184
    .line 185
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->scheduleAnimation()V

    .line 186
    .line 187
    .line 188
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 189
    .line 190
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityTaskSupervisor;->scheduleProcessStoppingAndFinishingActivitiesIfNeeded()V

    .line 191
    .line 192
    .line 193
    invoke-static {p1, p2}, Landroid/os/Trace;->traceEnd(J)V

    .line 194
    .line 195
    .line 196
    return-void
.end method

.method public final onAnimationLeashLost(Landroid/view/SurfaceControl$Transaction;)V
    .locals 3

    .line 1
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->onAnimationLeashLost(Landroid/view/SurfaceControl$Transaction;)V

    .line 2
    .line 3
    .line 4
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mAnimationBoundsLayer:Landroid/view/SurfaceControl;

    .line 5
    .line 6
    if-eqz v0, :cond_0

    .line 7
    .line 8
    invoke-virtual {p1, v0}, Landroid/view/SurfaceControl$Transaction;->remove(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 9
    .line 10
    .line 11
    const/4 v0, 0x0

    .line 12
    iput-object v0, p0, Lcom/android/server/wm/WindowContainer;->mAnimationBoundsLayer:Landroid/view/SurfaceControl;

    .line 13
    .line 14
    :cond_0
    const/4 v0, 0x0

    .line 15
    iput-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mNeedsAnimationBoundsLayer:Z

    .line 16
    .line 17
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mNeedsLetterboxedAnimation:Z

    .line 18
    .line 19
    if-eqz v1, :cond_1

    .line 20
    .line 21
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mNeedsLetterboxedAnimation:Z

    .line 22
    .line 23
    const/4 v0, 0x1

    .line 24
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 25
    .line 26
    .line 27
    move-result-object v0

    .line 28
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 29
    .line 30
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 31
    .line 32
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 33
    .line 34
    .line 35
    move-result-object v2

    .line 36
    iget-object v1, v1, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 37
    .line 38
    invoke-virtual {v1, v0, p1, v2}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->updateLetterboxSurfaceIfNeeded(Lcom/android/server/wm/WindowState;Landroid/view/SurfaceControl$Transaction;Landroid/view/SurfaceControl$Transaction;)V

    .line 39
    .line 40
    .line 41
    :cond_1
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAnimatingActivityRegistry:Lcom/android/server/wm/AnimatingActivityRegistry;

    .line 42
    .line 43
    if-eqz p1, :cond_2

    .line 44
    .line 45
    iget-object v0, p1, Lcom/android/server/wm/AnimatingActivityRegistry;->mAnimatingActivities:Landroid/util/ArraySet;

    .line 46
    .line 47
    invoke-virtual {v0, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 48
    .line 49
    .line 50
    iget-object v0, p1, Lcom/android/server/wm/AnimatingActivityRegistry;->mFinishedTokens:Landroid/util/ArrayMap;

    .line 51
    .line 52
    invoke-virtual {v0, p0}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 53
    .line 54
    .line 55
    iget-object p0, p1, Lcom/android/server/wm/AnimatingActivityRegistry;->mAnimatingActivities:Landroid/util/ArraySet;

    .line 56
    .line 57
    invoke-virtual {p0}, Landroid/util/ArraySet;->isEmpty()Z

    .line 58
    .line 59
    .line 60
    move-result p0

    .line 61
    if-eqz p0, :cond_2

    .line 62
    .line 63
    invoke-virtual {p1}, Lcom/android/server/wm/AnimatingActivityRegistry;->endDeferringFinished()V

    .line 64
    .line 65
    .line 66
    :cond_2
    return-void
.end method

.method public final onCancelFixedRotationTransform(I)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 2
    .line 3
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->getLastOrientationSource()Lcom/android/server/wm/WindowContainer;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    if-eq p0, v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 11
    .line 12
    .line 13
    move-result v0

    .line 14
    if-eqz v0, :cond_1

    .line 15
    .line 16
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 17
    .line 18
    invoke-virtual {v1}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 19
    .line 20
    .line 21
    move-result-object v1

    .line 22
    iget v1, v1, Landroid/content/res/Configuration;->orientation:I

    .line 23
    .line 24
    if-eq v0, v1, :cond_1

    .line 25
    .line 26
    return-void

    .line 27
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 28
    .line 29
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mPinnedTaskController:Lcom/android/server/wm/PinnedTaskController;

    .line 30
    .line 31
    const/4 v1, 0x0

    .line 32
    iput-boolean v1, v0, Lcom/android/server/wm/PinnedTaskController;->mFreezingTaskConfig:Z

    .line 33
    .line 34
    iput-boolean v1, v0, Lcom/android/server/wm/PinnedTaskController;->mDeferOrientationChanging:Z

    .line 35
    .line 36
    const/4 v2, 0x0

    .line 37
    iput-object v2, v0, Lcom/android/server/wm/PinnedTaskController;->mDestRotatedBounds:Landroid/graphics/Rect;

    .line 38
    .line 39
    iput-object v2, v0, Lcom/android/server/wm/PinnedTaskController;->mPipTransaction:Landroid/window/PictureInPictureSurfaceTransaction;

    .line 40
    .line 41
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->startFreezingScreen(I)V

    .line 42
    .line 43
    .line 44
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->ensureActivityConfiguration(Z)Z

    .line 45
    .line 46
    .line 47
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 48
    .line 49
    invoke-virtual {p1, p0}, Lcom/android/server/wm/TransitionController;->isCollecting(Lcom/android/server/wm/WindowContainer;)Z

    .line 50
    .line 51
    .line 52
    move-result p1

    .line 53
    if-eqz p1, :cond_2

    .line 54
    .line 55
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 56
    .line 57
    invoke-virtual {p0}, Lcom/android/server/wm/Task;->resetSurfaceControlTransforms()V

    .line 58
    .line 59
    .line 60
    :cond_2
    return-void
.end method

.method public final onChildVisibleRequestedChanged(Lcom/android/server/wm/WindowContainer;)Z
    .locals 0

    .line 1
    const/4 p0, 0x0

    .line 2
    return p0
.end method

.method public final onConfigurationChanged(Landroid/content/res/Configuration;)V
    .locals 8

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 7
    .line 8
    if-eqz v0, :cond_0

    .line 9
    .line 10
    iput-boolean v1, v0, Lcom/android/server/wm/SizeCompatAttributes;->mEnabled:Z

    .line 11
    .line 12
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 13
    .line 14
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 15
    .line 16
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 17
    .line 18
    const/4 v3, 0x0

    .line 19
    iput-object v3, v0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mPreCreatedAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 20
    .line 21
    const/4 v3, 0x1

    .line 22
    const/4 v4, -0x1

    .line 23
    if-eqz v2, :cond_3

    .line 24
    .line 25
    iget-object v5, v0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 26
    .line 27
    if-eqz v5, :cond_3

    .line 28
    .line 29
    iget-object v6, v0, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 30
    .line 31
    iget-object v7, v6, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 32
    .line 33
    iget-object v7, v7, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingAppCompatController:Lcom/android/server/wm/MultiTaskingAppCompatController;

    .line 34
    .line 35
    iget-object v7, v7, Lcom/android/server/wm/MultiTaskingAppCompatController;->mSizeCompatModePolicy:Lcom/android/server/wm/MultiTaskingAppCompatSizeCompatModePolicy;

    .line 36
    .line 37
    iget-boolean v7, v7, Lcom/android/server/wm/MultiTaskingAppCompatSizeCompatModePolicy;->mAvoidAppCompatDisplayInsets:Z

    .line 38
    .line 39
    if-nez v7, :cond_2

    .line 40
    .line 41
    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->isEmbedded()Z

    .line 42
    .line 43
    .line 44
    move-result v7

    .line 45
    if-eqz v7, :cond_1

    .line 46
    .line 47
    invoke-virtual {v6}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 48
    .line 49
    .line 50
    move-result-object v6

    .line 51
    invoke-virtual {v6}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideBounds()Landroid/graphics/Rect;

    .line 52
    .line 53
    .line 54
    move-result-object v6

    .line 55
    invoke-virtual {v6}, Landroid/graphics/Rect;->isEmpty()Z

    .line 56
    .line 57
    .line 58
    move-result v6

    .line 59
    if-nez v6, :cond_1

    .line 60
    .line 61
    goto :goto_0

    .line 62
    :cond_1
    sget-boolean v6, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ORIENTATION_POLICY:Z

    .line 63
    .line 64
    if-eqz v6, :cond_3

    .line 65
    .line 66
    iget v2, v2, Lcom/android/server/wm/Task;->mRespectOrientationRequestOverride:I

    .line 67
    .line 68
    if-eq v2, v4, :cond_3

    .line 69
    .line 70
    sget-boolean v2, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ROTATION_COMPAT_MODE:Z

    .line 71
    .line 72
    if-eqz v2, :cond_2

    .line 73
    .line 74
    iget-boolean v2, v5, Lcom/android/server/wm/AppCompatDisplayInsets;->mIsRotationCompatMode:Z

    .line 75
    .line 76
    if-nez v2, :cond_3

    .line 77
    .line 78
    :cond_2
    :goto_0
    invoke-virtual {v0, v3, v3}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->clearSizeCompatMode(ZZ)V

    .line 79
    .line 80
    .line 81
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 82
    .line 83
    invoke-virtual {v0}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 84
    .line 85
    .line 86
    move-result v0

    .line 87
    if-eqz v0, :cond_6

    .line 88
    .line 89
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 90
    .line 91
    if-eqz v0, :cond_6

    .line 92
    .line 93
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isVisibleRequested()Z

    .line 94
    .line 95
    .line 96
    move-result v0

    .line 97
    if-eqz v0, :cond_6

    .line 98
    .line 99
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideWindowingMode()I

    .line 100
    .line 101
    .line 102
    move-result v0

    .line 103
    if-nez v0, :cond_4

    .line 104
    .line 105
    iget-object v0, p1, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 106
    .line 107
    invoke-virtual {v0}, Landroid/app/WindowConfiguration;->getWindowingMode()I

    .line 108
    .line 109
    .line 110
    move-result v0

    .line 111
    goto :goto_1

    .line 112
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideWindowingMode()I

    .line 113
    .line 114
    .line 115
    move-result v0

    .line 116
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getWindowingMode()I

    .line 117
    .line 118
    .line 119
    move-result v2

    .line 120
    if-eq v2, v0, :cond_6

    .line 121
    .line 122
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 123
    .line 124
    if-eqz v0, :cond_5

    .line 125
    .line 126
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 127
    .line 128
    invoke-virtual {v0, p0}, Lcom/android/server/wm/TransitionController;->inFinishingTransition(Lcom/android/server/wm/WindowContainer;)Z

    .line 129
    .line 130
    .line 131
    move-result v0

    .line 132
    if-nez v0, :cond_6

    .line 133
    .line 134
    :cond_5
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 135
    .line 136
    invoke-virtual {v0, p0}, Lcom/android/server/wm/TransitionController;->collect(Lcom/android/server/wm/WindowContainer;)V

    .line 137
    .line 138
    .line 139
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 140
    .line 141
    .line 142
    move-result-object v0

    .line 143
    if-eqz v0, :cond_9

    .line 144
    .line 145
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 146
    .line 147
    .line 148
    move-result-object v0

    .line 149
    iget-object v2, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 150
    .line 151
    invoke-virtual {v2}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 152
    .line 153
    .line 154
    move-result v2

    .line 155
    if-eq v2, v4, :cond_7

    .line 156
    .line 157
    move v2, v3

    .line 158
    goto :goto_2

    .line 159
    :cond_7
    move v2, v1

    .line 160
    :goto_2
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 161
    .line 162
    .line 163
    move-result v5

    .line 164
    if-eqz v5, :cond_8

    .line 165
    .line 166
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 167
    .line 168
    .line 169
    move-result-object v6

    .line 170
    iget v6, v6, Landroid/content/res/Configuration;->orientation:I

    .line 171
    .line 172
    if-eq v5, v6, :cond_8

    .line 173
    .line 174
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 175
    .line 176
    .line 177
    move-result-object v6

    .line 178
    invoke-virtual {v6}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 179
    .line 180
    .line 181
    move-result-object v6

    .line 182
    iget v6, v6, Landroid/content/res/Configuration;->orientation:I

    .line 183
    .line 184
    if-ne v5, v6, :cond_8

    .line 185
    .line 186
    iget-object v6, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 187
    .line 188
    invoke-virtual {v6}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 189
    .line 190
    .line 191
    move-result v6

    .line 192
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 193
    .line 194
    .line 195
    move-result-object v7

    .line 196
    invoke-virtual {v7}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 197
    .line 198
    .line 199
    move-result-object v7

    .line 200
    invoke-virtual {v7}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 201
    .line 202
    .line 203
    move-result v7

    .line 204
    if-eq v6, v7, :cond_8

    .line 205
    .line 206
    iget-object p1, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 207
    .line 208
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 209
    .line 210
    .line 211
    move-result-object v1

    .line 212
    invoke-virtual {v1}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 213
    .line 214
    .line 215
    move-result-object v1

    .line 216
    invoke-virtual {v1}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 217
    .line 218
    .line 219
    move-result v1

    .line 220
    invoke-virtual {p1, v1}, Landroid/app/WindowConfiguration;->setRotation(I)V

    .line 221
    .line 222
    .line 223
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowContainer;->onRequestedOverrideConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 224
    .line 225
    .line 226
    return-void

    .line 227
    :cond_8
    if-eqz v2, :cond_9

    .line 228
    .line 229
    if-nez v5, :cond_9

    .line 230
    .line 231
    iget-object v2, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 232
    .line 233
    invoke-virtual {v2}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 234
    .line 235
    .line 236
    move-result v2

    .line 237
    if-eq v2, v4, :cond_9

    .line 238
    .line 239
    iget-object p1, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 240
    .line 241
    invoke-virtual {p1, v4}, Landroid/app/WindowConfiguration;->setRotation(I)V

    .line 242
    .line 243
    .line 244
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowContainer;->onRequestedOverrideConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 245
    .line 246
    .line 247
    return-void

    .line 248
    :cond_9
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 249
    .line 250
    .line 251
    move-result v0

    .line 252
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 253
    .line 254
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getActivityType()I

    .line 255
    .line 256
    .line 257
    move-result v5

    .line 258
    if-eqz v0, :cond_c

    .line 259
    .line 260
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 261
    .line 262
    .line 263
    move-result v6

    .line 264
    if-eqz v6, :cond_c

    .line 265
    .line 266
    if-eqz v2, :cond_c

    .line 267
    .line 268
    :try_start_0
    iget-object v6, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 269
    .line 270
    iget v7, v6, Lcom/android/server/wm/WindowProcessController;->mPauseConfigurationDispatchCount:I

    .line 271
    .line 272
    add-int/2addr v7, v3

    .line 273
    iput v7, v6, Lcom/android/server/wm/WindowProcessController;->mPauseConfigurationDispatchCount:I

    .line 274
    .line 275
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->onConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 276
    .line 277
    .line 278
    iget-boolean p1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 279
    .line 280
    if-eqz p1, :cond_a

    .line 281
    .line 282
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 283
    .line 284
    .line 285
    move-result p1

    .line 286
    if-nez p1, :cond_a

    .line 287
    .line 288
    invoke-virtual {v2, p0}, Lcom/android/server/wm/DisplayContent;->rotationForActivityInDifferentOrientation(Lcom/android/server/wm/ActivityRecord;)I

    .line 289
    .line 290
    .line 291
    move-result p1

    .line 292
    if-eq p1, v4, :cond_a

    .line 293
    .line 294
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 295
    .line 296
    invoke-virtual {v3}, Lcom/android/server/wm/WindowProcessController;->resumeConfigurationDispatch()Z

    .line 297
    .line 298
    .line 299
    invoke-virtual {v2, p1, p0}, Lcom/android/server/wm/DisplayContent;->setFixedRotationLaunchingApp(ILcom/android/server/wm/ActivityRecord;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 300
    .line 301
    .line 302
    goto :goto_3

    .line 303
    :catchall_0
    move-exception p1

    .line 304
    goto :goto_4

    .line 305
    :cond_a
    :goto_3
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 306
    .line 307
    invoke-virtual {p1}, Lcom/android/server/wm/WindowProcessController;->resumeConfigurationDispatch()Z

    .line 308
    .line 309
    .line 310
    move-result p1

    .line 311
    if-eqz p1, :cond_d

    .line 312
    .line 313
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 314
    .line 315
    invoke-virtual {p1}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 316
    .line 317
    .line 318
    move-result-object v3

    .line 319
    invoke-virtual {p1, v3}, Lcom/android/server/wm/WindowProcessController;->dispatchConfiguration(Landroid/content/res/Configuration;)V

    .line 320
    .line 321
    .line 322
    goto :goto_5

    .line 323
    :goto_4
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 324
    .line 325
    invoke-virtual {v0}, Lcom/android/server/wm/WindowProcessController;->resumeConfigurationDispatch()Z

    .line 326
    .line 327
    .line 328
    move-result v0

    .line 329
    if-eqz v0, :cond_b

    .line 330
    .line 331
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 332
    .line 333
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 334
    .line 335
    .line 336
    move-result-object v0

    .line 337
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowProcessController;->dispatchConfiguration(Landroid/content/res/Configuration;)V

    .line 338
    .line 339
    .line 340
    :cond_b
    throw p1

    .line 341
    :cond_c
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->onConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 342
    .line 343
    .line 344
    :cond_d
    :goto_5
    if-eqz v5, :cond_f

    .line 345
    .line 346
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getActivityType()I

    .line 347
    .line 348
    .line 349
    move-result p1

    .line 350
    if-eq v5, p1, :cond_f

    .line 351
    .line 352
    new-instance p1, Ljava/lang/StringBuilder;

    .line 353
    .line 354
    const-string v3, "Can\'t change activity type once set: "

    .line 355
    .line 356
    invoke-direct {p1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 357
    .line 358
    .line 359
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 360
    .line 361
    .line 362
    const-string v3, " activityType="

    .line 363
    .line 364
    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 365
    .line 366
    .line 367
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getActivityType()I

    .line 368
    .line 369
    .line 370
    move-result v3

    .line 371
    invoke-static {v3}, Landroid/app/WindowConfiguration;->activityTypeToString(I)Ljava/lang/String;

    .line 372
    .line 373
    .line 374
    move-result-object v3

    .line 375
    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 376
    .line 377
    .line 378
    const-string v3, ", was "

    .line 379
    .line 380
    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 381
    .line 382
    .line 383
    invoke-static {v5}, Landroid/app/WindowConfiguration;->activityTypeToString(I)Ljava/lang/String;

    .line 384
    .line 385
    .line 386
    move-result-object v3

    .line 387
    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 388
    .line 389
    .line 390
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 391
    .line 392
    .line 393
    move-result-object p1

    .line 394
    sget-boolean v3, Landroid/os/Build;->IS_DEBUGGABLE:Z

    .line 395
    .line 396
    if-nez v3, :cond_e

    .line 397
    .line 398
    const-string v3, "ActivityTaskManager"

    .line 399
    .line 400
    invoke-static {v3, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 401
    .line 402
    .line 403
    goto :goto_6

    .line 404
    :cond_e
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 405
    .line 406
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 407
    .line 408
    .line 409
    throw p0

    .line 410
    :cond_f
    :goto_6
    if-nez v0, :cond_11

    .line 411
    .line 412
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 413
    .line 414
    .line 415
    move-result p1

    .line 416
    if-eqz p1, :cond_11

    .line 417
    .line 418
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 419
    .line 420
    if-eqz p1, :cond_11

    .line 421
    .line 422
    sget-boolean p1, Lcom/samsung/android/rune/CoreRune;->MW_PIP_SHELL_TRANSITION:Z

    .line 423
    .line 424
    if-eqz p1, :cond_10

    .line 425
    .line 426
    const-string/jumbo p1, "pip_entered"

    .line 427
    .line 428
    .line 429
    invoke-virtual {p0, p1, v1}, Lcom/android/server/wm/ActivityRecord;->setEnteringPipFromSplit(Ljava/lang/String;Z)V

    .line 430
    .line 431
    .line 432
    invoke-virtual {p0, p1, v1}, Lcom/android/server/wm/ActivityRecord;->setHiddenWhileEnteringPinnedMode(Ljava/lang/String;Z)V

    .line 433
    .line 434
    .line 435
    :cond_10
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 436
    .line 437
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 438
    .line 439
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 440
    .line 441
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 442
    .line 443
    .line 444
    move-result-object v1

    .line 445
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 446
    .line 447
    .line 448
    new-instance v3, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1;

    .line 449
    .line 450
    const/4 v4, 0x1

    .line 451
    invoke-direct {v3, p1, v4}, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/wm/ActivityTaskSupervisor;I)V

    .line 452
    .line 453
    .line 454
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Consumer;)V

    .line 455
    .line 456
    .line 457
    iput-object v1, p1, Lcom/android/server/wm/ActivityTaskSupervisor;->mPipModeChangedTargetRootTaskBounds:Landroid/graphics/Rect;

    .line 458
    .line 459
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskSupervisor;->mHandler:Lcom/android/server/wm/ActivityTaskSupervisor$ActivityTaskSupervisorHandler;

    .line 460
    .line 461
    const/16 v0, 0xd7

    .line 462
    .line 463
    invoke-virtual {p1, v0}, Landroid/os/Handler;->hasMessages(I)Z

    .line 464
    .line 465
    .line 466
    move-result v1

    .line 467
    if-nez v1, :cond_11

    .line 468
    .line 469
    invoke-virtual {p1, v0}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    .line 470
    .line 471
    .line 472
    :cond_11
    if-nez v2, :cond_12

    .line 473
    .line 474
    return-void

    .line 475
    :cond_12
    iget-boolean p1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 476
    .line 477
    if-eqz p1, :cond_13

    .line 478
    .line 479
    invoke-virtual {v2, p0}, Lcom/android/server/wm/DisplayContent;->handleActivitySizeCompatModeIfNeeded(Lcom/android/server/wm/ActivityRecord;)V

    .line 480
    .line 481
    .line 482
    goto :goto_8

    .line 483
    :cond_13
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 484
    .line 485
    .line 486
    move-result-object p1

    .line 487
    if-eqz p1, :cond_17

    .line 488
    .line 489
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->visibleIgnoringKeyguard:Z

    .line 490
    .line 491
    if-nez p1, :cond_17

    .line 492
    .line 493
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 494
    .line 495
    if-eqz p1, :cond_14

    .line 496
    .line 497
    iget p1, p1, Lcom/android/server/wm/WindowProcessController;->mActivityStateFlags:I

    .line 498
    .line 499
    const/high16 v0, 0x10000

    .line 500
    .line 501
    and-int/2addr p1, v0

    .line 502
    if-eqz p1, :cond_14

    .line 503
    .line 504
    goto :goto_8

    .line 505
    :cond_14
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 506
    .line 507
    iget-object p1, p1, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 508
    .line 509
    iget-object p1, p1, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mPreCreatedAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 510
    .line 511
    if-eqz p1, :cond_15

    .line 512
    .line 513
    return-void

    .line 514
    :cond_15
    iget p1, v2, Lcom/android/server/wm/DisplayContent;->mCurrentOverrideConfigurationChanges:I

    .line 515
    .line 516
    and-int/lit16 v0, p1, 0xd80

    .line 517
    .line 518
    if-eqz v0, :cond_16

    .line 519
    .line 520
    const v0, 0x20000480

    .line 521
    .line 522
    .line 523
    and-int v1, p1, v0

    .line 524
    .line 525
    if-eq v1, v0, :cond_16

    .line 526
    .line 527
    goto :goto_7

    .line 528
    :cond_16
    and-int/lit16 p1, p1, 0x1000

    .line 529
    .line 530
    if-eqz p1, :cond_17

    .line 531
    .line 532
    :goto_7
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->restartProcessIfVisible()V

    .line 533
    .line 534
    .line 535
    :cond_17
    :goto_8
    return-void
.end method

.method public final onCopySplashScreenFinish(Landroid/window/SplashScreenView$SplashScreenViewParcelable;)V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 4
    .line 5
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransferSplashScreenTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 6
    .line 7
    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 8
    .line 9
    .line 10
    if-eqz p1, :cond_1

    .line 11
    .line 12
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 13
    .line 14
    const/4 v1, 0x1

    .line 15
    if-ne v0, v1, :cond_1

    .line 16
    .line 17
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 18
    .line 19
    if-eqz v0, :cond_1

    .line 20
    .line 21
    iget-boolean v1, v0, Lcom/android/server/wm/WindowState;->mRemoved:Z

    .line 22
    .line 23
    if-nez v1, :cond_1

    .line 24
    .line 25
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 26
    .line 27
    if-eqz v1, :cond_0

    .line 28
    .line 29
    goto :goto_0

    .line 30
    :cond_0
    invoke-static {v0}, Lcom/android/server/wm/TaskOrganizerController;->applyStartingWindowAnimation(Lcom/android/server/wm/WindowState;)Landroid/view/SurfaceControl;

    .line 31
    .line 32
    .line 33
    move-result-object v0

    .line 34
    goto :goto_1

    .line 35
    :cond_1
    :goto_0
    const/4 v0, 0x0

    .line 36
    :goto_1
    const/4 v1, 0x3

    .line 37
    if-nez v0, :cond_3

    .line 38
    .line 39
    if-eqz p1, :cond_2

    .line 40
    .line 41
    invoke-virtual {p1}, Landroid/window/SplashScreenView$SplashScreenViewParcelable;->clearIfNeeded()V

    .line 42
    .line 43
    .line 44
    :cond_2
    iput v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 45
    .line 46
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeStartingWindow()V

    .line 47
    .line 48
    .line 49
    return-void

    .line 50
    :cond_3
    const/4 v2, 0x2

    .line 51
    :try_start_0
    iput v2, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 52
    .line 53
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 54
    .line 55
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 56
    .line 57
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 58
    .line 59
    iget-object v3, v3, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 60
    .line 61
    iget-object v4, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 62
    .line 63
    invoke-static {v4, p1, v0}, Landroid/app/servertransaction/TransferSplashScreenViewStateItem;->obtain(Landroid/os/IBinder;Landroid/window/SplashScreenView$SplashScreenViewParcelable;Landroid/view/SurfaceControl;)Landroid/app/servertransaction/TransferSplashScreenViewStateItem;

    .line 64
    .line 65
    .line 66
    move-result-object v0

    .line 67
    invoke-virtual {v2, v3, v0}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V

    .line 68
    .line 69
    .line 70
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 71
    .line 72
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 73
    .line 74
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mTransferSplashScreenTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 75
    .line 76
    const-wide/16 v3, 0x7d0

    .line 77
    .line 78
    invoke-virtual {v0, v2, v3, v4}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 79
    .line 80
    .line 81
    goto :goto_2

    .line 82
    :catch_0
    new-instance v0, Ljava/lang/StringBuilder;

    .line 83
    .line 84
    const-string/jumbo v2, "onCopySplashScreenComplete fail: "

    .line 85
    .line 86
    .line 87
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 88
    .line 89
    .line 90
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 91
    .line 92
    .line 93
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 94
    .line 95
    .line 96
    move-result-object v0

    .line 97
    const-string v2, "ActivityTaskManager"

    .line 98
    .line 99
    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 100
    .line 101
    .line 102
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 103
    .line 104
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->cancelAnimation()V

    .line 105
    .line 106
    .line 107
    invoke-virtual {p1}, Landroid/window/SplashScreenView$SplashScreenViewParcelable;->clearIfNeeded()V

    .line 108
    .line 109
    .line 110
    iput v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 111
    .line 112
    :goto_2
    return-void
.end method

.method public final onDisplayChanged(Lcom/android/server/wm/DisplayContent;)V
    .locals 10

    .line 1
    const/4 v0, 0x1

    .line 2
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 3
    .line 4
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowToken;->onDisplayChanged(Lcom/android/server/wm/DisplayContent;)V

    .line 5
    .line 6
    .line 7
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 8
    .line 9
    if-ne v1, v2, :cond_0

    .line 10
    .line 11
    return-void

    .line 12
    :cond_0
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->onRunningActivityChanged()V

    .line 13
    .line 14
    .line 15
    const/4 v2, 0x0

    .line 16
    if-nez v1, :cond_7

    .line 17
    .line 18
    iget v3, p1, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 19
    .line 20
    if-nez v3, :cond_7

    .line 21
    .line 22
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 23
    .line 24
    invoke-virtual {v3}, Landroid/util/MergedConfiguration;->getGlobalConfiguration()Landroid/content/res/Configuration;

    .line 25
    .line 26
    .line 27
    move-result-object v3

    .line 28
    invoke-virtual {v3}, Landroid/content/res/Configuration;->isNightModeActive()Z

    .line 29
    .line 30
    .line 31
    move-result v3

    .line 32
    if-nez v3, :cond_7

    .line 33
    .line 34
    const-class v3, Lcom/android/server/UiModeManagerService$LocalService;

    .line 35
    .line 36
    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 37
    .line 38
    .line 39
    move-result-object v3

    .line 40
    check-cast v3, Lcom/android/server/UiModeManagerService$LocalService;

    .line 41
    .line 42
    if-eqz v3, :cond_7

    .line 43
    .line 44
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 45
    .line 46
    iget v5, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 47
    .line 48
    iget-object v6, v3, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 49
    .line 50
    invoke-virtual {v6, v4}, Lcom/android/server/UiModeManagerService;->isNightPriorityAllowedLocked(Ljava/lang/String;)Z

    .line 51
    .line 52
    .line 53
    move-result v7

    .line 54
    if-eqz v7, :cond_2

    .line 55
    .line 56
    iget-object v7, v6, Lcom/android/server/UiModeManagerService;->mNightPriorityAppliedPackages:Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;

    .line 57
    .line 58
    monitor-enter v7

    .line 59
    :try_start_0
    iget-object v8, v6, Lcom/android/server/UiModeManagerService;->mNightPriorityAppliedPackages:Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;

    .line 60
    .line 61
    invoke-virtual {v8, v5, v4}, Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;->getValue(ILjava/lang/String;)Ljava/lang/Object;

    .line 62
    .line 63
    .line 64
    move-result-object v8

    .line 65
    if-eqz v8, :cond_1

    .line 66
    .line 67
    move v8, v0

    .line 68
    goto :goto_0

    .line 69
    :cond_1
    move v8, v2

    .line 70
    :goto_0
    monitor-exit v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 71
    if-nez v8, :cond_2

    .line 72
    .line 73
    const/4 v7, 0x2

    .line 74
    invoke-static {v6, v4, v5, v7}, Lcom/android/server/UiModeManagerService;->-$$Nest$msetPackageNightModeInnerLocked(Lcom/android/server/UiModeManagerService;Ljava/lang/String;II)Z

    .line 75
    .line 76
    .line 77
    move-result v4

    .line 78
    goto :goto_1

    .line 79
    :catchall_0
    move-exception p0

    .line 80
    :try_start_1
    monitor-exit v7
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 81
    throw p0

    .line 82
    :cond_2
    move v4, v2

    .line 83
    :goto_1
    if-nez v4, :cond_4

    .line 84
    .line 85
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 86
    .line 87
    iget v6, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 88
    .line 89
    const-string v7, " "

    .line 90
    .line 91
    iget-object v8, v3, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 92
    .line 93
    invoke-virtual {v8, v5}, Lcom/android/server/UiModeManagerService;->isNightPriorityAllowedLocked(Ljava/lang/String;)Z

    .line 94
    .line 95
    .line 96
    move-result v8

    .line 97
    if-eqz v8, :cond_3

    .line 98
    .line 99
    iget-object v8, v3, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 100
    .line 101
    iget-object v8, v8, Lcom/android/server/UiModeManagerService;->mPackagesNeedToShowDialog:Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;

    .line 102
    .line 103
    monitor-enter v8

    .line 104
    :try_start_2
    iget-object v9, v3, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 105
    .line 106
    iget-object v9, v9, Lcom/android/server/UiModeManagerService;->mPackagesNeedToShowDialog:Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;

    .line 107
    .line 108
    invoke-virtual {v9, v6, v5}, Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;->getValue(ILjava/lang/String;)Ljava/lang/Object;

    .line 109
    .line 110
    .line 111
    move-result-object v5

    .line 112
    check-cast v5, Ljava/lang/Boolean;

    .line 113
    .line 114
    sget-object v6, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    .line 115
    .line 116
    invoke-virtual {v5, v6}, Ljava/lang/Boolean;->equals(Ljava/lang/Object;)Z

    .line 117
    .line 118
    .line 119
    move-result v5
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 120
    goto :goto_2

    .line 121
    :catchall_1
    move-exception p0

    .line 122
    goto :goto_3

    .line 123
    :catch_0
    move-exception v5

    .line 124
    :try_start_3
    sget-object v6, Lcom/android/server/UiModeManagerService;->SUPPORTED_NIGHT_MODE_CUSTOM_TYPES:Ljava/util/Set;

    .line 125
    .line 126
    const-string v6, "UiModeManager"

    .line 127
    .line 128
    new-instance v9, Ljava/lang/StringBuilder;

    .line 129
    .line 130
    invoke-direct {v9, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 131
    .line 132
    .line 133
    invoke-virtual {v5}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    .line 134
    .line 135
    .line 136
    move-result-object v5

    .line 137
    invoke-virtual {v9, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 138
    .line 139
    .line 140
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 141
    .line 142
    .line 143
    move-result-object v5

    .line 144
    invoke-static {v6, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 145
    .line 146
    .line 147
    move v5, v2

    .line 148
    :goto_2
    monitor-exit v8

    .line 149
    goto :goto_4

    .line 150
    :goto_3
    monitor-exit v8
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 151
    throw p0

    .line 152
    :cond_3
    move v5, v2

    .line 153
    :goto_4
    if-eqz v5, :cond_5

    .line 154
    .line 155
    :cond_4
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mShouldShowPackageNightModeDialog:Z

    .line 156
    .line 157
    if-eqz v4, :cond_5

    .line 158
    .line 159
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 160
    .line 161
    .line 162
    move-result-object v4

    .line 163
    invoke-virtual {v4}, Landroid/content/res/Configuration;->isNightModeActive()Z

    .line 164
    .line 165
    .line 166
    move-result v4

    .line 167
    if-nez v4, :cond_5

    .line 168
    .line 169
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 170
    .line 171
    iget-object v4, v4, Lcom/android/server/wm/ActivityTaskManagerService;->mPackageConfigPersister:Lcom/android/server/wm/PackageConfigPersister;

    .line 172
    .line 173
    iget v5, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 174
    .line 175
    iget-object v6, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 176
    .line 177
    invoke-virtual {v4, p0, v5, v6}, Lcom/android/server/wm/PackageConfigPersister;->updateConfigIfNeeded(Lcom/android/server/wm/ConfigurationContainer;ILjava/lang/String;)V

    .line 178
    .line 179
    .line 180
    :cond_5
    iget-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->mShouldShowPackageNightModeDialog:Z

    .line 181
    .line 182
    if-eqz v4, :cond_6

    .line 183
    .line 184
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 185
    .line 186
    iget v5, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 187
    .line 188
    iget-object v6, v3, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 189
    .line 190
    iget-object v6, v6, Lcom/android/server/UiModeManagerService;->mPackagesNeedToShowDialog:Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;

    .line 191
    .line 192
    monitor-enter v6

    .line 193
    :try_start_4
    iget-object v7, v3, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 194
    .line 195
    iget-object v7, v7, Lcom/android/server/UiModeManagerService;->mPackagesNeedToShowDialog:Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;

    .line 196
    .line 197
    sget-object v8, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 198
    .line 199
    invoke-virtual {v7, v4, v5, v8}, Lcom/samsung/android/server/packagefeature/PackageFeatureUserChange;->putValue(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 200
    .line 201
    .line 202
    monitor-exit v6

    .line 203
    goto :goto_5

    .line 204
    :catchall_2
    move-exception p0

    .line 205
    monitor-exit v6
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 206
    throw p0

    .line 207
    :cond_6
    :goto_5
    iget-object v3, v3, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 208
    .line 209
    iget-boolean v3, v3, Lcom/android/server/UiModeManagerService;->mShopDemo:Z

    .line 210
    .line 211
    if-eqz v3, :cond_7

    .line 212
    .line 213
    iput-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mShouldShowPackageNightModeDialog:Z

    .line 214
    .line 215
    :cond_7
    if-nez v1, :cond_8

    .line 216
    .line 217
    return-void

    .line 218
    :cond_8
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->onRunningActivityChanged()V

    .line 219
    .line 220
    .line 221
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 222
    .line 223
    invoke-virtual {v3, p0}, Lcom/android/server/wm/TransitionController;->collect(Lcom/android/server/wm/WindowContainer;)V

    .line 224
    .line 225
    .line 226
    iget-object v3, v1, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 227
    .line 228
    invoke-virtual {v3, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 229
    .line 230
    .line 231
    move-result v3

    .line 232
    if-eqz v3, :cond_a

    .line 233
    .line 234
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 235
    .line 236
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 237
    .line 238
    invoke-virtual {v3, p0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 239
    .line 240
    .line 241
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 242
    .line 243
    iget-object v4, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 244
    .line 245
    iget-object v5, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 246
    .line 247
    iget-object v6, v4, Lcom/android/server/wm/AppTransition;->mNextAppTransitionRequests:Ljava/util/ArrayList;

    .line 248
    .line 249
    iget-object v5, v5, Lcom/android/server/wm/AppTransition;->mNextAppTransitionRequests:Ljava/util/ArrayList;

    .line 250
    .line 251
    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 252
    .line 253
    .line 254
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->prepare()Z

    .line 255
    .line 256
    .line 257
    move-result v4

    .line 258
    if-eqz v4, :cond_9

    .line 259
    .line 260
    invoke-virtual {v3}, Lcom/android/server/wm/WindowContainer;->okToAnimate()Z

    .line 261
    .line 262
    .line 263
    move-result v4

    .line 264
    if-eqz v4, :cond_9

    .line 265
    .line 266
    iput-boolean v2, v3, Lcom/android/server/wm/DisplayContent;->mSkipAppTransitionAnimation:Z

    .line 267
    .line 268
    :cond_9
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 269
    .line 270
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->executeAppTransition()V

    .line 271
    .line 272
    .line 273
    :cond_a
    iget-object v3, v1, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 274
    .line 275
    invoke-virtual {v3, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 276
    .line 277
    .line 278
    iget-object v3, v1, Lcom/android/server/wm/DisplayContent;->mDisplayPolicy:Lcom/android/server/wm/DisplayPolicy;

    .line 279
    .line 280
    iget-object v4, v3, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 281
    .line 282
    invoke-virtual {v4, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 283
    .line 284
    .line 285
    move-result v4

    .line 286
    iget-object v5, v3, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 287
    .line 288
    invoke-virtual {v5}, Landroid/util/ArraySet;->isEmpty()Z

    .line 289
    .line 290
    .line 291
    move-result v5

    .line 292
    and-int/2addr v4, v5

    .line 293
    if-eqz v4, :cond_b

    .line 294
    .line 295
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayPolicy;->updateSystemBarAttributes()V

    .line 296
    .line 297
    .line 298
    :cond_b
    iget-object v3, v1, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    .line 299
    .line 300
    if-ne v3, p0, :cond_c

    .line 301
    .line 302
    const/4 v3, 0x0

    .line 303
    invoke-virtual {v1, v3}, Lcom/android/server/wm/DisplayContent;->setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z

    .line 304
    .line 305
    .line 306
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getTopMostActivity()Lcom/android/server/wm/ActivityRecord;

    .line 307
    .line 308
    .line 309
    move-result-object v1

    .line 310
    if-ne v1, p0, :cond_c

    .line 311
    .line 312
    invoke-virtual {p1, p0}, Lcom/android/server/wm/DisplayContent;->setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z

    .line 313
    .line 314
    .line 315
    :cond_c
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 316
    .line 317
    iget-object p1, p1, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 318
    .line 319
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 320
    .line 321
    iget p0, p0, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 322
    .line 323
    iget-object p1, p1, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 324
    .line 325
    invoke-virtual {p1}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->isRunning()Z

    .line 326
    .line 327
    .line 328
    move-result v1

    .line 329
    if-eqz v1, :cond_f

    .line 330
    .line 331
    iget-object p1, p1, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->mLetterbox:Lcom/android/server/wm/Letterbox;

    .line 332
    .line 333
    iget-object v1, p1, Lcom/android/server/wm/Letterbox;->mSurfaces:[Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 334
    .line 335
    array-length v3, v1

    .line 336
    :goto_6
    if-ge v2, v3, :cond_e

    .line 337
    .line 338
    aget-object v4, v1, v2

    .line 339
    .line 340
    iget-object v4, v4, Lcom/android/server/wm/Letterbox$LetterboxSurface;->mInputInterceptor:Lcom/android/server/wm/Letterbox$InputInterceptor;

    .line 341
    .line 342
    if-eqz v4, :cond_d

    .line 343
    .line 344
    iget-object v4, v4, Lcom/android/server/wm/Letterbox$InputInterceptor;->mWindowHandle:Landroid/view/InputWindowHandle;

    .line 345
    .line 346
    iput p0, v4, Landroid/view/InputWindowHandle;->displayId:I

    .line 347
    .line 348
    :cond_d
    add-int/2addr v2, v0

    .line 349
    goto :goto_6

    .line 350
    :cond_e
    iget-object p1, p1, Lcom/android/server/wm/Letterbox;->mFullWindowSurface:Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 351
    .line 352
    iget-object p1, p1, Lcom/android/server/wm/Letterbox$LetterboxSurface;->mInputInterceptor:Lcom/android/server/wm/Letterbox$InputInterceptor;

    .line 353
    .line 354
    if-eqz p1, :cond_f

    .line 355
    .line 356
    iget-object p1, p1, Lcom/android/server/wm/Letterbox$InputInterceptor;->mWindowHandle:Landroid/view/InputWindowHandle;

    .line 357
    .line 358
    iput p0, p1, Landroid/view/InputWindowHandle;->displayId:I

    .line 359
    .line 360
    :cond_f
    return-void
.end method

.method public final onLeashAnimationStarting(Landroid/view/SurfaceControl$Transaction;Landroid/view/SurfaceControl;)V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAnimatingActivityRegistry:Lcom/android/server/wm/AnimatingActivityRegistry;

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-object v0, v0, Lcom/android/server/wm/AnimatingActivityRegistry;->mAnimatingActivities:Landroid/util/ArraySet;

    .line 6
    .line 7
    invoke-virtual {v0, p0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 8
    .line 9
    .line 10
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mNeedsLetterboxedAnimation:Z

    .line 11
    .line 12
    const/4 v1, 0x1

    .line 13
    if-eqz v0, :cond_1

    .line 14
    .line 15
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 16
    .line 17
    .line 18
    move-result-object v0

    .line 19
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 20
    .line 21
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 22
    .line 23
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 24
    .line 25
    .line 26
    move-result-object v3

    .line 27
    iget-object v2, v2, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 28
    .line 29
    invoke-virtual {v2, v0, p1, v3}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->updateLetterboxSurfaceIfNeeded(Lcom/android/server/wm/WindowState;Landroid/view/SurfaceControl$Transaction;Landroid/view/SurfaceControl$Transaction;)V

    .line 30
    .line 31
    .line 32
    iput-boolean v1, p0, Lcom/android/server/wm/WindowContainer;->mNeedsAnimationBoundsLayer:Z

    .line 33
    .line 34
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mNeedsAnimationBoundsLayer:Z

    .line 35
    .line 36
    if-eqz v0, :cond_7

    .line 37
    .line 38
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTmpRect:Landroid/graphics/Rect;

    .line 39
    .line 40
    invoke-virtual {v0}, Landroid/graphics/Rect;->setEmpty()V

    .line 41
    .line 42
    .line 43
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 44
    .line 45
    .line 46
    move-result-object v0

    .line 47
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mAppTransitionController:Lcom/android/server/wm/AppTransitionController;

    .line 48
    .line 49
    iget v2, p0, Lcom/android/server/wm/WindowContainer;->mTransit:I

    .line 50
    .line 51
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 52
    .line 53
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/AppTransitionController;->isTransitWithinTask(ILcom/android/server/wm/Task;)Z

    .line 54
    .line 55
    .line 56
    move-result v0

    .line 57
    if-eqz v0, :cond_2

    .line 58
    .line 59
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 60
    .line 61
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mTmpRect:Landroid/graphics/Rect;

    .line 62
    .line 63
    invoke-virtual {v0, v2}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V

    .line 64
    .line 65
    .line 66
    goto :goto_0

    .line 67
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 68
    .line 69
    .line 70
    move-result-object v0

    .line 71
    if-nez v0, :cond_3

    .line 72
    .line 73
    return-void

    .line 74
    :cond_3
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mTmpRect:Landroid/graphics/Rect;

    .line 75
    .line 76
    invoke-virtual {v0, v2}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V

    .line 77
    .line 78
    .line 79
    :goto_0
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_APP_TRANSITIONS_ANIM_enabled:[Z

    .line 80
    .line 81
    const/4 v2, 0x2

    .line 82
    aget-boolean v0, v0, v2

    .line 83
    .line 84
    if-eqz v0, :cond_4

    .line 85
    .line 86
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_APP_TRANSITIONS_ANIM:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 87
    .line 88
    const/4 v6, 0x0

    .line 89
    const/4 v7, 0x0

    .line 90
    const-wide v3, 0x53268ab9a8a73809L    # 3.6734921570084135E92

    .line 91
    .line 92
    .line 93
    .line 94
    .line 95
    const/4 v5, 0x0

    .line 96
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 97
    .line 98
    .line 99
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->makeAnimationLeash()Landroid/view/SurfaceControl$Builder;

    .line 100
    .line 101
    .line 102
    move-result-object v0

    .line 103
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAnimationLeashParent()Landroid/view/SurfaceControl;

    .line 104
    .line 105
    .line 106
    move-result-object v2

    .line 107
    invoke-virtual {v0, v2}, Landroid/view/SurfaceControl$Builder;->setParent(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Builder;

    .line 108
    .line 109
    .line 110
    move-result-object v0

    .line 111
    new-instance v2, Ljava/lang/StringBuilder;

    .line 112
    .line 113
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 114
    .line 115
    .line 116
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 117
    .line 118
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 119
    .line 120
    .line 121
    const-string v3, " - animation-bounds"

    .line 122
    .line 123
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 124
    .line 125
    .line 126
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 127
    .line 128
    .line 129
    move-result-object v2

    .line 130
    invoke-virtual {v0, v2}, Landroid/view/SurfaceControl$Builder;->setName(Ljava/lang/String;)Landroid/view/SurfaceControl$Builder;

    .line 131
    .line 132
    .line 133
    move-result-object v0

    .line 134
    const-string v2, "ActivityRecord.createAnimationBoundsLayer"

    .line 135
    .line 136
    invoke-virtual {v0, v2}, Landroid/view/SurfaceControl$Builder;->setCallsite(Ljava/lang/String;)Landroid/view/SurfaceControl$Builder;

    .line 137
    .line 138
    .line 139
    move-result-object v0

    .line 140
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mNeedsLetterboxedAnimation:Z

    .line 141
    .line 142
    if-eqz v2, :cond_5

    .line 143
    .line 144
    invoke-virtual {v0}, Landroid/view/SurfaceControl$Builder;->setEffectLayer()Landroid/view/SurfaceControl$Builder;

    .line 145
    .line 146
    .line 147
    :cond_5
    invoke-virtual {v0}, Landroid/view/SurfaceControl$Builder;->build()Landroid/view/SurfaceControl;

    .line 148
    .line 149
    .line 150
    move-result-object v0

    .line 151
    invoke-virtual {p1, v0}, Landroid/view/SurfaceControl$Transaction;->show(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 152
    .line 153
    .line 154
    iput-object v0, p0, Lcom/android/server/wm/WindowContainer;->mAnimationBoundsLayer:Landroid/view/SurfaceControl;

    .line 155
    .line 156
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->FW_FLEXIBLE_TENT_MODE:Z

    .line 157
    .line 158
    const/4 v0, 0x0

    .line 159
    invoke-virtual {p1, p2, v0}, Landroid/view/SurfaceControl$Transaction;->setLayer(Landroid/view/SurfaceControl;I)Landroid/view/SurfaceControl$Transaction;

    .line 160
    .line 161
    .line 162
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mAnimationBoundsLayer:Landroid/view/SurfaceControl;

    .line 163
    .line 164
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getLastLayer()I

    .line 165
    .line 166
    .line 167
    move-result v2

    .line 168
    invoke-virtual {p1, v0, v2}, Landroid/view/SurfaceControl$Transaction;->setLayer(Landroid/view/SurfaceControl;I)Landroid/view/SurfaceControl$Transaction;

    .line 169
    .line 170
    .line 171
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mNeedsLetterboxedAnimation:Z

    .line 172
    .line 173
    if-eqz v0, :cond_6

    .line 174
    .line 175
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 176
    .line 177
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 178
    .line 179
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 180
    .line 181
    .line 182
    move-result-object v1

    .line 183
    iget-object v0, v0, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mAppCompatRoundedCorners:Lcom/android/server/wm/AppCompatRoundedCorners;

    .line 184
    .line 185
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppCompatRoundedCorners;->getRoundedCornersRadius(Lcom/android/server/wm/WindowState;)I

    .line 186
    .line 187
    .line 188
    move-result v0

    .line 189
    new-instance v1, Landroid/graphics/Rect;

    .line 190
    .line 191
    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    .line 192
    .line 193
    .line 194
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 195
    .line 196
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 197
    .line 198
    iget-object v2, v2, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 199
    .line 200
    invoke-virtual {v2, v1}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->getLetterboxInnerBounds(Landroid/graphics/Rect;)V

    .line 201
    .line 202
    .line 203
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mAnimationBoundsLayer:Landroid/view/SurfaceControl;

    .line 204
    .line 205
    int-to-float v0, v0

    .line 206
    invoke-virtual {p1, v2, v0}, Landroid/view/SurfaceControl$Transaction;->setCornerRadius(Landroid/view/SurfaceControl;F)Landroid/view/SurfaceControl$Transaction;

    .line 207
    .line 208
    .line 209
    move-result-object v0

    .line 210
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mAnimationBoundsLayer:Landroid/view/SurfaceControl;

    .line 211
    .line 212
    invoke-virtual {v0, v2, v1}, Landroid/view/SurfaceControl$Transaction;->setCrop(Landroid/view/SurfaceControl;Landroid/graphics/Rect;)Landroid/view/SurfaceControl$Transaction;

    .line 213
    .line 214
    .line 215
    :cond_6
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mAnimationBoundsLayer:Landroid/view/SurfaceControl;

    .line 216
    .line 217
    invoke-virtual {p1, p2, p0}, Landroid/view/SurfaceControl$Transaction;->reparent(Landroid/view/SurfaceControl;Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 218
    .line 219
    .line 220
    :cond_7
    return-void
.end method

.method public final onParentChanged(Lcom/android/server/wm/ConfigurationContainer;Lcom/android/server/wm/ConfigurationContainer;)V
    .locals 8

    .line 1
    check-cast p2, Lcom/android/server/wm/TaskFragment;

    .line 2
    .line 3
    check-cast p1, Lcom/android/server/wm/TaskFragment;

    .line 4
    .line 5
    const/4 v0, 0x0

    .line 6
    if-eqz p2, :cond_0

    .line 7
    .line 8
    invoke-virtual {p2}, Lcom/android/server/wm/TaskFragment;->getTask()Lcom/android/server/wm/Task;

    .line 9
    .line 10
    .line 11
    move-result-object v1

    .line 12
    goto :goto_0

    .line 13
    :cond_0
    move-object v1, v0

    .line 14
    :goto_0
    if-eqz p1, :cond_1

    .line 15
    .line 16
    invoke-virtual {p1}, Lcom/android/server/wm/TaskFragment;->getTask()Lcom/android/server/wm/Task;

    .line 17
    .line 18
    .line 19
    move-result-object v2

    .line 20
    goto :goto_1

    .line 21
    :cond_1
    move-object v2, v0

    .line 22
    :goto_1
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 23
    .line 24
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 25
    .line 26
    iget-object v4, v3, Lcom/android/server/wm/PopOverState;->mOptionsInherited:Landroid/app/ActivityOptions;

    .line 27
    .line 28
    if-eqz v4, :cond_3

    .line 29
    .line 30
    iget-object v5, v3, Lcom/android/server/wm/PopOverState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 31
    .line 32
    iget-object v5, v5, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 33
    .line 34
    if-eqz v5, :cond_3

    .line 35
    .line 36
    iget v5, v5, Lcom/android/server/wm/Task;->mTaskId:I

    .line 37
    .line 38
    iget v6, v3, Lcom/android/server/wm/PopOverState;->mOriginTaskIdInherited:I

    .line 39
    .line 40
    if-eq v5, v6, :cond_2

    .line 41
    .line 42
    goto :goto_2

    .line 43
    :cond_2
    iput-object v4, v3, Lcom/android/server/wm/PopOverState;->mOptions:Landroid/app/ActivityOptions;

    .line 44
    .line 45
    iput-object v0, v3, Lcom/android/server/wm/PopOverState;->mOptionsInherited:Landroid/app/ActivityOptions;

    .line 46
    .line 47
    iput v6, v3, Lcom/android/server/wm/PopOverState;->mOriginTaskId:I

    .line 48
    .line 49
    const/4 v4, -0x1

    .line 50
    iput v4, v3, Lcom/android/server/wm/PopOverState;->mOriginTaskIdInherited:I

    .line 51
    .line 52
    :cond_3
    :goto_2
    invoke-virtual {v3}, Lcom/android/server/wm/PopOverState;->toggle()V

    .line 53
    .line 54
    .line 55
    sget-boolean v3, Lcom/samsung/android/rune/CoreRune;->MW_SPLIT_FLEX_PANEL_LAUNCH_POLICY:Z

    .line 56
    .line 57
    const/4 v4, 0x1

    .line 58
    if-eqz v3, :cond_4

    .line 59
    .line 60
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 61
    .line 62
    if-eqz v3, :cond_4

    .line 63
    .line 64
    iget-boolean v5, p0, Lcom/android/server/wm/ActivityRecord;->mIsFlexPanel:Z

    .line 65
    .line 66
    if-eqz v5, :cond_4

    .line 67
    .line 68
    iput-boolean v4, v3, Lcom/android/server/wm/Task;->autoRemoveRecents:Z

    .line 69
    .line 70
    :cond_4
    const/4 v3, 0x0

    .line 71
    if-eqz p1, :cond_c

    .line 72
    .line 73
    if-eqz p2, :cond_c

    .line 74
    .line 75
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->canStartChangeTransition()Z

    .line 76
    .line 77
    .line 78
    move-result v5

    .line 79
    if-nez v5, :cond_5

    .line 80
    .line 81
    goto/16 :goto_5

    .line 82
    .line 83
    :cond_5
    sget-boolean v5, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    .line 84
    .line 85
    if-eqz v5, :cond_8

    .line 86
    .line 87
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 88
    .line 89
    if-eqz v5, :cond_8

    .line 90
    .line 91
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 92
    .line 93
    if-eqz v5, :cond_6

    .line 94
    .line 95
    iget-boolean v6, p1, Lcom/android/server/wm/TaskFragment;->mIsEmbedded:Z

    .line 96
    .line 97
    if-eqz v6, :cond_6

    .line 98
    .line 99
    invoke-virtual {v5}, Lcom/android/server/wm/ConfigurationContainer;->matchParentBounds()Z

    .line 100
    .line 101
    .line 102
    move-result v5

    .line 103
    if-nez v5, :cond_7

    .line 104
    .line 105
    :cond_6
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 106
    .line 107
    iget-object v5, v5, Lcom/android/server/wm/StartingData;->mAssociatedTask:Lcom/android/server/wm/Task;

    .line 108
    .line 109
    if-eqz v5, :cond_8

    .line 110
    .line 111
    :cond_7
    move v5, v4

    .line 112
    goto :goto_3

    .line 113
    :cond_8
    move v5, v3

    .line 114
    :goto_3
    invoke-static {}, Lcom/android/server/wm/ActivityTaskManagerService;->isPip2ExperimentEnabled()Z

    .line 115
    .line 116
    .line 117
    move-result v6

    .line 118
    if-eqz v6, :cond_9

    .line 119
    .line 120
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 121
    .line 122
    .line 123
    move-result v6

    .line 124
    if-eqz v6, :cond_9

    .line 125
    .line 126
    move v6, v4

    .line 127
    goto :goto_4

    .line 128
    :cond_9
    move v6, v3

    .line 129
    :goto_4
    invoke-virtual {p1}, Lcom/android/server/wm/TaskFragment;->isOrganizedTaskFragment()Z

    .line 130
    .line 131
    .line 132
    move-result v7

    .line 133
    if-nez v7, :cond_a

    .line 134
    .line 135
    if-nez v6, :cond_a

    .line 136
    .line 137
    goto :goto_5

    .line 138
    :cond_a
    invoke-virtual {p1}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 139
    .line 140
    .line 141
    move-result-object v6

    .line 142
    invoke-virtual {p2}, Lcom/android/server/wm/ConfigurationContainer;->getBounds()Landroid/graphics/Rect;

    .line 143
    .line 144
    .line 145
    move-result-object v7

    .line 146
    invoke-virtual {v6, v7}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    .line 147
    .line 148
    .line 149
    move-result v6

    .line 150
    if-nez v6, :cond_c

    .line 151
    .line 152
    if-nez v5, :cond_c

    .line 153
    .line 154
    iget-object v5, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 155
    .line 156
    invoke-virtual {v5}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 157
    .line 158
    .line 159
    move-result v5

    .line 160
    if-eqz v5, :cond_b

    .line 161
    .line 162
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getBounds()Landroid/graphics/Rect;

    .line 163
    .line 164
    .line 165
    move-result-object v5

    .line 166
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowContainer;->initializeChangeTransition(Landroid/graphics/Rect;)V

    .line 167
    .line 168
    .line 169
    goto :goto_5

    .line 170
    :cond_b
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getBounds()Landroid/graphics/Rect;

    .line 171
    .line 172
    .line 173
    move-result-object v5

    .line 174
    iget-object v6, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 175
    .line 176
    invoke-virtual {p1, v5, v6}, Lcom/android/server/wm/WindowContainer;->initializeChangeTransition(Landroid/graphics/Rect;Landroid/view/SurfaceControl;)V

    .line 177
    .line 178
    .line 179
    :cond_c
    :goto_5
    invoke-super {p0, p1, p2}, Lcom/android/server/wm/WindowContainer;->onParentChanged(Lcom/android/server/wm/ConfigurationContainer;Lcom/android/server/wm/ConfigurationContainer;)V

    .line 180
    .line 181
    .line 182
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isPersistable()Z

    .line 183
    .line 184
    .line 185
    move-result v5

    .line 186
    if-eqz v5, :cond_e

    .line 187
    .line 188
    if-eqz v1, :cond_d

    .line 189
    .line 190
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 191
    .line 192
    invoke-virtual {v5, v1, v3}, Lcom/android/server/wm/ActivityTaskManagerService;->notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V

    .line 193
    .line 194
    .line 195
    :cond_d
    if-eqz v2, :cond_e

    .line 196
    .line 197
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 198
    .line 199
    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/ActivityTaskManagerService;->notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V

    .line 200
    .line 201
    .line 202
    :cond_e
    if-nez p2, :cond_11

    .line 203
    .line 204
    if-eqz p1, :cond_11

    .line 205
    .line 206
    iget-object v1, v2, Lcom/android/server/wm/Task;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    .line 207
    .line 208
    if-eqz v1, :cond_f

    .line 209
    .line 210
    move v1, v4

    .line 211
    goto :goto_6

    .line 212
    :cond_f
    move v1, v3

    .line 213
    :goto_6
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mVoiceInteraction:Z

    .line 214
    .line 215
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->updateOverrideConfigurationFromLaunchBounds()V

    .line 216
    .line 217
    .line 218
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 219
    .line 220
    .line 221
    move-result v1

    .line 222
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedMultiWindowMode:Z

    .line 223
    .line 224
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 225
    .line 226
    .line 227
    move-result v1

    .line 228
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedPictureInPictureMode:Z

    .line 229
    .line 230
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 231
    .line 232
    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    .line 233
    .line 234
    if-eqz v1, :cond_10

    .line 235
    .line 236
    const-string v2, "com.samsung.android.sdk.multiwindow.force_hide_floating_multiwindow"

    .line 237
    .line 238
    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->getBoolean(Ljava/lang/String;Z)Z

    .line 239
    .line 240
    .line 241
    move-result v1

    .line 242
    if-eqz v1, :cond_10

    .line 243
    .line 244
    goto :goto_7

    .line 245
    :cond_10
    move v4, v3

    .line 246
    :goto_7
    iput-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->mRequestFreeformForceHiding:Z

    .line 247
    .line 248
    :cond_11
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 249
    .line 250
    if-nez v1, :cond_12

    .line 251
    .line 252
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 253
    .line 254
    .line 255
    move-result-object v1

    .line 256
    if-eqz v1, :cond_12

    .line 257
    .line 258
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 259
    .line 260
    .line 261
    move-result-object v1

    .line 262
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 263
    .line 264
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 265
    .line 266
    .line 267
    :cond_12
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 268
    .line 269
    .line 270
    move-result-object v1

    .line 271
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 272
    .line 273
    .line 274
    move-result-object v2

    .line 275
    if-eqz v2, :cond_13

    .line 276
    .line 277
    iget-object v2, v2, Lcom/android/server/wm/Task;->mAnimatingActivityRegistry:Lcom/android/server/wm/AnimatingActivityRegistry;

    .line 278
    .line 279
    goto :goto_8

    .line 280
    :cond_13
    move-object v2, v0

    .line 281
    :goto_8
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mAnimatingActivityRegistry:Lcom/android/server/wm/AnimatingActivityRegistry;

    .line 282
    .line 283
    if-eqz v4, :cond_14

    .line 284
    .line 285
    if-eq v4, v2, :cond_14

    .line 286
    .line 287
    iget-object v5, v4, Lcom/android/server/wm/AnimatingActivityRegistry;->mAnimatingActivities:Landroid/util/ArraySet;

    .line 288
    .line 289
    invoke-virtual {v5, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 290
    .line 291
    .line 292
    iget-object v5, v4, Lcom/android/server/wm/AnimatingActivityRegistry;->mFinishedTokens:Landroid/util/ArrayMap;

    .line 293
    .line 294
    invoke-virtual {v5, p0}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 295
    .line 296
    .line 297
    iget-object v5, v4, Lcom/android/server/wm/AnimatingActivityRegistry;->mAnimatingActivities:Landroid/util/ArraySet;

    .line 298
    .line 299
    invoke-virtual {v5}, Landroid/util/ArraySet;->isEmpty()Z

    .line 300
    .line 301
    .line 302
    move-result v5

    .line 303
    if-eqz v5, :cond_14

    .line 304
    .line 305
    invoke-virtual {v4}, Lcom/android/server/wm/AnimatingActivityRegistry;->endDeferringFinished()V

    .line 306
    .line 307
    .line 308
    :cond_14
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAnimatingActivityRegistry:Lcom/android/server/wm/AnimatingActivityRegistry;

    .line 309
    .line 310
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 311
    .line 312
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mLastParentBeforePip:Lcom/android/server/wm/Task;

    .line 313
    .line 314
    if-ne v2, v4, :cond_16

    .line 315
    .line 316
    if-eqz v2, :cond_16

    .line 317
    .line 318
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 319
    .line 320
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mWindowOrganizerController:Lcom/android/server/wm/WindowOrganizerController;

    .line 321
    .line 322
    iget-object v2, v2, Lcom/android/server/wm/WindowOrganizerController;->mTaskFragmentOrganizerController:Lcom/android/server/wm/TaskFragmentOrganizerController;

    .line 323
    .line 324
    invoke-virtual {v2, p0}, Lcom/android/server/wm/TaskFragmentOrganizerController;->onActivityReparentedToTask(Lcom/android/server/wm/ActivityRecord;)V

    .line 325
    .line 326
    .line 327
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mLastParentBeforePip:Lcom/android/server/wm/Task;

    .line 328
    .line 329
    if-eqz v2, :cond_15

    .line 330
    .line 331
    iput-object v0, v2, Lcom/android/server/wm/Task;->mChildPipActivity:Lcom/android/server/wm/ActivityRecord;

    .line 332
    .line 333
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastParentBeforePip:Lcom/android/server/wm/Task;

    .line 334
    .line 335
    :cond_15
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mLaunchIntoPipHostActivity:Lcom/android/server/wm/ActivityRecord;

    .line 336
    .line 337
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastTaskFragmentOrganizerBeforePip:Landroid/window/ITaskFragmentOrganizer;

    .line 338
    .line 339
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastEmbeddedParentTfTokenBeforePip:Landroid/os/IBinder;

    .line 340
    .line 341
    invoke-virtual {p0, v3}, Lcom/android/server/wm/ConfigurationContainer;->setWindowingMode(I)V

    .line 342
    .line 343
    .line 344
    :cond_16
    sget-boolean v2, Lcom/samsung/android/rune/CoreRune;->MW_EMBED_ACTIVITY:Z

    .line 345
    .line 346
    if-eqz v2, :cond_17

    .line 347
    .line 348
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mIsActivityReparentToEmbeddedTask:Z

    .line 349
    .line 350
    if-eqz v2, :cond_17

    .line 351
    .line 352
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 353
    .line 354
    if-eqz v2, :cond_17

    .line 355
    .line 356
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 357
    .line 358
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mWindowOrganizerController:Lcom/android/server/wm/WindowOrganizerController;

    .line 359
    .line 360
    iget-object v2, v2, Lcom/android/server/wm/WindowOrganizerController;->mTaskFragmentOrganizerController:Lcom/android/server/wm/TaskFragmentOrganizerController;

    .line 361
    .line 362
    invoke-virtual {v2, p0}, Lcom/android/server/wm/TaskFragmentOrganizerController;->onActivityReparentedToTask(Lcom/android/server/wm/ActivityRecord;)V

    .line 363
    .line 364
    .line 365
    iput-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mIsActivityReparentToEmbeddedTask:Z

    .line 366
    .line 367
    :cond_17
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 368
    .line 369
    if-eqz v2, :cond_18

    .line 370
    .line 371
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mLastAppSaturationInfo:Lcom/android/server/wm/ActivityRecord$AppSaturationInfo;

    .line 372
    .line 373
    if-eqz v2, :cond_18

    .line 374
    .line 375
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 376
    .line 377
    .line 378
    move-result-object v2

    .line 379
    iget-object v4, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 380
    .line 381
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mLastAppSaturationInfo:Lcom/android/server/wm/ActivityRecord$AppSaturationInfo;

    .line 382
    .line 383
    iget-object v6, v5, Lcom/android/server/wm/ActivityRecord$AppSaturationInfo;->mMatrix:[F

    .line 384
    .line 385
    iget-object v5, v5, Lcom/android/server/wm/ActivityRecord$AppSaturationInfo;->mTranslation:[F

    .line 386
    .line 387
    invoke-virtual {v2, v4, v6, v5}, Landroid/view/SurfaceControl$Transaction;->setColorTransform(Landroid/view/SurfaceControl;[F[F)Landroid/view/SurfaceControl$Transaction;

    .line 388
    .line 389
    .line 390
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 391
    .line 392
    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 393
    .line 394
    .line 395
    :cond_18
    if-eqz p2, :cond_19

    .line 396
    .line 397
    invoke-virtual {p2, p0}, Lcom/android/server/wm/TaskFragment;->cleanUpActivityReferences(Lcom/android/server/wm/ActivityRecord;)V

    .line 398
    .line 399
    .line 400
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mRequestedLaunchingTaskFragmentToken:Landroid/os/IBinder;

    .line 401
    .line 402
    :cond_19
    if-eqz p1, :cond_1b

    .line 403
    .line 404
    sget-object p2, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 405
    .line 406
    invoke-virtual {p0, p2}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 407
    .line 408
    .line 409
    move-result p2

    .line 410
    if-eqz p2, :cond_1a

    .line 411
    .line 412
    const-string/jumbo p2, "onParentChanged"

    .line 413
    .line 414
    .line 415
    invoke-virtual {p1, p0, p2}, Lcom/android/server/wm/TaskFragment;->setResumedActivity(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;)V

    .line 416
    .line 417
    .line 418
    :cond_1a
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 419
    .line 420
    iget-object p1, p1, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 421
    .line 422
    invoke-virtual {p1}, Lcom/android/server/wm/TransparentPolicy;->start()V

    .line 423
    .line 424
    .line 425
    :cond_1b
    if-eqz v1, :cond_1c

    .line 426
    .line 427
    invoke-virtual {v1, v3}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 428
    .line 429
    .line 430
    move-result-object p1

    .line 431
    if-ne p1, p0, :cond_1c

    .line 432
    .line 433
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 434
    .line 435
    if-eqz p1, :cond_1c

    .line 436
    .line 437
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->setHasBeenVisible()V

    .line 438
    .line 439
    .line 440
    :cond_1c
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->updateUntrustedEmbeddingInputProtection()V

    .line 441
    .line 442
    .line 443
    return-void
.end method

.method public final onRemovedFromDisplay()V
    .locals 14

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mRemovingFromDisplay:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    const/4 v0, 0x1

    .line 7
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mRemovingFromDisplay:Z

    .line 8
    .line 9
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_APP_TRANSITIONS_enabled:[Z

    .line 10
    .line 11
    aget-boolean v1, v1, v0

    .line 12
    .line 13
    if-eqz v1, :cond_1

    .line 14
    .line 15
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 16
    .line 17
    .line 18
    move-result-object v1

    .line 19
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_APP_TRANSITIONS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 20
    .line 21
    filled-new-array {v1}, [Ljava/lang/Object;

    .line 22
    .line 23
    .line 24
    move-result-object v7

    .line 25
    const-wide v3, -0x1991eb36f1b7cb81L    # -2.5563623042206153E185

    .line 26
    .line 27
    .line 28
    .line 29
    .line 30
    const/4 v5, 0x0

    .line 31
    const/4 v6, 0x0

    .line 32
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 33
    .line 34
    .line 35
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 36
    .line 37
    .line 38
    move-result-object v1

    .line 39
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 40
    .line 41
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 42
    .line 43
    .line 44
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 45
    .line 46
    .line 47
    move-result-object v1

    .line 48
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 49
    .line 50
    invoke-virtual {v1, p0}, Lcom/android/server/wm/UnknownAppVisibilityController;->appRemovedOrHidden(Lcom/android/server/wm/ActivityRecord;)V

    .line 51
    .line 52
    .line 53
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 54
    .line 55
    iget-object v1, v1, Lcom/android/server/wm/WindowManagerService;->mSnapshotController:Lcom/android/server/wm/SnapshotController;

    .line 56
    .line 57
    iget-object v2, v1, Lcom/android/server/wm/SnapshotController;->mTaskSnapshotController:Lcom/android/server/wm/TaskSnapshotController;

    .line 58
    .line 59
    iget-object v2, v2, Lcom/android/server/wm/AbsAppSnapshotController;->mCache:Lcom/android/server/wm/SnapshotCache;

    .line 60
    .line 61
    iget-object v3, v2, Lcom/android/server/wm/SnapshotCache;->mLock:Ljava/lang/Object;

    .line 62
    .line 63
    monitor-enter v3

    .line 64
    :try_start_0
    iget-object v4, v2, Lcom/android/server/wm/SnapshotCache;->mAppIdMap:Landroid/util/ArrayMap;

    .line 65
    .line 66
    invoke-virtual {v4, p0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 67
    .line 68
    .line 69
    move-result-object v4

    .line 70
    check-cast v4, Ljava/lang/Integer;

    .line 71
    .line 72
    if-eqz v4, :cond_2

    .line 73
    .line 74
    invoke-virtual {v2, v4}, Lcom/android/server/wm/SnapshotCache;->removeRunningEntry(Ljava/lang/Integer;)V

    .line 75
    .line 76
    .line 77
    goto :goto_0

    .line 78
    :catchall_0
    move-exception p0

    .line 79
    goto/16 :goto_9

    .line 80
    .line 81
    :cond_2
    :goto_0
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 82
    iget-object v1, v1, Lcom/android/server/wm/SnapshotController;->mActivitySnapshotController:Lcom/android/server/wm/ActivitySnapshotController;

    .line 83
    .line 84
    invoke-virtual {v1}, Lcom/android/server/wm/AbsAppSnapshotController;->shouldDisableSnapshots()Z

    .line 85
    .line 86
    .line 87
    move-result v2

    .line 88
    if-eqz v2, :cond_3

    .line 89
    .line 90
    goto :goto_1

    .line 91
    :cond_3
    invoke-virtual {v1, p0}, Lcom/android/server/wm/ActivitySnapshotController;->removeIfUserSavedFileExist(Lcom/android/server/wm/ActivityRecord;)V

    .line 92
    .line 93
    .line 94
    :goto_1
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 95
    .line 96
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mStartingProcessActivities:Ljava/util/ArrayList;

    .line 97
    .line 98
    invoke-virtual {v1, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 99
    .line 100
    .line 101
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 102
    .line 103
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskSupervisor;->mActivityMetricsLogger:Lcom/android/server/wm/ActivityMetricsLogger;

    .line 104
    .line 105
    iget-object v2, v1, Lcom/android/server/wm/ActivityMetricsLogger;->mLastTransitionInfo:Landroid/util/ArrayMap;

    .line 106
    .line 107
    invoke-virtual {v2, p0}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 108
    .line 109
    .line 110
    invoke-virtual {v1, p0}, Lcom/android/server/wm/ActivityMetricsLogger;->getActiveTransitionInfo(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;

    .line 111
    .line 112
    .line 113
    move-result-object v4

    .line 114
    if-eqz v4, :cond_4

    .line 115
    .line 116
    const-string/jumbo v5, "removed"

    .line 117
    .line 118
    .line 119
    const/4 v3, 0x1

    .line 120
    const-wide/16 v6, 0x0

    .line 121
    .line 122
    move-object v2, v1

    .line 123
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/ActivityMetricsLogger;->done(ZLcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;Ljava/lang/String;J)V

    .line 124
    .line 125
    .line 126
    :cond_4
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 127
    .line 128
    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 129
    .line 130
    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 131
    .line 132
    iget-object v1, v1, Lcom/android/server/wm/ActivityMetricsLogger;->mPackageUidToCompatStateInfo:Landroid/util/SparseArray;

    .line 133
    .line 134
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 135
    .line 136
    .line 137
    move-result-object v1

    .line 138
    check-cast v1, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;

    .line 139
    .line 140
    const/4 v2, 0x0

    .line 141
    if-nez v1, :cond_5

    .line 142
    .line 143
    goto :goto_2

    .line 144
    :cond_5
    iget-object v3, v1, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mVisibleActivities:Ljava/util/ArrayList;

    .line 145
    .line 146
    invoke-virtual {v3, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 147
    .line 148
    .line 149
    iget-object v3, v1, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mLastLoggedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 150
    .line 151
    if-ne v3, p0, :cond_6

    .line 152
    .line 153
    iput-object v2, v1, Lcom/android/server/wm/ActivityMetricsLogger$PackageCompatStateInfo;->mLastLoggedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 154
    .line 155
    :cond_6
    :goto_2
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 156
    .line 157
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 158
    .line 159
    invoke-virtual {v1, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 160
    .line 161
    .line 162
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 163
    .line 164
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 165
    .line 166
    iget-object v1, v1, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 167
    .line 168
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->isRunning()Z

    .line 169
    .line 170
    .line 171
    move-result v3

    .line 172
    const/4 v4, 0x0

    .line 173
    if-eqz v3, :cond_8

    .line 174
    .line 175
    iget-object v3, v1, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->mLetterbox:Lcom/android/server/wm/Letterbox;

    .line 176
    .line 177
    iget-object v5, v3, Lcom/android/server/wm/Letterbox;->mOuter:Landroid/graphics/Rect;

    .line 178
    .line 179
    invoke-virtual {v5}, Landroid/graphics/Rect;->setEmpty()V

    .line 180
    .line 181
    .line 182
    iget-object v5, v3, Lcom/android/server/wm/Letterbox;->mInner:Landroid/graphics/Rect;

    .line 183
    .line 184
    invoke-virtual {v5}, Landroid/graphics/Rect;->setEmpty()V

    .line 185
    .line 186
    .line 187
    iget-object v5, v3, Lcom/android/server/wm/Letterbox;->mSurfaces:[Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 188
    .line 189
    array-length v6, v5

    .line 190
    move v7, v4

    .line 191
    :goto_3
    if-ge v7, v6, :cond_7

    .line 192
    .line 193
    aget-object v8, v5, v7

    .line 194
    .line 195
    invoke-virtual {v8}, Lcom/android/server/wm/Letterbox$LetterboxSurface;->remove()V

    .line 196
    .line 197
    .line 198
    add-int/lit8 v7, v7, 0x1

    .line 199
    .line 200
    goto :goto_3

    .line 201
    :cond_7
    iget-object v3, v3, Lcom/android/server/wm/Letterbox;->mFullWindowSurface:Lcom/android/server/wm/Letterbox$LetterboxSurface;

    .line 202
    .line 203
    invoke-virtual {v3}, Lcom/android/server/wm/Letterbox$LetterboxSurface;->remove()V

    .line 204
    .line 205
    .line 206
    iput-object v2, v1, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->mLetterbox:Lcom/android/server/wm/Letterbox;

    .line 207
    .line 208
    :cond_8
    iget-object v1, v1, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->this$0:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 209
    .line 210
    iget-object v1, v1, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 211
    .line 212
    iget-object v1, v1, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 213
    .line 214
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatReachabilityPolicy:Lcom/android/server/wm/AppCompatReachabilityPolicy;

    .line 215
    .line 216
    iput-object v2, v1, Lcom/android/server/wm/AppCompatReachabilityPolicy;->mLetterboxInnerBoundsSupplier:Ljava/util/function/Supplier;

    .line 217
    .line 218
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 219
    .line 220
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 221
    .line 222
    iget-object v3, v1, Lcom/android/server/wm/TransparentPolicy;->mDestroyListeners:Ljava/util/List;

    .line 223
    .line 224
    check-cast v3, Ljava/util/ArrayList;

    .line 225
    .line 226
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    .line 227
    .line 228
    .line 229
    move-result v3

    .line 230
    sub-int/2addr v3, v0

    .line 231
    :goto_4
    if-ltz v3, :cond_9

    .line 232
    .line 233
    iget-object v5, v1, Lcom/android/server/wm/TransparentPolicy;->mDestroyListeners:Ljava/util/List;

    .line 234
    .line 235
    check-cast v5, Ljava/util/ArrayList;

    .line 236
    .line 237
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 238
    .line 239
    .line 240
    move-result-object v5

    .line 241
    check-cast v5, Lcom/android/server/wm/TransparentPolicy;

    .line 242
    .line 243
    invoke-virtual {v5}, Lcom/android/server/wm/TransparentPolicy;->start()V

    .line 244
    .line 245
    .line 246
    add-int/lit8 v3, v3, -0x1

    .line 247
    .line 248
    goto :goto_4

    .line 249
    :cond_9
    iget-object v3, v1, Lcom/android/server/wm/TransparentPolicy;->mDestroyListeners:Ljava/util/List;

    .line 250
    .line 251
    check-cast v3, Ljava/util/ArrayList;

    .line 252
    .line 253
    invoke-virtual {v3}, Ljava/util/ArrayList;->clear()V

    .line 254
    .line 255
    .line 256
    iget-object v1, v1, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 257
    .line 258
    invoke-static {v1}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->-$$Nest$mreset(Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;)V

    .line 259
    .line 260
    .line 261
    const/4 v1, 0x7

    .line 262
    const/16 v3, 0x11

    .line 263
    .line 264
    invoke-virtual {p0, v1, v3}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 265
    .line 266
    .line 267
    move-result v1

    .line 268
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 269
    .line 270
    .line 271
    move-result-object v3

    .line 272
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 273
    .line 274
    invoke-virtual {v3, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 275
    .line 276
    .line 277
    move-result v3

    .line 278
    if-eqz v3, :cond_a

    .line 279
    .line 280
    :goto_5
    move v1, v0

    .line 281
    goto :goto_6

    .line 282
    :cond_a
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 283
    .line 284
    .line 285
    move-result-object v3

    .line 286
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 287
    .line 288
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    .line 289
    .line 290
    .line 291
    move-result v3

    .line 292
    if-eqz v3, :cond_b

    .line 293
    .line 294
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 295
    .line 296
    .line 297
    move-result-object v1

    .line 298
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 299
    .line 300
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 301
    .line 302
    .line 303
    goto :goto_5

    .line 304
    :cond_b
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 305
    .line 306
    invoke-virtual {v3}, Lcom/android/server/wm/TransitionController;->inTransition()Z

    .line 307
    .line 308
    .line 309
    move-result v3

    .line 310
    if-eqz v3, :cond_c

    .line 311
    .line 312
    goto :goto_5

    .line 313
    :cond_c
    :goto_6
    if-nez v1, :cond_d

    .line 314
    .line 315
    invoke-virtual {p0, v4, v0, v4}, Lcom/android/server/wm/ActivityRecord;->commitVisibility(ZZZ)V

    .line 316
    .line 317
    .line 318
    goto :goto_7

    .line 319
    :cond_d
    invoke-virtual {p0, v4}, Lcom/android/server/wm/ActivityRecord;->setVisibleRequested(Z)Z

    .line 320
    .line 321
    .line 322
    :goto_7
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 323
    .line 324
    invoke-virtual {v3, p0}, Lcom/android/server/wm/TransitionController;->collect(Lcom/android/server/wm/WindowContainer;)V

    .line 325
    .line 326
    .line 327
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_APP_TRANSITIONS_enabled:[Z

    .line 328
    .line 329
    aget-boolean v3, v3, v0

    .line 330
    .line 331
    const/4 v5, 0x3

    .line 332
    if-eqz v3, :cond_e

    .line 333
    .line 334
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 335
    .line 336
    .line 337
    move-result-object v3

    .line 338
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getAnimation()Lcom/android/server/wm/AnimationAdapter;

    .line 339
    .line 340
    .line 341
    move-result-object v6

    .line 342
    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 343
    .line 344
    .line 345
    move-result-object v6

    .line 346
    invoke-virtual {p0, v5, v0}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 347
    .line 348
    .line 349
    move-result v7

    .line 350
    sget-object v8, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_APP_TRANSITIONS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 351
    .line 352
    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 353
    .line 354
    .line 355
    move-result-object v9

    .line 356
    invoke-static {v7}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 357
    .line 358
    .line 359
    move-result-object v7

    .line 360
    filled-new-array {v3, v9, v6, v7}, [Ljava/lang/Object;

    .line 361
    .line 362
    .line 363
    move-result-object v13

    .line 364
    const/16 v11, 0xcc

    .line 365
    .line 366
    const/4 v12, 0x0

    .line 367
    const-wide v9, 0x4cff131c375e3d79L    # 7.989605786594591E62

    .line 368
    .line 369
    .line 370
    .line 371
    .line 372
    invoke-static/range {v8 .. v13}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 373
    .line 374
    .line 375
    :cond_e
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ADD_REMOVE_enabled:[Z

    .line 376
    .line 377
    aget-boolean v6, v3, v0

    .line 378
    .line 379
    if-eqz v6, :cond_f

    .line 380
    .line 381
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 382
    .line 383
    .line 384
    move-result-object v6

    .line 385
    const/4 v7, 0x4

    .line 386
    invoke-static {v7}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 387
    .line 388
    .line 389
    move-result-object v7

    .line 390
    invoke-static {v7}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 391
    .line 392
    .line 393
    move-result-object v7

    .line 394
    sget-object v8, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 395
    .line 396
    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 397
    .line 398
    .line 399
    move-result-object v9

    .line 400
    filled-new-array {v6, v9, v7}, [Ljava/lang/Object;

    .line 401
    .line 402
    .line 403
    move-result-object v13

    .line 404
    const/16 v11, 0xc

    .line 405
    .line 406
    const/4 v12, 0x0

    .line 407
    const-wide v9, -0x85940474870ce4bL

    .line 408
    .line 409
    .line 410
    .line 411
    .line 412
    invoke-static/range {v8 .. v13}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 413
    .line 414
    .line 415
    :cond_f
    iget-object v6, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 416
    .line 417
    if-eqz v6, :cond_10

    .line 418
    .line 419
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeStartingWindow()V

    .line 420
    .line 421
    .line 422
    :cond_10
    invoke-virtual {p0, v5, v0}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 423
    .line 424
    .line 425
    move-result v5

    .line 426
    if-eqz v5, :cond_11

    .line 427
    .line 428
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 429
    .line 430
    .line 431
    move-result-object v5

    .line 432
    iget-object v5, v5, Lcom/android/server/wm/DisplayContent;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    .line 433
    .line 434
    iget-object v6, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 435
    .line 436
    check-cast v5, Ljava/util/ArrayList;

    .line 437
    .line 438
    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 439
    .line 440
    .line 441
    :cond_11
    if-eqz v1, :cond_14

    .line 442
    .line 443
    iget-object v5, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 444
    .line 445
    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z

    .line 446
    .line 447
    .line 448
    move-result v5

    .line 449
    if-eqz v5, :cond_12

    .line 450
    .line 451
    sget-boolean v5, Lcom/samsung/android/rune/CoreRune;->FW_SHELL_TRANSITION_BUG_FIX:Z

    .line 452
    .line 453
    if-eqz v5, :cond_14

    .line 454
    .line 455
    iget-object v5, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 456
    .line 457
    invoke-virtual {v5, p0}, Lcom/android/server/wm/TransitionController;->inTransition(Lcom/android/server/wm/WindowContainer;)Z

    .line 458
    .line 459
    .line 460
    move-result v5

    .line 461
    if-eqz v5, :cond_14

    .line 462
    .line 463
    :cond_12
    aget-boolean v3, v3, v0

    .line 464
    .line 465
    if-eqz v3, :cond_13

    .line 466
    .line 467
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 468
    .line 469
    .line 470
    move-result-object v3

    .line 471
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 472
    .line 473
    filled-new-array {v3}, [Ljava/lang/Object;

    .line 474
    .line 475
    .line 476
    move-result-object v10

    .line 477
    const-wide v6, 0x3045197f7e2035ebL    # 3.644394323113405E-76

    .line 478
    .line 479
    .line 480
    .line 481
    .line 482
    const/4 v8, 0x0

    .line 483
    const/4 v9, 0x0

    .line 484
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 485
    .line 486
    .line 487
    :cond_13
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsExiting:Z

    .line 488
    .line 489
    goto :goto_8

    .line 490
    :cond_14
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->cancelAnimation()V

    .line 491
    .line 492
    .line 493
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeIfPossible()V

    .line 494
    .line 495
    .line 496
    :goto_8
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->stopFreezingScreen(Z)V

    .line 497
    .line 498
    .line 499
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 500
    .line 501
    .line 502
    move-result-object v3

    .line 503
    iget-object v5, v3, Lcom/android/server/wm/DisplayContent;->mFocusedApp:Lcom/android/server/wm/ActivityRecord;

    .line 504
    .line 505
    if-ne v5, p0, :cond_16

    .line 506
    .line 507
    sget-object v5, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_FOCUS_LIGHT_enabled:[Z

    .line 508
    .line 509
    aget-boolean v5, v5, v0

    .line 510
    .line 511
    if-eqz v5, :cond_15

    .line 512
    .line 513
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 514
    .line 515
    .line 516
    move-result-object v5

    .line 517
    iget v6, v3, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 518
    .line 519
    int-to-long v6, v6

    .line 520
    sget-object v8, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_FOCUS_LIGHT:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 521
    .line 522
    invoke-static {v6, v7}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 523
    .line 524
    .line 525
    move-result-object v6

    .line 526
    filled-new-array {v5, v6}, [Ljava/lang/Object;

    .line 527
    .line 528
    .line 529
    move-result-object v13

    .line 530
    const/4 v11, 0x4

    .line 531
    const/4 v12, 0x0

    .line 532
    const-wide v9, -0x6448ad8c59f9cb69L    # -3.683407431929128E-175

    .line 533
    .line 534
    .line 535
    .line 536
    .line 537
    invoke-static/range {v8 .. v13}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 538
    .line 539
    .line 540
    :cond_15
    invoke-virtual {v3, v2}, Lcom/android/server/wm/DisplayContent;->setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z

    .line 541
    .line 542
    .line 543
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 544
    .line 545
    invoke-virtual {v2, v4, v0}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 546
    .line 547
    .line 548
    :cond_16
    if-nez v1, :cond_17

    .line 549
    .line 550
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->updateReportedVisibilityLocked()V

    .line 551
    .line 552
    .line 553
    :cond_17
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 554
    .line 555
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->onRunningActivityChanged()V

    .line 556
    .line 557
    .line 558
    iput-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->mRemovingFromDisplay:Z

    .line 559
    .line 560
    return-void

    .line 561
    :goto_9
    :try_start_1
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 562
    throw p0
.end method

.method public final onSyncTransactionCommitted(Landroid/view/SurfaceControl$Transaction;)V
    .locals 2

    .line 1
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->onSyncTransactionCommitted(Landroid/view/SurfaceControl$Transaction;)V

    .line 2
    .line 3
    .line 4
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 5
    .line 6
    if-nez p1, :cond_0

    .line 7
    .line 8
    return-void

    .line 9
    :cond_0
    const/4 v0, 0x0

    .line 10
    iput-boolean v0, p1, Lcom/android/server/wm/StartingData;->mWaitForSyncTransactionCommit:Z

    .line 11
    .line 12
    iget v0, p1, Lcom/android/server/wm/StartingData;->mRemoveAfterTransaction:I

    .line 13
    .line 14
    const/4 v1, 0x1

    .line 15
    if-ne v0, v1, :cond_1

    .line 16
    .line 17
    iget-boolean p1, p1, Lcom/android/server/wm/StartingData;->mPrepareRemoveAnimation:Z

    .line 18
    .line 19
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->removeStartingWindowAnimation(Z)V

    .line 20
    .line 21
    .line 22
    goto :goto_0

    .line 23
    :cond_1
    const/4 p1, 0x2

    .line 24
    if-ne v0, p1, :cond_2

    .line 25
    .line 26
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeStartingWindow()V

    .line 27
    .line 28
    .line 29
    :cond_2
    :goto_0
    return-void
.end method

.method public final onlyDeskInUiModeChanged(Landroid/content/res/Configuration;)Z
    .locals 5

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 2
    .line 3
    .line 4
    move-result-object p0

    .line 5
    iget p0, p0, Landroid/content/res/Configuration;->uiMode:I

    .line 6
    .line 7
    and-int/lit8 v0, p0, 0xf

    .line 8
    .line 9
    const/4 v1, 0x2

    .line 10
    const/4 v2, 0x0

    .line 11
    const/4 v3, 0x1

    .line 12
    if-ne v0, v1, :cond_0

    .line 13
    .line 14
    move v0, v3

    .line 15
    goto :goto_0

    .line 16
    :cond_0
    move v0, v2

    .line 17
    :goto_0
    iget p1, p1, Landroid/content/res/Configuration;->uiMode:I

    .line 18
    .line 19
    and-int/lit8 v4, p1, 0xf

    .line 20
    .line 21
    if-ne v4, v1, :cond_1

    .line 22
    .line 23
    move v1, v3

    .line 24
    goto :goto_1

    .line 25
    :cond_1
    move v1, v2

    .line 26
    :goto_1
    if-eq v0, v1, :cond_2

    .line 27
    .line 28
    move v0, v3

    .line 29
    goto :goto_2

    .line 30
    :cond_2
    move v0, v2

    .line 31
    :goto_2
    and-int/lit8 p0, p0, -0x10

    .line 32
    .line 33
    and-int/lit8 p1, p1, -0x10

    .line 34
    .line 35
    if-eq p0, p1, :cond_3

    .line 36
    .line 37
    move p0, v3

    .line 38
    goto :goto_3

    .line 39
    :cond_3
    move p0, v2

    .line 40
    :goto_3
    if-eqz v0, :cond_4

    .line 41
    .line 42
    if-nez p0, :cond_4

    .line 43
    .line 44
    move v2, v3

    .line 45
    :cond_4
    return v2
.end method

.method public final pauseKeyDispatchingLocked()V
    .locals 3

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->keysPaused:Z

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    const/4 v0, 0x1

    .line 6
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->keysPaused:Z

    .line 7
    .line 8
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 9
    .line 10
    .line 11
    move-result-object v1

    .line 12
    if-eqz v1, :cond_0

    .line 13
    .line 14
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 15
    .line 16
    .line 17
    move-result-object v1

    .line 18
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 19
    .line 20
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 21
    .line 22
    .line 23
    iget-boolean v2, p0, Lcom/android/server/wm/WindowToken;->paused:Z

    .line 24
    .line 25
    if-nez v2, :cond_0

    .line 26
    .line 27
    iput-boolean v0, p0, Lcom/android/server/wm/WindowToken;->paused:Z

    .line 28
    .line 29
    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 30
    .line 31
    .line 32
    :cond_0
    return-void
.end method

.method public final postWindowRemoveStartingWindowCleanup(Lcom/android/server/wm/WindowState;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 2
    .line 3
    if-ne v0, p1, :cond_0

    .line 4
    .line 5
    const/4 p1, 0x0

    .line 6
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 7
    .line 8
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 9
    .line 10
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 11
    .line 12
    :cond_0
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 13
    .line 14
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    .line 15
    .line 16
    .line 17
    move-result p1

    .line 18
    if-nez p1, :cond_1

    .line 19
    .line 20
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mVisibleSetFromTransferredStartingWindow:Z

    .line 21
    .line 22
    if-eqz p1, :cond_1

    .line 23
    .line 24
    const/4 p1, 0x0

    .line 25
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->setVisible(Z)V

    .line 26
    .line 27
    .line 28
    :cond_1
    return-void
.end method

.method public final prepareSurfaces()V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    const/4 v2, 0x1

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    iget-object v0, v0, Lcom/android/server/wm/Task;->mDecorSurfaceContainer:Lcom/android/server/wm/Task$DecorSurfaceContainer;

    .line 8
    .line 9
    if-eqz v0, :cond_0

    .line 10
    .line 11
    iget-boolean v0, v0, Lcom/android/server/wm/Task$DecorSurfaceContainer;->mIsBoosted:Z

    .line 12
    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    move v0, v2

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    move v0, v1

    .line 18
    :goto_0
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 19
    .line 20
    if-eqz v3, :cond_1

    .line 21
    .line 22
    if-eqz v0, :cond_2

    .line 23
    .line 24
    :cond_1
    const/4 v0, 0x2

    .line 25
    const/16 v3, 0x109

    .line 26
    .line 27
    invoke-virtual {p0, v0, v3}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 28
    .line 29
    .line 30
    move-result v0

    .line 31
    if-eqz v0, :cond_3

    .line 32
    .line 33
    :cond_2
    move v1, v2

    .line 34
    :cond_3
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 35
    .line 36
    if-eqz v0, :cond_6

    .line 37
    .line 38
    if-eqz v1, :cond_4

    .line 39
    .line 40
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastSurfaceShowing:Z

    .line 41
    .line 42
    if-nez v0, :cond_4

    .line 43
    .line 44
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getSyncTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 45
    .line 46
    .line 47
    move-result-object v0

    .line 48
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 49
    .line 50
    invoke-virtual {v0, v2}, Landroid/view/SurfaceControl$Transaction;->show(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 51
    .line 52
    .line 53
    goto :goto_1

    .line 54
    :cond_4
    if-nez v1, :cond_5

    .line 55
    .line 56
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastSurfaceShowing:Z

    .line 57
    .line 58
    if-eqz v0, :cond_5

    .line 59
    .line 60
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getSyncTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 61
    .line 62
    .line 63
    move-result-object v0

    .line 64
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 65
    .line 66
    invoke-virtual {v0, v2}, Landroid/view/SurfaceControl$Transaction;->hide(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 67
    .line 68
    .line 69
    :cond_5
    :goto_1
    if-eqz v1, :cond_6

    .line 70
    .line 71
    iget v0, p0, Lcom/android/server/wm/WindowContainer;->mSyncState:I

    .line 72
    .line 73
    if-nez v0, :cond_6

    .line 74
    .line 75
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mActivityRecordInputSink:Lcom/android/server/wm/ActivityRecordInputSink;

    .line 76
    .line 77
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 78
    .line 79
    .line 80
    move-result-object v2

    .line 81
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecordInputSink;->applyChangesToSurfaceIfChanged(Landroid/view/SurfaceControl$Transaction;)V

    .line 82
    .line 83
    .line 84
    :cond_6
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mThumbnail:Lcom/android/server/wm/WindowContainerThumbnail;

    .line 85
    .line 86
    if-eqz v0, :cond_8

    .line 87
    .line 88
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 89
    .line 90
    .line 91
    move-result-object v2

    .line 92
    if-eqz v1, :cond_7

    .line 93
    .line 94
    iget-object v0, v0, Lcom/android/server/wm/WindowContainerThumbnail;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 95
    .line 96
    invoke-virtual {v2, v0}, Landroid/view/SurfaceControl$Transaction;->show(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 97
    .line 98
    .line 99
    goto :goto_2

    .line 100
    :cond_7
    iget-object v0, v0, Lcom/android/server/wm/WindowContainerThumbnail;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 101
    .line 102
    invoke-virtual {v2, v0}, Landroid/view/SurfaceControl$Transaction;->hide(Landroid/view/SurfaceControl;)Landroid/view/SurfaceControl$Transaction;

    .line 103
    .line 104
    .line 105
    :cond_8
    :goto_2
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastSurfaceShowing:Z

    .line 106
    .line 107
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->prepareSurfaces()V

    .line 108
    .line 109
    .line 110
    return-void
.end method

.method public final providesMaxBounds()Z
    .locals 3

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getUid()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    const/16 v1, 0x3e8

    .line 6
    .line 7
    const/4 v2, 0x0

    .line 8
    if-ne v0, v1, :cond_0

    .line 9
    .line 10
    return v2

    .line 11
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 12
    .line 13
    if-eqz v0, :cond_1

    .line 14
    .line 15
    iget-boolean v0, v0, Lcom/android/server/wm/DisplayContent;->mSandboxDisplayApis:Z

    .line 16
    .line 17
    if-nez v0, :cond_1

    .line 18
    .line 19
    return v2

    .line 20
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 21
    .line 22
    sget-object v1, Lcom/android/server/wm/ActivityRecord;->sConstrainDisplayApisConfig:Landroid/content/pm/ConstrainDisplayApisConfig;

    .line 23
    .line 24
    invoke-virtual {v0, v1}, Landroid/content/pm/ActivityInfo;->neverSandboxDisplayApis(Landroid/content/pm/ConstrainDisplayApisConfig;)Z

    .line 25
    .line 26
    .line 27
    move-result v0

    .line 28
    if-eqz v0, :cond_2

    .line 29
    .line 30
    return v2

    .line 31
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 32
    .line 33
    sget-object v1, Lcom/android/server/wm/ActivityRecord;->sConstrainDisplayApisConfig:Landroid/content/pm/ConstrainDisplayApisConfig;

    .line 34
    .line 35
    invoke-virtual {v0, v1}, Landroid/content/pm/ActivityInfo;->alwaysSandboxDisplayApis(Landroid/content/pm/ConstrainDisplayApisConfig;)Z

    .line 36
    .line 37
    .line 38
    move-result v0

    .line 39
    const/4 v1, 0x1

    .line 40
    if-eqz v0, :cond_3

    .line 41
    .line 42
    return v1

    .line 43
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 44
    .line 45
    .line 46
    move-result-object v0

    .line 47
    if-nez v0, :cond_6

    .line 48
    .line 49
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->shouldCreateAppCompatDisplayInsets()Z

    .line 50
    .line 51
    .line 52
    move-result v0

    .line 53
    if-eqz v0, :cond_4

    .line 54
    .line 55
    goto :goto_0

    .line 56
    :cond_4
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 57
    .line 58
    if-eqz v0, :cond_5

    .line 59
    .line 60
    iget p0, p0, Lcom/android/server/wm/ActivityRecord;->mResolvedConfigChangeFlags:I

    .line 61
    .line 62
    if-eqz p0, :cond_5

    .line 63
    .line 64
    return v1

    .line 65
    :cond_5
    return v2

    .line 66
    :cond_6
    :goto_0
    return v1
.end method

.method public final providesOrientation()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mStyleFillsParent:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    .line 6
    .line 7
    if-eqz p0, :cond_0

    .line 8
    .line 9
    goto :goto_0

    .line 10
    :cond_0
    const/4 p0, 0x0

    .line 11
    goto :goto_1

    .line 12
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 13
    :goto_1
    return p0
.end method

.method public final recomputeConfiguration()V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 4
    .line 5
    new-instance v1, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;

    .line 6
    .line 7
    const/4 v2, 0x2

    .line 8
    invoke-direct {v1, v2}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;-><init>(I)V

    .line 9
    .line 10
    .line 11
    iget-object v0, v0, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 12
    .line 13
    invoke-virtual {v0}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->findOpaqueNotFinishingActivityBelow()Ljava/util/Optional;

    .line 14
    .line 15
    .line 16
    move-result-object v0

    .line 17
    new-instance v2, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState$$ExternalSyntheticLambda0;

    .line 18
    .line 19
    invoke-direct {v2, v1}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;)V

    .line 20
    .line 21
    .line 22
    invoke-virtual {v0, v2}, Ljava/util/Optional;->map(Ljava/util/function/Function;)Ljava/util/Optional;

    .line 23
    .line 24
    .line 25
    move-result-object v0

    .line 26
    sget-object v1, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 27
    .line 28
    invoke-virtual {v0, v1}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    .line 29
    .line 30
    .line 31
    move-result-object v0

    .line 32
    check-cast v0, Ljava/lang/Boolean;

    .line 33
    .line 34
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    .line 35
    .line 36
    .line 37
    move-result v0

    .line 38
    if-nez v0, :cond_0

    .line 39
    .line 40
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 41
    .line 42
    .line 43
    move-result-object v0

    .line 44
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowContainer;->onRequestedOverrideConfigurationChanged(Landroid/content/res/Configuration;)V

    .line 45
    .line 46
    .line 47
    :cond_0
    return-void
.end method

.method public final registerCaptureObserver(Landroid/app/IScreenCaptureObserver;)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    .line 4
    .line 5
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 6
    .line 7
    .line 8
    monitor-enter v0

    .line 9
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mCaptureCallbacks:Landroid/os/RemoteCallbackList;

    .line 10
    .line 11
    if-nez v1, :cond_0

    .line 12
    .line 13
    new-instance v1, Landroid/os/RemoteCallbackList;

    .line 14
    .line 15
    invoke-direct {v1}, Landroid/os/RemoteCallbackList;-><init>()V

    .line 16
    .line 17
    .line 18
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mCaptureCallbacks:Landroid/os/RemoteCallbackList;

    .line 19
    .line 20
    goto :goto_0

    .line 21
    :catchall_0
    move-exception p0

    .line 22
    goto :goto_1

    .line 23
    :cond_0
    :goto_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mCaptureCallbacks:Landroid/os/RemoteCallbackList;

    .line 24
    .line 25
    invoke-virtual {p0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 26
    .line 27
    .line 28
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 29
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 30
    .line 31
    .line 32
    return-void

    .line 33
    :goto_1
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 34
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 35
    .line 36
    .line 37
    throw p0
.end method

.method public final removeChild(Lcom/android/server/wm/WindowContainer;)V
    .locals 6

    .line 1
    check-cast p1, Lcom/android/server/wm/WindowState;

    .line 2
    .line 3
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 4
    .line 5
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-nez v0, :cond_0

    .line 10
    .line 11
    goto :goto_1

    .line 12
    :cond_0
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 13
    .line 14
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 15
    .line 16
    const/4 v1, 0x1

    .line 17
    if-ne v0, v1, :cond_2

    .line 18
    .line 19
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isSecureLocked()Z

    .line 20
    .line 21
    .line 22
    move-result v0

    .line 23
    if-eqz v0, :cond_2

    .line 24
    .line 25
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 26
    .line 27
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingController:Lcom/android/server/wm/MultiTaskingController;

    .line 28
    .line 29
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 30
    .line 31
    .line 32
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    .line 33
    .line 34
    .line 35
    move-result-object v2

    .line 36
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 37
    .line 38
    .line 39
    move-result-object v3

    .line 40
    if-eqz v2, :cond_2

    .line 41
    .line 42
    if-nez v3, :cond_1

    .line 43
    .line 44
    goto :goto_0

    .line 45
    :cond_1
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isRemoteAppDisplay()Z

    .line 46
    .line 47
    .line 48
    move-result v3

    .line 49
    if-eqz v3, :cond_2

    .line 50
    .line 51
    iget-object v3, v0, Lcom/android/server/wm/MultiTaskingController;->mH:Lcom/android/server/wm/MultiTaskingController$H;

    .line 52
    .line 53
    iget v2, v2, Lcom/android/server/wm/Task;->mTaskId:I

    .line 54
    .line 55
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 56
    .line 57
    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    .line 58
    .line 59
    const/4 v5, 0x0

    .line 60
    invoke-virtual {v3, v1, v2, v5, v4}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    .line 61
    .line 62
    .line 63
    move-result-object v1

    .line 64
    iget-object v0, v0, Lcom/android/server/wm/MultiTaskingController;->mH:Lcom/android/server/wm/MultiTaskingController$H;

    .line 65
    .line 66
    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 67
    .line 68
    .line 69
    :cond_2
    :goto_0
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->removeChild(Lcom/android/server/wm/WindowContainer;)V

    .line 70
    .line 71
    .line 72
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->checkKeyguardFlagsChanged()V

    .line 73
    .line 74
    .line 75
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->updateLetterboxSurfaceIfNeeded(Lcom/android/server/wm/WindowState;)V

    .line 76
    .line 77
    .line 78
    :goto_1
    return-void
.end method

.method public final removeFromHistory(Ljava/lang/String;)V
    .locals 10

    .line 1
    const/4 v0, 0x0

    .line 2
    const/4 v1, 0x0

    .line 3
    invoke-virtual {p0, v0, v1, v1}, Lcom/android/server/wm/ActivityRecord;->finishActivityResults(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;)V

    .line 4
    .line 5
    .line 6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->makeFinishingLocked()V

    .line 7
    .line 8
    .line 9
    sget-object v2, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ADD_REMOVE_enabled:[Z

    .line 10
    .line 11
    const/4 v3, 0x2

    .line 12
    aget-boolean v2, v2, v3

    .line 13
    .line 14
    if-eqz v2, :cond_0

    .line 15
    .line 16
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 17
    .line 18
    .line 19
    move-result-object v2

    .line 20
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 21
    .line 22
    .line 23
    move-result-object p1

    .line 24
    const/4 v3, 0x5

    .line 25
    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 26
    .line 27
    .line 28
    move-result-object v3

    .line 29
    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 30
    .line 31
    .line 32
    move-result-object v3

    .line 33
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 34
    .line 35
    filled-new-array {v2, p1, v3}, [Ljava/lang/Object;

    .line 36
    .line 37
    .line 38
    move-result-object v9

    .line 39
    const-wide v5, 0x7aa1b7cc22363407L    # 5.145879686594025E282

    .line 40
    .line 41
    .line 42
    .line 43
    .line 44
    const/4 v7, 0x0

    .line 45
    const/4 v8, 0x0

    .line 46
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 47
    .line 48
    .line 49
    :cond_0
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->inHistory:Z

    .line 50
    .line 51
    if-eqz p1, :cond_2

    .line 52
    .line 53
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->inHistory:Z

    .line 54
    .line 55
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 56
    .line 57
    if-eqz p1, :cond_1

    .line 58
    .line 59
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 60
    .line 61
    if-nez p1, :cond_1

    .line 62
    .line 63
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 64
    .line 65
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->abortAndClearOptionsAnimation()V

    .line 66
    .line 67
    .line 68
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeTimeouts()V

    .line 69
    .line 70
    .line 71
    sget-object p1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 72
    .line 73
    const/4 v0, 0x1

    .line 74
    aget-boolean p1, p1, v0

    .line 75
    .line 76
    if-eqz p1, :cond_3

    .line 77
    .line 78
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 79
    .line 80
    .line 81
    move-result-object p1

    .line 82
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 83
    .line 84
    filled-new-array {p1}, [Ljava/lang/Object;

    .line 85
    .line 86
    .line 87
    move-result-object v7

    .line 88
    const-wide v3, 0x73da80cc3a8b344dL    # 1.1859690636769237E250

    .line 89
    .line 90
    .line 91
    .line 92
    .line 93
    const/4 v5, 0x0

    .line 94
    const/4 v6, 0x0

    .line 95
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 96
    .line 97
    .line 98
    :cond_3
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->DESTROYED:Lcom/android/server/wm/ActivityRecord$State;

    .line 99
    .line 100
    const-string/jumbo v2, "removeFromHistory"

    .line 101
    .line 102
    .line 103
    invoke-virtual {p0, p1, v2}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 104
    .line 105
    .line 106
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->detachFromProcess()V

    .line 107
    .line 108
    .line 109
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->resumeKeyDispatchingLocked()V

    .line 110
    .line 111
    .line 112
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 113
    .line 114
    iget-object v2, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 115
    .line 116
    invoke-virtual {p1, v2, v0}, Lcom/android/server/wm/DisplayContent;->removeWindowToken(Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowToken;

    .line 117
    .line 118
    .line 119
    move-result-object v0

    .line 120
    const/4 v3, -0x1

    .line 121
    const-string v4, "WindowManager"

    .line 122
    .line 123
    if-nez v0, :cond_4

    .line 124
    .line 125
    new-instance p1, Ljava/lang/StringBuilder;

    .line 126
    .line 127
    const-string/jumbo v0, "removeAppToken: Attempted to remove non-existing token: "

    .line 128
    .line 129
    .line 130
    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 131
    .line 132
    .line 133
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 134
    .line 135
    .line 136
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 137
    .line 138
    .line 139
    move-result-object p1

    .line 140
    invoke-static {v4, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 141
    .line 142
    .line 143
    goto :goto_0

    .line 144
    :cond_4
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->asActivityRecord()Lcom/android/server/wm/ActivityRecord;

    .line 145
    .line 146
    .line 147
    move-result-object v5

    .line 148
    if-nez v5, :cond_5

    .line 149
    .line 150
    new-instance p1, Ljava/lang/StringBuilder;

    .line 151
    .line 152
    const-string v5, "Attempted to remove non-App token: "

    .line 153
    .line 154
    invoke-direct {p1, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 155
    .line 156
    .line 157
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 158
    .line 159
    .line 160
    const-string v2, " token="

    .line 161
    .line 162
    invoke-virtual {p1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 163
    .line 164
    .line 165
    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 166
    .line 167
    .line 168
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 169
    .line 170
    .line 171
    move-result-object p1

    .line 172
    invoke-static {v4, p1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 173
    .line 174
    .line 175
    goto :goto_0

    .line 176
    :cond_5
    invoke-virtual {v5}, Lcom/android/server/wm/ActivityRecord;->onRemovedFromDisplay()V

    .line 177
    .line 178
    .line 179
    iget-object v0, p1, Lcom/android/server/wm/DisplayContent;->mFixedRotationLaunchingApp:Lcom/android/server/wm/ActivityRecord;

    .line 180
    .line 181
    if-ne v5, v0, :cond_6

    .line 182
    .line 183
    invoke-virtual {v5, v1}, Lcom/android/server/wm/WindowToken;->finishFixedRotationTransform(Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6;)V

    .line 184
    .line 185
    .line 186
    invoke-virtual {p1, v3, v1}, Lcom/android/server/wm/DisplayContent;->setFixedRotationLaunchingAppUnchecked(ILcom/android/server/wm/ActivityRecord;)V

    .line 187
    .line 188
    .line 189
    :cond_6
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->cleanUpActivityServices()V

    .line 190
    .line 191
    .line 192
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 193
    .line 194
    if-eqz p1, :cond_7

    .line 195
    .line 196
    const/4 v0, 0x3

    .line 197
    invoke-virtual {p1, v0, v3, v1, v1}, Lcom/android/server/uri/UriPermissionOwner;->removeUriPermission(IILcom/android/server/uri/GrantUri;Ljava/lang/String;)V

    .line 198
    .line 199
    .line 200
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->uriPermissions:Lcom/android/server/uri/UriPermissionOwner;

    .line 201
    .line 202
    :cond_7
    return-void
.end method

.method public final removeIfPossible()V
    .locals 1

    .line 1
    const/4 v0, 0x0

    .line 2
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsExiting:Z

    .line 3
    .line 4
    invoke-virtual {p0}, Lcom/android/server/wm/WindowToken;->removeAllWindowsIfPossible()V

    .line 5
    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeImmediately()V

    .line 8
    .line 9
    .line 10
    return-void
.end method

.method public final removeImmediately()V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 2
    .line 3
    sget-object v1, Lcom/android/server/wm/ActivityRecord$State;->DESTROYED:Lcom/android/server/wm/ActivityRecord$State;

    .line 4
    .line 5
    if-eq v0, v1, :cond_0

    .line 6
    .line 7
    new-instance v0, Ljava/lang/StringBuilder;

    .line 8
    .line 9
    const-string v1, "Force remove immediately "

    .line 10
    .line 11
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 12
    .line 13
    .line 14
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 15
    .line 16
    .line 17
    const-string v1, " state="

    .line 18
    .line 19
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    .line 21
    .line 22
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 23
    .line 24
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 25
    .line 26
    .line 27
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 28
    .line 29
    .line 30
    move-result-object v0

    .line 31
    const-string v1, "ActivityTaskManager"

    .line 32
    .line 33
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 34
    .line 35
    .line 36
    const-string/jumbo v0, "removeImmediately"

    .line 37
    .line 38
    .line 39
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->destroyImmediately(Ljava/lang/String;)Z

    .line 40
    .line 41
    .line 42
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->destroyed(Ljava/lang/String;)V

    .line 43
    .line 44
    .line 45
    goto :goto_0

    .line 46
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->onRemovedFromDisplay()V

    .line 47
    .line 48
    .line 49
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mActivityRecordInputSink:Lcom/android/server/wm/ActivityRecordInputSink;

    .line 50
    .line 51
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecordInputSink;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 52
    .line 53
    if-eqz v1, :cond_1

    .line 54
    .line 55
    invoke-virtual {v1}, Landroid/view/SurfaceControl;->release()V

    .line 56
    .line 57
    .line 58
    const/4 v1, 0x0

    .line 59
    iput-object v1, v0, Lcom/android/server/wm/ActivityRecordInputSink;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 60
    .line 61
    :cond_1
    invoke-super {p0}, Lcom/android/server/wm/WindowToken;->removeImmediately()V

    .line 62
    .line 63
    .line 64
    return-void
.end method

.method public final removeResultsLocked(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;I)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 2
    .line 3
    if-eqz v0, :cond_4

    .line 4
    .line 5
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    add-int/lit8 v0, v0, -0x1

    .line 10
    .line 11
    :goto_0
    if-ltz v0, :cond_4

    .line 12
    .line 13
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 14
    .line 15
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 16
    .line 17
    .line 18
    move-result-object v1

    .line 19
    check-cast v1, Lcom/android/server/wm/ActivityResult;

    .line 20
    .line 21
    iget-object v2, v1, Lcom/android/server/wm/ActivityResult;->mFrom:Lcom/android/server/wm/ActivityRecord;

    .line 22
    .line 23
    if-eq v2, p1, :cond_0

    .line 24
    .line 25
    goto :goto_1

    .line 26
    :cond_0
    iget-object v2, v1, Landroid/app/ResultInfo;->mResultWho:Ljava/lang/String;

    .line 27
    .line 28
    if-nez v2, :cond_1

    .line 29
    .line 30
    if-eqz p2, :cond_2

    .line 31
    .line 32
    goto :goto_1

    .line 33
    :cond_1
    invoke-virtual {v2, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 34
    .line 35
    .line 36
    move-result v2

    .line 37
    if-nez v2, :cond_2

    .line 38
    .line 39
    goto :goto_1

    .line 40
    :cond_2
    iget v1, v1, Landroid/app/ResultInfo;->mRequestCode:I

    .line 41
    .line 42
    if-eq v1, p3, :cond_3

    .line 43
    .line 44
    goto :goto_1

    .line 45
    :cond_3
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 46
    .line 47
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    :goto_1
    add-int/lit8 v0, v0, -0x1

    .line 51
    .line 52
    goto :goto_0

    .line 53
    :cond_4
    return-void
.end method

.method public final removeStartingWindow()V
    .locals 8

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isEligibleForLetterboxEducation()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 6
    .line 7
    const/4 v2, 0x1

    .line 8
    if-nez v1, :cond_8

    .line 9
    .line 10
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mHandleExitSplashScreen:Z

    .line 11
    .line 12
    if-eqz v1, :cond_8

    .line 13
    .line 14
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 15
    .line 16
    if-eqz v1, :cond_8

    .line 17
    .line 18
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 19
    .line 20
    if-eqz v3, :cond_8

    .line 21
    .line 22
    iget v3, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 23
    .line 24
    const/4 v4, 0x3

    .line 25
    if-eq v3, v4, :cond_8

    .line 26
    .line 27
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 28
    .line 29
    if-eqz v5, :cond_0

    .line 30
    .line 31
    iget-boolean v6, v5, Lcom/android/server/wm/StartingData;->mResizedFromTransfer:Z

    .line 32
    .line 33
    if-eqz v6, :cond_0

    .line 34
    .line 35
    goto :goto_4

    .line 36
    :cond_0
    const/4 v6, 0x2

    .line 37
    if-eq v3, v6, :cond_7

    .line 38
    .line 39
    if-ne v3, v2, :cond_1

    .line 40
    .line 41
    goto :goto_3

    .line 42
    :cond_1
    if-eqz v5, :cond_2

    .line 43
    .line 44
    iget-boolean v3, v5, Lcom/android/server/wm/StartingData;->mWaitForSyncTransactionCommit:Z

    .line 45
    .line 46
    if-eqz v3, :cond_2

    .line 47
    .line 48
    iput v6, v5, Lcom/android/server/wm/StartingData;->mRemoveAfterTransaction:I

    .line 49
    .line 50
    goto :goto_3

    .line 51
    :cond_2
    iput v2, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 52
    .line 53
    if-eqz v1, :cond_6

    .line 54
    .line 55
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 56
    .line 57
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mTaskOrganizerController:Lcom/android/server/wm/TaskOrganizerController;

    .line 58
    .line 59
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 60
    .line 61
    iget-object v1, v1, Lcom/android/server/wm/StartingSurfaceController$StartingSurface;->mTaskOrganizer:Landroid/window/ITaskOrganizer;

    .line 62
    .line 63
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 64
    .line 65
    .line 66
    invoke-virtual {v5}, Lcom/android/server/wm/TaskFragment;->getRootTask()Lcom/android/server/wm/Task;

    .line 67
    .line 68
    .line 69
    move-result-object v7

    .line 70
    if-nez v7, :cond_3

    .line 71
    .line 72
    goto :goto_1

    .line 73
    :cond_3
    if-eqz v1, :cond_4

    .line 74
    .line 75
    goto :goto_0

    .line 76
    :cond_4
    invoke-virtual {v3}, Lcom/android/server/wm/TaskOrganizerController;->getTaskOrganizer()Landroid/window/ITaskOrganizer;

    .line 77
    .line 78
    .line 79
    move-result-object v1

    .line 80
    :goto_0
    if-nez v1, :cond_5

    .line 81
    .line 82
    goto :goto_1

    .line 83
    :cond_5
    :try_start_0
    iget v3, v5, Lcom/android/server/wm/Task;->mTaskId:I

    .line 84
    .line 85
    invoke-interface {v1, v3}, Landroid/window/ITaskOrganizer;->copySplashScreenView(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 86
    .line 87
    .line 88
    goto :goto_2

    .line 89
    :catch_0
    move-exception v1

    .line 90
    const-string v3, "TaskOrganizerController"

    .line 91
    .line 92
    const-string v5, "Exception sending copyStartingWindowView callback"

    .line 93
    .line 94
    invoke-static {v3, v5, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 95
    .line 96
    .line 97
    :cond_6
    :goto_1
    iput v4, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 98
    .line 99
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeStartingWindow()V

    .line 100
    .line 101
    .line 102
    :goto_2
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 103
    .line 104
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 105
    .line 106
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mTransferSplashScreenTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 107
    .line 108
    const-wide/16 v4, 0x7d0

    .line 109
    .line 110
    invoke-virtual {v1, v3, v4, v5}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 111
    .line 112
    .line 113
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 114
    .line 115
    if-eq v1, v6, :cond_7

    .line 116
    .line 117
    if-ne v1, v2, :cond_8

    .line 118
    .line 119
    :cond_7
    :goto_3
    return-void

    .line 120
    :cond_8
    :goto_4
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->removeStartingWindowAnimation(Z)V

    .line 121
    .line 122
    .line 123
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 124
    .line 125
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isEligibleForLetterboxEducation()Z

    .line 126
    .line 127
    .line 128
    move-result p0

    .line 129
    if-eq v0, p0, :cond_9

    .line 130
    .line 131
    if-eqz v1, :cond_9

    .line 132
    .line 133
    invoke-virtual {v1, v2}, Lcom/android/server/wm/Task;->dispatchTaskInfoChangedIfNeeded(Z)V

    .line 134
    .line 135
    .line 136
    :cond_9
    return-void
.end method

.method public final removeStartingWindowAnimation(Z)V
    .locals 13

    .line 1
    const/4 v0, 0x0

    .line 2
    iput v0, p0, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 3
    .line 4
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 5
    .line 6
    const/4 v2, 0x0

    .line 7
    if-eqz v1, :cond_0

    .line 8
    .line 9
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 10
    .line 11
    if-eqz v3, :cond_0

    .line 12
    .line 13
    iput-object v2, v3, Lcom/android/server/wm/Task;->mSharedStartingData:Lcom/android/server/wm/StartingData;

    .line 14
    .line 15
    :cond_0
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 16
    .line 17
    const/4 v4, 0x1

    .line 18
    if-nez v3, :cond_3

    .line 19
    .line 20
    if-eqz v1, :cond_2

    .line 21
    .line 22
    sget-object p1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 23
    .line 24
    aget-boolean p1, p1, v4

    .line 25
    .line 26
    if-eqz p1, :cond_1

    .line 27
    .line 28
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 29
    .line 30
    .line 31
    move-result-object p1

    .line 32
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 33
    .line 34
    const-string v7, "Clearing startingData for token=%s"

    .line 35
    .line 36
    filled-new-array {p1}, [Ljava/lang/Object;

    .line 37
    .line 38
    .line 39
    move-result-object v8

    .line 40
    const-wide v4, -0x1b0bb40900a0c6d7L    # -2.056192109559436E178

    .line 41
    .line 42
    .line 43
    .line 44
    .line 45
    const/4 v6, 0x0

    .line 46
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 47
    .line 48
    .line 49
    :cond_1
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 50
    .line 51
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 52
    .line 53
    :cond_2
    return-void

    .line 54
    :cond_3
    if-eqz v1, :cond_b

    .line 55
    .line 56
    iget-boolean v1, v1, Lcom/android/server/wm/StartingData;->mWaitForSyncTransactionCommit:Z

    .line 57
    .line 58
    if-nez v1, :cond_a

    .line 59
    .line 60
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 61
    .line 62
    invoke-virtual {v1, p0}, Lcom/android/server/wm/TransitionController;->isCollecting(Lcom/android/server/wm/WindowContainer;)Z

    .line 63
    .line 64
    .line 65
    move-result v1

    .line 66
    if-eqz v1, :cond_4

    .line 67
    .line 68
    goto/16 :goto_0

    .line 69
    .line 70
    :cond_4
    if-eqz p1, :cond_5

    .line 71
    .line 72
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 73
    .line 74
    invoke-virtual {p1}, Lcom/android/server/wm/StartingData;->needRevealAnimation()Z

    .line 75
    .line 76
    .line 77
    move-result p1

    .line 78
    if-eqz p1, :cond_5

    .line 79
    .line 80
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 81
    .line 82
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isVisibleByPolicy()Z

    .line 83
    .line 84
    .line 85
    move-result p1

    .line 86
    if-eqz p1, :cond_5

    .line 87
    .line 88
    move v0, v4

    .line 89
    :cond_5
    if-eqz v0, :cond_6

    .line 90
    .line 91
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 92
    .line 93
    iput-boolean v4, p1, Lcom/android/server/wm/WindowState;->mSkipExitAnimation:Z

    .line 94
    .line 95
    :cond_6
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 96
    .line 97
    invoke-virtual {p1}, Lcom/android/server/wm/StartingData;->hasImeSurface()Z

    .line 98
    .line 99
    .line 100
    move-result p1

    .line 101
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 102
    .line 103
    aget-boolean v3, v1, v4

    .line 104
    .line 105
    if-eqz v3, :cond_7

    .line 106
    .line 107
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 108
    .line 109
    .line 110
    move-result-object v3

    .line 111
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 112
    .line 113
    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 114
    .line 115
    .line 116
    move-result-object v5

    .line 117
    const/4 v6, 0x5

    .line 118
    invoke-static {v6}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 119
    .line 120
    .line 121
    move-result-object v6

    .line 122
    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 123
    .line 124
    .line 125
    move-result-object v6

    .line 126
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 127
    .line 128
    const-string v11, "Schedule remove starting %s startingWindow=%s animate=%b Callers=%s"

    .line 129
    .line 130
    invoke-static {v0}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 131
    .line 132
    .line 133
    move-result-object v8

    .line 134
    filled-new-array {v3, v5, v8, v6}, [Ljava/lang/Object;

    .line 135
    .line 136
    .line 137
    move-result-object v12

    .line 138
    const-wide v8, 0x4cf7144c5c41334aL    # 5.9339183045577455E62

    .line 139
    .line 140
    .line 141
    .line 142
    .line 143
    const/16 v10, 0x30

    .line 144
    .line 145
    invoke-static/range {v7 .. v12}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 146
    .line 147
    .line 148
    :cond_7
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 149
    .line 150
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 151
    .line 152
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 153
    .line 154
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 155
    .line 156
    iget v2, p0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 157
    .line 158
    and-int/lit8 v2, v2, -0x9

    .line 159
    .line 160
    iput v2, p0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 161
    .line 162
    if-nez v3, :cond_9

    .line 163
    .line 164
    aget-boolean p0, v1, v4

    .line 165
    .line 166
    if-eqz p0, :cond_8

    .line 167
    .line 168
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 169
    .line 170
    const-string/jumbo v4, "startingWindow was set but startingSurface==null, couldn\'t remove"

    .line 171
    .line 172
    .line 173
    const-wide v1, -0x477bf7706596cf2aL    # -1.88393575763248E-36

    .line 174
    .line 175
    .line 176
    .line 177
    .line 178
    const/4 v3, 0x0

    .line 179
    const/4 v5, 0x0

    .line 180
    invoke-static/range {v0 .. v5}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 181
    .line 182
    .line 183
    :cond_8
    return-void

    .line 184
    :cond_9
    iget-object p0, v3, Lcom/android/server/wm/StartingSurfaceController$StartingSurface;->this$0:Lcom/android/server/wm/StartingSurfaceController;

    .line 185
    .line 186
    iget-object p0, p0, Lcom/android/server/wm/StartingSurfaceController;->mService:Lcom/android/server/wm/WindowManagerService;

    .line 187
    .line 188
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mGlobalLock:Lcom/android/server/wm/WindowManagerGlobalLock;

    .line 189
    .line 190
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->boostPriorityForLockedSection()V

    .line 191
    .line 192
    .line 193
    monitor-enter v1

    .line 194
    :try_start_0
    iget-object p0, v3, Lcom/android/server/wm/StartingSurfaceController$StartingSurface;->this$0:Lcom/android/server/wm/StartingSurfaceController;

    .line 195
    .line 196
    iget-object p0, p0, Lcom/android/server/wm/StartingSurfaceController;->mService:Lcom/android/server/wm/WindowManagerService;

    .line 197
    .line 198
    iget-object p0, p0, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 199
    .line 200
    iget-object p0, p0, Lcom/android/server/wm/ActivityTaskManagerService;->mTaskOrganizerController:Lcom/android/server/wm/TaskOrganizerController;

    .line 201
    .line 202
    iget-object v2, v3, Lcom/android/server/wm/StartingSurfaceController$StartingSurface;->mTask:Lcom/android/server/wm/Task;

    .line 203
    .line 204
    iget-object v3, v3, Lcom/android/server/wm/StartingSurfaceController$StartingSurface;->mTaskOrganizer:Landroid/window/ITaskOrganizer;

    .line 205
    .line 206
    invoke-virtual {p0, v2, v3, v0, p1}, Lcom/android/server/wm/TaskOrganizerController;->removeStartingWindow(Lcom/android/server/wm/Task;Landroid/window/ITaskOrganizer;ZZ)V

    .line 207
    .line 208
    .line 209
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 210
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 211
    .line 212
    .line 213
    return-void

    .line 214
    :catchall_0
    move-exception p0

    .line 215
    :try_start_1
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 216
    invoke-static {}, Lcom/android/server/wm/WindowManagerService;->resetPriorityAfterLockedSection()V

    .line 217
    .line 218
    .line 219
    throw p0

    .line 220
    :cond_a
    :goto_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 221
    .line 222
    iput v4, p0, Lcom/android/server/wm/StartingData;->mRemoveAfterTransaction:I

    .line 223
    .line 224
    iput-boolean p1, p0, Lcom/android/server/wm/StartingData;->mPrepareRemoveAnimation:Z

    .line 225
    .line 226
    return-void

    .line 227
    :cond_b
    sget-object p1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 228
    .line 229
    aget-boolean p1, p1, v4

    .line 230
    .line 231
    if-eqz p1, :cond_c

    .line 232
    .line 233
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 234
    .line 235
    .line 236
    move-result-object p0

    .line 237
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 238
    .line 239
    const-string v4, "Tried to remove starting window but startingWindow was null: %s"

    .line 240
    .line 241
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 242
    .line 243
    .line 244
    move-result-object v5

    .line 245
    const-wide v1, -0x1e3c80421c30ca0cL    # -8.77242806676582E162

    .line 246
    .line 247
    .line 248
    .line 249
    .line 250
    const/4 v3, 0x0

    .line 251
    invoke-static/range {v0 .. v5}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 252
    .line 253
    .line 254
    :cond_c
    return-void
.end method

.method public final removeTimeouts()V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mHandler:Lcom/android/server/wm/ActivityTaskSupervisor$ActivityTaskSupervisorHandler;

    .line 4
    .line 5
    const/16 v1, 0xc8

    .line 6
    .line 7
    invoke-virtual {v0, v1, p0}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 8
    .line 9
    .line 10
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 11
    .line 12
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 13
    .line 14
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mPauseTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 15
    .line 16
    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 17
    .line 18
    .line 19
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 20
    .line 21
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 22
    .line 23
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStopTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 24
    .line 25
    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 26
    .line 27
    .line 28
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 29
    .line 30
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 31
    .line 32
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mDestroyTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 33
    .line 34
    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 35
    .line 36
    .line 37
    const-wide/16 v0, 0x0

    .line 38
    .line 39
    iput-wide v0, p0, Lcom/android/server/wm/ActivityRecord;->launchTickTime:J

    .line 40
    .line 41
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 42
    .line 43
    .line 44
    move-result-object p0

    .line 45
    if-nez p0, :cond_0

    .line 46
    .line 47
    goto :goto_0

    .line 48
    :cond_0
    new-instance v0, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6;

    .line 49
    .line 50
    const/4 v1, 0x5

    .line 51
    invoke-direct {v0, v1}, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6;-><init>(I)V

    .line 52
    .line 53
    .line 54
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Consumer;)V

    .line 55
    .line 56
    .line 57
    :goto_0
    return-void
.end method

.method public final reparent(Lcom/android/server/wm/TaskFragment;ILjava/lang/String;)V
    .locals 10

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    if-nez v0, :cond_0

    .line 6
    .line 7
    new-instance p1, Ljava/lang/StringBuilder;

    .line 8
    .line 9
    const-string/jumbo p2, "reparent: Attempted to reparent non-existing app token: "

    .line 10
    .line 11
    .line 12
    invoke-direct {p1, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 13
    .line 14
    .line 15
    iget-object p0, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 16
    .line 17
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18
    .line 19
    .line 20
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 21
    .line 22
    .line 23
    move-result-object p0

    .line 24
    const-string p1, "ActivityTaskManager"

    .line 25
    .line 26
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 27
    .line 28
    .line 29
    return-void

    .line 30
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 31
    .line 32
    .line 33
    move-result-object v0

    .line 34
    if-eq v0, p1, :cond_2

    .line 35
    .line 36
    sget-object p3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ADD_REMOVE_enabled:[Z

    .line 37
    .line 38
    const/4 v0, 0x2

    .line 39
    aget-boolean p3, p3, v0

    .line 40
    .line 41
    if-eqz p3, :cond_1

    .line 42
    .line 43
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 44
    .line 45
    .line 46
    move-result-object p3

    .line 47
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 48
    .line 49
    iget v0, v0, Lcom/android/server/wm/Task;->mTaskId:I

    .line 50
    .line 51
    int-to-long v0, v0

    .line 52
    int-to-long v2, p2

    .line 53
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 54
    .line 55
    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 56
    .line 57
    .line 58
    move-result-object v0

    .line 59
    invoke-static {v2, v3}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 60
    .line 61
    .line 62
    move-result-object v1

    .line 63
    filled-new-array {p3, v0, v1}, [Ljava/lang/Object;

    .line 64
    .line 65
    .line 66
    move-result-object v9

    .line 67
    const/16 v7, 0x14

    .line 68
    .line 69
    const/4 v8, 0x0

    .line 70
    const-wide v5, 0x4c9f5f2199703fc7L    # 1.2603056972755501E61

    .line 71
    .line 72
    .line 73
    .line 74
    .line 75
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 76
    .line 77
    .line 78
    :cond_1
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowContainer;->reparent(Lcom/android/server/wm/WindowContainer;I)V

    .line 79
    .line 80
    .line 81
    return-void

    .line 82
    :cond_2
    new-instance p2, Ljava/lang/IllegalArgumentException;

    .line 83
    .line 84
    new-instance v0, Ljava/lang/StringBuilder;

    .line 85
    .line 86
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 87
    .line 88
    .line 89
    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 90
    .line 91
    .line 92
    const-string p3, ": task fragment ="

    .line 93
    .line 94
    invoke-virtual {v0, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 95
    .line 96
    .line 97
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 98
    .line 99
    .line 100
    const-string p1, " is already the parent of r="

    .line 101
    .line 102
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 103
    .line 104
    .line 105
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 106
    .line 107
    .line 108
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 109
    .line 110
    .line 111
    move-result-object p0

    .line 112
    invoke-direct {p2, p0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 113
    .line 114
    .line 115
    throw p2
.end method

.method public final requestUpdateWallpaperIfNeeded()V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    add-int/lit8 v0, v0, -0x1

    .line 8
    .line 9
    :goto_0
    if-ltz v0, :cond_0

    .line 10
    .line 11
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 12
    .line 13
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 14
    .line 15
    .line 16
    move-result-object v1

    .line 17
    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 18
    .line 19
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->requestUpdateWallpaperIfNeeded()V

    .line 20
    .line 21
    .line 22
    add-int/lit8 v0, v0, -0x1

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :cond_0
    return-void
.end method

.method public final resetSurfacePositionForAnimationLeash(Landroid/view/SurfaceControl$Transaction;)V
    .locals 0

    .line 1
    return-void
.end method

.method public final resolveAspectRatioRestriction(Landroid/content/res/Configuration;)V
    .locals 7

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mResolvedConfigChangeFlags:I

    .line 6
    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 11
    .line 12
    .line 13
    move-result-object v0

    .line 14
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 15
    .line 16
    iget-object v1, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mParentAppBoundsOverride:Landroid/graphics/Rect;

    .line 17
    .line 18
    iget-object v2, p1, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 19
    .line 20
    invoke-virtual {v2}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 21
    .line 22
    .line 23
    move-result-object v2

    .line 24
    iget-object v3, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 25
    .line 26
    invoke-virtual {v3}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 27
    .line 28
    .line 29
    move-result-object v3

    .line 30
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 31
    .line 32
    invoke-virtual {v4}, Landroid/graphics/Rect;->setEmpty()V

    .line 33
    .line 34
    .line 35
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 36
    .line 37
    iget-object v4, v4, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 38
    .line 39
    iget-object v5, p0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 40
    .line 41
    const/4 v6, 0x0

    .line 42
    invoke-virtual {v4, v5, v1, v2, v6}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->applyAspectRatio(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;F)Z

    .line 43
    .line 44
    .line 45
    move-result v1

    .line 46
    iget-object v4, v4, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 47
    .line 48
    iput-boolean v1, v4, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mIsAspectRatioApplied:Z

    .line 49
    .line 50
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 51
    .line 52
    invoke-virtual {v1}, Landroid/graphics/Rect;->isEmpty()Z

    .line 53
    .line 54
    .line 55
    move-result v1

    .line 56
    if-nez v1, :cond_1

    .line 57
    .line 58
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 59
    .line 60
    invoke-virtual {v3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 61
    .line 62
    .line 63
    :cond_1
    invoke-virtual {v3}, Landroid/graphics/Rect;->isEmpty()Z

    .line 64
    .line 65
    .line 66
    move-result v1

    .line 67
    if-nez v1, :cond_2

    .line 68
    .line 69
    invoke-virtual {v3, v2}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    .line 70
    .line 71
    .line 72
    move-result v1

    .line 73
    if-nez v1, :cond_2

    .line 74
    .line 75
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 76
    .line 77
    invoke-virtual {p0}, Lcom/android/server/wm/WindowToken;->getFixedRotationTransformDisplayInfo()Landroid/view/DisplayInfo;

    .line 78
    .line 79
    .line 80
    move-result-object v2

    .line 81
    iput-object v2, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpOverrideDisplayInfo:Landroid/view/DisplayInfo;

    .line 82
    .line 83
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wm/ActivityRecord;->computeConfigByResolveHint(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 84
    .line 85
    .line 86
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 87
    .line 88
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 89
    .line 90
    new-instance p1, Landroid/graphics/Rect;

    .line 91
    .line 92
    invoke-direct {p1, v3}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 93
    .line 94
    .line 95
    iget-object p0, p0, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 96
    .line 97
    iput-object p1, p0, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mLetterboxBoundsForAspectRatio:Landroid/graphics/Rect;

    .line 98
    .line 99
    :cond_2
    return-void
.end method

.method public final resolveOverrideConfiguration(Landroid/content/res/Configuration;)V
    .locals 27

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 6
    .line 7
    .line 8
    move-result-object v2

    .line 9
    iget v3, v2, Landroid/content/res/Configuration;->assetsSeq:I

    .line 10
    .line 11
    const/4 v4, 0x0

    .line 12
    if-eqz v3, :cond_0

    .line 13
    .line 14
    iget v5, v1, Landroid/content/res/Configuration;->assetsSeq:I

    .line 15
    .line 16
    if-le v5, v3, :cond_0

    .line 17
    .line 18
    iput v4, v2, Landroid/content/res/Configuration;->assetsSeq:I

    .line 19
    .line 20
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 21
    .line 22
    .line 23
    move-result v3

    .line 24
    const/4 v5, 0x1

    .line 25
    if-eq v3, v5, :cond_1

    .line 26
    .line 27
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->isDexMode()Z

    .line 28
    .line 29
    .line 30
    move-result v3

    .line 31
    if-eqz v3, :cond_3

    .line 32
    .line 33
    :cond_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 34
    .line 35
    .line 36
    move-result v3

    .line 37
    if-eqz v3, :cond_3

    .line 38
    .line 39
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 40
    .line 41
    iget-boolean v3, v3, Lcom/android/server/wm/WindowProcessController;->mIsActivityConfigOverrideAllowed:Z

    .line 42
    .line 43
    if-nez v3, :cond_3

    .line 44
    .line 45
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 46
    .line 47
    invoke-virtual {v3}, Lcom/android/server/wm/ConfigurationContainer;->getRequestedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 48
    .line 49
    .line 50
    move-result-object v3

    .line 51
    iget v6, v3, Landroid/content/res/Configuration;->assetsSeq:I

    .line 52
    .line 53
    if-eqz v6, :cond_3

    .line 54
    .line 55
    iget v7, v1, Landroid/content/res/Configuration;->assetsSeq:I

    .line 56
    .line 57
    sub-int/2addr v7, v6

    .line 58
    invoke-static {v7}, Ljava/lang/Math;->abs(I)I

    .line 59
    .line 60
    .line 61
    move-result v6

    .line 62
    const/high16 v8, 0x10000000

    .line 63
    .line 64
    if-le v6, v8, :cond_2

    .line 65
    .line 66
    goto :goto_0

    .line 67
    :cond_2
    if-gez v7, :cond_3

    .line 68
    .line 69
    iget v3, v3, Landroid/content/res/Configuration;->assetsSeq:I

    .line 70
    .line 71
    iput v3, v2, Landroid/content/res/Configuration;->assetsSeq:I

    .line 72
    .line 73
    :cond_3
    :goto_0
    invoke-super/range {p0 .. p1}, Lcom/android/server/wm/WindowToken;->resolveOverrideConfiguration(Landroid/content/res/Configuration;)V

    .line 74
    .line 75
    .line 76
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 77
    .line 78
    .line 79
    move-result-object v9

    .line 80
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isEmbedded()Z

    .line 81
    .line 82
    .line 83
    move-result v2

    .line 84
    if-nez v2, :cond_4

    .line 85
    .line 86
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 87
    .line 88
    if-eqz v2, :cond_5

    .line 89
    .line 90
    iget-boolean v2, v2, Lcom/android/server/wm/Task;->mAlignActivityLocaleWithTask:Z

    .line 91
    .line 92
    if-eqz v2, :cond_5

    .line 93
    .line 94
    :cond_4
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 95
    .line 96
    if-eqz v2, :cond_5

    .line 97
    .line 98
    iget-object v2, v2, Lcom/android/server/wm/Task;->realActivity:Landroid/content/ComponentName;

    .line 99
    .line 100
    if-eqz v2, :cond_5

    .line 101
    .line 102
    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 103
    .line 104
    .line 105
    move-result-object v2

    .line 106
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 107
    .line 108
    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 109
    .line 110
    .line 111
    move-result v2

    .line 112
    if-nez v2, :cond_5

    .line 113
    .line 114
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 115
    .line 116
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mPackageConfigPersister:Lcom/android/server/wm/PackageConfigPersister;

    .line 117
    .line 118
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 119
    .line 120
    iget-object v3, v3, Lcom/android/server/wm/Task;->realActivity:Landroid/content/ComponentName;

    .line 121
    .line 122
    invoke-virtual {v3}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 123
    .line 124
    .line 125
    move-result-object v3

    .line 126
    iget v6, v0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 127
    .line 128
    invoke-virtual {v2, v6, v3}, Lcom/android/server/wm/PackageConfigPersister;->findPackageConfiguration(ILjava/lang/String;)Lcom/android/server/wm/ActivityTaskManagerInternal$PackageConfig;

    .line 129
    .line 130
    .line 131
    move-result-object v2

    .line 132
    if-eqz v2, :cond_5

    .line 133
    .line 134
    iget-object v3, v2, Lcom/android/server/wm/ActivityTaskManagerInternal$PackageConfig;->mLocales:Landroid/os/LocaleList;

    .line 135
    .line 136
    if-eqz v3, :cond_5

    .line 137
    .line 138
    invoke-virtual {v3}, Landroid/os/LocaleList;->isEmpty()Z

    .line 139
    .line 140
    .line 141
    move-result v3

    .line 142
    if-nez v3, :cond_5

    .line 143
    .line 144
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerInternal$PackageConfig;->mLocales:Landroid/os/LocaleList;

    .line 145
    .line 146
    invoke-virtual {v9, v2}, Landroid/content/res/Configuration;->setLocales(Landroid/os/LocaleList;)V

    .line 147
    .line 148
    .line 149
    :cond_5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowToken;->isFixedRotationTransforming()Z

    .line 150
    .line 151
    .line 152
    move-result v2

    .line 153
    if-eqz v2, :cond_6

    .line 154
    .line 155
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 156
    .line 157
    invoke-virtual {v2, v1}, Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V

    .line 158
    .line 159
    .line 160
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 161
    .line 162
    invoke-virtual {v1, v9}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    .line 163
    .line 164
    .line 165
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 166
    .line 167
    :cond_6
    move-object v8, v1

    .line 168
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 169
    .line 170
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 171
    .line 172
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 173
    .line 174
    .line 175
    sget-boolean v2, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ASPECT_RATIO_POLICY:Z

    .line 176
    .line 177
    const/high16 v3, -0x40800000    # -1.0f

    .line 178
    .line 179
    if-eqz v2, :cond_7

    .line 180
    .line 181
    iput v3, v1, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mUserOrSystemMinAspectRatio:F

    .line 182
    .line 183
    :cond_7
    iget-object v1, v1, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 184
    .line 185
    iput-boolean v4, v1, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mIsAspectRatioApplied:Z

    .line 186
    .line 187
    const/4 v2, 0x0

    .line 188
    iput-object v2, v1, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mLetterboxBoundsForFixedOrientationAndAspectRatio:Landroid/graphics/Rect;

    .line 189
    .line 190
    iput-object v2, v1, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mLetterboxBoundsForAspectRatio:Landroid/graphics/Rect;

    .line 191
    .line 192
    iput-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mIsEligibleForFixedOrientationLetterbox:Z

    .line 193
    .line 194
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 195
    .line 196
    iget-object v6, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 197
    .line 198
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowToken;->isFixedRotationTransforming()Z

    .line 199
    .line 200
    .line 201
    move-result v7

    .line 202
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 203
    .line 204
    .line 205
    new-instance v10, Landroid/graphics/Rect;

    .line 206
    .line 207
    iget-object v11, v8, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 208
    .line 209
    invoke-virtual {v11}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 210
    .line 211
    .line 212
    move-result-object v11

    .line 213
    invoke-direct {v10, v11}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 214
    .line 215
    .line 216
    iput-object v10, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mParentAppBoundsOverride:Landroid/graphics/Rect;

    .line 217
    .line 218
    iget-boolean v10, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 219
    .line 220
    const/4 v11, 0x3

    .line 221
    const/4 v12, 0x2

    .line 222
    const/4 v13, -0x1

    .line 223
    if-eqz v10, :cond_e

    .line 224
    .line 225
    if-eqz v6, :cond_e

    .line 226
    .line 227
    iget-object v10, v8, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 228
    .line 229
    invoke-virtual {v10}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 230
    .line 231
    .line 232
    move-result v10

    .line 233
    if-ne v10, v13, :cond_8

    .line 234
    .line 235
    if-nez v7, :cond_8

    .line 236
    .line 237
    iget-object v7, v6, Lcom/android/server/wm/DisplayContent;->mDisplayRotation:Lcom/android/server/wm/DisplayRotation;

    .line 238
    .line 239
    iget v10, v7, Lcom/android/server/wm/DisplayRotation;->mRotation:I

    .line 240
    .line 241
    :cond_8
    if-eq v10, v5, :cond_a

    .line 242
    .line 243
    if-ne v10, v11, :cond_9

    .line 244
    .line 245
    goto :goto_1

    .line 246
    :cond_9
    move v7, v4

    .line 247
    goto :goto_2

    .line 248
    :cond_a
    :goto_1
    move v7, v5

    .line 249
    :goto_2
    if-eqz v7, :cond_b

    .line 250
    .line 251
    iget v14, v6, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 252
    .line 253
    goto :goto_3

    .line 254
    :cond_b
    iget v14, v6, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 255
    .line 256
    :goto_3
    if-eqz v7, :cond_c

    .line 257
    .line 258
    iget v7, v6, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 259
    .line 260
    goto :goto_4

    .line 261
    :cond_c
    iget v7, v6, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 262
    .line 263
    :goto_4
    iget-object v6, v6, Lcom/android/server/wm/DisplayContent;->mDisplayPolicy:Lcom/android/server/wm/DisplayPolicy;

    .line 264
    .line 265
    invoke-virtual {v6, v10, v14, v7}, Lcom/android/server/wm/DisplayPolicy;->getDecorInsetsInfo(III)Lcom/android/server/wm/DisplayPolicy$DecorInsets$Info;

    .line 266
    .line 267
    .line 268
    move-result-object v6

    .line 269
    iget-object v7, v6, Lcom/android/server/wm/DisplayPolicy$DecorInsets$Info;->mOverrideConfigFrame:Landroid/graphics/Rect;

    .line 270
    .line 271
    invoke-virtual {v7}, Landroid/graphics/Rect;->width()I

    .line 272
    .line 273
    .line 274
    move-result v10

    .line 275
    invoke-virtual {v7}, Landroid/graphics/Rect;->height()I

    .line 276
    .line 277
    .line 278
    move-result v7

    .line 279
    if-le v10, v7, :cond_d

    .line 280
    .line 281
    move v7, v12

    .line 282
    goto :goto_5

    .line 283
    :cond_d
    move v7, v5

    .line 284
    :goto_5
    iput v7, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpOverrideConfigOrientation:I

    .line 285
    .line 286
    iget-object v6, v6, Lcom/android/server/wm/DisplayPolicy$DecorInsets$Info;->mOverrideNonDecorInsets:Landroid/graphics/Rect;

    .line 287
    .line 288
    invoke-static {v6}, Landroid/graphics/Insets;->of(Landroid/graphics/Rect;)Landroid/graphics/Insets;

    .line 289
    .line 290
    .line 291
    move-result-object v6

    .line 292
    goto :goto_6

    .line 293
    :cond_e
    sget-object v6, Landroid/graphics/Insets;->NONE:Landroid/graphics/Insets;

    .line 294
    .line 295
    :goto_6
    iget-object v1, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mParentAppBoundsOverride:Landroid/graphics/Rect;

    .line 296
    .line 297
    invoke-virtual {v1, v6}, Landroid/graphics/Rect;->inset(Landroid/graphics/Insets;)V

    .line 298
    .line 299
    .line 300
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 301
    .line 302
    const/high16 v7, 0x3f000000    # 0.5f

    .line 303
    .line 304
    const/high16 v10, 0x3f800000    # 1.0f

    .line 305
    .line 306
    if-eqz v1, :cond_2b

    .line 307
    .line 308
    sget-object v14, Lcom/android/server/wm/SizeCompatPolicyManager$LazyHolder;->sManager:Lcom/android/server/wm/SizeCompatPolicyManager;

    .line 309
    .line 310
    iget v15, v0, Lcom/android/server/wm/ActivityRecord;->mResolvedConfigChangeFlags:I

    .line 311
    .line 312
    invoke-virtual {v14}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 313
    .line 314
    .line 315
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 316
    .line 317
    .line 318
    move-result-object v14

    .line 319
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 320
    .line 321
    invoke-static {v3, v4}, Lcom/android/server/wm/SizeCompatPolicyManager;->getCompatPolicy(Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;

    .line 322
    .line 323
    .line 324
    move-result-object v3

    .line 325
    if-eqz v3, :cond_28

    .line 326
    .line 327
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 328
    .line 329
    .line 330
    move-result-object v14

    .line 331
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 332
    .line 333
    .line 334
    move-result v15

    .line 335
    if-eqz v15, :cond_f

    .line 336
    .line 337
    goto :goto_7

    .line 338
    :cond_f
    iget v15, v8, Landroid/content/res/Configuration;->orientation:I

    .line 339
    .line 340
    :goto_7
    iget-object v11, v14, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 341
    .line 342
    invoke-virtual {v11}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 343
    .line 344
    .line 345
    move-result-object v11

    .line 346
    invoke-virtual {v3, v15, v11}, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->getFrameByOrientation(ILandroid/graphics/Rect;)V

    .line 347
    .line 348
    .line 349
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 350
    .line 351
    .line 352
    move-result-object v11

    .line 353
    if-eqz v11, :cond_10

    .line 354
    .line 355
    invoke-virtual {v11, v14, v8, v2, v3}, Lcom/android/server/wm/TaskFragment;->computeConfigResourceOverrides(Landroid/content/res/Configuration;Landroid/content/res/Configuration;Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;)V

    .line 356
    .line 357
    .line 358
    :cond_10
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 359
    .line 360
    .line 361
    move-result-object v11

    .line 362
    iget v11, v11, Landroid/content/res/Configuration;->screenLayout:I

    .line 363
    .line 364
    iget v15, v14, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 365
    .line 366
    iget v6, v14, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 367
    .line 368
    invoke-static {v11, v15, v6}, Lcom/android/server/wm/WindowContainer;->computeScreenLayout(III)I

    .line 369
    .line 370
    .line 371
    move-result v6

    .line 372
    iput v6, v14, Landroid/content/res/Configuration;->screenLayout:I

    .line 373
    .line 374
    iget v6, v14, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 375
    .line 376
    iget v11, v14, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 377
    .line 378
    if-ne v6, v11, :cond_11

    .line 379
    .line 380
    iget v6, v8, Landroid/content/res/Configuration;->orientation:I

    .line 381
    .line 382
    iput v6, v14, Landroid/content/res/Configuration;->orientation:I

    .line 383
    .line 384
    :cond_11
    iget-object v6, v14, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 385
    .line 386
    invoke-virtual {v6}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 387
    .line 388
    .line 389
    move-result-object v6

    .line 390
    iget-object v11, v8, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 391
    .line 392
    invoke-virtual {v11}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 393
    .line 394
    .line 395
    move-result-object v11

    .line 396
    invoke-virtual {v6}, Landroid/graphics/Rect;->width()I

    .line 397
    .line 398
    .line 399
    move-result v14

    .line 400
    invoke-virtual {v11}, Landroid/graphics/Rect;->width()I

    .line 401
    .line 402
    .line 403
    move-result v15

    .line 404
    if-ne v14, v15, :cond_12

    .line 405
    .line 406
    invoke-virtual {v6}, Landroid/graphics/Rect;->height()I

    .line 407
    .line 408
    .line 409
    move-result v14

    .line 410
    invoke-virtual {v11}, Landroid/graphics/Rect;->height()I

    .line 411
    .line 412
    .line 413
    move-result v11

    .line 414
    if-ne v14, v11, :cond_12

    .line 415
    .line 416
    move v6, v10

    .line 417
    goto :goto_9

    .line 418
    :cond_12
    iget-object v11, v3, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->mTask:Lcom/android/server/wm/Task;

    .line 419
    .line 420
    iget-object v14, v11, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 421
    .line 422
    if-eqz v14, :cond_13

    .line 423
    .line 424
    invoke-virtual {v11}, Lcom/android/server/wm/ConfigurationContainer;->inFullscreenWindowingMode()Z

    .line 425
    .line 426
    .line 427
    move-result v14

    .line 428
    if-eqz v14, :cond_13

    .line 429
    .line 430
    iget-object v11, v11, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 431
    .line 432
    invoke-virtual {v3, v11}, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->getStableBounds(Lcom/android/server/wm/DisplayContent;)Landroid/graphics/Rect;

    .line 433
    .line 434
    .line 435
    move-result-object v11

    .line 436
    goto :goto_8

    .line 437
    :cond_13
    iget-object v11, v8, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 438
    .line 439
    invoke-virtual {v11}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 440
    .line 441
    .line 442
    move-result-object v11

    .line 443
    :goto_8
    invoke-static {v6, v11}, Lcom/samsung/android/core/CompatUtils;->getCompatScale(Landroid/graphics/Rect;Landroid/graphics/Rect;)F

    .line 444
    .line 445
    .line 446
    move-result v6

    .line 447
    invoke-static {v6}, Lcom/samsung/android/core/CompatUtils;->adjustRoundScale(F)F

    .line 448
    .line 449
    .line 450
    move-result v6

    .line 451
    :goto_9
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideBounds()Landroid/graphics/Rect;

    .line 452
    .line 453
    .line 454
    move-result-object v11

    .line 455
    cmpl-float v14, v6, v10

    .line 456
    .line 457
    if-nez v14, :cond_14

    .line 458
    .line 459
    iget-object v15, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 460
    .line 461
    if-nez v15, :cond_14

    .line 462
    .line 463
    goto :goto_c

    .line 464
    :cond_14
    iget-object v15, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 465
    .line 466
    if-nez v15, :cond_15

    .line 467
    .line 468
    new-instance v15, Lcom/android/server/wm/SizeCompatAttributes;

    .line 469
    .line 470
    invoke-direct {v15, v0, v3}, Lcom/android/server/wm/SizeCompatAttributes;-><init>(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;)V

    .line 471
    .line 472
    .line 473
    iput-object v15, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 474
    .line 475
    :cond_15
    iget-object v15, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 476
    .line 477
    invoke-virtual {v15}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 478
    .line 479
    .line 480
    if-eqz v14, :cond_16

    .line 481
    .line 482
    move v14, v5

    .line 483
    goto :goto_a

    .line 484
    :cond_16
    move v14, v4

    .line 485
    :goto_a
    iput-boolean v14, v15, Lcom/android/server/wm/SizeCompatAttributes;->mEnabled:Z

    .line 486
    .line 487
    iget-object v13, v15, Lcom/android/server/wm/SizeCompatAttributes;->mReason:Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;

    .line 488
    .line 489
    invoke-virtual {v13}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 490
    .line 491
    .line 492
    if-eqz v14, :cond_18

    .line 493
    .line 494
    iget-object v13, v15, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 495
    .line 496
    if-nez v13, :cond_17

    .line 497
    .line 498
    new-instance v13, Landroid/graphics/Rect;

    .line 499
    .line 500
    invoke-direct {v13}, Landroid/graphics/Rect;-><init>()V

    .line 501
    .line 502
    .line 503
    iput-object v13, v15, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 504
    .line 505
    :cond_17
    iget-object v13, v15, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 506
    .line 507
    invoke-virtual {v13, v11}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 508
    .line 509
    .line 510
    iget-object v11, v15, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 511
    .line 512
    invoke-virtual {v11, v4, v4}, Landroid/graphics/Rect;->offsetTo(II)V

    .line 513
    .line 514
    .line 515
    iget-object v11, v15, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 516
    .line 517
    invoke-virtual {v11, v6}, Landroid/graphics/Rect;->scale(F)V

    .line 518
    .line 519
    .line 520
    goto :goto_b

    .line 521
    :cond_18
    iput-object v2, v15, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 522
    .line 523
    :goto_b
    iget v11, v15, Lcom/android/server/wm/SizeCompatAttributes;->mScale:F

    .line 524
    .line 525
    cmpl-float v11, v6, v11

    .line 526
    .line 527
    if-nez v11, :cond_19

    .line 528
    .line 529
    goto :goto_c

    .line 530
    :cond_19
    iput v6, v15, Lcom/android/server/wm/SizeCompatAttributes;->mScale:F

    .line 531
    .line 532
    new-instance v6, Lcom/android/server/wm/AppCompatSizeCompatModePolicy$$ExternalSyntheticLambda0;

    .line 533
    .line 534
    invoke-direct {v6}, Ljava/lang/Object;-><init>()V

    .line 535
    .line 536
    .line 537
    invoke-virtual {v0, v6, v4}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 538
    .line 539
    .line 540
    :goto_c
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 541
    .line 542
    if-nez v6, :cond_1a

    .line 543
    .line 544
    new-instance v6, Lcom/android/server/wm/SizeCompatAttributes;

    .line 545
    .line 546
    invoke-direct {v6, v0, v3}, Lcom/android/server/wm/SizeCompatAttributes;-><init>(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;)V

    .line 547
    .line 548
    .line 549
    iput-object v6, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 550
    .line 551
    :cond_1a
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 552
    .line 553
    invoke-virtual {v6}, Lcom/android/server/wm/SizeCompatAttributes;->getBounds()Landroid/graphics/Rect;

    .line 554
    .line 555
    .line 556
    move-result-object v11

    .line 557
    if-nez v11, :cond_1b

    .line 558
    .line 559
    move-object/from16 v16, v8

    .line 560
    .line 561
    goto/16 :goto_f

    .line 562
    .line 563
    :cond_1b
    iget-object v13, v3, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->mTask:Lcom/android/server/wm/Task;

    .line 564
    .line 565
    iget-object v14, v13, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 566
    .line 567
    if-eqz v14, :cond_1c

    .line 568
    .line 569
    invoke-virtual {v13}, Lcom/android/server/wm/ConfigurationContainer;->inFullscreenWindowingMode()Z

    .line 570
    .line 571
    .line 572
    move-result v14

    .line 573
    if-eqz v14, :cond_1c

    .line 574
    .line 575
    iget-object v13, v13, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 576
    .line 577
    invoke-virtual {v3, v13}, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->getStableBounds(Lcom/android/server/wm/DisplayContent;)Landroid/graphics/Rect;

    .line 578
    .line 579
    .line 580
    move-result-object v13

    .line 581
    goto :goto_d

    .line 582
    :cond_1c
    iget-object v13, v8, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 583
    .line 584
    invoke-virtual {v13}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 585
    .line 586
    .line 587
    move-result-object v13

    .line 588
    :goto_d
    iget v14, v13, Landroid/graphics/Rect;->left:I

    .line 589
    .line 590
    invoke-virtual {v13}, Landroid/graphics/Rect;->width()I

    .line 591
    .line 592
    .line 593
    move-result v15

    .line 594
    invoke-virtual {v11}, Landroid/graphics/Rect;->width()I

    .line 595
    .line 596
    .line 597
    move-result v16

    .line 598
    sub-int v15, v15, v16

    .line 599
    .line 600
    int-to-float v15, v15

    .line 601
    mul-float/2addr v15, v7

    .line 602
    move-object/from16 v16, v8

    .line 603
    .line 604
    float-to-double v7, v15

    .line 605
    invoke-static {v7, v8}, Ljava/lang/Math;->ceil(D)D

    .line 606
    .line 607
    .line 608
    move-result-wide v7

    .line 609
    double-to-int v7, v7

    .line 610
    invoke-static {v4, v7}, Ljava/lang/Math;->max(II)I

    .line 611
    .line 612
    .line 613
    move-result v7

    .line 614
    add-int/2addr v7, v14

    .line 615
    iget v8, v13, Landroid/graphics/Rect;->top:I

    .line 616
    .line 617
    invoke-virtual {v13}, Landroid/graphics/Rect;->height()I

    .line 618
    .line 619
    .line 620
    move-result v13

    .line 621
    invoke-virtual {v11}, Landroid/graphics/Rect;->height()I

    .line 622
    .line 623
    .line 624
    move-result v11

    .line 625
    sub-int/2addr v13, v11

    .line 626
    int-to-float v11, v13

    .line 627
    iget-object v13, v3, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->mTask:Lcom/android/server/wm/Task;

    .line 628
    .line 629
    iget-object v14, v13, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 630
    .line 631
    if-eqz v14, :cond_1d

    .line 632
    .line 633
    invoke-virtual {v13}, Lcom/android/server/wm/ConfigurationContainer;->inFullscreenWindowingMode()Z

    .line 634
    .line 635
    .line 636
    move-result v13

    .line 637
    if-eqz v13, :cond_1d

    .line 638
    .line 639
    const/4 v13, 0x0

    .line 640
    goto :goto_e

    .line 641
    :cond_1d
    const/high16 v13, 0x3f000000    # 0.5f

    .line 642
    .line 643
    :goto_e
    mul-float/2addr v11, v13

    .line 644
    float-to-double v13, v11

    .line 645
    invoke-static {v13, v14}, Ljava/lang/Math;->ceil(D)D

    .line 646
    .line 647
    .line 648
    move-result-wide v13

    .line 649
    double-to-int v11, v13

    .line 650
    invoke-static {v4, v11}, Ljava/lang/Math;->max(II)I

    .line 651
    .line 652
    .line 653
    move-result v11

    .line 654
    add-int/2addr v11, v8

    .line 655
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 656
    .line 657
    .line 658
    move-result-object v8

    .line 659
    iget-object v13, v8, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 660
    .line 661
    invoke-virtual {v13}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 662
    .line 663
    .line 664
    move-result-object v13

    .line 665
    invoke-virtual {v13, v7, v11}, Landroid/graphics/Rect;->offsetTo(II)V

    .line 666
    .line 667
    .line 668
    iget-object v8, v8, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 669
    .line 670
    invoke-virtual {v8}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 671
    .line 672
    .line 673
    move-result-object v8

    .line 674
    invoke-virtual {v8, v7, v11}, Landroid/graphics/Rect;->offsetTo(II)V

    .line 675
    .line 676
    .line 677
    invoke-virtual {v6}, Lcom/android/server/wm/SizeCompatAttributes;->hasBounds()Z

    .line 678
    .line 679
    .line 680
    move-result v8

    .line 681
    if-nez v8, :cond_1e

    .line 682
    .line 683
    goto :goto_f

    .line 684
    :cond_1e
    iget-object v6, v6, Lcom/android/server/wm/SizeCompatAttributes;->mBounds:Landroid/graphics/Rect;

    .line 685
    .line 686
    invoke-virtual {v6, v7, v11}, Landroid/graphics/Rect;->offsetTo(II)V

    .line 687
    .line 688
    .line 689
    :goto_f
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

    .line 690
    .line 691
    if-nez v6, :cond_1f

    .line 692
    .line 693
    new-instance v6, Lcom/android/server/wm/CompatSandboxPolicy;

    .line 694
    .line 695
    invoke-direct {v6, v0}, Lcom/android/server/wm/CompatSandboxPolicy;-><init>(Lcom/android/server/wm/ActivityRecord;)V

    .line 696
    .line 697
    .line 698
    iput-object v6, v0, Lcom/android/server/wm/ActivityRecord;->mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

    .line 699
    .line 700
    :cond_1f
    iget-object v6, v0, Lcom/android/server/wm/ActivityRecord;->mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

    .line 701
    .line 702
    invoke-virtual {v3, v0}, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->supportsSandbox(Lcom/android/server/wm/ActivityRecord;)Z

    .line 703
    .line 704
    .line 705
    move-result v7

    .line 706
    if-eqz v7, :cond_20

    .line 707
    .line 708
    move v7, v12

    .line 709
    goto :goto_10

    .line 710
    :cond_20
    move v7, v4

    .line 711
    :goto_10
    invoke-virtual {v3, v0}, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->supportsSandbox(Lcom/android/server/wm/ActivityRecord;)Z

    .line 712
    .line 713
    .line 714
    move-result v8

    .line 715
    if-eqz v8, :cond_21

    .line 716
    .line 717
    or-int/lit8 v7, v7, 0x4

    .line 718
    .line 719
    :cond_21
    invoke-virtual {v3, v0}, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->supportsSandbox(Lcom/android/server/wm/ActivityRecord;)Z

    .line 720
    .line 721
    .line 722
    move-result v8

    .line 723
    if-eqz v8, :cond_22

    .line 724
    .line 725
    or-int/lit8 v7, v7, 0x8

    .line 726
    .line 727
    :cond_22
    iget-object v3, v3, Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;->mTask:Lcom/android/server/wm/Task;

    .line 728
    .line 729
    invoke-virtual {v3}, Lcom/android/server/wm/ConfigurationContainer;->inFullscreenWindowingMode()Z

    .line 730
    .line 731
    .line 732
    move-result v3

    .line 733
    xor-int/2addr v3, v5

    .line 734
    if-eqz v3, :cond_23

    .line 735
    .line 736
    or-int/lit8 v7, v7, 0x10

    .line 737
    .line 738
    :cond_23
    iget v3, v6, Lcom/android/server/wm/CompatSandboxPolicy;->mFlags:I

    .line 739
    .line 740
    or-int/2addr v3, v7

    .line 741
    iput v3, v6, Lcom/android/server/wm/CompatSandboxPolicy;->mFlags:I

    .line 742
    .line 743
    and-int/lit8 v3, v7, 0x2c

    .line 744
    .line 745
    if-eqz v3, :cond_25

    .line 746
    .line 747
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 748
    .line 749
    if-eqz v3, :cond_24

    .line 750
    .line 751
    invoke-virtual {v3}, Lcom/android/server/wm/SizeCompatAttributes;->hasBounds()Z

    .line 752
    .line 753
    .line 754
    move-result v3

    .line 755
    if-eqz v3, :cond_24

    .line 756
    .line 757
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 758
    .line 759
    iget v3, v3, Lcom/android/server/wm/SizeCompatAttributes;->mScale:F

    .line 760
    .line 761
    goto :goto_11

    .line 762
    :cond_24
    move v3, v10

    .line 763
    goto :goto_11

    .line 764
    :cond_25
    const/high16 v3, -0x40800000    # -1.0f

    .line 765
    .line 766
    :goto_11
    iput v3, v6, Lcom/android/server/wm/CompatSandboxPolicy;->mScale:F

    .line 767
    .line 768
    and-int/lit8 v3, v7, 0xc

    .line 769
    .line 770
    if-eqz v3, :cond_27

    .line 771
    .line 772
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 773
    .line 774
    if-eqz v3, :cond_26

    .line 775
    .line 776
    invoke-virtual {v3}, Lcom/android/server/wm/SizeCompatAttributes;->hasBounds()Z

    .line 777
    .line 778
    .line 779
    move-result v3

    .line 780
    if-eqz v3, :cond_26

    .line 781
    .line 782
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 783
    .line 784
    invoke-virtual {v3}, Lcom/android/server/wm/SizeCompatAttributes;->getBounds()Landroid/graphics/Rect;

    .line 785
    .line 786
    .line 787
    move-result-object v3

    .line 788
    goto :goto_12

    .line 789
    :cond_26
    invoke-static {}, Lcom/samsung/android/core/CompatSandbox;->getEmptyRect()Landroid/graphics/Rect;

    .line 790
    .line 791
    .line 792
    move-result-object v3

    .line 793
    goto :goto_12

    .line 794
    :cond_27
    move-object v3, v2

    .line 795
    :goto_12
    iput-object v3, v6, Lcom/android/server/wm/CompatSandboxPolicy;->mBounds:Landroid/graphics/Rect;

    .line 796
    .line 797
    const/high16 v3, 0x20000000

    .line 798
    .line 799
    move v6, v3

    .line 800
    move-object/from16 v3, v16

    .line 801
    .line 802
    goto :goto_14

    .line 803
    :cond_28
    move-object/from16 v16, v8

    .line 804
    .line 805
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mSizeCompatAttributes:Lcom/android/server/wm/SizeCompatAttributes;

    .line 806
    .line 807
    if-eqz v3, :cond_29

    .line 808
    .line 809
    invoke-virtual {v3, v2}, Lcom/android/server/wm/SizeCompatAttributes;->cleanUp(Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;)V

    .line 810
    .line 811
    .line 812
    :cond_29
    and-int/lit16 v3, v15, 0x200

    .line 813
    .line 814
    if-eqz v3, :cond_2a

    .line 815
    .line 816
    iget v3, v14, Landroid/content/res/Configuration;->uiMode:I

    .line 817
    .line 818
    if-nez v3, :cond_2a

    .line 819
    .line 820
    move-object/from16 v3, v16

    .line 821
    .line 822
    iget v6, v3, Landroid/content/res/Configuration;->uiMode:I

    .line 823
    .line 824
    iput v6, v14, Landroid/content/res/Configuration;->uiMode:I

    .line 825
    .line 826
    goto :goto_13

    .line 827
    :cond_2a
    move-object/from16 v3, v16

    .line 828
    .line 829
    :goto_13
    move v6, v4

    .line 830
    :goto_14
    iput v6, v0, Lcom/android/server/wm/ActivityRecord;->mResolvedConfigChangeFlags:I

    .line 831
    .line 832
    goto :goto_15

    .line 833
    :cond_2b
    move-object v3, v8

    .line 834
    :goto_15
    iget-object v6, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 835
    .line 836
    invoke-virtual {v6}, Landroid/app/WindowConfiguration;->getWindowingMode()I

    .line 837
    .line 838
    .line 839
    move-result v6

    .line 840
    const/4 v7, 0x5

    .line 841
    if-ne v6, v7, :cond_2c

    .line 842
    .line 843
    iget-object v8, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 844
    .line 845
    iget-object v8, v8, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 846
    .line 847
    iget-object v8, v8, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 848
    .line 849
    iget-object v8, v8, Lcom/android/server/wm/AppCompatCameraOverrides;->mAppCompatCameraOverridesState:Lcom/android/server/wm/AppCompatCameraOverrides$AppCompatCameraOverridesState;

    .line 850
    .line 851
    iget v8, v8, Lcom/android/server/wm/AppCompatCameraOverrides$AppCompatCameraOverridesState;->mFreeformCameraCompatMode:I

    .line 852
    .line 853
    if-eqz v8, :cond_2c

    .line 854
    .line 855
    move v8, v5

    .line 856
    goto :goto_16

    .line 857
    :cond_2c
    move v8, v4

    .line 858
    :goto_16
    iget-boolean v11, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchedFromBubble:Z

    .line 859
    .line 860
    if-nez v11, :cond_2e

    .line 861
    .line 862
    const/4 v11, 0x6

    .line 863
    if-eq v6, v11, :cond_2d

    .line 864
    .line 865
    if-eq v6, v5, :cond_2d

    .line 866
    .line 867
    if-nez v8, :cond_2d

    .line 868
    .line 869
    iget-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 870
    .line 871
    if-nez v8, :cond_2e

    .line 872
    .line 873
    if-ne v6, v12, :cond_2e

    .line 874
    .line 875
    iget-object v8, v9, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 876
    .line 877
    invoke-virtual {v8}, Landroid/app/WindowConfiguration;->getWindowingMode()I

    .line 878
    .line 879
    .line 880
    move-result v8

    .line 881
    if-ne v8, v5, :cond_2e

    .line 882
    .line 883
    :cond_2d
    move v8, v5

    .line 884
    goto :goto_17

    .line 885
    :cond_2e
    move v8, v4

    .line 886
    :goto_17
    if-eqz v8, :cond_5b

    .line 887
    .line 888
    invoke-static/range {p0 .. p0}, Lcom/android/server/wm/MultiTaskingAppCompatController;->inAllowedWindowingMode(Lcom/android/server/wm/ActivityRecord;)Z

    .line 889
    .line 890
    .line 891
    move-result v11

    .line 892
    if-nez v11, :cond_2f

    .line 893
    .line 894
    goto/16 :goto_2e

    .line 895
    .line 896
    :cond_2f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeHomeOrRecents()Z

    .line 897
    .line 898
    .line 899
    move-result v11

    .line 900
    if-eqz v11, :cond_30

    .line 901
    .line 902
    goto/16 :goto_2e

    .line 903
    .line 904
    :cond_30
    if-eqz v1, :cond_31

    .line 905
    .line 906
    iget v11, v0, Lcom/android/server/wm/ActivityRecord;->mResolvedConfigChangeFlags:I

    .line 907
    .line 908
    if-eqz v11, :cond_31

    .line 909
    .line 910
    goto/16 :goto_2e

    .line 911
    .line 912
    :cond_31
    iget-object v11, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 913
    .line 914
    iget-boolean v11, v11, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 915
    .line 916
    if-eqz v11, :cond_32

    .line 917
    .line 918
    goto/16 :goto_2e

    .line 919
    .line 920
    :cond_32
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->isDexMode()Z

    .line 921
    .line 922
    .line 923
    move-result v11

    .line 924
    if-eqz v11, :cond_33

    .line 925
    .line 926
    goto/16 :goto_2e

    .line 927
    .line 928
    :cond_33
    sget-boolean v11, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ORIENTATION_POLICY:Z

    .line 929
    .line 930
    if-eqz v11, :cond_34

    .line 931
    .line 932
    iget-object v13, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 933
    .line 934
    if-eqz v13, :cond_34

    .line 935
    .line 936
    iget v13, v13, Lcom/android/server/wm/Task;->mRespectOrientationRequestOverride:I

    .line 937
    .line 938
    sget-boolean v14, Lcom/android/server/wm/MultiTaskingAppCompatOrientationOverrides;->SUPPORTS_DEFAULT_ENABLED:Z

    .line 939
    .line 940
    const/4 v14, 0x7

    .line 941
    if-ne v13, v14, :cond_34

    .line 942
    .line 943
    goto/16 :goto_2e

    .line 944
    .line 945
    :cond_34
    iget-object v13, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 946
    .line 947
    invoke-virtual {v13}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 948
    .line 949
    .line 950
    move-result-object v13

    .line 951
    new-instance v14, Landroid/graphics/Rect;

    .line 952
    .line 953
    invoke-direct {v14}, Landroid/graphics/Rect;-><init>()V

    .line 954
    .line 955
    .line 956
    iget-object v15, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 957
    .line 958
    invoke-virtual {v14}, Landroid/graphics/Rect;->setEmpty()V

    .line 959
    .line 960
    .line 961
    iget-object v7, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 962
    .line 963
    if-nez v7, :cond_35

    .line 964
    .line 965
    goto :goto_1e

    .line 966
    :cond_35
    iget-object v7, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 967
    .line 968
    iget-boolean v7, v7, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 969
    .line 970
    if-nez v7, :cond_36

    .line 971
    .line 972
    goto :goto_1e

    .line 973
    :cond_36
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 974
    .line 975
    .line 976
    move-result v7

    .line 977
    if-nez v7, :cond_37

    .line 978
    .line 979
    goto :goto_1e

    .line 980
    :cond_37
    invoke-virtual {v13}, Landroid/graphics/Rect;->height()I

    .line 981
    .line 982
    .line 983
    move-result v10

    .line 984
    invoke-virtual {v13}, Landroid/graphics/Rect;->width()I

    .line 985
    .line 986
    .line 987
    move-result v4

    .line 988
    if-lt v10, v4, :cond_38

    .line 989
    .line 990
    move v4, v5

    .line 991
    goto :goto_18

    .line 992
    :cond_38
    move v4, v12

    .line 993
    :goto_18
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowToken;->isFixedRotationTransforming()Z

    .line 994
    .line 995
    .line 996
    move-result v10

    .line 997
    if-eqz v10, :cond_39

    .line 998
    .line 999
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowToken;->getFixedRotationTransformDisplayInfo()Landroid/view/DisplayInfo;

    .line 1000
    .line 1001
    .line 1002
    move-result-object v10

    .line 1003
    :goto_19
    move-object/from16 v22, v10

    .line 1004
    .line 1005
    goto :goto_1a

    .line 1006
    :cond_39
    iget-object v10, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1007
    .line 1008
    iget-object v10, v10, Lcom/android/server/wm/DisplayContent;->mDisplayInfo:Landroid/view/DisplayInfo;

    .line 1009
    .line 1010
    goto :goto_19

    .line 1011
    :goto_1a
    iget-object v10, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 1012
    .line 1013
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 1014
    .line 1015
    iget-boolean v5, v5, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 1016
    .line 1017
    move-object/from16 v18, v10

    .line 1018
    .line 1019
    move-object/from16 v19, v15

    .line 1020
    .line 1021
    move-object/from16 v20, v14

    .line 1022
    .line 1023
    move-object/from16 v21, v13

    .line 1024
    .line 1025
    move/from16 v23, v5

    .line 1026
    .line 1027
    invoke-virtual/range {v18 .. v23}, Lcom/android/server/wm/TaskFragment;->calculateInsetFrames(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/DisplayInfo;Z)V

    .line 1028
    .line 1029
    .line 1030
    invoke-virtual {v14}, Landroid/graphics/Rect;->height()I

    .line 1031
    .line 1032
    .line 1033
    move-result v5

    .line 1034
    invoke-virtual {v14}, Landroid/graphics/Rect;->width()I

    .line 1035
    .line 1036
    .line 1037
    move-result v10

    .line 1038
    if-lt v5, v10, :cond_3a

    .line 1039
    .line 1040
    const/4 v5, 0x1

    .line 1041
    goto :goto_1b

    .line 1042
    :cond_3a
    move v5, v12

    .line 1043
    :goto_1b
    if-eq v4, v5, :cond_3c

    .line 1044
    .line 1045
    if-ne v5, v7, :cond_3b

    .line 1046
    .line 1047
    goto :goto_1c

    .line 1048
    :cond_3b
    const/4 v4, 0x0

    .line 1049
    goto :goto_1d

    .line 1050
    :cond_3c
    :goto_1c
    const/4 v4, 0x1

    .line 1051
    :goto_1d
    move v5, v4

    .line 1052
    :goto_1e
    if-eqz v11, :cond_3d

    .line 1053
    .line 1054
    if-eqz v5, :cond_3d

    .line 1055
    .line 1056
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 1057
    .line 1058
    iget-object v4, v4, Lcom/android/server/wm/WindowManagerService;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1059
    .line 1060
    iget-object v4, v4, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingAppCompatController:Lcom/android/server/wm/MultiTaskingAppCompatController;

    .line 1061
    .line 1062
    iget-object v4, v4, Lcom/android/server/wm/MultiTaskingAppCompatController;->mOrientationPolicy:Lcom/android/server/wm/MultiTaskingAppCompatOrientationPolicy;

    .line 1063
    .line 1064
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 1065
    .line 1066
    .line 1067
    move-result v7

    .line 1068
    invoke-virtual {v4, v7, v0}, Lcom/android/server/wm/MultiTaskingAppCompatOrientationPolicy;->shouldIgnoreOrientationRequest(ILcom/android/server/wm/WindowContainer;)Z

    .line 1069
    .line 1070
    .line 1071
    move-result v4

    .line 1072
    if-eqz v4, :cond_3d

    .line 1073
    .line 1074
    goto :goto_1f

    .line 1075
    :cond_3d
    if-eqz v5, :cond_3e

    .line 1076
    .line 1077
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 1078
    .line 1079
    .line 1080
    move-result v4

    .line 1081
    invoke-virtual {v0, v4}, Lcom/android/server/wm/ActivityRecord;->handlesOrientationChangeFromDescendant(I)Z

    .line 1082
    .line 1083
    .line 1084
    move-result v4

    .line 1085
    if-eqz v4, :cond_3e

    .line 1086
    .line 1087
    goto/16 :goto_2e

    .line 1088
    .line 1089
    :cond_3e
    :goto_1f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getOrganizedTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 1090
    .line 1091
    .line 1092
    move-result-object v4

    .line 1093
    if-eqz v4, :cond_3f

    .line 1094
    .line 1095
    invoke-virtual {v4}, Lcom/android/server/wm/TaskFragment;->fillsParent()Z

    .line 1096
    .line 1097
    .line 1098
    move-result v4

    .line 1099
    if-nez v4, :cond_3f

    .line 1100
    .line 1101
    goto/16 :goto_2e

    .line 1102
    .line 1103
    :cond_3f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 1104
    .line 1105
    .line 1106
    move-result-object v4

    .line 1107
    iget-object v4, v4, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1108
    .line 1109
    invoke-virtual {v4}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 1110
    .line 1111
    .line 1112
    move-result-object v4

    .line 1113
    invoke-virtual {v14}, Landroid/graphics/Rect;->width()I

    .line 1114
    .line 1115
    .line 1116
    move-result v7

    .line 1117
    invoke-virtual {v14}, Landroid/graphics/Rect;->height()I

    .line 1118
    .line 1119
    .line 1120
    move-result v10

    .line 1121
    if-le v7, v10, :cond_40

    .line 1122
    .line 1123
    move v7, v12

    .line 1124
    goto :goto_20

    .line 1125
    :cond_40
    const/4 v7, 0x1

    .line 1126
    :goto_20
    iget-object v10, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 1127
    .line 1128
    iget-boolean v10, v10, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 1129
    .line 1130
    if-eqz v10, :cond_41

    .line 1131
    .line 1132
    goto :goto_21

    .line 1133
    :cond_41
    iget v7, v3, Landroid/content/res/Configuration;->orientation:I

    .line 1134
    .line 1135
    :goto_21
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 1136
    .line 1137
    .line 1138
    move-result v10

    .line 1139
    if-eqz v10, :cond_42

    .line 1140
    .line 1141
    if-eq v10, v7, :cond_42

    .line 1142
    .line 1143
    const/4 v7, 0x1

    .line 1144
    goto :goto_22

    .line 1145
    :cond_42
    const/4 v7, 0x0

    .line 1146
    :goto_22
    iput-boolean v7, v0, Lcom/android/server/wm/ActivityRecord;->mIsEligibleForFixedOrientationLetterbox:Z

    .line 1147
    .line 1148
    if-nez v7, :cond_43

    .line 1149
    .line 1150
    if-eqz v10, :cond_5b

    .line 1151
    .line 1152
    if-eqz v5, :cond_43

    .line 1153
    .line 1154
    goto/16 :goto_2e

    .line 1155
    .line 1156
    :cond_43
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1157
    .line 1158
    .line 1159
    move-result-object v7

    .line 1160
    iget-object v11, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1161
    .line 1162
    iget-object v11, v11, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 1163
    .line 1164
    invoke-virtual {v11}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasAppCompatDisplayInsetsWithoutInheritance()Z

    .line 1165
    .line 1166
    .line 1167
    move-result v18

    .line 1168
    if-eqz v18, :cond_44

    .line 1169
    .line 1170
    iget-boolean v12, v7, Lcom/android/server/wm/AppCompatDisplayInsets;->mIsInFixedOrientationOrAspectRatioLetterbox:Z

    .line 1171
    .line 1172
    if-nez v12, :cond_44

    .line 1173
    .line 1174
    goto/16 :goto_2e

    .line 1175
    .line 1176
    :cond_44
    sget-boolean v12, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ROTATION_COMPAT_MODE:Z

    .line 1177
    .line 1178
    if-eqz v12, :cond_47

    .line 1179
    .line 1180
    if-nez v7, :cond_47

    .line 1181
    .line 1182
    iget-object v12, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1183
    .line 1184
    iget-object v12, v12, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingAppCompatController:Lcom/android/server/wm/MultiTaskingAppCompatController;

    .line 1185
    .line 1186
    iget-object v12, v12, Lcom/android/server/wm/MultiTaskingAppCompatController;->mOrientationPolicy:Lcom/android/server/wm/MultiTaskingAppCompatOrientationPolicy;

    .line 1187
    .line 1188
    invoke-virtual {v12, v0}, Lcom/android/server/wm/MultiTaskingAppCompatOrientationPolicy;->shouldCreateAppCompatDisplayInsetsForRotationCompat(Lcom/android/server/wm/ActivityRecord;)Z

    .line 1189
    .line 1190
    .line 1191
    move-result v12

    .line 1192
    if-eqz v12, :cond_47

    .line 1193
    .line 1194
    iget-object v12, v11, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 1195
    .line 1196
    iget-object v12, v12, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1197
    .line 1198
    iget-object v12, v12, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 1199
    .line 1200
    iget-object v2, v12, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 1201
    .line 1202
    invoke-virtual {v2}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->isRunning()Z

    .line 1203
    .line 1204
    .line 1205
    move-result v2

    .line 1206
    if-eqz v2, :cond_45

    .line 1207
    .line 1208
    iget-object v2, v12, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 1209
    .line 1210
    iget-object v2, v2, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->mInheritedAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1211
    .line 1212
    goto :goto_23

    .line 1213
    :cond_45
    iget-object v2, v11, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1214
    .line 1215
    :goto_23
    if-eqz v2, :cond_46

    .line 1216
    .line 1217
    goto :goto_24

    .line 1218
    :cond_46
    invoke-virtual {v11}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->updateAppCompatDisplayInsets()V

    .line 1219
    .line 1220
    .line 1221
    iget-object v2, v11, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1222
    .line 1223
    iput-object v2, v11, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mPreCreatedAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1224
    .line 1225
    const/4 v2, 0x0

    .line 1226
    iput-object v2, v11, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mAppCompatDisplayInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1227
    .line 1228
    :goto_24
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1229
    .line 1230
    .line 1231
    move-result-object v2

    .line 1232
    if-eqz v2, :cond_47

    .line 1233
    .line 1234
    goto/16 :goto_2e

    .line 1235
    .line 1236
    :cond_47
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 1237
    .line 1238
    iget-boolean v2, v2, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 1239
    .line 1240
    if-eqz v2, :cond_48

    .line 1241
    .line 1242
    goto :goto_25

    .line 1243
    :cond_48
    iget-object v2, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1244
    .line 1245
    invoke-virtual {v2}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 1246
    .line 1247
    .line 1248
    move-result-object v15

    .line 1249
    :goto_25
    if-eqz v5, :cond_49

    .line 1250
    .line 1251
    move-object v14, v15

    .line 1252
    :cond_49
    new-instance v2, Landroid/graphics/Rect;

    .line 1253
    .line 1254
    invoke-direct {v2}, Landroid/graphics/Rect;-><init>()V

    .line 1255
    .line 1256
    .line 1257
    new-instance v5, Landroid/graphics/Rect;

    .line 1258
    .line 1259
    invoke-direct {v5}, Landroid/graphics/Rect;-><init>()V

    .line 1260
    .line 1261
    .line 1262
    const/4 v12, 0x2

    .line 1263
    if-ne v10, v12, :cond_4a

    .line 1264
    .line 1265
    iget v10, v14, Landroid/graphics/Rect;->top:I

    .line 1266
    .line 1267
    invoke-virtual {v14}, Landroid/graphics/Rect;->width()I

    .line 1268
    .line 1269
    .line 1270
    move-result v12

    .line 1271
    add-int/2addr v12, v10

    .line 1272
    const/4 v10, 0x1

    .line 1273
    sub-int/2addr v12, v10

    .line 1274
    iget v10, v14, Landroid/graphics/Rect;->bottom:I

    .line 1275
    .line 1276
    invoke-static {v12, v10}, Ljava/lang/Math;->min(II)I

    .line 1277
    .line 1278
    .line 1279
    move-result v10

    .line 1280
    iget v12, v13, Landroid/graphics/Rect;->left:I

    .line 1281
    .line 1282
    iget v15, v14, Landroid/graphics/Rect;->top:I

    .line 1283
    .line 1284
    move-object/from16 v20, v9

    .line 1285
    .line 1286
    iget v9, v13, Landroid/graphics/Rect;->right:I

    .line 1287
    .line 1288
    invoke-virtual {v2, v12, v15, v9, v10}, Landroid/graphics/Rect;->set(IIII)V

    .line 1289
    .line 1290
    .line 1291
    iget v9, v14, Landroid/graphics/Rect;->left:I

    .line 1292
    .line 1293
    iget v12, v14, Landroid/graphics/Rect;->top:I

    .line 1294
    .line 1295
    iget v14, v14, Landroid/graphics/Rect;->right:I

    .line 1296
    .line 1297
    invoke-virtual {v5, v9, v12, v14, v10}, Landroid/graphics/Rect;->set(IIII)V

    .line 1298
    .line 1299
    .line 1300
    goto :goto_26

    .line 1301
    :cond_4a
    move-object/from16 v20, v9

    .line 1302
    .line 1303
    iget v9, v14, Landroid/graphics/Rect;->left:I

    .line 1304
    .line 1305
    invoke-virtual {v14}, Landroid/graphics/Rect;->height()I

    .line 1306
    .line 1307
    .line 1308
    move-result v10

    .line 1309
    add-int/2addr v10, v9

    .line 1310
    iget v9, v14, Landroid/graphics/Rect;->right:I

    .line 1311
    .line 1312
    invoke-static {v10, v9}, Ljava/lang/Math;->min(II)I

    .line 1313
    .line 1314
    .line 1315
    move-result v9

    .line 1316
    iget v10, v14, Landroid/graphics/Rect;->left:I

    .line 1317
    .line 1318
    iget v12, v13, Landroid/graphics/Rect;->top:I

    .line 1319
    .line 1320
    iget v15, v13, Landroid/graphics/Rect;->bottom:I

    .line 1321
    .line 1322
    invoke-virtual {v2, v10, v12, v9, v15}, Landroid/graphics/Rect;->set(IIII)V

    .line 1323
    .line 1324
    .line 1325
    iget v10, v14, Landroid/graphics/Rect;->left:I

    .line 1326
    .line 1327
    iget v12, v14, Landroid/graphics/Rect;->top:I

    .line 1328
    .line 1329
    iget v14, v14, Landroid/graphics/Rect;->bottom:I

    .line 1330
    .line 1331
    invoke-virtual {v5, v10, v12, v9, v14}, Landroid/graphics/Rect;->set(IIII)V

    .line 1332
    .line 1333
    .line 1334
    :goto_26
    new-instance v9, Landroid/graphics/Rect;

    .line 1335
    .line 1336
    invoke-direct {v9, v4}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 1337
    .line 1338
    .line 1339
    invoke-virtual {v4, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1340
    .line 1341
    .line 1342
    iget-object v10, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1343
    .line 1344
    iget-object v10, v10, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 1345
    .line 1346
    iget-object v12, v10, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 1347
    .line 1348
    iget-object v12, v12, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 1349
    .line 1350
    iget-object v14, v12, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mAppCompatDeviceStateQuery:Lcom/android/server/wm/AppCompatDeviceStateQuery;

    .line 1351
    .line 1352
    const/4 v15, 0x0

    .line 1353
    invoke-virtual {v14, v15}, Lcom/android/server/wm/AppCompatDeviceStateQuery;->isDisplayFullScreenAndInPosture(Z)Z

    .line 1354
    .line 1355
    .line 1356
    move-result v21

    .line 1357
    iget-object v15, v12, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mAppCompatReachabilityOverrides:Lcom/android/server/wm/AppCompatReachabilityOverrides;

    .line 1358
    .line 1359
    invoke-virtual {v15, v3}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->getHorizontalPositionMultiplier(Landroid/content/res/Configuration;)F

    .line 1360
    .line 1361
    .line 1362
    move-result v15

    .line 1363
    const/high16 v17, 0x3f000000    # 0.5f

    .line 1364
    .line 1365
    cmpl-float v15, v15, v17

    .line 1366
    .line 1367
    move/from16 v22, v8

    .line 1368
    .line 1369
    const/4 v8, 0x1

    .line 1370
    if-eqz v15, :cond_4b

    .line 1371
    .line 1372
    const/4 v15, 0x1

    .line 1373
    goto :goto_27

    .line 1374
    :cond_4b
    const/4 v15, 0x0

    .line 1375
    :goto_27
    invoke-virtual {v14, v8}, Lcom/android/server/wm/AppCompatDeviceStateQuery;->isDisplayFullScreenAndInPosture(Z)Z

    .line 1376
    .line 1377
    .line 1378
    move-result v14

    .line 1379
    iget-object v8, v12, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 1380
    .line 1381
    invoke-virtual {v8}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 1382
    .line 1383
    .line 1384
    move-result v23

    .line 1385
    invoke-static/range {v23 .. v23}, Landroid/content/pm/ActivityInfo;->isFixedOrientationLandscape(I)Z

    .line 1386
    .line 1387
    .line 1388
    move-result v23

    .line 1389
    move/from16 v24, v6

    .line 1390
    .line 1391
    iget-object v6, v8, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1392
    .line 1393
    move/from16 v25, v1

    .line 1394
    .line 1395
    iget-object v1, v6, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 1396
    .line 1397
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatCameraOverrides:Lcom/android/server/wm/AppCompatCameraOverrides;

    .line 1398
    .line 1399
    iget-object v6, v6, Lcom/android/server/wm/AppCompatController;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 1400
    .line 1401
    iget-object v6, v6, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1402
    .line 1403
    if-eqz v6, :cond_4c

    .line 1404
    .line 1405
    iget-object v6, v6, Lcom/android/server/wm/DisplayContent;->mAppCompatCameraPolicy:Lcom/android/server/wm/AppCompatCameraPolicy;

    .line 1406
    .line 1407
    goto :goto_28

    .line 1408
    :cond_4c
    const/4 v6, 0x0

    .line 1409
    :goto_28
    if-eqz v21, :cond_4d

    .line 1410
    .line 1411
    if-nez v15, :cond_50

    .line 1412
    .line 1413
    :cond_4d
    if-eqz v14, :cond_4e

    .line 1414
    .line 1415
    if-nez v23, :cond_50

    .line 1416
    .line 1417
    :cond_4e
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatCameraOverrides;->isCameraCompatSplitScreenAspectRatioAllowed()Z

    .line 1418
    .line 1419
    .line 1420
    move-result v1

    .line 1421
    if-eqz v1, :cond_51

    .line 1422
    .line 1423
    if-eqz v6, :cond_51

    .line 1424
    .line 1425
    iget-object v1, v6, Lcom/android/server/wm/AppCompatCameraPolicy;->mDisplayRotationCompatPolicy:Lcom/android/server/wm/DisplayRotationCompatPolicy;

    .line 1426
    .line 1427
    if-eqz v1, :cond_4f

    .line 1428
    .line 1429
    const/4 v6, 0x1

    .line 1430
    invoke-virtual {v1, v6, v8}, Lcom/android/server/wm/DisplayRotationCompatPolicy;->isTreatmentEnabledForActivity(ZLcom/android/server/wm/ActivityRecord;)Z

    .line 1431
    .line 1432
    .line 1433
    move-result v1

    .line 1434
    goto :goto_29

    .line 1435
    :cond_4f
    const/4 v1, 0x0

    .line 1436
    :goto_29
    if-eqz v1, :cond_51

    .line 1437
    .line 1438
    :cond_50
    invoke-virtual {v12}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->getSplitScreenAspectRatio()F

    .line 1439
    .line 1440
    .line 1441
    move-result v1

    .line 1442
    goto :goto_2b

    .line 1443
    :cond_51
    invoke-virtual {v8}, Lcom/android/server/wm/ActivityRecord;->shouldCreateAppCompatDisplayInsets()Z

    .line 1444
    .line 1445
    .line 1446
    move-result v1

    .line 1447
    if-eqz v1, :cond_52

    .line 1448
    .line 1449
    invoke-virtual {v12}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->getDefaultMinAspectRatioForUnresizableApps()F

    .line 1450
    .line 1451
    .line 1452
    move-result v1

    .line 1453
    goto :goto_2b

    .line 1454
    :cond_52
    iget-object v1, v12, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 1455
    .line 1456
    invoke-virtual {v1}, Lcom/android/server/wm/ActivityRecord;->getDisplayArea()Lcom/android/server/wm/TaskDisplayArea;

    .line 1457
    .line 1458
    .line 1459
    move-result-object v1

    .line 1460
    iget-object v6, v12, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 1461
    .line 1462
    if-eqz v1, :cond_54

    .line 1463
    .line 1464
    iget-boolean v1, v6, Lcom/android/server/wm/AppCompatConfiguration;->mIsDisplayAspectRatioEnabledForFixedOrientationLetterbox:Z

    .line 1465
    .line 1466
    if-nez v1, :cond_53

    .line 1467
    .line 1468
    goto :goto_2a

    .line 1469
    :cond_53
    invoke-virtual {v12}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->getDisplaySizeMinAspectRatio()F

    .line 1470
    .line 1471
    .line 1472
    move-result v1

    .line 1473
    goto :goto_2b

    .line 1474
    :cond_54
    :goto_2a
    iget v1, v6, Lcom/android/server/wm/AppCompatConfiguration;->mFixedOrientationLetterboxAspectRatio:F

    .line 1475
    .line 1476
    :goto_2b
    iget-object v6, v10, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 1477
    .line 1478
    iget-object v6, v6, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1479
    .line 1480
    if-nez v6, :cond_56

    .line 1481
    .line 1482
    :cond_55
    const/high16 v6, 0x3f800000    # 1.0f

    .line 1483
    .line 1484
    goto :goto_2c

    .line 1485
    :cond_56
    iget-object v8, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1486
    .line 1487
    invoke-virtual {v8}, Landroid/app/WindowConfiguration;->getWindowingMode()I

    .line 1488
    .line 1489
    .line 1490
    move-result v8

    .line 1491
    invoke-static {v8}, Landroid/app/WindowConfiguration;->inMultiWindowMode(I)Z

    .line 1492
    .line 1493
    .line 1494
    move-result v8

    .line 1495
    if-eqz v8, :cond_55

    .line 1496
    .line 1497
    invoke-virtual {v6}, Lcom/android/server/wm/DisplayArea;->getIgnoreOrientationRequest()Z

    .line 1498
    .line 1499
    .line 1500
    move-result v6

    .line 1501
    if-nez v6, :cond_55

    .line 1502
    .line 1503
    const v1, 0x3f8147ae    # 1.01f

    .line 1504
    .line 1505
    .line 1506
    goto :goto_2d

    .line 1507
    :goto_2c
    cmpl-float v8, v1, v6

    .line 1508
    .line 1509
    if-lez v8, :cond_57

    .line 1510
    .line 1511
    goto :goto_2d

    .line 1512
    :cond_57
    invoke-static {v13}, Lcom/android/server/wm/AppCompatUtils;->computeAspectRatio(Landroid/graphics/Rect;)F

    .line 1513
    .line 1514
    .line 1515
    move-result v1

    .line 1516
    :goto_2d
    invoke-virtual {v10, v4, v5, v2, v1}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->applyAspectRatio(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;F)Z

    .line 1517
    .line 1518
    .line 1519
    move-result v1

    .line 1520
    iget-object v2, v10, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 1521
    .line 1522
    iput-boolean v1, v2, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mIsAspectRatioApplied:Z

    .line 1523
    .line 1524
    invoke-virtual {v11}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasAppCompatDisplayInsetsWithoutInheritance()Z

    .line 1525
    .line 1526
    .line 1527
    move-result v1

    .line 1528
    if-eqz v1, :cond_59

    .line 1529
    .line 1530
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 1531
    .line 1532
    iget-object v2, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1533
    .line 1534
    invoke-virtual {v2}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 1535
    .line 1536
    .line 1537
    move-result v2

    .line 1538
    invoke-virtual {v7, v2, v1}, Lcom/android/server/wm/AppCompatDisplayInsets;->getBoundsByRotation(ILandroid/graphics/Rect;)V

    .line 1539
    .line 1540
    .line 1541
    invoke-virtual {v4}, Landroid/graphics/Rect;->width()I

    .line 1542
    .line 1543
    .line 1544
    move-result v1

    .line 1545
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 1546
    .line 1547
    invoke-virtual {v2}, Landroid/graphics/Rect;->width()I

    .line 1548
    .line 1549
    .line 1550
    move-result v2

    .line 1551
    if-ne v1, v2, :cond_58

    .line 1552
    .line 1553
    invoke-virtual {v4}, Landroid/graphics/Rect;->height()I

    .line 1554
    .line 1555
    .line 1556
    move-result v1

    .line 1557
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 1558
    .line 1559
    invoke-virtual {v2}, Landroid/graphics/Rect;->height()I

    .line 1560
    .line 1561
    .line 1562
    move-result v2

    .line 1563
    if-eq v1, v2, :cond_59

    .line 1564
    .line 1565
    :cond_58
    invoke-virtual {v4, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1566
    .line 1567
    .line 1568
    goto :goto_2f

    .line 1569
    :cond_59
    invoke-virtual {v4, v13}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    .line 1570
    .line 1571
    .line 1572
    move-result v1

    .line 1573
    if-eqz v1, :cond_5a

    .line 1574
    .line 1575
    invoke-virtual {v4, v9}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1576
    .line 1577
    .line 1578
    goto :goto_2f

    .line 1579
    :cond_5a
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 1580
    .line 1581
    iput-object v7, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpCompatInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1582
    .line 1583
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 1584
    .line 1585
    .line 1586
    move-result-object v1

    .line 1587
    invoke-virtual {v0, v1, v3}, Lcom/android/server/wm/ActivityRecord;->computeConfigByResolveHint(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 1588
    .line 1589
    .line 1590
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1591
    .line 1592
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 1593
    .line 1594
    new-instance v2, Landroid/graphics/Rect;

    .line 1595
    .line 1596
    invoke-direct {v2, v4}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 1597
    .line 1598
    .line 1599
    iget-object v1, v1, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 1600
    .line 1601
    iput-object v2, v1, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mLetterboxBoundsForFixedOrientationAndAspectRatio:Landroid/graphics/Rect;

    .line 1602
    .line 1603
    goto :goto_2f

    .line 1604
    :cond_5b
    :goto_2e
    move/from16 v25, v1

    .line 1605
    .line 1606
    move/from16 v24, v6

    .line 1607
    .line 1608
    move/from16 v22, v8

    .line 1609
    .line 1610
    move-object/from16 v20, v9

    .line 1611
    .line 1612
    :goto_2f
    invoke-static {}, Lcom/android/window/flags/Flags;->immersiveAppRepositioning()Z

    .line 1613
    .line 1614
    .line 1615
    move-result v1

    .line 1616
    if-eqz v1, :cond_5e

    .line 1617
    .line 1618
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1619
    .line 1620
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 1621
    .line 1622
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isLetterboxedForFixedOrientationAndAspectRatio()Z

    .line 1623
    .line 1624
    .line 1625
    move-result v1

    .line 1626
    if-nez v1, :cond_5e

    .line 1627
    .line 1628
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1629
    .line 1630
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 1631
    .line 1632
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 1633
    .line 1634
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->shouldApplyUserFullscreenOverride()Z

    .line 1635
    .line 1636
    .line 1637
    move-result v2

    .line 1638
    if-nez v2, :cond_5d

    .line 1639
    .line 1640
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->isSystemOverrideToFullscreenEnabled()Z

    .line 1641
    .line 1642
    .line 1643
    move-result v1

    .line 1644
    if-eqz v1, :cond_5c

    .line 1645
    .line 1646
    goto :goto_30

    .line 1647
    :cond_5c
    const/4 v1, 0x0

    .line 1648
    goto :goto_31

    .line 1649
    :cond_5d
    :goto_30
    const/4 v1, 0x1

    .line 1650
    :goto_31
    if-nez v1, :cond_5e

    .line 1651
    .line 1652
    invoke-virtual {v0, v3}, Lcom/android/server/wm/ActivityRecord;->resolveAspectRatioRestriction(Landroid/content/res/Configuration;)V

    .line 1653
    .line 1654
    .line 1655
    :cond_5e
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 1656
    .line 1657
    .line 1658
    move-result-object v1

    .line 1659
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1660
    .line 1661
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 1662
    .line 1663
    if-eqz v25, :cond_5f

    .line 1664
    .line 1665
    iget v4, v0, Lcom/android/server/wm/ActivityRecord;->mResolvedConfigChangeFlags:I

    .line 1666
    .line 1667
    if-eqz v4, :cond_5f

    .line 1668
    .line 1669
    move-object v1, v3

    .line 1670
    move-object/from16 v3, v20

    .line 1671
    .line 1672
    const/4 v12, 0x2

    .line 1673
    goto/16 :goto_54

    .line 1674
    .line 1675
    :cond_5f
    if-eqz v1, :cond_92

    .line 1676
    .line 1677
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 1678
    .line 1679
    iget-object v5, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 1680
    .line 1681
    iget-object v6, v5, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1682
    .line 1683
    iget-object v6, v6, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingAppCompatController:Lcom/android/server/wm/MultiTaskingAppCompatController;

    .line 1684
    .line 1685
    iget-object v6, v6, Lcom/android/server/wm/MultiTaskingAppCompatController;->mSizeCompatModePolicy:Lcom/android/server/wm/MultiTaskingAppCompatSizeCompatModePolicy;

    .line 1686
    .line 1687
    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1688
    .line 1689
    .line 1690
    sget-boolean v6, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ROTATION_COMPAT_MODE:Z

    .line 1691
    .line 1692
    if-eqz v6, :cond_60

    .line 1693
    .line 1694
    iget-boolean v6, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mIsRotationCompatMode:Z

    .line 1695
    .line 1696
    if-eqz v6, :cond_60

    .line 1697
    .line 1698
    const/4 v6, 0x1

    .line 1699
    goto :goto_32

    .line 1700
    :cond_60
    const/4 v6, 0x0

    .line 1701
    :goto_32
    invoke-virtual {v5}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 1702
    .line 1703
    .line 1704
    move-result-object v7

    .line 1705
    iget-object v8, v7, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1706
    .line 1707
    invoke-virtual {v8}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 1708
    .line 1709
    .line 1710
    move-result-object v8

    .line 1711
    iget-object v9, v5, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 1712
    .line 1713
    iget-object v9, v9, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 1714
    .line 1715
    invoke-static {}, Lcom/android/window/flags/Flags;->immersiveAppRepositioning()Z

    .line 1716
    .line 1717
    .line 1718
    move-result v10

    .line 1719
    if-eqz v10, :cond_61

    .line 1720
    .line 1721
    iget-object v9, v9, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 1722
    .line 1723
    iget-boolean v9, v9, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mIsAspectRatioApplied:Z

    .line 1724
    .line 1725
    goto :goto_33

    .line 1726
    :cond_61
    invoke-virtual {v9}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isLetterboxedForFixedOrientationAndAspectRatio()Z

    .line 1727
    .line 1728
    .line 1729
    move-result v9

    .line 1730
    :goto_33
    if-eqz v9, :cond_62

    .line 1731
    .line 1732
    if-nez v6, :cond_62

    .line 1733
    .line 1734
    new-instance v10, Landroid/graphics/Rect;

    .line 1735
    .line 1736
    invoke-direct {v10, v8}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 1737
    .line 1738
    .line 1739
    goto :goto_34

    .line 1740
    :cond_62
    iget-object v10, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1741
    .line 1742
    invoke-virtual {v10}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 1743
    .line 1744
    .line 1745
    move-result-object v10

    .line 1746
    :goto_34
    if-eqz v9, :cond_63

    .line 1747
    .line 1748
    if-nez v6, :cond_63

    .line 1749
    .line 1750
    new-instance v9, Landroid/graphics/Rect;

    .line 1751
    .line 1752
    iget-object v11, v7, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1753
    .line 1754
    invoke-virtual {v11}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 1755
    .line 1756
    .line 1757
    move-result-object v11

    .line 1758
    invoke-direct {v9, v11}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 1759
    .line 1760
    .line 1761
    goto :goto_35

    .line 1762
    :cond_63
    iget-object v9, v5, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 1763
    .line 1764
    iget-object v9, v9, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mParentAppBoundsOverride:Landroid/graphics/Rect;

    .line 1765
    .line 1766
    :goto_35
    invoke-virtual {v5}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 1767
    .line 1768
    .line 1769
    move-result v11

    .line 1770
    if-eqz v11, :cond_64

    .line 1771
    .line 1772
    const/4 v12, 0x1

    .line 1773
    goto :goto_36

    .line 1774
    :cond_64
    const/4 v12, 0x0

    .line 1775
    :goto_36
    iget-object v13, v5, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 1776
    .line 1777
    iget-boolean v14, v13, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 1778
    .line 1779
    if-eqz v14, :cond_65

    .line 1780
    .line 1781
    iget v13, v13, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpOverrideConfigOrientation:I

    .line 1782
    .line 1783
    goto :goto_37

    .line 1784
    :cond_65
    iget v13, v3, Landroid/content/res/Configuration;->orientation:I

    .line 1785
    .line 1786
    :goto_37
    if-eqz v12, :cond_66

    .line 1787
    .line 1788
    goto :goto_38

    .line 1789
    :cond_66
    iget v11, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mOriginalRequestedOrientation:I

    .line 1790
    .line 1791
    if-eqz v11, :cond_67

    .line 1792
    .line 1793
    if-nez v6, :cond_67

    .line 1794
    .line 1795
    goto :goto_38

    .line 1796
    :cond_67
    move v11, v13

    .line 1797
    :goto_38
    iget-object v14, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1798
    .line 1799
    invoke-virtual {v14}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 1800
    .line 1801
    .line 1802
    move-result v14

    .line 1803
    iget-object v15, v5, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1804
    .line 1805
    if-eqz v15, :cond_69

    .line 1806
    .line 1807
    iget-object v15, v15, Lcom/android/server/wm/DisplayContent;->mDisplayRotation:Lcom/android/server/wm/DisplayRotation;

    .line 1808
    .line 1809
    invoke-virtual {v15}, Lcom/android/server/wm/DisplayRotation;->isFixedToUserRotation()Z

    .line 1810
    .line 1811
    .line 1812
    move-result v15

    .line 1813
    if-eqz v15, :cond_68

    .line 1814
    .line 1815
    goto :goto_39

    .line 1816
    :cond_68
    const/4 v15, 0x0

    .line 1817
    goto :goto_3a

    .line 1818
    :cond_69
    :goto_39
    const/4 v15, 0x1

    .line 1819
    :goto_3a
    if-nez v15, :cond_6a

    .line 1820
    .line 1821
    iget-boolean v0, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mIsFloating:Z

    .line 1822
    .line 1823
    if-nez v0, :cond_6a

    .line 1824
    .line 1825
    iget-object v0, v7, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1826
    .line 1827
    invoke-virtual {v0, v14}, Landroid/app/WindowConfiguration;->setRotation(I)V

    .line 1828
    .line 1829
    .line 1830
    move/from16 p1, v14

    .line 1831
    .line 1832
    goto :goto_3b

    .line 1833
    :cond_6a
    iget-object v0, v7, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1834
    .line 1835
    invoke-virtual {v0}, Landroid/app/WindowConfiguration;->getRotation()I

    .line 1836
    .line 1837
    .line 1838
    move-result v0

    .line 1839
    move/from16 p1, v14

    .line 1840
    .line 1841
    const/4 v14, -0x1

    .line 1842
    if-eq v0, v14, :cond_6b

    .line 1843
    .line 1844
    move v14, v0

    .line 1845
    goto :goto_3c

    .line 1846
    :cond_6b
    :goto_3b
    move/from16 v14, p1

    .line 1847
    .line 1848
    :goto_3c
    if-eqz v6, :cond_6c

    .line 1849
    .line 1850
    if-eqz v12, :cond_6c

    .line 1851
    .line 1852
    iget-object v0, v5, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1853
    .line 1854
    if-eqz v0, :cond_6c

    .line 1855
    .line 1856
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDisplayRotation:Lcom/android/server/wm/DisplayRotation;

    .line 1857
    .line 1858
    move-object/from16 v21, v10

    .line 1859
    .line 1860
    const/4 v10, 0x0

    .line 1861
    invoke-virtual {v0, v11, v14, v10}, Lcom/android/server/wm/DisplayRotation;->rotationForOrientation(IIZ)I

    .line 1862
    .line 1863
    .line 1864
    move-result v0

    .line 1865
    if-eq v14, v0, :cond_6d

    .line 1866
    .line 1867
    iget-object v10, v7, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 1868
    .line 1869
    invoke-virtual {v10, v0}, Landroid/app/WindowConfiguration;->setRotation(I)V

    .line 1870
    .line 1871
    .line 1872
    move v14, v0

    .line 1873
    goto :goto_3d

    .line 1874
    :cond_6c
    move-object/from16 v21, v10

    .line 1875
    .line 1876
    :cond_6d
    :goto_3d
    new-instance v0, Landroid/graphics/Rect;

    .line 1877
    .line 1878
    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 1879
    .line 1880
    .line 1881
    iget v10, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mWidth:I

    .line 1882
    .line 1883
    move-object/from16 p1, v9

    .line 1884
    .line 1885
    iget v9, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mHeight:I

    .line 1886
    .line 1887
    invoke-static {v10, v9}, Ljava/lang/Math;->max(II)I

    .line 1888
    .line 1889
    .line 1890
    move-result v23

    .line 1891
    invoke-static {v10, v9}, Ljava/lang/Math;->min(II)I

    .line 1892
    .line 1893
    .line 1894
    move-result v9

    .line 1895
    move/from16 v24, v9

    .line 1896
    .line 1897
    const/4 v9, 0x2

    .line 1898
    if-ne v11, v9, :cond_6e

    .line 1899
    .line 1900
    const/4 v9, 0x1

    .line 1901
    goto :goto_3e

    .line 1902
    :cond_6e
    const/4 v9, 0x0

    .line 1903
    :goto_3e
    move/from16 v25, v6

    .line 1904
    .line 1905
    if-eqz v9, :cond_6f

    .line 1906
    .line 1907
    move/from16 v6, v23

    .line 1908
    .line 1909
    goto :goto_3f

    .line 1910
    :cond_6f
    move/from16 v6, v24

    .line 1911
    .line 1912
    :goto_3f
    if-eqz v9, :cond_70

    .line 1913
    .line 1914
    move-object/from16 v23, v2

    .line 1915
    .line 1916
    move/from16 v9, v24

    .line 1917
    .line 1918
    :goto_40
    const/4 v2, 0x0

    .line 1919
    goto :goto_41

    .line 1920
    :cond_70
    move/from16 v9, v23

    .line 1921
    .line 1922
    move-object/from16 v23, v2

    .line 1923
    .line 1924
    goto :goto_40

    .line 1925
    :goto_41
    invoke-virtual {v4, v2, v2, v6, v9}, Landroid/graphics/Rect;->set(IIII)V

    .line 1926
    .line 1927
    .line 1928
    iget-boolean v2, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mIsFloating:Z

    .line 1929
    .line 1930
    if-eqz v2, :cond_71

    .line 1931
    .line 1932
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1933
    .line 1934
    .line 1935
    move-object/from16 v26, v3

    .line 1936
    .line 1937
    move/from16 v24, v13

    .line 1938
    .line 1939
    const/4 v12, 0x2

    .line 1940
    goto/16 :goto_47

    .line 1941
    .line 1942
    :cond_71
    invoke-virtual {v1, v14, v0}, Lcom/android/server/wm/AppCompatDisplayInsets;->getBoundsByRotation(ILandroid/graphics/Rect;)V

    .line 1943
    .line 1944
    .line 1945
    invoke-virtual {v0}, Landroid/graphics/Rect;->width()I

    .line 1946
    .line 1947
    .line 1948
    move-result v6

    .line 1949
    invoke-virtual {v0}, Landroid/graphics/Rect;->height()I

    .line 1950
    .line 1951
    .line 1952
    move-result v9

    .line 1953
    move/from16 v24, v13

    .line 1954
    .line 1955
    invoke-virtual {v4}, Landroid/graphics/Rect;->width()I

    .line 1956
    .line 1957
    .line 1958
    move-result v13

    .line 1959
    move-object/from16 v26, v3

    .line 1960
    .line 1961
    invoke-virtual {v4}, Landroid/graphics/Rect;->height()I

    .line 1962
    .line 1963
    .line 1964
    move-result v3

    .line 1965
    if-le v13, v3, :cond_72

    .line 1966
    .line 1967
    const/4 v3, 0x1

    .line 1968
    goto :goto_42

    .line 1969
    :cond_72
    const/4 v3, 0x0

    .line 1970
    :goto_42
    if-le v6, v9, :cond_73

    .line 1971
    .line 1972
    const/4 v13, 0x1

    .line 1973
    goto :goto_43

    .line 1974
    :cond_73
    const/4 v13, 0x0

    .line 1975
    :goto_43
    if-eq v3, v13, :cond_74

    .line 1976
    .line 1977
    const/4 v3, 0x1

    .line 1978
    goto :goto_44

    .line 1979
    :cond_74
    const/4 v3, 0x0

    .line 1980
    :goto_44
    if-eqz v3, :cond_76

    .line 1981
    .line 1982
    if-eqz v15, :cond_76

    .line 1983
    .line 1984
    if-eqz v12, :cond_76

    .line 1985
    .line 1986
    const/4 v12, 0x2

    .line 1987
    if-ne v11, v12, :cond_75

    .line 1988
    .line 1989
    int-to-float v11, v6

    .line 1990
    mul-float/2addr v11, v11

    .line 1991
    int-to-float v9, v9

    .line 1992
    div-float/2addr v11, v9

    .line 1993
    float-to-int v9, v11

    .line 1994
    iput v9, v4, Landroid/graphics/Rect;->bottom:I

    .line 1995
    .line 1996
    iput v6, v4, Landroid/graphics/Rect;->right:I

    .line 1997
    .line 1998
    goto :goto_45

    .line 1999
    :cond_75
    iput v9, v4, Landroid/graphics/Rect;->bottom:I

    .line 2000
    .line 2001
    int-to-float v9, v9

    .line 2002
    mul-float/2addr v9, v9

    .line 2003
    int-to-float v6, v6

    .line 2004
    div-float/2addr v9, v6

    .line 2005
    float-to-int v6, v9

    .line 2006
    iput v6, v4, Landroid/graphics/Rect;->right:I

    .line 2007
    .line 2008
    :goto_45
    invoke-virtual {v4}, Landroid/graphics/Rect;->width()I

    .line 2009
    .line 2010
    .line 2011
    move-result v6

    .line 2012
    sub-int/2addr v10, v6

    .line 2013
    const/4 v6, 0x1

    .line 2014
    add-int/2addr v10, v6

    .line 2015
    int-to-float v6, v10

    .line 2016
    const/high16 v9, 0x3f000000    # 0.5f

    .line 2017
    .line 2018
    mul-float/2addr v6, v9

    .line 2019
    float-to-int v6, v6

    .line 2020
    const/4 v9, 0x0

    .line 2021
    invoke-virtual {v4, v6, v9}, Landroid/graphics/Rect;->offset(II)V

    .line 2022
    .line 2023
    .line 2024
    goto :goto_46

    .line 2025
    :cond_76
    const/4 v12, 0x2

    .line 2026
    :goto_46
    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2027
    .line 2028
    .line 2029
    if-eqz v3, :cond_77

    .line 2030
    .line 2031
    iget-object v3, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mNonDecorInsets:[Landroid/graphics/Rect;

    .line 2032
    .line 2033
    aget-object v3, v3, v14

    .line 2034
    .line 2035
    iget v6, v3, Landroid/graphics/Rect;->left:I

    .line 2036
    .line 2037
    iget v9, v3, Landroid/graphics/Rect;->top:I

    .line 2038
    .line 2039
    invoke-virtual {v4, v6, v9}, Landroid/graphics/Rect;->offset(II)V

    .line 2040
    .line 2041
    .line 2042
    iget v6, v3, Landroid/graphics/Rect;->left:I

    .line 2043
    .line 2044
    iget v3, v3, Landroid/graphics/Rect;->top:I

    .line 2045
    .line 2046
    invoke-virtual {v0, v6, v3}, Landroid/graphics/Rect;->offset(II)V

    .line 2047
    .line 2048
    .line 2049
    goto :goto_47

    .line 2050
    :cond_77
    const/4 v3, -0x1

    .line 2051
    if-eq v14, v3, :cond_78

    .line 2052
    .line 2053
    iget-object v3, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mNonDecorInsets:[Landroid/graphics/Rect;

    .line 2054
    .line 2055
    aget-object v3, v3, v14

    .line 2056
    .line 2057
    invoke-static {v0, v4, v3}, Lcom/android/server/wm/TaskFragment;->intersectWithInsetsIfFits(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 2058
    .line 2059
    .line 2060
    :cond_78
    :goto_47
    invoke-virtual {v8, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2061
    .line 2062
    .line 2063
    if-nez v2, :cond_79

    .line 2064
    .line 2065
    iget-object v2, v5, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2066
    .line 2067
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 2068
    .line 2069
    const/4 v3, 0x0

    .line 2070
    invoke-virtual {v2, v8, v0, v4, v3}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->applyAspectRatio(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;F)Z

    .line 2071
    .line 2072
    .line 2073
    move-result v0

    .line 2074
    iget-object v2, v2, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 2075
    .line 2076
    iput-boolean v0, v2, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mIsAspectRatioApplied:Z

    .line 2077
    .line 2078
    :cond_79
    iget-object v0, v5, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 2079
    .line 2080
    iput-object v1, v0, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpCompatInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 2081
    .line 2082
    move-object/from16 v1, v26

    .line 2083
    .line 2084
    invoke-virtual {v5, v7, v1}, Lcom/android/server/wm/ActivityRecord;->computeConfigByResolveHint(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 2085
    .line 2086
    .line 2087
    invoke-virtual {v5}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 2088
    .line 2089
    .line 2090
    move-result-object v0

    .line 2091
    iget v0, v0, Landroid/content/res/Configuration;->screenLayout:I

    .line 2092
    .line 2093
    iget v2, v7, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 2094
    .line 2095
    iget v3, v7, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 2096
    .line 2097
    invoke-static {v0, v2, v3}, Lcom/android/server/wm/WindowContainer;->computeScreenLayout(III)I

    .line 2098
    .line 2099
    .line 2100
    move-result v0

    .line 2101
    iput v0, v7, Landroid/content/res/Configuration;->screenLayout:I

    .line 2102
    .line 2103
    iget v0, v7, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 2104
    .line 2105
    iget v2, v7, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 2106
    .line 2107
    if-ne v0, v2, :cond_7a

    .line 2108
    .line 2109
    move/from16 v13, v24

    .line 2110
    .line 2111
    iput v13, v7, Landroid/content/res/Configuration;->orientation:I

    .line 2112
    .line 2113
    :cond_7a
    iget-object v0, v7, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2114
    .line 2115
    invoke-virtual {v0}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 2116
    .line 2117
    .line 2118
    move-result-object v0

    .line 2119
    move-object/from16 v2, v23

    .line 2120
    .line 2121
    iget v3, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 2122
    .line 2123
    const/4 v6, 0x0

    .line 2124
    iput v6, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mViewportStableTop:I

    .line 2125
    .line 2126
    if-eqz v25, :cond_7b

    .line 2127
    .line 2128
    invoke-virtual {v0}, Landroid/graphics/Rect;->width()I

    .line 2129
    .line 2130
    .line 2131
    move-result v6

    .line 2132
    invoke-virtual/range {p1 .. p1}, Landroid/graphics/Rect;->width()I

    .line 2133
    .line 2134
    .line 2135
    move-result v9

    .line 2136
    if-ne v6, v9, :cond_7c

    .line 2137
    .line 2138
    invoke-virtual {v0}, Landroid/graphics/Rect;->height()I

    .line 2139
    .line 2140
    .line 2141
    move-result v6

    .line 2142
    invoke-virtual/range {p1 .. p1}, Landroid/graphics/Rect;->height()I

    .line 2143
    .line 2144
    .line 2145
    move-result v9

    .line 2146
    if-eq v6, v9, :cond_7b

    .line 2147
    .line 2148
    goto :goto_48

    .line 2149
    :cond_7b
    move-object/from16 v11, p1

    .line 2150
    .line 2151
    goto :goto_49

    .line 2152
    :cond_7c
    :goto_48
    iget-object v6, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mTmpRect:Landroid/graphics/Rect;

    .line 2153
    .line 2154
    if-nez v6, :cond_7d

    .line 2155
    .line 2156
    new-instance v6, Landroid/graphics/Rect;

    .line 2157
    .line 2158
    invoke-direct {v6}, Landroid/graphics/Rect;-><init>()V

    .line 2159
    .line 2160
    .line 2161
    iput-object v6, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mTmpRect:Landroid/graphics/Rect;

    .line 2162
    .line 2163
    :cond_7d
    iget-object v6, v5, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 2164
    .line 2165
    invoke-virtual {v5}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 2166
    .line 2167
    .line 2168
    move-result v9

    .line 2169
    iget-object v10, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mTmpRect:Landroid/graphics/Rect;

    .line 2170
    .line 2171
    invoke-virtual {v6, v9, v10}, Lcom/android/server/wm/WindowManagerService;->getOverrideStableInsetsLocked(ILandroid/graphics/Rect;)V

    .line 2172
    .line 2173
    .line 2174
    iget-object v6, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mTmpRect:Landroid/graphics/Rect;

    .line 2175
    .line 2176
    iget v9, v6, Landroid/graphics/Rect;->top:I

    .line 2177
    .line 2178
    iget v10, v6, Landroid/graphics/Rect;->bottom:I

    .line 2179
    .line 2180
    move-object/from16 v11, p1

    .line 2181
    .line 2182
    invoke-virtual {v6, v11}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2183
    .line 2184
    .line 2185
    const/4 v13, 0x1

    .line 2186
    if-lez v9, :cond_7e

    .line 2187
    .line 2188
    add-int/2addr v9, v13

    .line 2189
    iput v9, v6, Landroid/graphics/Rect;->top:I

    .line 2190
    .line 2191
    iput v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mViewportStableTop:I

    .line 2192
    .line 2193
    :cond_7e
    if-lez v10, :cond_7f

    .line 2194
    .line 2195
    iget v9, v6, Landroid/graphics/Rect;->bottom:I

    .line 2196
    .line 2197
    sub-int/2addr v9, v13

    .line 2198
    iput v9, v6, Landroid/graphics/Rect;->bottom:I

    .line 2199
    .line 2200
    :cond_7f
    invoke-virtual {v2, v8, v6}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->updateSizeCompatScale(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 2201
    .line 2202
    .line 2203
    goto :goto_4a

    .line 2204
    :goto_49
    invoke-virtual {v2, v0, v11}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->updateSizeCompatScale(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 2205
    .line 2206
    .line 2207
    :goto_4a
    iget v6, v11, Landroid/graphics/Rect;->top:I

    .line 2208
    .line 2209
    move-object/from16 v10, v21

    .line 2210
    .line 2211
    iget v9, v10, Landroid/graphics/Rect;->top:I

    .line 2212
    .line 2213
    sub-int/2addr v6, v9

    .line 2214
    iget v9, v0, Landroid/graphics/Rect;->top:I

    .line 2215
    .line 2216
    iget v13, v8, Landroid/graphics/Rect;->top:I

    .line 2217
    .line 2218
    sub-int/2addr v9, v13

    .line 2219
    if-eq v6, v9, :cond_80

    .line 2220
    .line 2221
    const/4 v9, 0x1

    .line 2222
    goto :goto_4b

    .line 2223
    :cond_80
    const/4 v9, 0x0

    .line 2224
    :goto_4b
    iget v13, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 2225
    .line 2226
    const/high16 v14, 0x3f800000    # 1.0f

    .line 2227
    .line 2228
    cmpl-float v13, v13, v14

    .line 2229
    .line 2230
    if-nez v13, :cond_82

    .line 2231
    .line 2232
    if-eqz v9, :cond_81

    .line 2233
    .line 2234
    goto :goto_4c

    .line 2235
    :cond_81
    const/4 v9, 0x0

    .line 2236
    iput-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2237
    .line 2238
    goto :goto_4e

    .line 2239
    :cond_82
    :goto_4c
    iget-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2240
    .line 2241
    if-nez v9, :cond_83

    .line 2242
    .line 2243
    new-instance v9, Landroid/graphics/Rect;

    .line 2244
    .line 2245
    invoke-direct {v9}, Landroid/graphics/Rect;-><init>()V

    .line 2246
    .line 2247
    .line 2248
    iput-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2249
    .line 2250
    :cond_83
    if-eqz v25, :cond_84

    .line 2251
    .line 2252
    iget-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2253
    .line 2254
    invoke-virtual {v9, v8}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2255
    .line 2256
    .line 2257
    goto :goto_4d

    .line 2258
    :cond_84
    iget-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2259
    .line 2260
    invoke-virtual {v9, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2261
    .line 2262
    .line 2263
    :goto_4d
    iget-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2264
    .line 2265
    const/4 v13, 0x0

    .line 2266
    invoke-virtual {v9, v13, v13}, Landroid/graphics/Rect;->offsetTo(II)V

    .line 2267
    .line 2268
    .line 2269
    iget-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2270
    .line 2271
    iget v13, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 2272
    .line 2273
    invoke-virtual {v9, v13}, Landroid/graphics/Rect;->scale(F)V

    .line 2274
    .line 2275
    .line 2276
    iget-object v9, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2277
    .line 2278
    iget v13, v9, Landroid/graphics/Rect;->bottom:I

    .line 2279
    .line 2280
    add-int/2addr v13, v6

    .line 2281
    iput v13, v9, Landroid/graphics/Rect;->bottom:I

    .line 2282
    .line 2283
    :goto_4e
    iget v6, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 2284
    .line 2285
    cmpl-float v3, v6, v3

    .line 2286
    .line 2287
    if-eqz v3, :cond_85

    .line 2288
    .line 2289
    new-instance v3, Lcom/android/server/wm/AppCompatSizeCompatModePolicy$$ExternalSyntheticLambda0;

    .line 2290
    .line 2291
    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    .line 2292
    .line 2293
    .line 2294
    const/4 v6, 0x0

    .line 2295
    invoke-virtual {v5, v3, v6}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 2296
    .line 2297
    .line 2298
    :cond_85
    invoke-virtual {v8, v4}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    .line 2299
    .line 2300
    .line 2301
    move-result v3

    .line 2302
    if-eqz v3, :cond_86

    .line 2303
    .line 2304
    iget v4, v10, Landroid/graphics/Rect;->left:I

    .line 2305
    .line 2306
    goto :goto_4f

    .line 2307
    :cond_86
    iget v4, v11, Landroid/graphics/Rect;->left:I

    .line 2308
    .line 2309
    :goto_4f
    if-eqz v3, :cond_87

    .line 2310
    .line 2311
    iget v3, v10, Landroid/graphics/Rect;->top:I

    .line 2312
    .line 2313
    goto :goto_50

    .line 2314
    :cond_87
    iget v3, v11, Landroid/graphics/Rect;->top:I

    .line 2315
    .line 2316
    :goto_50
    if-nez v4, :cond_88

    .line 2317
    .line 2318
    if-eqz v3, :cond_8a

    .line 2319
    .line 2320
    :cond_88
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 2321
    .line 2322
    .line 2323
    move-result v6

    .line 2324
    if-eqz v6, :cond_89

    .line 2325
    .line 2326
    iget-object v6, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 2327
    .line 2328
    invoke-virtual {v6, v4, v3}, Landroid/graphics/Rect;->offset(II)V

    .line 2329
    .line 2330
    .line 2331
    :cond_89
    iget v6, v8, Landroid/graphics/Rect;->left:I

    .line 2332
    .line 2333
    sub-int/2addr v4, v6

    .line 2334
    iget v6, v8, Landroid/graphics/Rect;->top:I

    .line 2335
    .line 2336
    sub-int/2addr v3, v6

    .line 2337
    invoke-static {v7, v4, v3}, Lcom/android/server/wm/AppCompatUtils;->offsetBounds(Landroid/content/res/Configuration;II)V

    .line 2338
    .line 2339
    .line 2340
    :cond_8a
    iget-object v3, v5, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2341
    .line 2342
    iget-object v3, v3, Lcom/android/server/wm/AppCompatController;->mTransparentPolicy:Lcom/android/server/wm/TransparentPolicy;

    .line 2343
    .line 2344
    iget-object v3, v3, Lcom/android/server/wm/TransparentPolicy;->mTransparentPolicyState:Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;

    .line 2345
    .line 2346
    invoke-virtual {v3}, Lcom/android/server/wm/TransparentPolicy$TransparentPolicyState;->isRunning()Z

    .line 2347
    .line 2348
    .line 2349
    move-result v3

    .line 2350
    if-eqz v3, :cond_8b

    .line 2351
    .line 2352
    :goto_51
    const/4 v0, 0x0

    .line 2353
    goto :goto_53

    .line 2354
    :cond_8b
    invoke-virtual {v0}, Landroid/graphics/Rect;->width()I

    .line 2355
    .line 2356
    .line 2357
    move-result v3

    .line 2358
    invoke-virtual {v0}, Landroid/graphics/Rect;->height()I

    .line 2359
    .line 2360
    .line 2361
    move-result v0

    .line 2362
    invoke-virtual {v11}, Landroid/graphics/Rect;->width()I

    .line 2363
    .line 2364
    .line 2365
    move-result v4

    .line 2366
    invoke-virtual {v11}, Landroid/graphics/Rect;->height()I

    .line 2367
    .line 2368
    .line 2369
    move-result v6

    .line 2370
    if-ne v4, v3, :cond_8c

    .line 2371
    .line 2372
    if-ne v6, v0, :cond_8c

    .line 2373
    .line 2374
    goto :goto_51

    .line 2375
    :cond_8c
    if-le v4, v3, :cond_8e

    .line 2376
    .line 2377
    if-le v6, v0, :cond_8e

    .line 2378
    .line 2379
    :cond_8d
    :goto_52
    const/4 v0, 0x1

    .line 2380
    goto :goto_53

    .line 2381
    :cond_8e
    if-lt v4, v3, :cond_8d

    .line 2382
    .line 2383
    if-ge v6, v0, :cond_8f

    .line 2384
    .line 2385
    goto :goto_52

    .line 2386
    :cond_8f
    invoke-virtual {v5}, Lcom/android/server/wm/ActivityRecord;->getMaxAspectRatio()F

    .line 2387
    .line 2388
    .line 2389
    move-result v7

    .line 2390
    const/4 v8, 0x0

    .line 2391
    cmpl-float v9, v7, v8

    .line 2392
    .line 2393
    if-lez v9, :cond_90

    .line 2394
    .line 2395
    invoke-static {v3, v0}, Ljava/lang/Math;->max(II)I

    .line 2396
    .line 2397
    .line 2398
    move-result v8

    .line 2399
    int-to-float v8, v8

    .line 2400
    const/high16 v9, 0x3f000000    # 0.5f

    .line 2401
    .line 2402
    add-float/2addr v8, v9

    .line 2403
    invoke-static {v3, v0}, Ljava/lang/Math;->min(II)I

    .line 2404
    .line 2405
    .line 2406
    move-result v0

    .line 2407
    int-to-float v0, v0

    .line 2408
    div-float/2addr v8, v0

    .line 2409
    cmpl-float v0, v8, v7

    .line 2410
    .line 2411
    if-ltz v0, :cond_90

    .line 2412
    .line 2413
    goto :goto_51

    .line 2414
    :cond_90
    invoke-virtual {v5}, Lcom/android/server/wm/ActivityRecord;->getMinAspectRatio()F

    .line 2415
    .line 2416
    .line 2417
    move-result v0

    .line 2418
    const/4 v3, 0x0

    .line 2419
    cmpl-float v3, v0, v3

    .line 2420
    .line 2421
    if-lez v3, :cond_8d

    .line 2422
    .line 2423
    invoke-static {v4, v6}, Ljava/lang/Math;->max(II)I

    .line 2424
    .line 2425
    .line 2426
    move-result v3

    .line 2427
    int-to-float v3, v3

    .line 2428
    const/high16 v5, 0x3f000000    # 0.5f

    .line 2429
    .line 2430
    add-float/2addr v3, v5

    .line 2431
    invoke-static {v4, v6}, Ljava/lang/Math;->min(II)I

    .line 2432
    .line 2433
    .line 2434
    move-result v4

    .line 2435
    int-to-float v4, v4

    .line 2436
    div-float/2addr v3, v4

    .line 2437
    cmpg-float v0, v3, v0

    .line 2438
    .line 2439
    if-gtz v0, :cond_8d

    .line 2440
    .line 2441
    goto :goto_51

    .line 2442
    :goto_53
    iput-boolean v0, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mInSizeCompatModeForBounds:Z

    .line 2443
    .line 2444
    :cond_91
    move-object/from16 v0, p0

    .line 2445
    .line 2446
    move-object/from16 v3, v20

    .line 2447
    .line 2448
    goto :goto_54

    .line 2449
    :cond_92
    move-object v1, v3

    .line 2450
    const/4 v12, 0x2

    .line 2451
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 2452
    .line 2453
    .line 2454
    move-result v0

    .line 2455
    if-nez v0, :cond_93

    .line 2456
    .line 2457
    move/from16 v0, v24

    .line 2458
    .line 2459
    const/4 v3, 0x5

    .line 2460
    if-ne v0, v3, :cond_91

    .line 2461
    .line 2462
    :cond_93
    if-nez v22, :cond_91

    .line 2463
    .line 2464
    move-object/from16 v3, v20

    .line 2465
    .line 2466
    const/4 v0, 0x0

    .line 2467
    iput v0, v3, Landroid/content/res/Configuration;->orientation:I

    .line 2468
    .line 2469
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->matchParentBounds()Z

    .line 2470
    .line 2471
    .line 2472
    move-result v0

    .line 2473
    if-nez v0, :cond_94

    .line 2474
    .line 2475
    move-object/from16 v0, p0

    .line 2476
    .line 2477
    invoke-virtual {v0, v3, v1}, Lcom/android/server/wm/ActivityRecord;->computeConfigByResolveHint(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 2478
    .line 2479
    .line 2480
    goto :goto_54

    .line 2481
    :cond_94
    move-object/from16 v0, p0

    .line 2482
    .line 2483
    :goto_54
    invoke-static {}, Lcom/android/window/flags/Flags;->immersiveAppRepositioning()Z

    .line 2484
    .line 2485
    .line 2486
    move-result v4

    .line 2487
    if-nez v4, :cond_97

    .line 2488
    .line 2489
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2490
    .line 2491
    iget-object v4, v4, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 2492
    .line 2493
    invoke-virtual {v4}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isLetterboxedForFixedOrientationAndAspectRatio()Z

    .line 2494
    .line 2495
    .line 2496
    move-result v4

    .line 2497
    if-nez v4, :cond_97

    .line 2498
    .line 2499
    iget-boolean v4, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mInSizeCompatModeForBounds:Z

    .line 2500
    .line 2501
    if-nez v4, :cond_97

    .line 2502
    .line 2503
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2504
    .line 2505
    iget-object v4, v4, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 2506
    .line 2507
    iget-object v4, v4, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 2508
    .line 2509
    invoke-virtual {v4}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->shouldApplyUserFullscreenOverride()Z

    .line 2510
    .line 2511
    .line 2512
    move-result v5

    .line 2513
    if-nez v5, :cond_96

    .line 2514
    .line 2515
    invoke-virtual {v4}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->isSystemOverrideToFullscreenEnabled()Z

    .line 2516
    .line 2517
    .line 2518
    move-result v4

    .line 2519
    if-eqz v4, :cond_95

    .line 2520
    .line 2521
    goto :goto_55

    .line 2522
    :cond_95
    const/4 v4, 0x0

    .line 2523
    goto :goto_56

    .line 2524
    :cond_96
    :goto_55
    const/4 v4, 0x1

    .line 2525
    :goto_56
    if-nez v4, :cond_97

    .line 2526
    .line 2527
    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityRecord;->resolveAspectRatioRestriction(Landroid/content/res/Configuration;)V

    .line 2528
    .line 2529
    .line 2530
    :cond_97
    if-nez v22, :cond_98

    .line 2531
    .line 2532
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasAppCompatDisplayInsetsWithoutInheritance()Z

    .line 2533
    .line 2534
    .line 2535
    move-result v4

    .line 2536
    if-nez v4, :cond_98

    .line 2537
    .line 2538
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 2539
    .line 2540
    .line 2541
    move-result v4

    .line 2542
    if-nez v4, :cond_99

    .line 2543
    .line 2544
    :cond_98
    invoke-virtual {v0, v1}, Lcom/android/server/wm/ActivityRecord;->updateResolvedBoundsPosition(Landroid/content/res/Configuration;)V

    .line 2545
    .line 2546
    .line 2547
    :cond_99
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 2548
    .line 2549
    if-eqz v4, :cond_9a

    .line 2550
    .line 2551
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayArea;->getIgnoreOrientationRequest()Z

    .line 2552
    .line 2553
    .line 2554
    move-result v4

    .line 2555
    if-eqz v4, :cond_9a

    .line 2556
    .line 2557
    const/4 v4, 0x1

    .line 2558
    goto :goto_57

    .line 2559
    :cond_9a
    const/4 v4, 0x0

    .line 2560
    :goto_57
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasAppCompatDisplayInsetsWithoutInheritance()Z

    .line 2561
    .line 2562
    .line 2563
    move-result v2

    .line 2564
    if-nez v2, :cond_9c

    .line 2565
    .line 2566
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2567
    .line 2568
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 2569
    .line 2570
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isLetterboxedForFixedOrientationAndAspectRatio()Z

    .line 2571
    .line 2572
    .line 2573
    move-result v2

    .line 2574
    if-nez v2, :cond_9b

    .line 2575
    .line 2576
    if-eqz v4, :cond_9c

    .line 2577
    .line 2578
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2579
    .line 2580
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 2581
    .line 2582
    iget-object v2, v2, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->mAppCompatAspectRatioState:Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;

    .line 2583
    .line 2584
    iget-boolean v2, v2, Lcom/android/server/wm/AppCompatAspectRatioPolicy$AppCompatAspectRatioState;->mIsAspectRatioApplied:Z

    .line 2585
    .line 2586
    if-eqz v2, :cond_9c

    .line 2587
    .line 2588
    :cond_9b
    iget v2, v3, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 2589
    .line 2590
    iget v4, v3, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 2591
    .line 2592
    invoke-static {v2, v4}, Ljava/lang/Math;->min(II)I

    .line 2593
    .line 2594
    .line 2595
    move-result v2

    .line 2596
    iput v2, v3, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    .line 2597
    .line 2598
    :cond_9c
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 2599
    .line 2600
    invoke-virtual {v2}, Lcom/android/server/wm/PopOverState;->toggle()V

    .line 2601
    .line 2602
    .line 2603
    iget-object v2, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2604
    .line 2605
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 2606
    .line 2607
    iget-boolean v5, v4, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 2608
    .line 2609
    if-nez v5, :cond_9d

    .line 2610
    .line 2611
    move v11, v12

    .line 2612
    goto :goto_58

    .line 2613
    :cond_9d
    invoke-virtual {v4}, Lcom/android/server/wm/PopOverState;->shouldRemoveOutlineEffect()Z

    .line 2614
    .line 2615
    .line 2616
    move-result v4

    .line 2617
    if-eqz v4, :cond_9e

    .line 2618
    .line 2619
    const/4 v11, 0x3

    .line 2620
    goto :goto_58

    .line 2621
    :cond_9e
    const/4 v11, 0x1

    .line 2622
    :goto_58
    invoke-virtual {v2, v11}, Landroid/app/WindowConfiguration;->setPopOverState(I)V

    .line 2623
    .line 2624
    .line 2625
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 2626
    .line 2627
    iget-boolean v2, v2, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 2628
    .line 2629
    if-eqz v2, :cond_9f

    .line 2630
    .line 2631
    iget-object v2, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2632
    .line 2633
    invoke-static/range {p0 .. p0}, Lcom/android/server/wm/PopOverBoundsCalculator;->getBounds(Lcom/android/server/wm/ActivityRecord;)Landroid/graphics/Rect;

    .line 2634
    .line 2635
    .line 2636
    move-result-object v4

    .line 2637
    invoke-virtual {v2, v4}, Landroid/app/WindowConfiguration;->setBounds(Landroid/graphics/Rect;)V

    .line 2638
    .line 2639
    .line 2640
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2641
    .line 2642
    const/4 v4, 0x0

    .line 2643
    invoke-virtual {v2, v3, v1, v4, v4}, Lcom/android/server/wm/TaskFragment;->computeConfigResourceOverrides(Landroid/content/res/Configuration;Landroid/content/res/Configuration;Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;Lcom/android/server/wm/DexSizeCompatController$DexSizeCompatPolicy;)V

    .line 2644
    .line 2645
    .line 2646
    :cond_9f
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2647
    .line 2648
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mExt:Lcom/android/server/wm/ActivityTaskManagerServiceExt;

    .line 2649
    .line 2650
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerServiceExt;->mDisplayCutoutController:Lcom/android/server/wm/DisplayCutoutController;

    .line 2651
    .line 2652
    iget-boolean v4, v2, Lcom/android/server/wm/DisplayCutoutController;->mRemoveCutoutOfConfiguration:Z

    .line 2653
    .line 2654
    if-eqz v4, :cond_ae

    .line 2655
    .line 2656
    iget-object v4, v2, Lcom/android/server/wm/DisplayCutoutController;->mCutoutInset:Landroid/graphics/Rect;

    .line 2657
    .line 2658
    if-nez v4, :cond_a0

    .line 2659
    .line 2660
    goto/16 :goto_5d

    .line 2661
    .line 2662
    :cond_a0
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2663
    .line 2664
    if-eqz v4, :cond_ae

    .line 2665
    .line 2666
    iget v4, v4, Lcom/android/server/wm/Task;->mCutoutPolicy:I

    .line 2667
    .line 2668
    const/4 v5, 0x1

    .line 2669
    if-eq v4, v5, :cond_a1

    .line 2670
    .line 2671
    goto/16 :goto_5d

    .line 2672
    .line 2673
    :cond_a1
    iget-object v4, v1, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2674
    .line 2675
    invoke-virtual {v4}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 2676
    .line 2677
    .line 2678
    move-result-object v4

    .line 2679
    if-eqz v4, :cond_ae

    .line 2680
    .line 2681
    invoke-virtual {v4}, Landroid/graphics/Rect;->isEmpty()Z

    .line 2682
    .line 2683
    .line 2684
    move-result v5

    .line 2685
    if-eqz v5, :cond_a2

    .line 2686
    .line 2687
    goto/16 :goto_5d

    .line 2688
    .line 2689
    :cond_a2
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 2690
    .line 2691
    .line 2692
    move-result-object v5

    .line 2693
    iget-object v6, v5, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2694
    .line 2695
    invoke-virtual {v6}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 2696
    .line 2697
    .line 2698
    move-result-object v6

    .line 2699
    if-eqz v6, :cond_a3

    .line 2700
    .line 2701
    invoke-virtual {v6}, Landroid/graphics/Rect;->isEmpty()Z

    .line 2702
    .line 2703
    .line 2704
    move-result v6

    .line 2705
    if-nez v6, :cond_a3

    .line 2706
    .line 2707
    goto/16 :goto_5d

    .line 2708
    .line 2709
    :cond_a3
    sget-boolean v6, Lcom/samsung/android/rune/CoreRune;->FW_OVERLAPPING_WITH_CUTOUT_AS_DEFAULT:Z

    .line 2710
    .line 2711
    if-eqz v6, :cond_a4

    .line 2712
    .line 2713
    iget-object v6, v5, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2714
    .line 2715
    const/4 v7, 0x1

    .line 2716
    invoke-virtual {v6, v7}, Landroid/app/WindowConfiguration;->setOverlappingWithCutout(Z)V

    .line 2717
    .line 2718
    .line 2719
    :cond_a4
    iget-object v6, v1, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2720
    .line 2721
    invoke-virtual {v6}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 2722
    .line 2723
    .line 2724
    move-result-object v6

    .line 2725
    iget-object v7, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2726
    .line 2727
    invoke-virtual {v7, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2728
    .line 2729
    .line 2730
    iget-object v7, v2, Lcom/android/server/wm/DisplayCutoutController;->mCutoutInset:Landroid/graphics/Rect;

    .line 2731
    .line 2732
    iget v8, v7, Landroid/graphics/Rect;->left:I

    .line 2733
    .line 2734
    if-lez v8, :cond_a6

    .line 2735
    .line 2736
    iget-object v8, v2, Lcom/android/server/wm/DisplayCutoutController;->mNonDecorInsetsWithoutCutout:Landroid/graphics/Rect;

    .line 2737
    .line 2738
    iget v8, v8, Landroid/graphics/Rect;->left:I

    .line 2739
    .line 2740
    if-lez v8, :cond_a5

    .line 2741
    .line 2742
    iget-object v9, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2743
    .line 2744
    iput v8, v9, Landroid/graphics/Rect;->left:I

    .line 2745
    .line 2746
    goto :goto_59

    .line 2747
    :cond_a5
    iget-object v8, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2748
    .line 2749
    iget v9, v6, Landroid/graphics/Rect;->left:I

    .line 2750
    .line 2751
    iput v9, v8, Landroid/graphics/Rect;->left:I

    .line 2752
    .line 2753
    :cond_a6
    :goto_59
    iget v8, v7, Landroid/graphics/Rect;->top:I

    .line 2754
    .line 2755
    if-lez v8, :cond_a8

    .line 2756
    .line 2757
    iget-object v8, v2, Lcom/android/server/wm/DisplayCutoutController;->mNonDecorInsetsWithoutCutout:Landroid/graphics/Rect;

    .line 2758
    .line 2759
    iget v8, v8, Landroid/graphics/Rect;->top:I

    .line 2760
    .line 2761
    if-lez v8, :cond_a7

    .line 2762
    .line 2763
    iget-object v9, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2764
    .line 2765
    iput v8, v9, Landroid/graphics/Rect;->top:I

    .line 2766
    .line 2767
    goto :goto_5a

    .line 2768
    :cond_a7
    iget-object v8, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2769
    .line 2770
    iget v9, v6, Landroid/graphics/Rect;->top:I

    .line 2771
    .line 2772
    iput v9, v8, Landroid/graphics/Rect;->top:I

    .line 2773
    .line 2774
    :cond_a8
    :goto_5a
    iget v8, v7, Landroid/graphics/Rect;->right:I

    .line 2775
    .line 2776
    if-lez v8, :cond_aa

    .line 2777
    .line 2778
    iget-object v8, v2, Lcom/android/server/wm/DisplayCutoutController;->mNonDecorInsetsWithoutCutout:Landroid/graphics/Rect;

    .line 2779
    .line 2780
    iget v8, v8, Landroid/graphics/Rect;->right:I

    .line 2781
    .line 2782
    if-lez v8, :cond_a9

    .line 2783
    .line 2784
    iget-object v9, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2785
    .line 2786
    iget v10, v6, Landroid/graphics/Rect;->right:I

    .line 2787
    .line 2788
    sub-int/2addr v10, v8

    .line 2789
    iput v10, v9, Landroid/graphics/Rect;->right:I

    .line 2790
    .line 2791
    goto :goto_5b

    .line 2792
    :cond_a9
    iget-object v8, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2793
    .line 2794
    iget v9, v6, Landroid/graphics/Rect;->right:I

    .line 2795
    .line 2796
    iput v9, v8, Landroid/graphics/Rect;->right:I

    .line 2797
    .line 2798
    :cond_aa
    :goto_5b
    iget v7, v7, Landroid/graphics/Rect;->bottom:I

    .line 2799
    .line 2800
    if-lez v7, :cond_ac

    .line 2801
    .line 2802
    iget-object v7, v2, Lcom/android/server/wm/DisplayCutoutController;->mNonDecorInsetsWithoutCutout:Landroid/graphics/Rect;

    .line 2803
    .line 2804
    iget v7, v7, Landroid/graphics/Rect;->bottom:I

    .line 2805
    .line 2806
    if-lez v7, :cond_ab

    .line 2807
    .line 2808
    iget-object v8, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2809
    .line 2810
    iget v6, v6, Landroid/graphics/Rect;->bottom:I

    .line 2811
    .line 2812
    sub-int/2addr v6, v7

    .line 2813
    iput v6, v8, Landroid/graphics/Rect;->bottom:I

    .line 2814
    .line 2815
    goto :goto_5c

    .line 2816
    :cond_ab
    iget-object v7, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2817
    .line 2818
    iget v6, v6, Landroid/graphics/Rect;->bottom:I

    .line 2819
    .line 2820
    iput v6, v7, Landroid/graphics/Rect;->bottom:I

    .line 2821
    .line 2822
    :cond_ac
    :goto_5c
    iget-object v6, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2823
    .line 2824
    invoke-virtual {v4, v6}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    .line 2825
    .line 2826
    .line 2827
    move-result v4

    .line 2828
    if-eqz v4, :cond_ad

    .line 2829
    .line 2830
    goto :goto_5d

    .line 2831
    :cond_ad
    iget-object v4, v5, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2832
    .line 2833
    iget-object v2, v2, Lcom/android/server/wm/DisplayCutoutController;->mTmpRect:Landroid/graphics/Rect;

    .line 2834
    .line 2835
    invoke-virtual {v4, v2}, Landroid/app/WindowConfiguration;->setAppBounds(Landroid/graphics/Rect;)V

    .line 2836
    .line 2837
    .line 2838
    :cond_ae
    :goto_5d
    sget-boolean v2, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_CONFIGURATION:Z

    .line 2839
    .line 2840
    if-eqz v2, :cond_b0

    .line 2841
    .line 2842
    invoke-static/range {p0 .. p0}, Lcom/android/server/wm/MultiTaskingAppCompatConfiguration;->isPresetLetterboxed(Lcom/android/server/wm/ActivityRecord;)Z

    .line 2843
    .line 2844
    .line 2845
    move-result v2

    .line 2846
    if-eqz v2, :cond_b0

    .line 2847
    .line 2848
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

    .line 2849
    .line 2850
    if-nez v2, :cond_af

    .line 2851
    .line 2852
    new-instance v2, Lcom/android/server/wm/CompatSandboxPolicy;

    .line 2853
    .line 2854
    invoke-direct {v2, v0}, Lcom/android/server/wm/CompatSandboxPolicy;-><init>(Lcom/android/server/wm/ActivityRecord;)V

    .line 2855
    .line 2856
    .line 2857
    iput-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

    .line 2858
    .line 2859
    :cond_af
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

    .line 2860
    .line 2861
    iget v4, v2, Lcom/android/server/wm/CompatSandboxPolicy;->mFlags:I

    .line 2862
    .line 2863
    or-int/lit16 v4, v4, 0x100

    .line 2864
    .line 2865
    iput v4, v2, Lcom/android/server/wm/CompatSandboxPolicy;->mFlags:I

    .line 2866
    .line 2867
    :cond_b0
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mCompatSandboxPolicy:Lcom/android/server/wm/CompatSandboxPolicy;

    .line 2868
    .line 2869
    if-eqz v2, :cond_b1

    .line 2870
    .line 2871
    iget-object v4, v0, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 2872
    .line 2873
    invoke-virtual {v4}, Landroid/util/MergedConfiguration;->getMergedConfiguration()Landroid/content/res/Configuration;

    .line 2874
    .line 2875
    .line 2876
    move-result-object v4

    .line 2877
    invoke-virtual {v2, v4}, Lcom/android/server/wm/CompatSandboxPolicy;->resolveCompatSandboxValues(Landroid/content/res/Configuration;)V

    .line 2878
    .line 2879
    .line 2880
    :cond_b1
    iget v2, v0, Lcom/android/server/wm/ActivityRecord;->mConfigurationSeq:I

    .line 2881
    .line 2882
    const/4 v4, 0x1

    .line 2883
    add-int/2addr v2, v4

    .line 2884
    iput v2, v0, Lcom/android/server/wm/ActivityRecord;->mConfigurationSeq:I

    .line 2885
    .line 2886
    invoke-static {v2, v4}, Ljava/lang/Math;->max(II)I

    .line 2887
    .line 2888
    .line 2889
    move-result v2

    .line 2890
    iput v2, v0, Lcom/android/server/wm/ActivityRecord;->mConfigurationSeq:I

    .line 2891
    .line 2892
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 2893
    .line 2894
    .line 2895
    move-result-object v2

    .line 2896
    iget v5, v0, Lcom/android/server/wm/ActivityRecord;->mConfigurationSeq:I

    .line 2897
    .line 2898
    iput v5, v2, Landroid/content/res/Configuration;->seq:I

    .line 2899
    .line 2900
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->providesMaxBounds()Z

    .line 2901
    .line 2902
    .line 2903
    move-result v2

    .line 2904
    if-eqz v2, :cond_b3

    .line 2905
    .line 2906
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 2907
    .line 2908
    iget-object v5, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2909
    .line 2910
    invoke-virtual {v5}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 2911
    .line 2912
    .line 2913
    move-result-object v5

    .line 2914
    invoke-virtual {v2, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2915
    .line 2916
    .line 2917
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 2918
    .line 2919
    invoke-virtual {v2}, Landroid/graphics/Rect;->isEmpty()Z

    .line 2920
    .line 2921
    .line 2922
    move-result v2

    .line 2923
    if-eqz v2, :cond_b2

    .line 2924
    .line 2925
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 2926
    .line 2927
    iget-object v5, v1, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2928
    .line 2929
    invoke-virtual {v5}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 2930
    .line 2931
    .line 2932
    move-result-object v5

    .line 2933
    invoke-virtual {v2, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2934
    .line 2935
    .line 2936
    :cond_b2
    iget-object v2, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 2937
    .line 2938
    iget-object v5, v0, Lcom/android/server/wm/ActivityRecord;->mTmpBounds:Landroid/graphics/Rect;

    .line 2939
    .line 2940
    invoke-virtual {v2, v5}, Landroid/app/WindowConfiguration;->setMaxBounds(Landroid/graphics/Rect;)V

    .line 2941
    .line 2942
    .line 2943
    :cond_b3
    iget-object v6, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 2944
    .line 2945
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 2946
    .line 2947
    iget-object v7, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 2948
    .line 2949
    iget-boolean v10, v0, Lcom/android/server/wm/ActivityRecord;->mOptOutEdgeToEdge:Z

    .line 2950
    .line 2951
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowToken;->hasFixedRotationTransform()Z

    .line 2952
    .line 2953
    .line 2954
    move-result v11

    .line 2955
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 2956
    .line 2957
    .line 2958
    move-result-object v2

    .line 2959
    if-eqz v2, :cond_b4

    .line 2960
    .line 2961
    move v12, v4

    .line 2962
    goto :goto_5e

    .line 2963
    :cond_b4
    const/4 v12, 0x0

    .line 2964
    :goto_5e
    iget-object v13, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2965
    .line 2966
    move-object v8, v1

    .line 2967
    move-object v9, v3

    .line 2968
    invoke-static/range {v6 .. v13}, Lcom/android/server/wm/ConfigurationContainer;->applySizeOverrideIfNeeded(Lcom/android/server/wm/DisplayContent;Landroid/content/pm/ApplicationInfo;Landroid/content/res/Configuration;Landroid/content/res/Configuration;ZZZLcom/android/server/wm/Task;)V

    .line 2969
    .line 2970
    .line 2971
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 2972
    .line 2973
    const/4 v2, 0x0

    .line 2974
    iput-object v2, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpOverrideDisplayInfo:Landroid/view/DisplayInfo;

    .line 2975
    .line 2976
    iput-object v2, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpCompatInsets:Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 2977
    .line 2978
    const/4 v2, 0x0

    .line 2979
    iput v2, v1, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mTmpOverrideConfigOrientation:I

    .line 2980
    .line 2981
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->logAppCompatState()V

    .line 2982
    .line 2983
    .line 2984
    return-void
.end method

.method public final restartProcessIfVisible()V
    .locals 5

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    .line 7
    .line 8
    const-string v1, "Request to restart process of "

    .line 9
    .line 10
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 11
    .line 12
    .line 13
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 14
    .line 15
    .line 16
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 17
    .line 18
    .line 19
    move-result-object v0

    .line 20
    const-string v1, "ActivityTaskManager"

    .line 21
    .line 22
    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 23
    .line 24
    .line 25
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 26
    .line 27
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 28
    .line 29
    const/4 v1, 0x0

    .line 30
    const/4 v2, 0x1

    .line 31
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->clearSizeCompatMode(ZZ)V

    .line 32
    .line 33
    .line 34
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 35
    .line 36
    .line 37
    move-result v0

    .line 38
    if-nez v0, :cond_1

    .line 39
    .line 40
    return-void

    .line 41
    :cond_1
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->RESTARTING_PROCESS:Lcom/android/server/wm/ActivityRecord$State;

    .line 42
    .line 43
    const-string/jumbo v2, "restartActivityProcess"

    .line 44
    .line 45
    .line 46
    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 47
    .line 48
    .line 49
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 50
    .line 51
    if-eqz v0, :cond_4

    .line 52
    .line 53
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mHaveState:Z

    .line 54
    .line 55
    if-eqz v0, :cond_2

    .line 56
    .line 57
    goto :goto_1

    .line 58
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 59
    .line 60
    invoke-virtual {v0}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 61
    .line 62
    .line 63
    move-result v0

    .line 64
    if-eqz v0, :cond_3

    .line 65
    .line 66
    new-instance v0, Lcom/android/server/wm/Transition;

    .line 67
    .line 68
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 69
    .line 70
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 71
    .line 72
    iget-object v3, v3, Lcom/android/server/wm/WindowManagerService;->mSyncEngine:Lcom/android/server/wm/BLASTSyncEngine;

    .line 73
    .line 74
    const/4 v4, 0x5

    .line 75
    invoke-direct {v0, v4, v1, v2, v3}, Lcom/android/server/wm/Transition;-><init>(IILcom/android/server/wm/TransitionController;Lcom/android/server/wm/BLASTSyncEngine;)V

    .line 76
    .line 77
    .line 78
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 79
    .line 80
    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda8;

    .line 81
    .line 82
    invoke-direct {v2, p0, v0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda8;-><init>(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/Transition;)V

    .line 83
    .line 84
    .line 85
    invoke-virtual {v1, v0, v2}, Lcom/android/server/wm/TransitionController;->startCollectOrQueue(Lcom/android/server/wm/Transition;Lcom/android/server/wm/TransitionController$OnStartCollect;)V

    .line 86
    .line 87
    .line 88
    goto :goto_0

    .line 89
    :cond_3
    const/4 v0, -0x1

    .line 90
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->startFreezingScreen(I)V

    .line 91
    .line 92
    .line 93
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->scheduleStopForRestartProcess()V

    .line 94
    .line 95
    .line 96
    :goto_0
    return-void

    .line 97
    :cond_4
    :goto_1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 98
    .line 99
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 100
    .line 101
    new-instance v1, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda7;

    .line 102
    .line 103
    const/4 v2, 0x0

    .line 104
    invoke-direct {v1, v2, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda7;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    .line 105
    .line 106
    .line 107
    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 108
    .line 109
    .line 110
    return-void
.end method

.method public final resumeConfigurationDispatch()Z
    .locals 9

    .line 1
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mPauseConfigurationDispatchCount:I

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    sub-int/2addr v0, v1

    .line 5
    iput v0, p0, Lcom/android/server/wm/ActivityRecord;->mPauseConfigurationDispatchCount:I

    .line 6
    .line 7
    const/4 v2, 0x0

    .line 8
    if-lez v0, :cond_0

    .line 9
    .line 10
    return v2

    .line 11
    :cond_0
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_WINDOW_TRANSITIONS_MIN_enabled:[Z

    .line 12
    .line 13
    aget-boolean v0, v0, v1

    .line 14
    .line 15
    if-eqz v0, :cond_1

    .line 16
    .line 17
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 18
    .line 19
    .line 20
    move-result-object v0

    .line 21
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_WINDOW_TRANSITIONS_MIN:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 22
    .line 23
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 24
    .line 25
    .line 26
    move-result-object v8

    .line 27
    const-wide v4, 0x4785ebb0c5bb3ef1L    # 3.6421953804033705E36

    .line 28
    .line 29
    .line 30
    .line 31
    .line 32
    const/4 v6, 0x0

    .line 33
    const-string v7, "Resuming configuration dispatch for %s"

    .line 34
    .line 35
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 36
    .line 37
    .line 38
    :cond_1
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mPauseConfigurationDispatchCount:I

    .line 39
    .line 40
    if-gez v0, :cond_2

    .line 41
    .line 42
    const-string v0, "ActivityTaskManager"

    .line 43
    .line 44
    const-string v1, "Trying to resume non-paused configuration dispatch"

    .line 45
    .line 46
    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 47
    .line 48
    .line 49
    iput v2, p0, Lcom/android/server/wm/ActivityRecord;->mPauseConfigurationDispatchCount:I

    .line 50
    .line 51
    return v2

    .line 52
    :cond_2
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedDisplayId:I

    .line 53
    .line 54
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 55
    .line 56
    .line 57
    move-result v3

    .line 58
    if-ne v0, v3, :cond_3

    .line 59
    .line 60
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 61
    .line 62
    .line 63
    move-result-object v0

    .line 64
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 65
    .line 66
    invoke-virtual {v3}, Landroid/util/MergedConfiguration;->getMergedConfiguration()Landroid/content/res/Configuration;

    .line 67
    .line 68
    .line 69
    move-result-object v3

    .line 70
    invoke-virtual {v0, v3}, Landroid/content/res/Configuration;->equals(Landroid/content/res/Configuration;)Z

    .line 71
    .line 72
    .line 73
    move-result v0

    .line 74
    if-eqz v0, :cond_3

    .line 75
    .line 76
    return v2

    .line 77
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getChildCount()I

    .line 78
    .line 79
    .line 80
    move-result v0

    .line 81
    sub-int/2addr v0, v1

    .line 82
    :goto_0
    if-ltz v0, :cond_5

    .line 83
    .line 84
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowContainer;->getChildAt(I)Lcom/android/server/wm/WindowContainer;

    .line 85
    .line 86
    .line 87
    move-result-object v2

    .line 88
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 89
    .line 90
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 91
    .line 92
    .line 93
    move-result-object v3

    .line 94
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isConfigurationDispatchPaused()Z

    .line 95
    .line 96
    .line 97
    move-result v4

    .line 98
    if-eqz v4, :cond_4

    .line 99
    .line 100
    goto :goto_1

    .line 101
    :cond_4
    invoke-super {p0, v2, v3}, Lcom/android/server/wm/ConfigurationContainer;->dispatchConfigurationToChild(Lcom/android/server/wm/ConfigurationContainer;Landroid/content/res/Configuration;)V

    .line 102
    .line 103
    .line 104
    :goto_1
    add-int/lit8 v0, v0, -0x1

    .line 105
    .line 106
    goto :goto_0

    .line 107
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->updateReportedConfigurationAndSend()Z

    .line 108
    .line 109
    .line 110
    return v1
.end method

.method public final resumeKeyDispatchingLocked()V
    .locals 3

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->keysPaused:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    const/4 v0, 0x0

    .line 6
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->keysPaused:Z

    .line 7
    .line 8
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 9
    .line 10
    .line 11
    move-result-object v1

    .line 12
    if-eqz v1, :cond_0

    .line 13
    .line 14
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 15
    .line 16
    .line 17
    move-result-object v1

    .line 18
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 19
    .line 20
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 21
    .line 22
    .line 23
    iget-boolean v2, p0, Lcom/android/server/wm/WindowToken;->paused:Z

    .line 24
    .line 25
    if-eqz v2, :cond_0

    .line 26
    .line 27
    iput-boolean v0, p0, Lcom/android/server/wm/WindowToken;->paused:Z

    .line 28
    .line 29
    const/4 p0, 0x1

    .line 30
    invoke-virtual {v1, p0}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 31
    .line 32
    .line 33
    :cond_0
    return-void
.end method

.method public final saveToXml(Lcom/android/modules/utils/TypedXmlSerializer;)V
    .locals 5

    .line 1
    iget-wide v0, p0, Lcom/android/server/wm/ActivityRecord;->createTime:J

    .line 2
    .line 3
    const/4 v2, 0x0

    .line 4
    const-string v3, "id"

    .line 5
    .line 6
    invoke-interface {p1, v2, v3, v0, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeLong(Ljava/lang/String;Ljava/lang/String;J)Lorg/xmlpull/v1/XmlSerializer;

    .line 7
    .line 8
    .line 9
    const-string v0, "launched_from_uid"

    .line 10
    .line 11
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->launchedFromUid:I

    .line 12
    .line 13
    invoke-interface {p1, v2, v0, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeInt(Ljava/lang/String;Ljava/lang/String;I)Lorg/xmlpull/v1/XmlSerializer;

    .line 14
    .line 15
    .line 16
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    .line 17
    .line 18
    if-eqz v0, :cond_0

    .line 19
    .line 20
    const-string v1, "launched_from_package"

    .line 21
    .line 22
    invoke-interface {p1, v2, v1, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 23
    .line 24
    .line 25
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->launchedFromFeatureId:Ljava/lang/String;

    .line 26
    .line 27
    if-eqz v0, :cond_1

    .line 28
    .line 29
    const-string v1, "launched_from_feature"

    .line 30
    .line 31
    invoke-interface {p1, v2, v1, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 32
    .line 33
    .line 34
    :cond_1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->resolvedType:Ljava/lang/String;

    .line 35
    .line 36
    if-eqz v0, :cond_2

    .line 37
    .line 38
    const-string/jumbo v1, "resolved_type"

    .line 39
    .line 40
    .line 41
    invoke-interface {p1, v2, v1, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 42
    .line 43
    .line 44
    :cond_2
    const-string v0, "component_specified"

    .line 45
    .line 46
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->componentSpecified:Z

    .line 47
    .line 48
    invoke-interface {p1, v2, v0, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeBoolean(Ljava/lang/String;Ljava/lang/String;Z)Lorg/xmlpull/v1/XmlSerializer;

    .line 49
    .line 50
    .line 51
    const-string/jumbo v0, "user_id"

    .line 52
    .line 53
    .line 54
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 55
    .line 56
    invoke-interface {p1, v2, v0, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeInt(Ljava/lang/String;Ljava/lang/String;I)Lorg/xmlpull/v1/XmlSerializer;

    .line 57
    .line 58
    .line 59
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 60
    .line 61
    if-eqz v0, :cond_3

    .line 62
    .line 63
    invoke-virtual {v0, p1}, Landroid/app/ActivityManager$TaskDescription;->saveToXml(Lcom/android/modules/utils/TypedXmlSerializer;)V

    .line 64
    .line 65
    .line 66
    :cond_3
    const-string v0, "intent"

    .line 67
    .line 68
    invoke-interface {p1, v2, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 69
    .line 70
    .line 71
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 72
    .line 73
    invoke-virtual {v1, p1}, Landroid/content/Intent;->saveToXml(Lorg/xmlpull/v1/XmlSerializer;)V

    .line 74
    .line 75
    .line 76
    invoke-interface {p1, v2, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 77
    .line 78
    .line 79
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isPersistable()Z

    .line 80
    .line 81
    .line 82
    move-result v0

    .line 83
    if-eqz v0, :cond_4

    .line 84
    .line 85
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPersistentState:Landroid/os/PersistableBundle;

    .line 86
    .line 87
    if-eqz v0, :cond_4

    .line 88
    .line 89
    const-string/jumbo v0, "persistable_bundle"

    .line 90
    .line 91
    .line 92
    invoke-interface {p1, v2, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 93
    .line 94
    .line 95
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mPersistentState:Landroid/os/PersistableBundle;

    .line 96
    .line 97
    invoke-virtual {v1, p1}, Landroid/os/PersistableBundle;->saveToXml(Lcom/android/modules/utils/TypedXmlSerializer;)V

    .line 98
    .line 99
    .line 100
    invoke-interface {p1, v2, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 101
    .line 102
    .line 103
    :cond_4
    invoke-static {}, Landroid/security/Flags;->contentUriPermissionApis()Z

    .line 104
    .line 105
    .line 106
    move-result v0

    .line 107
    if-eqz v0, :cond_9

    .line 108
    .line 109
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mCallerState:Lcom/android/server/wm/ActivityCallerState;

    .line 110
    .line 111
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->initialCallerInfoAccessToken:Landroid/os/IBinder;

    .line 112
    .line 113
    iget-object v0, v0, Lcom/android/server/wm/ActivityCallerState;->mCallerTokenInfoMap:Ljava/util/WeakHashMap;

    .line 114
    .line 115
    invoke-virtual {v0, p0, v2}, Ljava/util/WeakHashMap;->getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 116
    .line 117
    .line 118
    move-result-object p0

    .line 119
    check-cast p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;

    .line 120
    .line 121
    if-eqz p0, :cond_9

    .line 122
    .line 123
    const-string v0, "initial_caller_info"

    .line 124
    .line 125
    invoke-interface {p1, v2, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 126
    .line 127
    .line 128
    const-string v1, "caller_uid"

    .line 129
    .line 130
    iget v3, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mUid:I

    .line 131
    .line 132
    invoke-interface {p1, v2, v1, v3}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeInt(Ljava/lang/String;Ljava/lang/String;I)Lorg/xmlpull/v1/XmlSerializer;

    .line 133
    .line 134
    .line 135
    iget-object v1, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mPackageName:Ljava/lang/String;

    .line 136
    .line 137
    if-eqz v1, :cond_5

    .line 138
    .line 139
    const-string v3, "caller_package"

    .line 140
    .line 141
    invoke-interface {p1, v2, v3, v1}, Lcom/android/modules/utils/TypedXmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 142
    .line 143
    .line 144
    :cond_5
    const-string v1, "caller_is_share_enabled"

    .line 145
    .line 146
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mIsShareIdentityEnabled:Z

    .line 147
    .line 148
    invoke-interface {p1, v2, v1, v3}, Lcom/android/modules/utils/TypedXmlSerializer;->attributeBoolean(Ljava/lang/String;Ljava/lang/String;Z)Lorg/xmlpull/v1/XmlSerializer;

    .line 149
    .line 150
    .line 151
    iget-object v1, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mReadableContentUris:Landroid/util/ArraySet;

    .line 152
    .line 153
    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    .line 154
    .line 155
    .line 156
    move-result v1

    .line 157
    add-int/lit8 v1, v1, -0x1

    .line 158
    .line 159
    :goto_0
    if-ltz v1, :cond_6

    .line 160
    .line 161
    iget-object v3, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mReadableContentUris:Landroid/util/ArraySet;

    .line 162
    .line 163
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 164
    .line 165
    .line 166
    move-result-object v3

    .line 167
    check-cast v3, Lcom/android/server/uri/GrantUri;

    .line 168
    .line 169
    const-string/jumbo v4, "readable_content_uri"

    .line 170
    .line 171
    .line 172
    invoke-static {p1, v3, v4}, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->saveGrantUriToXml(Lcom/android/modules/utils/TypedXmlSerializer;Lcom/android/server/uri/GrantUri;Ljava/lang/String;)V

    .line 173
    .line 174
    .line 175
    add-int/lit8 v1, v1, -0x1

    .line 176
    .line 177
    goto :goto_0

    .line 178
    :cond_6
    iget-object v1, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mWritableContentUris:Landroid/util/ArraySet;

    .line 179
    .line 180
    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    .line 181
    .line 182
    .line 183
    move-result v1

    .line 184
    add-int/lit8 v1, v1, -0x1

    .line 185
    .line 186
    :goto_1
    if-ltz v1, :cond_7

    .line 187
    .line 188
    iget-object v3, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mWritableContentUris:Landroid/util/ArraySet;

    .line 189
    .line 190
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 191
    .line 192
    .line 193
    move-result-object v3

    .line 194
    check-cast v3, Lcom/android/server/uri/GrantUri;

    .line 195
    .line 196
    const-string/jumbo v4, "writable_content_uri"

    .line 197
    .line 198
    .line 199
    invoke-static {p1, v3, v4}, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->saveGrantUriToXml(Lcom/android/modules/utils/TypedXmlSerializer;Lcom/android/server/uri/GrantUri;Ljava/lang/String;)V

    .line 200
    .line 201
    .line 202
    add-int/lit8 v1, v1, -0x1

    .line 203
    .line 204
    goto :goto_1

    .line 205
    :cond_7
    iget-object v1, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mInaccessibleContentUris:Landroid/util/ArraySet;

    .line 206
    .line 207
    invoke-virtual {v1}, Landroid/util/ArraySet;->size()I

    .line 208
    .line 209
    .line 210
    move-result v1

    .line 211
    add-int/lit8 v1, v1, -0x1

    .line 212
    .line 213
    :goto_2
    if-ltz v1, :cond_8

    .line 214
    .line 215
    iget-object v3, p0, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->mInaccessibleContentUris:Landroid/util/ArraySet;

    .line 216
    .line 217
    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    .line 218
    .line 219
    .line 220
    move-result-object v3

    .line 221
    check-cast v3, Lcom/android/server/uri/GrantUri;

    .line 222
    .line 223
    const-string v4, "inaccessible_content_uri"

    .line 224
    .line 225
    invoke-static {p1, v3, v4}, Lcom/android/server/wm/ActivityCallerState$CallerInfo;->saveGrantUriToXml(Lcom/android/modules/utils/TypedXmlSerializer;Lcom/android/server/uri/GrantUri;Ljava/lang/String;)V

    .line 226
    .line 227
    .line 228
    add-int/lit8 v1, v1, -0x1

    .line 229
    .line 230
    goto :goto_2

    .line 231
    :cond_8
    invoke-interface {p1, v2, v0}, Lcom/android/modules/utils/TypedXmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 232
    .line 233
    .line 234
    :cond_9
    return-void
.end method

.method public final scheduleActivityMovedToDisplay(ILandroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)V
    .locals 10

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_SWITCH_enabled:[Z

    .line 6
    .line 7
    if-nez v0, :cond_1

    .line 8
    .line 9
    const/4 p2, 0x3

    .line 10
    aget-boolean p2, v1, p2

    .line 11
    .line 12
    if-eqz p2, :cond_0

    .line 13
    .line 14
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 15
    .line 16
    .line 17
    move-result-object p0

    .line 18
    int-to-long p1, p1

    .line 19
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SWITCH:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 20
    .line 21
    invoke-static {p1, p2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 22
    .line 23
    .line 24
    move-result-object p1

    .line 25
    filled-new-array {p0, p1}, [Ljava/lang/Object;

    .line 26
    .line 27
    .line 28
    move-result-object v5

    .line 29
    const-wide v1, -0x5a558eb85b17cfe8L    # -3.051787900657849E-127

    .line 30
    .line 31
    .line 32
    .line 33
    .line 34
    const/4 v3, 0x4

    .line 35
    const/4 v4, 0x0

    .line 36
    invoke-static/range {v0 .. v5}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 37
    .line 38
    .line 39
    :cond_0
    return-void

    .line 40
    :cond_1
    const/4 v0, 0x1

    .line 41
    :try_start_0
    aget-boolean v0, v1, v0

    .line 42
    .line 43
    if-eqz v0, :cond_2

    .line 44
    .line 45
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 46
    .line 47
    .line 48
    move-result-object v0

    .line 49
    int-to-long v1, p1

    .line 50
    invoke-static {p2}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 51
    .line 52
    .line 53
    move-result-object v3

    .line 54
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_SWITCH:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 55
    .line 56
    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 57
    .line 58
    .line 59
    move-result-object v1

    .line 60
    filled-new-array {v0, v1, v3}, [Ljava/lang/Object;

    .line 61
    .line 62
    .line 63
    move-result-object v9

    .line 64
    const-wide v5, -0x3a0d3686310dc307L    # -9.302879184568893E28

    .line 65
    .line 66
    .line 67
    .line 68
    .line 69
    const/4 v7, 0x4

    .line 70
    const/4 v8, 0x0

    .line 71
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 72
    .line 73
    .line 74
    :cond_2
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 75
    .line 76
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 77
    .line 78
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 79
    .line 80
    iget-object v1, v1, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 81
    .line 82
    iget-object p0, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 83
    .line 84
    invoke-static {p0, p1, p2, p3}, Landroid/app/servertransaction/MoveToDisplayItem;->obtain(Landroid/os/IBinder;ILandroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)Landroid/app/servertransaction/MoveToDisplayItem;

    .line 85
    .line 86
    .line 87
    move-result-object p0

    .line 88
    invoke-virtual {v0, v1, p0}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 89
    .line 90
    .line 91
    :catch_0
    return-void
.end method

.method public final scheduleAddStartingWindow()V
    .locals 10

    .line 1
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    aget-boolean v2, v0, v1

    .line 5
    .line 6
    if-eqz v2, :cond_0

    .line 7
    .line 8
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 9
    .line 10
    .line 11
    move-result-object v2

    .line 12
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 13
    .line 14
    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 15
    .line 16
    .line 17
    move-result-object v3

    .line 18
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 19
    .line 20
    filled-new-array {v2, v3}, [Ljava/lang/Object;

    .line 21
    .line 22
    .line 23
    move-result-object v9

    .line 24
    const-wide v5, 0x4e88dd20260a3223L    # 2.1450430772303076E70

    .line 25
    .line 26
    .line 27
    .line 28
    .line 29
    const/4 v7, 0x0

    .line 30
    const-string v8, "Add starting %s: startingData=%s"

    .line 31
    .line 32
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 33
    .line 34
    .line 35
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 36
    .line 37
    invoke-virtual {v2, p0}, Lcom/android/server/wm/StartingData;->createStartingSurface(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 38
    .line 39
    .line 40
    move-result-object v2

    .line 41
    iput-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 42
    .line 43
    if-eqz v2, :cond_1

    .line 44
    .line 45
    aget-boolean v0, v0, v1

    .line 46
    .line 47
    if-eqz v0, :cond_2

    .line 48
    .line 49
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 50
    .line 51
    .line 52
    move-result-object v0

    .line 53
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 54
    .line 55
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 56
    .line 57
    .line 58
    move-result-object v1

    .line 59
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 60
    .line 61
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 62
    .line 63
    .line 64
    move-result-object p0

    .line 65
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 66
    .line 67
    filled-new-array {v0, v1, p0}, [Ljava/lang/Object;

    .line 68
    .line 69
    .line 70
    move-result-object v7

    .line 71
    const-wide v3, 0x682b0bf11a7d37f0L    # 6.169936201174548E193

    .line 72
    .line 73
    .line 74
    .line 75
    .line 76
    const/4 v5, 0x0

    .line 77
    const-string v6, "Added starting %s: startingWindow=%s startingView=%s"

    .line 78
    .line 79
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 80
    .line 81
    .line 82
    goto :goto_0

    .line 83
    :cond_1
    aget-boolean v0, v0, v1

    .line 84
    .line 85
    if-eqz v0, :cond_2

    .line 86
    .line 87
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 88
    .line 89
    .line 90
    move-result-object p0

    .line 91
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 92
    .line 93
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 94
    .line 95
    .line 96
    move-result-object v5

    .line 97
    const-wide v1, 0xe8b6a5da6ca3e94L

    .line 98
    .line 99
    .line 100
    .line 101
    .line 102
    const/4 v3, 0x0

    .line 103
    const-string v4, "Surface returned was null: %s"

    .line 104
    .line 105
    invoke-static/range {v0 .. v5}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 106
    .line 107
    .line 108
    :cond_2
    :goto_0
    return-void
.end method

.method public final scheduleConfigurationChanged(Landroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)V
    .locals 10

    .line 1
    const-string/jumbo v0, "scheduleConfigurationChanged: "

    .line 2
    .line 3
    .line 4
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 5
    .line 6
    .line 7
    move-result v1

    .line 8
    const/4 v2, 0x3

    .line 9
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_CONFIGURATION_enabled:[Z

    .line 10
    .line 11
    if-nez v1, :cond_1

    .line 12
    .line 13
    aget-boolean p1, v3, v2

    .line 14
    .line 15
    if-eqz p1, :cond_0

    .line 16
    .line 17
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 18
    .line 19
    .line 20
    move-result-object p0

    .line 21
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 22
    .line 23
    const/4 v4, 0x0

    .line 24
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 25
    .line 26
    .line 27
    move-result-object v5

    .line 28
    const-wide v1, 0x672f6ae374fc35f9L    # 1.0936022160278257E189

    .line 29
    .line 30
    .line 31
    .line 32
    .line 33
    const/4 v3, 0x0

    .line 34
    invoke-static/range {v0 .. v5}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 35
    .line 36
    .line 37
    :cond_0
    return-void

    .line 38
    :cond_1
    const/4 v1, 0x1

    .line 39
    :try_start_0
    aget-boolean v1, v3, v1

    .line 40
    .line 41
    if-eqz v1, :cond_2

    .line 42
    .line 43
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 44
    .line 45
    .line 46
    move-result-object v1

    .line 47
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 48
    .line 49
    .line 50
    move-result-object v3

    .line 51
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 52
    .line 53
    filled-new-array {v1, v3}, [Ljava/lang/Object;

    .line 54
    .line 55
    .line 56
    move-result-object v9

    .line 57
    const-wide v5, -0x66f5248af2dbce7fL

    .line 58
    .line 59
    .line 60
    .line 61
    .line 62
    const/4 v7, 0x0

    .line 63
    const/4 v8, 0x0

    .line 64
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 65
    .line 66
    .line 67
    :cond_2
    const-string v1, "ActivityTaskManager"

    .line 68
    .line 69
    new-instance v3, Ljava/lang/StringBuilder;

    .line 70
    .line 71
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 72
    .line 73
    .line 74
    invoke-virtual {v3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 75
    .line 76
    .line 77
    const-string v0, " state="

    .line 78
    .line 79
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 80
    .line 81
    .line 82
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 83
    .line 84
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 85
    .line 86
    .line 87
    const-string v0, " config="

    .line 88
    .line 89
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 90
    .line 91
    .line 92
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 93
    .line 94
    .line 95
    const-string v0, " caller="

    .line 96
    .line 97
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 98
    .line 99
    .line 100
    invoke-static {v2}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 101
    .line 102
    .line 103
    move-result-object v0

    .line 104
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 105
    .line 106
    .line 107
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 108
    .line 109
    .line 110
    move-result-object v0

    .line 111
    invoke-static {v1, v0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 112
    .line 113
    .line 114
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 115
    .line 116
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 117
    .line 118
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 119
    .line 120
    iget-object v1, v1, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 121
    .line 122
    iget-object p0, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 123
    .line 124
    invoke-static {p0, p1, p2}, Landroid/app/servertransaction/ActivityConfigurationChangeItem;->obtain(Landroid/os/IBinder;Landroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)Landroid/app/servertransaction/ActivityConfigurationChangeItem;

    .line 125
    .line 126
    .line 127
    move-result-object p0

    .line 128
    invoke-virtual {v0, v1, p0}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 129
    .line 130
    .line 131
    :catch_0
    return-void
.end method

.method public final scheduleStopForRestartProcess()V
    .locals 3

    .line 1
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 4
    .line 5
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 6
    .line 7
    iget-object v1, v1, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 8
    .line 9
    iget-object v2, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 10
    .line 11
    invoke-static {v2}, Landroid/app/servertransaction/StopActivityItem;->obtain(Landroid/os/IBinder;)Landroid/app/servertransaction/StopActivityItem;

    .line 12
    .line 13
    .line 14
    move-result-object v2

    .line 15
    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 16
    .line 17
    .line 18
    goto :goto_0

    .line 19
    :catch_0
    move-exception v0

    .line 20
    new-instance v1, Ljava/lang/StringBuilder;

    .line 21
    .line 22
    const-string v2, "Exception thrown during restart "

    .line 23
    .line 24
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 25
    .line 26
    .line 27
    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 28
    .line 29
    .line 30
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 31
    .line 32
    .line 33
    move-result-object v1

    .line 34
    const-string v2, "ActivityTaskManager"

    .line 35
    .line 36
    invoke-static {v2, v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 37
    .line 38
    .line 39
    :goto_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 40
    .line 41
    iget-object v1, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mHandler:Lcom/android/server/wm/ActivityTaskSupervisor$ActivityTaskSupervisorHandler;

    .line 42
    .line 43
    const/16 v2, 0xd5

    .line 44
    .line 45
    invoke-virtual {v1, v2, p0}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V

    .line 46
    .line 47
    .line 48
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mHandler:Lcom/android/server/wm/ActivityTaskSupervisor$ActivityTaskSupervisorHandler;

    .line 49
    .line 50
    invoke-virtual {v0, v2, p0}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    .line 51
    .line 52
    .line 53
    move-result-object p0

    .line 54
    const-wide/16 v1, 0x7d0

    .line 55
    .line 56
    invoke-virtual {v0, p0, v1, v2}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 57
    .line 58
    .line 59
    return-void
.end method

.method public final scheduleTopResumedActivityChanged(Z)Z
    .locals 11

    .line 1
    const-string v0, "ActivityTaskManager"

    .line 2
    .line 3
    const-string/jumbo v1, "scheduleTopResumedActivityChanged, onTop="

    .line 4
    .line 5
    .line 6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 7
    .line 8
    .line 9
    move-result v2

    .line 10
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 11
    .line 12
    const/4 v4, 0x0

    .line 13
    if-nez v2, :cond_1

    .line 14
    .line 15
    const/4 p1, 0x3

    .line 16
    aget-boolean p1, v3, p1

    .line 17
    .line 18
    if-eqz p1, :cond_0

    .line 19
    .line 20
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 21
    .line 22
    .line 23
    move-result-object p0

    .line 24
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 25
    .line 26
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 27
    .line 28
    .line 29
    move-result-object v10

    .line 30
    const-wide v6, -0x3b772521f7d0c89aL    # -1.4671773110816423E22

    .line 31
    .line 32
    .line 33
    .line 34
    .line 35
    const/4 v8, 0x0

    .line 36
    const/4 v9, 0x0

    .line 37
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->w(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 38
    .line 39
    .line 40
    :cond_0
    return v4

    .line 41
    :cond_1
    if-eqz p1, :cond_2

    .line 42
    .line 43
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 44
    .line 45
    invoke-virtual {v2}, Lcom/android/server/wm/WindowProcessController;->addToPendingTop()V

    .line 46
    .line 47
    .line 48
    :cond_2
    const/4 v2, 0x1

    .line 49
    :try_start_0
    aget-boolean v3, v3, v2

    .line 50
    .line 51
    if-eqz v3, :cond_3

    .line 52
    .line 53
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 54
    .line 55
    .line 56
    move-result-object v3

    .line 57
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 58
    .line 59
    invoke-static {p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 60
    .line 61
    .line 62
    move-result-object v6

    .line 63
    filled-new-array {v3, v6}, [Ljava/lang/Object;

    .line 64
    .line 65
    .line 66
    move-result-object v10

    .line 67
    const/16 v8, 0xc

    .line 68
    .line 69
    const/4 v9, 0x0

    .line 70
    const-wide v6, 0x6488aa2d097530e7L    # 1.9521095833020158E176

    .line 71
    .line 72
    .line 73
    .line 74
    .line 75
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 76
    .line 77
    .line 78
    goto :goto_0

    .line 79
    :catch_0
    move-exception v1

    .line 80
    goto :goto_1

    .line 81
    :cond_3
    :goto_0
    new-instance v3, Ljava/lang/StringBuilder;

    .line 82
    .line 83
    invoke-direct {v3, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 84
    .line 85
    .line 86
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 87
    .line 88
    .line 89
    const-string v1, ", r="

    .line 90
    .line 91
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 92
    .line 93
    .line 94
    invoke-virtual {v3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 95
    .line 96
    .line 97
    const-string v1, ", caller="

    .line 98
    .line 99
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 100
    .line 101
    .line 102
    const/4 v1, 0x6

    .line 103
    invoke-static {v1}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 104
    .line 105
    .line 106
    move-result-object v1

    .line 107
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 108
    .line 109
    .line 110
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 111
    .line 112
    .line 113
    move-result-object v1

    .line 114
    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 115
    .line 116
    .line 117
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 118
    .line 119
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 120
    .line 121
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 122
    .line 123
    iget-object v3, v3, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 124
    .line 125
    iget-object v5, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 126
    .line 127
    invoke-static {v5, p1}, Landroid/app/servertransaction/TopResumedActivityChangeItem;->obtain(Landroid/os/IBinder;Z)Landroid/app/servertransaction/TopResumedActivityChangeItem;

    .line 128
    .line 129
    .line 130
    move-result-object v5

    .line 131
    invoke-virtual {v1, v3, v5}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 132
    .line 133
    .line 134
    return v2

    .line 135
    :goto_1
    new-instance v2, Ljava/lang/StringBuilder;

    .line 136
    .line 137
    const-string v3, "Failed to send top-resumed="

    .line 138
    .line 139
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 140
    .line 141
    .line 142
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 143
    .line 144
    .line 145
    const-string p1, " to "

    .line 146
    .line 147
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 148
    .line 149
    .line 150
    invoke-virtual {v2, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 151
    .line 152
    .line 153
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 154
    .line 155
    .line 156
    move-result-object p0

    .line 157
    invoke-static {v0, p0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 158
    .line 159
    .line 160
    return v4
.end method

.method public final sendResult(ILjava/lang/String;IILandroid/content/Intent;Landroid/os/IBinder;Lcom/android/server/uri/NeededUriGrants;Z)V
    .locals 17

    .line 1
    move-object/from16 v7, p0

    .line 2
    .line 3
    move/from16 v0, p1

    .line 4
    .line 5
    const-string v8, "Unable to get the lifecycle item for state "

    .line 6
    .line 7
    invoke-static {}, Landroid/security/Flags;->contentUriPermissionApis()Z

    .line 8
    .line 9
    .line 10
    move-result v1

    .line 11
    const/4 v9, 0x0

    .line 12
    if-eqz v1, :cond_1

    .line 13
    .line 14
    iget-object v1, v7, Lcom/android/server/wm/ActivityRecord;->mCallerState:Lcom/android/server/wm/ActivityCallerState;

    .line 15
    .line 16
    iget-object v1, v1, Lcom/android/server/wm/ActivityCallerState;->mCallerTokenInfoMap:Ljava/util/WeakHashMap;

    .line 17
    .line 18
    move-object/from16 v15, p6

    .line 19
    .line 20
    invoke-virtual {v1, v15, v9}, Ljava/util/WeakHashMap;->getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 21
    .line 22
    .line 23
    move-result-object v1

    .line 24
    check-cast v1, Lcom/android/server/wm/ActivityCallerState$CallerInfo;

    .line 25
    .line 26
    if-eqz v1, :cond_0

    .line 27
    .line 28
    goto :goto_0

    .line 29
    :cond_0
    :try_start_0
    iget-object v1, v7, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 30
    .line 31
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 32
    .line 33
    .line 34
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    .line 35
    .line 36
    .line 37
    move-result-object v1

    .line 38
    invoke-interface {v1, v0}, Landroid/content/pm/IPackageManager;->getNameForUid(I)Ljava/lang/String;

    .line 39
    .line 40
    .line 41
    move-result-object v5

    .line 42
    const/4 v6, 0x0

    .line 43
    move-object/from16 v1, p0

    .line 44
    .line 45
    move-object/from16 v2, p6

    .line 46
    .line 47
    move-object/from16 v3, p5

    .line 48
    .line 49
    move/from16 v4, p1

    .line 50
    .line 51
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/wm/ActivityRecord;->computeCallerInfo(Landroid/os/IBinder;Landroid/content/Intent;ILjava/lang/String;Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 52
    .line 53
    .line 54
    goto :goto_0

    .line 55
    :catch_0
    move-exception v0

    .line 56
    new-instance v1, Ljava/lang/RuntimeException;

    .line 57
    .line 58
    invoke-direct {v1, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/Throwable;)V

    .line 59
    .line 60
    .line 61
    throw v1

    .line 62
    :cond_1
    move-object/from16 v15, p6

    .line 63
    .line 64
    :goto_0
    if-lez v0, :cond_2

    .line 65
    .line 66
    iget-object v0, v7, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 67
    .line 68
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mUgmInternal:Lcom/android/server/uri/UriGrantsManagerInternal;

    .line 69
    .line 70
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getUriPermissionsLocked()Lcom/android/server/uri/UriPermissionOwner;

    .line 71
    .line 72
    .line 73
    move-result-object v1

    .line 74
    check-cast v0, Lcom/android/server/uri/UriGrantsManagerService$LocalService;

    .line 75
    .line 76
    move-object/from16 v2, p7

    .line 77
    .line 78
    invoke-virtual {v0, v2, v1}, Lcom/android/server/uri/UriGrantsManagerService$LocalService;->grantUriPermissionUncheckedFromIntent(Lcom/android/server/uri/NeededUriGrants;Lcom/android/server/uri/UriPermissionOwner;)V

    .line 79
    .line 80
    .line 81
    :cond_2
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 82
    .line 83
    invoke-virtual {v7, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 84
    .line 85
    .line 86
    move-result v0

    .line 87
    const-string v1, "Exception thrown sending result to "

    .line 88
    .line 89
    const-string v2, "ActivityTaskManager"

    .line 90
    .line 91
    if-eqz v0, :cond_3

    .line 92
    .line 93
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 94
    .line 95
    .line 96
    move-result v0

    .line 97
    if-eqz v0, :cond_3

    .line 98
    .line 99
    :try_start_1
    new-instance v0, Ljava/util/ArrayList;

    .line 100
    .line 101
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 102
    .line 103
    .line 104
    new-instance v3, Landroid/app/ResultInfo;

    .line 105
    .line 106
    move-object v10, v3

    .line 107
    move-object/from16 v11, p2

    .line 108
    .line 109
    move/from16 v12, p3

    .line 110
    .line 111
    move/from16 v13, p4

    .line 112
    .line 113
    move-object/from16 v14, p5

    .line 114
    .line 115
    move-object/from16 v15, p6

    .line 116
    .line 117
    invoke-direct/range {v10 .. v15}, Landroid/app/ResultInfo;-><init>(Ljava/lang/String;IILandroid/content/Intent;Landroid/os/IBinder;)V

    .line 118
    .line 119
    .line 120
    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 121
    .line 122
    .line 123
    iget-object v3, v7, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 124
    .line 125
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 126
    .line 127
    iget-object v4, v7, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 128
    .line 129
    iget-object v4, v4, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 130
    .line 131
    iget-object v5, v7, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 132
    .line 133
    invoke-static {v5, v0}, Landroid/app/servertransaction/ActivityResultItem;->obtain(Landroid/os/IBinder;Ljava/util/List;)Landroid/app/servertransaction/ActivityResultItem;

    .line 134
    .line 135
    .line 136
    move-result-object v0

    .line 137
    invoke-virtual {v3, v4, v0}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 138
    .line 139
    .line 140
    return-void

    .line 141
    :catch_1
    move-exception v0

    .line 142
    new-instance v3, Ljava/lang/StringBuilder;

    .line 143
    .line 144
    invoke-direct {v3, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 145
    .line 146
    .line 147
    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 148
    .line 149
    .line 150
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 151
    .line 152
    .line 153
    move-result-object v3

    .line 154
    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 155
    .line 156
    .line 157
    :cond_3
    if-eqz p8, :cond_8

    .line 158
    .line 159
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 160
    .line 161
    .line 162
    move-result v0

    .line 163
    if-eqz v0, :cond_8

    .line 164
    .line 165
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 166
    .line 167
    sget-object v3, Lcom/android/server/wm/ActivityRecord$State;->PAUSED:Lcom/android/server/wm/ActivityRecord$State;

    .line 168
    .line 169
    sget-object v4, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 170
    .line 171
    sget-object v5, Lcom/android/server/wm/ActivityRecord$State;->STOPPED:Lcom/android/server/wm/ActivityRecord$State;

    .line 172
    .line 173
    invoke-virtual {v7, v0, v3, v4, v5}, Lcom/android/server/wm/ActivityRecord;->isState$1(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 174
    .line 175
    .line 176
    move-result v0

    .line 177
    if-eqz v0, :cond_8

    .line 178
    .line 179
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 180
    .line 181
    new-instance v3, Landroid/app/ResultInfo;

    .line 182
    .line 183
    move-object v10, v3

    .line 184
    move-object/from16 v11, p2

    .line 185
    .line 186
    move/from16 v12, p3

    .line 187
    .line 188
    move/from16 v13, p4

    .line 189
    .line 190
    move-object/from16 v14, p5

    .line 191
    .line 192
    move-object/from16 v15, p6

    .line 193
    .line 194
    invoke-direct/range {v10 .. v15}, Landroid/app/ResultInfo;-><init>(Ljava/lang/String;IILandroid/content/Intent;Landroid/os/IBinder;)V

    .line 195
    .line 196
    .line 197
    invoke-static {v3}, Ljava/util/List;->of(Ljava/lang/Object;)Ljava/util/List;

    .line 198
    .line 199
    .line 200
    move-result-object v3

    .line 201
    invoke-static {v0, v3}, Landroid/app/servertransaction/ActivityResultItem;->obtain(Landroid/os/IBinder;Ljava/util/List;)Landroid/app/servertransaction/ActivityResultItem;

    .line 202
    .line 203
    .line 204
    move-result-object v0

    .line 205
    iget-object v3, v7, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 206
    .line 207
    invoke-virtual {v3}, Ljava/lang/Enum;->ordinal()I

    .line 208
    .line 209
    .line 210
    move-result v3

    .line 211
    const/4 v4, 0x1

    .line 212
    if-eq v3, v4, :cond_6

    .line 213
    .line 214
    const/4 v4, 0x3

    .line 215
    if-eq v3, v4, :cond_5

    .line 216
    .line 217
    const/4 v4, 0x4

    .line 218
    if-eq v3, v4, :cond_5

    .line 219
    .line 220
    const/4 v4, 0x5

    .line 221
    if-eq v3, v4, :cond_4

    .line 222
    .line 223
    const/4 v4, 0x6

    .line 224
    if-eq v3, v4, :cond_4

    .line 225
    .line 226
    goto :goto_1

    .line 227
    :cond_4
    iget-object v3, v7, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 228
    .line 229
    invoke-static {v3}, Landroid/app/servertransaction/StopActivityItem;->obtain(Landroid/os/IBinder;)Landroid/app/servertransaction/StopActivityItem;

    .line 230
    .line 231
    .line 232
    move-result-object v9

    .line 233
    goto :goto_1

    .line 234
    :cond_5
    iget-object v3, v7, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 235
    .line 236
    invoke-static {v3}, Landroid/app/servertransaction/PauseActivityItem;->obtain(Landroid/os/IBinder;)Landroid/app/servertransaction/PauseActivityItem;

    .line 237
    .line 238
    .line 239
    move-result-object v9

    .line 240
    goto :goto_1

    .line 241
    :cond_6
    iget-object v3, v7, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 242
    .line 243
    invoke-static {v3, v9}, Landroid/app/servertransaction/StartActivityItem;->obtain(Landroid/os/IBinder;Landroid/app/ActivityOptions$SceneTransitionInfo;)Landroid/app/servertransaction/StartActivityItem;

    .line 244
    .line 245
    .line 246
    move-result-object v9

    .line 247
    :goto_1
    if-eqz v9, :cond_7

    .line 248
    .line 249
    :try_start_2
    iget-object v3, v7, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 250
    .line 251
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 252
    .line 253
    iget-object v4, v7, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 254
    .line 255
    iget-object v4, v4, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 256
    .line 257
    const/4 v5, 0x0

    .line 258
    invoke-virtual {v3, v4, v0, v9, v5}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionAndLifecycleItems(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;Landroid/app/servertransaction/ActivityLifecycleItem;Z)V

    .line 259
    .line 260
    .line 261
    goto :goto_3

    .line 262
    :catch_2
    move-exception v0

    .line 263
    goto :goto_2

    .line 264
    :cond_7
    new-instance v3, Ljava/lang/StringBuilder;

    .line 265
    .line 266
    invoke-direct {v3, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 267
    .line 268
    .line 269
    iget-object v4, v7, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 270
    .line 271
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 272
    .line 273
    .line 274
    const-string v4, " so couldn\'t immediately send result"

    .line 275
    .line 276
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 277
    .line 278
    .line 279
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 280
    .line 281
    .line 282
    move-result-object v3

    .line 283
    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 284
    .line 285
    .line 286
    iget-object v3, v7, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 287
    .line 288
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 289
    .line 290
    iget-object v4, v7, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 291
    .line 292
    iget-object v4, v4, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 293
    .line 294
    invoke-virtual {v3, v4, v0}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2

    .line 295
    .line 296
    .line 297
    goto :goto_3

    .line 298
    :goto_2
    new-instance v3, Ljava/lang/StringBuilder;

    .line 299
    .line 300
    invoke-direct {v3, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 301
    .line 302
    .line 303
    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 304
    .line 305
    .line 306
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 307
    .line 308
    .line 309
    move-result-object v1

    .line 310
    invoke-static {v2, v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 311
    .line 312
    .line 313
    :goto_3
    return-void

    .line 314
    :cond_8
    new-instance v0, Lcom/android/server/wm/ActivityResult;

    .line 315
    .line 316
    const/4 v11, 0x0

    .line 317
    move-object v10, v0

    .line 318
    move-object/from16 v12, p2

    .line 319
    .line 320
    move/from16 v13, p3

    .line 321
    .line 322
    move/from16 v14, p4

    .line 323
    .line 324
    move-object/from16 v15, p5

    .line 325
    .line 326
    move-object/from16 v16, p6

    .line 327
    .line 328
    invoke-direct/range {v10 .. v16}, Lcom/android/server/wm/ActivityResult;-><init>(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;IILandroid/content/Intent;Landroid/os/IBinder;)V

    .line 329
    .line 330
    .line 331
    iget-object v1, v7, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 332
    .line 333
    if-nez v1, :cond_9

    .line 334
    .line 335
    new-instance v1, Ljava/util/ArrayList;

    .line 336
    .line 337
    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 338
    .line 339
    .line 340
    iput-object v1, v7, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 341
    .line 342
    :cond_9
    iget-object v1, v7, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 343
    .line 344
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 345
    .line 346
    .line 347
    return-void
.end method

.method public final setAppLayoutChanges(I)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 10
    .line 11
    .line 12
    move-result-object p0

    .line 13
    iget v0, p0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 14
    .line 15
    or-int/2addr p1, v0

    .line 16
    iput p1, p0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 17
    .line 18
    :cond_0
    return-void
.end method

.method public final setClientVisible(Z)V
    .locals 1

    .line 1
    if-nez p1, :cond_0

    .line 2
    .line 3
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 4
    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    return-void

    .line 8
    :cond_0
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowToken;->setClientVisible(Z)V

    .line 9
    .line 10
    .line 11
    return-void
.end method

.method public final setDeferHidingClient(Z)V
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 2
    .line 3
    if-ne v0, p1, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 7
    .line 8
    if-nez p1, :cond_1

    .line 9
    .line 10
    iget-boolean p1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 11
    .line 12
    if-nez p1, :cond_1

    .line 13
    .line 14
    const/4 p1, 0x0

    .line 15
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->setVisibility(Z)V

    .line 16
    .line 17
    .line 18
    :cond_1
    return-void
.end method

.method public setDropInputMode(I)V
    .locals 1

    .line 1
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastDropInputMode:I

    .line 2
    .line 3
    if-eq v0, p1, :cond_0

    .line 4
    .line 5
    iput p1, p0, Lcom/android/server/wm/ActivityRecord;->mLastDropInputMode:I

    .line 6
    .line 7
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 8
    .line 9
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    .line 10
    .line 11
    invoke-interface {v0}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    .line 12
    .line 13
    .line 14
    move-result-object v0

    .line 15
    check-cast v0, Landroid/view/SurfaceControl$Transaction;

    .line 16
    .line 17
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 18
    .line 19
    invoke-virtual {v0, p0, p1}, Landroid/view/SurfaceControl$Transaction;->setDropInputMode(Landroid/view/SurfaceControl;I)Landroid/view/SurfaceControl$Transaction;

    .line 20
    .line 21
    .line 22
    move-result-object p0

    .line 23
    invoke-virtual {p0}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 24
    .line 25
    .line 26
    :cond_0
    return-void
.end method

.method public final setEnteringPipFromSplit(Ljava/lang/String;Z)V
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsEnteringPipFromSplit:Z

    .line 2
    .line 3
    if-eq v0, p2, :cond_0

    .line 4
    .line 5
    iput-boolean p2, p0, Lcom/android/server/wm/ActivityRecord;->mIsEnteringPipFromSplit:Z

    .line 6
    .line 7
    new-instance v0, Ljava/lang/StringBuilder;

    .line 8
    .line 9
    const-string/jumbo v1, "setEnteringPipFromSplit: "

    .line 10
    .line 11
    .line 12
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 13
    .line 14
    .line 15
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 16
    .line 17
    .line 18
    const-string p2, ", "

    .line 19
    .line 20
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 21
    .line 22
    .line 23
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24
    .line 25
    .line 26
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 27
    .line 28
    .line 29
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 30
    .line 31
    .line 32
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 33
    .line 34
    .line 35
    move-result-object p0

    .line 36
    const-string p1, "ActivityTaskManager"

    .line 37
    .line 38
    invoke-static {p1, p0}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 39
    .line 40
    .line 41
    :cond_0
    return-void
.end method

.method public final setHiddenWhileEnteringPinnedMode(Ljava/lang/String;Z)V
    .locals 3

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mHiddenWhileEnteringPinnedMode:Z

    .line 2
    .line 3
    if-ne v0, p2, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    new-instance v0, Ljava/lang/StringBuilder;

    .line 7
    .line 8
    const-string/jumbo v1, "setHiddenWhileEnteringPinnedMode: "

    .line 9
    .line 10
    .line 11
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 12
    .line 13
    .line 14
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 15
    .line 16
    .line 17
    const-string v1, ", "

    .line 18
    .line 19
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    .line 21
    .line 22
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 23
    .line 24
    .line 25
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26
    .line 27
    .line 28
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 29
    .line 30
    .line 31
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 32
    .line 33
    .line 34
    move-result-object p1

    .line 35
    const-string v0, "ActivityTaskManager"

    .line 36
    .line 37
    invoke-static {v0, p1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 38
    .line 39
    .line 40
    iput-boolean p2, p0, Lcom/android/server/wm/ActivityRecord;->mHiddenWhileEnteringPinnedMode:Z

    .line 41
    .line 42
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 43
    .line 44
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 45
    .line 46
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mHiddenWhileEnteringPinnedTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 47
    .line 48
    invoke-virtual {p1, v0}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 49
    .line 50
    .line 51
    if-eqz p2, :cond_1

    .line 52
    .line 53
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 54
    .line 55
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 56
    .line 57
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mHiddenWhileEnteringPinnedTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 58
    .line 59
    const-wide/16 v1, 0xbb8

    .line 60
    .line 61
    invoke-virtual {p1, v0, v1, v2}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 62
    .line 63
    .line 64
    :cond_1
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 65
    .line 66
    if-eqz p1, :cond_3

    .line 67
    .line 68
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 69
    .line 70
    iget-object p1, p1, Lcom/android/server/wm/WindowManagerService;->mTransactionFactory:Ljava/util/function/Supplier;

    .line 71
    .line 72
    invoke-interface {p1}, Ljava/util/function/Supplier;->get()Ljava/lang/Object;

    .line 73
    .line 74
    .line 75
    move-result-object p1

    .line 76
    check-cast p1, Landroid/view/SurfaceControl$Transaction;

    .line 77
    .line 78
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 79
    .line 80
    if-eqz p2, :cond_2

    .line 81
    .line 82
    const/4 p2, 0x0

    .line 83
    goto :goto_0

    .line 84
    :cond_2
    const/high16 p2, 0x3f800000    # 1.0f

    .line 85
    .line 86
    :goto_0
    invoke-virtual {p1, p0, p2}, Landroid/view/SurfaceControl$Transaction;->setAlpha(Landroid/view/SurfaceControl;F)Landroid/view/SurfaceControl$Transaction;

    .line 87
    .line 88
    .line 89
    invoke-virtual {p1}, Landroid/view/SurfaceControl$Transaction;->apply()V

    .line 90
    .line 91
    .line 92
    :cond_3
    return-void
.end method

.method public final setOccludesParent(ZZ)Z
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 2
    .line 3
    iget-boolean v1, v0, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 4
    .line 5
    const/4 v2, 0x3

    .line 6
    const/4 v3, 0x2

    .line 7
    const/4 v4, 0x1

    .line 8
    if-nez v1, :cond_0

    .line 9
    .line 10
    move v0, v3

    .line 11
    goto :goto_0

    .line 12
    :cond_0
    invoke-virtual {v0}, Lcom/android/server/wm/PopOverState;->shouldRemoveOutlineEffect()Z

    .line 13
    .line 14
    .line 15
    move-result v0

    .line 16
    if-eqz v0, :cond_1

    .line 17
    .line 18
    move v0, v2

    .line 19
    goto :goto_0

    .line 20
    :cond_1
    move v0, v4

    .line 21
    :goto_0
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 22
    .line 23
    iput-boolean p1, v1, Lcom/android/server/wm/PopOverState;->mLastOccludesParent:Z

    .line 24
    .line 25
    iget-boolean v5, v1, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 26
    .line 27
    const/4 v6, 0x0

    .line 28
    if-eqz v5, :cond_5

    .line 29
    .line 30
    if-nez v5, :cond_2

    .line 31
    .line 32
    move v2, v3

    .line 33
    goto :goto_1

    .line 34
    :cond_2
    invoke-virtual {v1}, Lcom/android/server/wm/PopOverState;->shouldRemoveOutlineEffect()Z

    .line 35
    .line 36
    .line 37
    move-result p1

    .line 38
    if-eqz p1, :cond_3

    .line 39
    .line 40
    goto :goto_1

    .line 41
    :cond_3
    move v2, v4

    .line 42
    :goto_1
    if-eq v2, v0, :cond_4

    .line 43
    .line 44
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->recomputeConfiguration()V

    .line 45
    .line 46
    .line 47
    :cond_4
    return v6

    .line 48
    :cond_5
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    .line 49
    .line 50
    if-eq p1, v0, :cond_6

    .line 51
    .line 52
    move v6, v4

    .line 53
    :cond_6
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mOccludesParent:Z

    .line 54
    .line 55
    if-nez p2, :cond_8

    .line 56
    .line 57
    invoke-virtual {p0, v4}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 58
    .line 59
    .line 60
    move-result-object p2

    .line 61
    if-nez p2, :cond_7

    .line 62
    .line 63
    goto :goto_2

    .line 64
    :cond_7
    iget-object v0, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 65
    .line 66
    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->format:I

    .line 67
    .line 68
    invoke-static {v0}, Landroid/graphics/PixelFormat;->formatHasAlpha(I)Z

    .line 69
    .line 70
    .line 71
    move-result v0

    .line 72
    xor-int/2addr v0, v4

    .line 73
    and-int/2addr v0, p1

    .line 74
    iget-object p2, p2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 75
    .line 76
    invoke-virtual {p2, v0}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    .line 77
    .line 78
    .line 79
    :cond_8
    :goto_2
    if-eqz v6, :cond_b

    .line 80
    .line 81
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 82
    .line 83
    if-eqz p2, :cond_b

    .line 84
    .line 85
    if-nez p1, :cond_9

    .line 86
    .line 87
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 88
    .line 89
    .line 90
    move-result-object p2

    .line 91
    iput-object p0, p2, Lcom/android/server/wm/Task;->mTranslucentActivityWaiting:Lcom/android/server/wm/ActivityRecord;

    .line 92
    .line 93
    iput-object p0, p2, Lcom/android/server/wm/Task;->mPendingConvertFromTranslucentActivity:Lcom/android/server/wm/ActivityRecord;

    .line 94
    .line 95
    iget-object v0, p2, Lcom/android/server/wm/Task;->mUndrawnActivitiesBelowTopTranslucent:Ljava/util/ArrayList;

    .line 96
    .line 97
    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 98
    .line 99
    .line 100
    iget-object p2, p2, Lcom/android/server/wm/Task;->mHandler:Lcom/android/server/wm/Task$ActivityTaskHandler;

    .line 101
    .line 102
    const/16 v0, 0x65

    .line 103
    .line 104
    const-wide/16 v1, 0x7d0

    .line 105
    .line 106
    invoke-virtual {p2, v0, v1, v2}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 107
    .line 108
    .line 109
    goto :goto_3

    .line 110
    :cond_9
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 111
    .line 112
    .line 113
    move-result-object p2

    .line 114
    iget-object v0, p2, Lcom/android/server/wm/Task;->mPendingConvertFromTranslucentActivity:Lcom/android/server/wm/ActivityRecord;

    .line 115
    .line 116
    if-eq p0, v0, :cond_a

    .line 117
    .line 118
    new-instance v0, Ljava/lang/StringBuilder;

    .line 119
    .line 120
    const-string v1, "convertFromTranslucent expects "

    .line 121
    .line 122
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 123
    .line 124
    .line 125
    iget-object v1, p2, Lcom/android/server/wm/Task;->mPendingConvertFromTranslucentActivity:Lcom/android/server/wm/ActivityRecord;

    .line 126
    .line 127
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 128
    .line 129
    .line 130
    const-string v1, " but is "

    .line 131
    .line 132
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 133
    .line 134
    .line 135
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 136
    .line 137
    .line 138
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 139
    .line 140
    .line 141
    move-result-object v0

    .line 142
    const-string v1, "ActivityTaskManager"

    .line 143
    .line 144
    invoke-static {v1, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 145
    .line 146
    .line 147
    :cond_a
    const/4 v0, 0x0

    .line 148
    iput-object v0, p2, Lcom/android/server/wm/Task;->mPendingConvertFromTranslucentActivity:Lcom/android/server/wm/ActivityRecord;

    .line 149
    .line 150
    :cond_b
    :goto_3
    if-nez v6, :cond_c

    .line 151
    .line 152
    if-nez p1, :cond_d

    .line 153
    .line 154
    :cond_c
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mRootWindowContainer:Lcom/android/server/wm/RootWindowContainer;

    .line 155
    .line 156
    invoke-virtual {p0}, Lcom/android/server/wm/RootWindowContainer;->ensureActivitiesVisible()V

    .line 157
    .line 158
    .line 159
    :cond_d
    return v6
.end method

.method public final setOverrideGender(Landroid/content/res/Configuration;I)Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mGrammaticalManagerInternal:Lcom/android/server/grammaticalinflection/GrammaticalInflectionService$GrammaticalInflectionManagerInternalImpl;

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getUid()I

    .line 6
    .line 7
    .line 8
    move-result p0

    .line 9
    invoke-static {p1, p2, v0, p0}, Lcom/android/server/wm/WindowProcessController;->applyConfigGenderOverride(Landroid/content/res/Configuration;ILcom/android/server/grammaticalinflection/GrammaticalInflectionService$GrammaticalInflectionManagerInternalImpl;I)Z

    .line 10
    .line 11
    .line 12
    move-result p0

    .line 13
    return p0
.end method

.method public final setProcess(Lcom/android/server/wm/WindowProcessController;)V
    .locals 11

    .line 1
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 2
    .line 3
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 4
    .line 5
    const/4 v1, 0x0

    .line 6
    const/4 v2, 0x0

    .line 7
    const/4 v3, 0x1

    .line 8
    if-eqz v0, :cond_0

    .line 9
    .line 10
    invoke-virtual {v0, v3, v2}, Lcom/android/server/wm/Task;->getRootActivity(ZZ)Lcom/android/server/wm/ActivityRecord;

    .line 11
    .line 12
    .line 13
    move-result-object v0

    .line 14
    goto :goto_0

    .line 15
    :cond_0
    move-object v0, v1

    .line 16
    :goto_0
    const-string v4, "ActivityTaskManager"

    .line 17
    .line 18
    if-ne v0, p0, :cond_2

    .line 19
    .line 20
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 21
    .line 22
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->clearRootProcess()V

    .line 23
    .line 24
    .line 25
    iget-object v5, v0, Lcom/android/server/wm/Task;->intent:Landroid/content/Intent;

    .line 26
    .line 27
    if-eqz v5, :cond_2

    .line 28
    .line 29
    invoke-virtual {v5}, Landroid/content/Intent;->getFlags()I

    .line 30
    .line 31
    .line 32
    move-result v5

    .line 33
    const/high16 v6, 0x800000

    .line 34
    .line 35
    and-int/2addr v5, v6

    .line 36
    if-nez v5, :cond_2

    .line 37
    .line 38
    iput-object p1, v0, Lcom/android/server/wm/Task;->mRootProcess:Lcom/android/server/wm/WindowProcessController;

    .line 39
    .line 40
    iget-object v5, p1, Lcom/android/server/wm/WindowProcessController;->mRecentTasks:Ljava/util/ArrayList;

    .line 41
    .line 42
    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 43
    .line 44
    .line 45
    iput-boolean v3, p1, Lcom/android/server/wm/WindowProcessController;->mHasRecentTasks:Z

    .line 46
    .line 47
    sget-boolean v5, Lcom/samsung/android/rune/CoreRune;->FW_DEDICATED_MEMORY:Z

    .line 48
    .line 49
    if-eqz v5, :cond_2

    .line 50
    .line 51
    iget-object v5, v0, Lcom/android/server/wm/Task;->mRootProcess:Lcom/android/server/wm/WindowProcessController;

    .line 52
    .line 53
    iget-object v5, v5, Lcom/android/server/wm/WindowProcessController;->mName:Ljava/lang/String;

    .line 54
    .line 55
    iput-object v5, v0, Lcom/android/server/wm/Task;->mHostProcessName:Ljava/lang/String;

    .line 56
    .line 57
    iget-object v5, v0, Lcom/android/server/wm/TaskFragment;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 58
    .line 59
    iget-object v5, v5, Lcom/android/server/wm/ActivityTaskSupervisor;->mRecentTasks:Lcom/android/server/wm/RecentTasks;

    .line 60
    .line 61
    iget-object v6, v0, Lcom/android/server/wm/Task;->mOldHostProcessName:Ljava/lang/String;

    .line 62
    .line 63
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 64
    .line 65
    .line 66
    iget v7, v0, Lcom/android/server/wm/Task;->mUserId:I

    .line 67
    .line 68
    iget-object v8, v0, Lcom/android/server/wm/Task;->mHostProcessName:Ljava/lang/String;

    .line 69
    .line 70
    iget-object v9, v5, Lcom/android/server/wm/RecentTasks;->mUserToProcs:Lcom/android/server/wm/RecentTasks$UserToProcMap;

    .line 71
    .line 72
    invoke-virtual {v9, v7}, Lcom/android/server/wm/RecentTasks$UserToProcMap;->get(I)Ljava/util/HashMap;

    .line 73
    .line 74
    .line 75
    move-result-object v7

    .line 76
    invoke-virtual {v7, v8}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    .line 77
    .line 78
    .line 79
    move-result v7

    .line 80
    if-eqz v7, :cond_1

    .line 81
    .line 82
    invoke-virtual {v5, v0, v3}, Lcom/android/server/wm/RecentTasks;->dedicateTo(Lcom/android/server/wm/Task;Z)V

    .line 83
    .line 84
    .line 85
    goto :goto_1

    .line 86
    :cond_1
    iget-boolean v7, v0, Lcom/android/server/wm/Task;->mDedicatedTask:Z

    .line 87
    .line 88
    if-eqz v7, :cond_2

    .line 89
    .line 90
    new-instance v7, Ljava/lang/StringBuilder;

    .line 91
    .line 92
    const-string/jumbo v8, "t"

    .line 93
    .line 94
    .line 95
    invoke-direct {v7, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 96
    .line 97
    .line 98
    iget v8, v0, Lcom/android/server/wm/Task;->mTaskId:I

    .line 99
    .line 100
    const-string v9, " hostprocess "

    .line 101
    .line 102
    const-string v10, " changed to "

    .line 103
    .line 104
    invoke-static {v8, v9, v6, v10, v7}, Lcom/android/server/alarm/AlarmManagerService$DeliveryTracker$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 105
    .line 106
    .line 107
    iget-object v6, v0, Lcom/android/server/wm/Task;->mHostProcessName:Ljava/lang/String;

    .line 108
    .line 109
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 110
    .line 111
    .line 112
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 113
    .line 114
    .line 115
    move-result-object v6

    .line 116
    invoke-static {v4, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 117
    .line 118
    .line 119
    iput-boolean v2, v0, Lcom/android/server/wm/Task;->mDedicatedTask:Z

    .line 120
    .line 121
    iget-object v5, v5, Lcom/android/server/wm/RecentTasks;->mService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 122
    .line 123
    iget v0, v0, Lcom/android/server/wm/Task;->mTaskId:I

    .line 124
    .line 125
    invoke-virtual {v5, v0}, Lcom/android/server/wm/ActivityTaskManagerService;->notifyDedicated(I)V

    .line 126
    .line 127
    .line 128
    :cond_2
    :goto_1
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 129
    .line 130
    .line 131
    iget-wide v5, p0, Lcom/android/server/wm/ActivityRecord;->lastLaunchTime:J

    .line 132
    .line 133
    iget-wide v7, p1, Lcom/android/server/wm/WindowProcessController;->mLastActivityLaunchTime:J

    .line 134
    .line 135
    cmp-long v0, v5, v7

    .line 136
    .line 137
    if-gtz v0, :cond_3

    .line 138
    .line 139
    iget-wide v7, p1, Lcom/android/server/wm/WindowProcessController;->mLastActivityLaunchTime:J

    .line 140
    .line 141
    cmp-long v0, v5, v7

    .line 142
    .line 143
    if-gez v0, :cond_9

    .line 144
    .line 145
    const-string v0, "Tried to set launchTime ("

    .line 146
    .line 147
    const-string v2, ") < mLastActivityLaunchTime ("

    .line 148
    .line 149
    invoke-static {v0, v5, v6, v2}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/StringBuilder;

    .line 150
    .line 151
    .line 152
    move-result-object v0

    .line 153
    iget-wide v5, p1, Lcom/android/server/wm/WindowProcessController;->mLastActivityLaunchTime:J

    .line 154
    .line 155
    invoke-virtual {v0, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 156
    .line 157
    .line 158
    const-string v2, ")"

    .line 159
    .line 160
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 161
    .line 162
    .line 163
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 164
    .line 165
    .line 166
    move-result-object v0

    .line 167
    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 168
    .line 169
    .line 170
    goto :goto_4

    .line 171
    :cond_3
    iget-wide v7, p1, Lcom/android/server/wm/WindowProcessController;->mLastActivityLaunchTime:J

    .line 172
    .line 173
    iget-boolean v0, p1, Lcom/android/server/wm/WindowProcessController;->mInstrumenting:Z

    .line 174
    .line 175
    if-nez v0, :cond_8

    .line 176
    .line 177
    iget-boolean v0, p1, Lcom/android/server/wm/WindowProcessController;->mDebugging:Z

    .line 178
    .line 179
    if-nez v0, :cond_8

    .line 180
    .line 181
    const-wide/16 v9, 0x0

    .line 182
    .line 183
    cmp-long v0, v7, v9

    .line 184
    .line 185
    if-gtz v0, :cond_4

    .line 186
    .line 187
    goto :goto_3

    .line 188
    :cond_4
    iget-object v0, p1, Lcom/android/server/wm/WindowProcessController;->mAtm:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 189
    .line 190
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mProcessMap:Lcom/android/server/wm/WindowProcessControllerMap;

    .line 191
    .line 192
    iget v9, p0, Lcom/android/server/wm/ActivityRecord;->launchedFromPid:I

    .line 193
    .line 194
    invoke-virtual {v0, v9}, Lcom/android/server/wm/WindowProcessControllerMap;->getProcess(I)Lcom/android/server/wm/WindowProcessController;

    .line 195
    .line 196
    .line 197
    move-result-object v0

    .line 198
    if-eqz v0, :cond_5

    .line 199
    .line 200
    iget-boolean v0, v0, Lcom/android/server/wm/WindowProcessController;->mInstrumenting:Z

    .line 201
    .line 202
    if-eqz v0, :cond_5

    .line 203
    .line 204
    goto :goto_3

    .line 205
    :cond_5
    sub-long v7, v5, v7

    .line 206
    .line 207
    const-wide/16 v9, 0x1f4

    .line 208
    .line 209
    cmp-long v0, v7, v9

    .line 210
    .line 211
    if-gez v0, :cond_6

    .line 212
    .line 213
    iget v0, p1, Lcom/android/server/wm/WindowProcessController;->mRapidActivityLaunchCount:I

    .line 214
    .line 215
    add-int/2addr v0, v3

    .line 216
    iput v0, p1, Lcom/android/server/wm/WindowProcessController;->mRapidActivityLaunchCount:I

    .line 217
    .line 218
    goto :goto_2

    .line 219
    :cond_6
    const-wide/16 v9, 0x5dc

    .line 220
    .line 221
    cmp-long v0, v7, v9

    .line 222
    .line 223
    if-ltz v0, :cond_7

    .line 224
    .line 225
    iput v2, p1, Lcom/android/server/wm/WindowProcessController;->mRapidActivityLaunchCount:I

    .line 226
    .line 227
    :cond_7
    :goto_2
    iget v0, p1, Lcom/android/server/wm/WindowProcessController;->mRapidActivityLaunchCount:I

    .line 228
    .line 229
    const/16 v7, 0xc8

    .line 230
    .line 231
    if-le v0, v7, :cond_8

    .line 232
    .line 233
    iput v2, p1, Lcom/android/server/wm/WindowProcessController;->mRapidActivityLaunchCount:I

    .line 234
    .line 235
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 236
    .line 237
    new-instance v2, Ljava/lang/StringBuilder;

    .line 238
    .line 239
    const-string v7, "Removing task "

    .line 240
    .line 241
    invoke-direct {v2, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 242
    .line 243
    .line 244
    iget v7, v0, Lcom/android/server/wm/Task;->mTaskId:I

    .line 245
    .line 246
    const-string v8, " because of rapid activity launch"

    .line 247
    .line 248
    invoke-static {v2, v7, v8, v4}, Lcom/android/server/UiModeManagerService$13$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/String;)V

    .line 249
    .line 250
    .line 251
    iget-object v2, p1, Lcom/android/server/wm/WindowProcessController;->mAtm:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 252
    .line 253
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 254
    .line 255
    new-instance v4, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda9;

    .line 256
    .line 257
    invoke-direct {v4, p1, v0}, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda9;-><init>(Lcom/android/server/wm/WindowProcessController;Lcom/android/server/wm/Task;)V

    .line 258
    .line 259
    .line 260
    invoke-virtual {v2, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 261
    .line 262
    .line 263
    :cond_8
    :goto_3
    iput-wide v5, p1, Lcom/android/server/wm/WindowProcessController;->mLastActivityLaunchTime:J

    .line 264
    .line 265
    :cond_9
    :goto_4
    iget-object v0, p1, Lcom/android/server/wm/WindowProcessController;->mActivities:Ljava/util/ArrayList;

    .line 266
    .line 267
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 268
    .line 269
    .line 270
    move-result v0

    .line 271
    if-eqz v0, :cond_a

    .line 272
    .line 273
    goto :goto_5

    .line 274
    :cond_a
    iget-object v0, p1, Lcom/android/server/wm/WindowProcessController;->mActivities:Ljava/util/ArrayList;

    .line 275
    .line 276
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 277
    .line 278
    .line 279
    iput-boolean v3, p1, Lcom/android/server/wm/WindowProcessController;->mHasActivities:Z

    .line 280
    .line 281
    iget-object v0, p1, Lcom/android/server/wm/WindowProcessController;->mInactiveActivities:Ljava/util/ArrayList;

    .line 282
    .line 283
    if-eqz v0, :cond_b

    .line 284
    .line 285
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 286
    .line 287
    .line 288
    :cond_b
    invoke-virtual {p1, v1}, Lcom/android/server/wm/WindowProcessController;->updateActivityConfigurationListener(Lcom/android/server/wm/ActivityRecord;)V

    .line 289
    .line 290
    .line 291
    :goto_5
    sget-object p1, Lcom/android/server/wm/ActivityTaskManagerService;->sIsPip2ExperimentEnabled:Ljava/lang/Boolean;

    .line 292
    .line 293
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasProcess()Z

    .line 294
    .line 295
    .line 296
    move-result p1

    .line 297
    if-nez p1, :cond_c

    .line 298
    .line 299
    sget p1, Landroid/os/InputConstants;->DEFAULT_DISPATCHING_TIMEOUT_MILLIS:I

    .line 300
    .line 301
    :goto_6
    int-to-long v0, p1

    .line 302
    goto :goto_7

    .line 303
    :cond_c
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 304
    .line 305
    if-nez p1, :cond_d

    .line 306
    .line 307
    sget p1, Landroid/os/InputConstants;->DEFAULT_DISPATCHING_TIMEOUT_MILLIS:I

    .line 308
    .line 309
    goto :goto_6

    .line 310
    :cond_d
    invoke-virtual {p1}, Lcom/android/server/wm/WindowProcessController;->getInputDispatchingTimeoutMillis()J

    .line 311
    .line 312
    .line 313
    move-result-wide v0

    .line 314
    :goto_7
    iput-wide v0, p0, Lcom/android/server/wm/ActivityRecord;->mInputDispatchingTimeoutMillis:J

    .line 315
    .line 316
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 317
    .line 318
    .line 319
    move-result-object p0

    .line 320
    if-eqz p0, :cond_e

    .line 321
    .line 322
    invoke-virtual {p0}, Lcom/android/server/wm/TaskFragment;->sendTaskFragmentInfoChanged()V

    .line 323
    .line 324
    .line 325
    :cond_e
    return-void
.end method

.method public final setRequestedOrientation(I)V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mOrientationPolicy:Lcom/android/server/wm/AppCompatOrientationPolicy;

    .line 4
    .line 5
    iget-object v1, v0, Lcom/android/server/wm/AppCompatOrientationPolicy;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 6
    .line 7
    iget-object v1, v1, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatOrientationOverrides:Lcom/android/server/wm/AppCompatOrientationOverrides;

    .line 8
    .line 9
    iget-object v2, v1, Lcom/android/server/wm/AppCompatOrientationOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 10
    .line 11
    iget-object v2, v2, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 12
    .line 13
    const-wide/32 v3, 0xf2d5f32

    .line 14
    .line 15
    .line 16
    invoke-virtual {v2, v3, v4}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 17
    .line 18
    .line 19
    move-result v2

    .line 20
    iget-object v3, v1, Lcom/android/server/wm/AppCompatOrientationOverrides;->mIgnoreRequestedOrientationOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 21
    .line 22
    invoke-virtual {v3, v2}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOverrideAndProperty(Z)Z

    .line 23
    .line 24
    .line 25
    move-result v2

    .line 26
    const/4 v3, 0x0

    .line 27
    const/4 v4, 0x1

    .line 28
    const-string v5, "Ignoring orientation update to "

    .line 29
    .line 30
    const-string v6, "ActivityTaskManager"

    .line 31
    .line 32
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOrientationPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 33
    .line 34
    if-eqz v2, :cond_3

    .line 35
    .line 36
    iget-object v2, v1, Lcom/android/server/wm/AppCompatOrientationOverrides;->mOrientationOverridesState:Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;

    .line 37
    .line 38
    iget-boolean v2, v2, Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;->mIsRelaunchingAfterRequestedOrientationChanged:Z

    .line 39
    .line 40
    if-eqz v2, :cond_0

    .line 41
    .line 42
    new-instance p0, Ljava/lang/StringBuilder;

    .line 43
    .line 44
    invoke-direct {p0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 45
    .line 46
    .line 47
    invoke-static {p1}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 48
    .line 49
    .line 50
    move-result-object p1

    .line 51
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 52
    .line 53
    .line 54
    const-string p1, " due to relaunching after setRequestedOrientation for "

    .line 55
    .line 56
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 57
    .line 58
    .line 59
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 60
    .line 61
    .line 62
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 63
    .line 64
    .line 65
    move-result-object p0

    .line 66
    invoke-static {v6, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 67
    .line 68
    .line 69
    goto :goto_2

    .line 70
    :cond_0
    iget-object v2, v0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 71
    .line 72
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 73
    .line 74
    iget-object v2, v2, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 75
    .line 76
    if-eqz v2, :cond_1

    .line 77
    .line 78
    iget-object v2, v2, Lcom/android/server/wm/DisplayContent;->mAppCompatCameraPolicy:Lcom/android/server/wm/AppCompatCameraPolicy;

    .line 79
    .line 80
    goto :goto_0

    .line 81
    :cond_1
    const/4 v2, 0x0

    .line 82
    :goto_0
    if-eqz v2, :cond_3

    .line 83
    .line 84
    iget-object v2, v2, Lcom/android/server/wm/AppCompatCameraPolicy;->mDisplayRotationCompatPolicy:Lcom/android/server/wm/DisplayRotationCompatPolicy;

    .line 85
    .line 86
    if-eqz v2, :cond_2

    .line 87
    .line 88
    invoke-virtual {v2, v4, v0}, Lcom/android/server/wm/DisplayRotationCompatPolicy;->isTreatmentEnabledForActivity(ZLcom/android/server/wm/ActivityRecord;)Z

    .line 89
    .line 90
    .line 91
    move-result v2

    .line 92
    goto :goto_1

    .line 93
    :cond_2
    move v2, v3

    .line 94
    :goto_1
    if-eqz v2, :cond_3

    .line 95
    .line 96
    new-instance p0, Ljava/lang/StringBuilder;

    .line 97
    .line 98
    invoke-direct {p0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 99
    .line 100
    .line 101
    invoke-static {p1}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 102
    .line 103
    .line 104
    move-result-object p1

    .line 105
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 106
    .line 107
    .line 108
    const-string p1, " due to camera compat treatment for "

    .line 109
    .line 110
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 111
    .line 112
    .line 113
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 114
    .line 115
    .line 116
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 117
    .line 118
    .line 119
    move-result-object p0

    .line 120
    invoke-static {v6, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 121
    .line 122
    .line 123
    goto :goto_2

    .line 124
    :cond_3
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatOrientationOverrides;->shouldIgnoreOrientationRequestLoop()Z

    .line 125
    .line 126
    .line 127
    move-result v1

    .line 128
    if-eqz v1, :cond_4

    .line 129
    .line 130
    new-instance p0, Ljava/lang/StringBuilder;

    .line 131
    .line 132
    invoke-direct {p0, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 133
    .line 134
    .line 135
    invoke-static {p1}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 136
    .line 137
    .line 138
    move-result-object p1

    .line 139
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 140
    .line 141
    .line 142
    const-string p1, " as orientation request loop was detected for "

    .line 143
    .line 144
    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 145
    .line 146
    .line 147
    invoke-virtual {p0, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 148
    .line 149
    .line 150
    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 151
    .line 152
    .line 153
    move-result-object p0

    .line 154
    invoke-static {v6, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 155
    .line 156
    .line 157
    :goto_2
    return-void

    .line 158
    :cond_4
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 159
    .line 160
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ROTATION_COMPAT_MODE:Z

    .line 161
    .line 162
    if-eqz v1, :cond_5

    .line 163
    .line 164
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 165
    .line 166
    .line 167
    move-result-object v1

    .line 168
    if-eqz v1, :cond_5

    .line 169
    .line 170
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 171
    .line 172
    .line 173
    move-result-object v1

    .line 174
    iget-boolean v1, v1, Lcom/android/server/wm/AppCompatDisplayInsets;->mIsRotationCompatMode:Z

    .line 175
    .line 176
    if-eqz v1, :cond_5

    .line 177
    .line 178
    goto :goto_3

    .line 179
    :cond_5
    invoke-virtual {p0, v3, p1}, Lcom/android/server/wm/ActivityRecord;->getRequestedConfigurationOrientation(ZI)I

    .line 180
    .line 181
    .line 182
    move-result v1

    .line 183
    invoke-virtual {p0, v3}, Lcom/android/server/wm/ActivityRecord;->getRequestedConfigurationOrientation(Z)I

    .line 184
    .line 185
    .line 186
    move-result v2

    .line 187
    if-eq v1, v2, :cond_6

    .line 188
    .line 189
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 190
    .line 191
    iget-object v1, v1, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 192
    .line 193
    invoke-virtual {v1}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->clearSizeCompatModeAttributes()V

    .line 194
    .line 195
    .line 196
    :cond_6
    :goto_3
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ORIENTATION_enabled:[Z

    .line 197
    .line 198
    aget-boolean v1, v1, v4

    .line 199
    .line 200
    if-eqz v1, :cond_7

    .line 201
    .line 202
    invoke-static {p1}, Landroid/content/pm/ActivityInfo;->screenOrientationToString(I)Ljava/lang/String;

    .line 203
    .line 204
    .line 205
    move-result-object v1

    .line 206
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 207
    .line 208
    .line 209
    move-result-object v1

    .line 210
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 211
    .line 212
    .line 213
    move-result-object v2

    .line 214
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 215
    .line 216
    filled-new-array {v1, v2}, [Ljava/lang/Object;

    .line 217
    .line 218
    .line 219
    move-result-object v10

    .line 220
    const-wide v6, -0x7f5ed8954e91c6aaL

    .line 221
    .line 222
    .line 223
    .line 224
    .line 225
    const/4 v8, 0x0

    .line 226
    const/4 v9, 0x0

    .line 227
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 228
    .line 229
    .line 230
    :cond_7
    invoke-virtual {p0, p1, p0}, Lcom/android/server/wm/WindowContainer;->setOrientation(ILcom/android/server/wm/WindowContainer;)V

    .line 231
    .line 232
    .line 233
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 234
    .line 235
    if-eqz v1, :cond_8

    .line 236
    .line 237
    sget-object v1, Lcom/android/server/wm/SizeCompatPolicyManager$LazyHolder;->sManager:Lcom/android/server/wm/SizeCompatPolicyManager;

    .line 238
    .line 239
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 240
    .line 241
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 242
    .line 243
    .line 244
    invoke-static {v2}, Lcom/android/server/wm/SizeCompatPolicyManager;->ensureConfiguration(Lcom/android/server/wm/Task;)V

    .line 245
    .line 246
    .line 247
    :cond_8
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 248
    .line 249
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mDexCompatController:Lcom/android/server/wm/DexCompatController;

    .line 250
    .line 251
    invoke-virtual {v1, p0}, Lcom/android/server/wm/DexCompatController;->isOrientationChanged(Lcom/android/server/wm/ActivityRecord;)Z

    .line 252
    .line 253
    .line 254
    move-result v1

    .line 255
    if-eqz v1, :cond_9

    .line 256
    .line 257
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 258
    .line 259
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mDexCompatController:Lcom/android/server/wm/DexCompatController;

    .line 260
    .line 261
    invoke-virtual {v1, p0}, Lcom/android/server/wm/DexCompatController;->rotateDexCompatTaskLocked(Lcom/android/server/wm/ActivityRecord;)V

    .line 262
    .line 263
    .line 264
    goto :goto_5

    .line 265
    :cond_9
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 266
    .line 267
    iget v2, v1, Lcom/android/server/wm/Task;->mDexCompatUiMode:I

    .line 268
    .line 269
    const/4 v5, 0x3

    .line 270
    if-ne v2, v5, :cond_a

    .line 271
    .line 272
    move v2, v4

    .line 273
    goto :goto_4

    .line 274
    :cond_a
    move v2, v3

    .line 275
    :goto_4
    if-eqz v2, :cond_b

    .line 276
    .line 277
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 278
    .line 279
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mDexCompatController:Lcom/android/server/wm/DexCompatController;

    .line 280
    .line 281
    invoke-virtual {v2, v1, p0}, Lcom/android/server/wm/DexCompatController;->changeWindowingModeIfNeeded(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;)V

    .line 282
    .line 283
    .line 284
    :cond_b
    :goto_5
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getMergedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 285
    .line 286
    .line 287
    move-result-object v1

    .line 288
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 289
    .line 290
    invoke-virtual {v2}, Landroid/util/MergedConfiguration;->getMergedConfiguration()Landroid/content/res/Configuration;

    .line 291
    .line 292
    .line 293
    move-result-object v2

    .line 294
    invoke-virtual {v1, v2}, Landroid/content/res/Configuration;->equals(Landroid/content/res/Configuration;)Z

    .line 295
    .line 296
    .line 297
    move-result v1

    .line 298
    if-nez v1, :cond_d

    .line 299
    .line 300
    invoke-virtual {p0, v3}, Lcom/android/server/wm/ActivityRecord;->ensureActivityConfiguration(Z)Z

    .line 301
    .line 302
    .line 303
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 304
    .line 305
    if-le v1, v0, :cond_c

    .line 306
    .line 307
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 308
    .line 309
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 310
    .line 311
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatOrientationOverrides:Lcom/android/server/wm/AppCompatOrientationOverrides;

    .line 312
    .line 313
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOrientationOverrides;->mOrientationOverridesState:Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;

    .line 314
    .line 315
    iput-boolean v4, v0, Lcom/android/server/wm/AppCompatOrientationOverrides$OrientationOverridesState;->mIsRelaunchingAfterRequestedOrientationChanged:Z

    .line 316
    .line 317
    :cond_c
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 318
    .line 319
    invoke-virtual {v0, p0}, Lcom/android/server/wm/TransitionController;->inPlayingTransition(Lcom/android/server/wm/WindowContainer;)Z

    .line 320
    .line 321
    .line 322
    move-result v0

    .line 323
    if-eqz v0, :cond_d

    .line 324
    .line 325
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 326
    .line 327
    iget-object v0, v0, Lcom/android/server/wm/TransitionController;->mValidateActivityCompat:Ljava/util/ArrayList;

    .line 328
    .line 329
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 330
    .line 331
    .line 332
    :cond_d
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 333
    .line 334
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mTaskChangeNotificationController:Lcom/android/server/wm/TaskChangeNotificationController;

    .line 335
    .line 336
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 337
    .line 338
    iget v1, v1, Lcom/android/server/wm/Task;->mTaskId:I

    .line 339
    .line 340
    iget-object v2, v0, Lcom/android/server/wm/TaskChangeNotificationController;->mHandler:Lcom/android/server/wm/TaskChangeNotificationController$MainHandler;

    .line 341
    .line 342
    const/16 v3, 0xc

    .line 343
    .line 344
    invoke-virtual {v2, v3, v1, p1}, Landroid/os/Handler;->obtainMessage(III)Landroid/os/Message;

    .line 345
    .line 346
    .line 347
    move-result-object p1

    .line 348
    iget-object v1, v0, Lcom/android/server/wm/TaskChangeNotificationController;->mNotifyActivityRequestedOrientationChanged:Lcom/android/server/wm/TaskChangeNotificationController$$ExternalSyntheticLambda0;

    .line 349
    .line 350
    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/TaskChangeNotificationController;->forAllLocalListeners(Lcom/android/server/wm/TaskChangeNotificationController$$ExternalSyntheticLambda0;Landroid/os/Message;)V

    .line 351
    .line 352
    .line 353
    invoke-virtual {p1}, Landroid/os/Message;->sendToTarget()V

    .line 354
    .line 355
    .line 356
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 357
    .line 358
    iget-object p0, p0, Lcom/android/server/wm/DisplayContent;->mDisplayRotation:Lcom/android/server/wm/DisplayRotation;

    .line 359
    .line 360
    iget-object p1, p0, Lcom/android/server/wm/DisplayRotation;->mCompatPolicyForImmersiveApps:Lcom/android/server/wm/DisplayRotationImmersiveAppCompatPolicy;

    .line 361
    .line 362
    if-eqz p1, :cond_f

    .line 363
    .line 364
    iget p1, p0, Lcom/android/server/wm/DisplayRotation;->mRotationChoiceShownToUserForConfirmation:I

    .line 365
    .line 366
    const/4 v0, -0x1

    .line 367
    if-ne p1, v0, :cond_e

    .line 368
    .line 369
    goto :goto_6

    .line 370
    :cond_e
    iget-object p0, p0, Lcom/android/server/wm/DisplayRotation;->mOrientationListener:Lcom/android/server/wm/DisplayRotation$OrientationListener;

    .line 371
    .line 372
    invoke-virtual {p0, p1}, Lcom/android/server/wm/DisplayRotation$OrientationListener;->onProposedRotationChanged(I)V

    .line 373
    .line 374
    .line 375
    :cond_f
    :goto_6
    return-void
.end method

.method public final setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V
    .locals 11

    .line 1
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    aget-boolean v2, v0, v1

    .line 5
    .line 6
    if-eqz v2, :cond_0

    .line 7
    .line 8
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 9
    .line 10
    .line 11
    move-result-object v2

    .line 12
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 13
    .line 14
    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 15
    .line 16
    .line 17
    move-result-object v3

    .line 18
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 19
    .line 20
    .line 21
    move-result-object v4

    .line 22
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 23
    .line 24
    filled-new-array {v2, v3, v4, p2}, [Ljava/lang/Object;

    .line 25
    .line 26
    .line 27
    move-result-object v10

    .line 28
    const-wide v6, -0x5f634207b38ec40eL    # -1.371956168164014E-151

    .line 29
    .line 30
    .line 31
    .line 32
    .line 33
    const/4 v8, 0x0

    .line 34
    const/4 v9, 0x0

    .line 35
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 36
    .line 37
    .line 38
    :cond_0
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 39
    .line 40
    if-ne p1, v2, :cond_2

    .line 41
    .line 42
    aget-boolean p0, v0, v1

    .line 43
    .line 44
    if-eqz p0, :cond_1

    .line 45
    .line 46
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 47
    .line 48
    .line 49
    move-result-object p0

    .line 50
    sget-object v0, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 51
    .line 52
    filled-new-array {p0}, [Ljava/lang/Object;

    .line 53
    .line 54
    .line 55
    move-result-object v5

    .line 56
    const-wide v1, 0x3d9436bd9a6c341fL    # 4.5960929618198E-12

    .line 57
    .line 58
    .line 59
    .line 60
    .line 61
    const/4 v3, 0x0

    .line 62
    const/4 v4, 0x0

    .line 63
    invoke-static/range {v0 .. v5}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 64
    .line 65
    .line 66
    :cond_1
    return-void

    .line 67
    :cond_2
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 68
    .line 69
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 70
    .line 71
    .line 72
    move-result-object v0

    .line 73
    sget-object v2, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 74
    .line 75
    const/4 v3, 0x0

    .line 76
    if-eqz v0, :cond_5

    .line 77
    .line 78
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 79
    .line 80
    .line 81
    move-result-object v0

    .line 82
    iget-object v4, v0, Lcom/android/server/wm/TaskFragment;->mResumedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 83
    .line 84
    const-string v5, " - onActivityStateChanged"

    .line 85
    .line 86
    if-ne p0, v4, :cond_3

    .line 87
    .line 88
    if-eq p1, v2, :cond_3

    .line 89
    .line 90
    invoke-virtual {p2, v5}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 91
    .line 92
    .line 93
    move-result-object v4

    .line 94
    const/4 v6, 0x0

    .line 95
    invoke-virtual {v0, v6, v4}, Lcom/android/server/wm/TaskFragment;->setResumedActivity(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;)V

    .line 96
    .line 97
    .line 98
    :cond_3
    if-ne p1, v2, :cond_4

    .line 99
    .line 100
    invoke-virtual {p2, v5}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 101
    .line 102
    .line 103
    move-result-object p2

    .line 104
    invoke-virtual {v0, p0, p2}, Lcom/android/server/wm/TaskFragment;->setResumedActivity(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;)V

    .line 105
    .line 106
    .line 107
    iget-object p2, v0, Lcom/android/server/wm/TaskFragment;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 108
    .line 109
    iget-object p2, p2, Lcom/android/server/wm/ActivityTaskSupervisor;->mRecentTasks:Lcom/android/server/wm/RecentTasks;

    .line 110
    .line 111
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 112
    .line 113
    invoke-virtual {p2, v4}, Lcom/android/server/wm/RecentTasks;->add(Lcom/android/server/wm/Task;)V

    .line 114
    .line 115
    .line 116
    :cond_4
    invoke-virtual {v0, p0}, Lcom/android/server/wm/TaskFragment;->getOrganizerProcessIfDifferent(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/WindowProcessController;

    .line 117
    .line 118
    .line 119
    move-result-object p2

    .line 120
    if-eqz p2, :cond_5

    .line 121
    .line 122
    iget-object v0, v0, Lcom/android/server/wm/TaskFragment;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 123
    .line 124
    invoke-virtual {v0, p2, v3}, Lcom/android/server/wm/ActivityTaskSupervisor;->onProcessActivityStateChanged(Lcom/android/server/wm/WindowProcessController;Z)V

    .line 125
    .line 126
    .line 127
    invoke-virtual {p2, v3, v1, v1, v3}, Lcom/android/server/wm/WindowProcessController;->updateProcessInfo(ZZZZ)V

    .line 128
    .line 129
    .line 130
    :cond_5
    sget-object p2, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 131
    .line 132
    if-ne p1, p2, :cond_7

    .line 133
    .line 134
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 135
    .line 136
    .line 137
    move-result-object p2

    .line 138
    if-eqz p2, :cond_6

    .line 139
    .line 140
    invoke-virtual {p2}, Lcom/android/server/wm/Task;->shouldSleepActivities()Z

    .line 141
    .line 142
    .line 143
    move-result p2

    .line 144
    goto :goto_0

    .line 145
    :cond_6
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 146
    .line 147
    iget-boolean p2, p2, Lcom/android/server/wm/ActivityTaskManagerService;->mSleeping:Z

    .line 148
    .line 149
    :goto_0
    if-nez p2, :cond_7

    .line 150
    .line 151
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 152
    .line 153
    .line 154
    move-result-object p2

    .line 155
    if-nez p2, :cond_7

    .line 156
    .line 157
    new-instance p1, Ljava/lang/StringBuilder;

    .line 158
    .line 159
    const-string p2, "Attempted to notify stopping on non-existing app token: "

    .line 160
    .line 161
    invoke-direct {p1, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 162
    .line 163
    .line 164
    iget-object p0, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 165
    .line 166
    invoke-virtual {p1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 167
    .line 168
    .line 169
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 170
    .line 171
    .line 172
    move-result-object p0

    .line 173
    const-string p1, "WindowManager"

    .line 174
    .line 175
    invoke-static {p1, p0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 176
    .line 177
    .line 178
    return-void

    .line 179
    :cond_7
    iget-boolean p2, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 180
    .line 181
    if-nez p2, :cond_9

    .line 182
    .line 183
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 184
    .line 185
    if-eq p2, v2, :cond_9

    .line 186
    .line 187
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 188
    .line 189
    if-ne p2, v0, :cond_8

    .line 190
    .line 191
    goto :goto_1

    .line 192
    :cond_8
    move p2, v3

    .line 193
    goto :goto_2

    .line 194
    :cond_9
    :goto_1
    move p2, v1

    .line 195
    :goto_2
    iput-boolean p2, p0, Lcom/android/server/wm/ActivityRecord;->mVisibleForServiceConnection:Z

    .line 196
    .line 197
    iget-object p2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 198
    .line 199
    if-eqz p2, :cond_a

    .line 200
    .line 201
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 202
    .line 203
    invoke-virtual {v0, p2, v3}, Lcom/android/server/wm/ActivityTaskSupervisor;->onProcessActivityStateChanged(Lcom/android/server/wm/WindowProcessController;Z)V

    .line 204
    .line 205
    .line 206
    :cond_a
    invoke-virtual {p1}, Ljava/lang/Enum;->ordinal()I

    .line 207
    .line 208
    .line 209
    move-result p1

    .line 210
    if-eq p1, v1, :cond_12

    .line 211
    .line 212
    const/4 p2, 0x2

    .line 213
    if-eq p1, p2, :cond_11

    .line 214
    .line 215
    const/4 v0, 0x4

    .line 216
    if-eq p1, v0, :cond_10

    .line 217
    .line 218
    const/4 p2, 0x6

    .line 219
    if-eq p1, p2, :cond_f

    .line 220
    .line 221
    const/16 p2, 0x8

    .line 222
    .line 223
    if-eq p1, p2, :cond_e

    .line 224
    .line 225
    const/16 p2, 0x9

    .line 226
    .line 227
    if-eq p1, p2, :cond_b

    .line 228
    .line 229
    goto :goto_3

    .line 230
    :cond_b
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 231
    .line 232
    if-eqz p1, :cond_d

    .line 233
    .line 234
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 235
    .line 236
    if-nez p1, :cond_c

    .line 237
    .line 238
    iget-boolean p1, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 239
    .line 240
    if-eqz p1, :cond_d

    .line 241
    .line 242
    :cond_c
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 243
    .line 244
    invoke-virtual {p1, v3, p0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateBatteryStats(ZLcom/android/server/wm/ActivityRecord;)V

    .line 245
    .line 246
    .line 247
    :cond_d
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 248
    .line 249
    const/16 p2, 0x18

    .line 250
    .line 251
    invoke-virtual {p1, p2, p0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateActivityUsageStats(ILcom/android/server/wm/ActivityRecord;)V

    .line 252
    .line 253
    .line 254
    :cond_e
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 255
    .line 256
    if-eqz p1, :cond_14

    .line 257
    .line 258
    iget-boolean p1, p1, Lcom/android/server/wm/WindowProcessController;->mHasActivities:Z

    .line 259
    .line 260
    if-nez p1, :cond_14

    .line 261
    .line 262
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 263
    .line 264
    invoke-virtual {p0, v1, v3, v1, v3}, Lcom/android/server/wm/WindowProcessController;->updateProcessInfo(ZZZZ)V

    .line 265
    .line 266
    .line 267
    goto :goto_3

    .line 268
    :cond_f
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 269
    .line 270
    const/16 p2, 0x17

    .line 271
    .line 272
    invoke-virtual {p1, p2, p0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateActivityUsageStats(ILcom/android/server/wm/ActivityRecord;)V

    .line 273
    .line 274
    .line 275
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 276
    .line 277
    if-eqz p1, :cond_14

    .line 278
    .line 279
    iget-object p1, p1, Lcom/android/server/wm/DisplayContent;->mUnknownAppVisibilityController:Lcom/android/server/wm/UnknownAppVisibilityController;

    .line 280
    .line 281
    invoke-virtual {p1, p0}, Lcom/android/server/wm/UnknownAppVisibilityController;->appRemovedOrHidden(Lcom/android/server/wm/ActivityRecord;)V

    .line 282
    .line 283
    .line 284
    goto :goto_3

    .line 285
    :cond_10
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 286
    .line 287
    invoke-virtual {p1, v3, p0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateBatteryStats(ZLcom/android/server/wm/ActivityRecord;)V

    .line 288
    .line 289
    .line 290
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 291
    .line 292
    invoke-virtual {p1, p2, p0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateActivityUsageStats(ILcom/android/server/wm/ActivityRecord;)V

    .line 293
    .line 294
    .line 295
    goto :goto_3

    .line 296
    :cond_11
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 297
    .line 298
    invoke-virtual {p1, v1, p0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateBatteryStats(ZLcom/android/server/wm/ActivityRecord;)V

    .line 299
    .line 300
    .line 301
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 302
    .line 303
    invoke-virtual {p1, v1, p0}, Lcom/android/server/wm/ActivityTaskManagerService;->updateActivityUsageStats(ILcom/android/server/wm/ActivityRecord;)V

    .line 304
    .line 305
    .line 306
    :cond_12
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 307
    .line 308
    if-eqz p1, :cond_13

    .line 309
    .line 310
    invoke-virtual {p1, v3, v1, v1, v1}, Lcom/android/server/wm/WindowProcessController;->updateProcessInfo(ZZZZ)V

    .line 311
    .line 312
    .line 313
    :cond_13
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 314
    .line 315
    iget-object p1, p1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 316
    .line 317
    new-instance p2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda7;

    .line 318
    .line 319
    const/4 v0, 0x1

    .line 320
    invoke-direct {p2, v0, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda7;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    .line 321
    .line 322
    .line 323
    invoke-virtual {p1, p2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 324
    .line 325
    .line 326
    :cond_14
    :goto_3
    return-void
.end method

.method public final setSurfaceControl(Landroid/view/SurfaceControl;)V
    .locals 0

    .line 1
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->setSurfaceControl(Landroid/view/SurfaceControl;)V

    .line 2
    .line 3
    .line 4
    if-eqz p1, :cond_0

    .line 5
    .line 6
    const/4 p1, 0x0

    .line 7
    iput p1, p0, Lcom/android/server/wm/ActivityRecord;->mLastDropInputMode:I

    .line 8
    .line 9
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->updateUntrustedEmbeddingInputProtection()V

    .line 10
    .line 11
    .line 12
    :cond_0
    return-void
.end method

.method public final setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V
    .locals 6

    .line 1
    invoke-virtual {p1}, Landroid/app/ActivityManager$TaskDescription;->getIconFilename()Ljava/lang/String;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    if-nez v0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p1}, Landroid/app/ActivityManager$TaskDescription;->getIcon()Landroid/graphics/Bitmap;

    .line 8
    .line 9
    .line 10
    move-result-object v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    iget-wide v1, p0, Lcom/android/server/wm/ActivityRecord;->createTime:J

    .line 14
    .line 15
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 16
    .line 17
    iget v3, v3, Lcom/android/server/wm/Task;->mTaskId:I

    .line 18
    .line 19
    new-instance v4, Ljava/lang/StringBuilder;

    .line 20
    .line 21
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 22
    .line 23
    .line 24
    invoke-static {v3}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 25
    .line 26
    .line 27
    move-result-object v3

    .line 28
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 29
    .line 30
    .line 31
    const-string v3, "_activity_icon_"

    .line 32
    .line 33
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 34
    .line 35
    .line 36
    invoke-virtual {v4, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 37
    .line 38
    .line 39
    const-string v1, ".png"

    .line 40
    .line 41
    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 42
    .line 43
    .line 44
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 45
    .line 46
    .line 47
    move-result-object v1

    .line 48
    new-instance v2, Ljava/io/File;

    .line 49
    .line 50
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 51
    .line 52
    iget v3, v3, Lcom/android/server/wm/Task;->mUserId:I

    .line 53
    .line 54
    new-instance v4, Ljava/io/File;

    .line 55
    .line 56
    invoke-static {v3}, Landroid/os/Environment;->getDataSystemCeDirectory(I)Ljava/io/File;

    .line 57
    .line 58
    .line 59
    move-result-object v3

    .line 60
    const-string/jumbo v5, "recent_images"

    .line 61
    .line 62
    .line 63
    invoke-direct {v4, v3, v5}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 64
    .line 65
    .line 66
    invoke-direct {v2, v4, v1}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 67
    .line 68
    .line 69
    invoke-virtual {v2}, Ljava/io/File;->getAbsolutePath()Ljava/lang/String;

    .line 70
    .line 71
    .line 72
    move-result-object v1

    .line 73
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 74
    .line 75
    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mRecentTasks:Lcom/android/server/wm/RecentTasks;

    .line 76
    .line 77
    iget-object v2, v2, Lcom/android/server/wm/RecentTasks;->mTaskPersister:Lcom/android/server/wm/TaskPersister;

    .line 78
    .line 79
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 80
    .line 81
    .line 82
    new-instance v3, Lcom/android/server/wm/TaskPersister$ImageWriteQueueItem;

    .line 83
    .line 84
    invoke-direct {v3, v0, v1}, Lcom/android/server/wm/TaskPersister$ImageWriteQueueItem;-><init>(Landroid/graphics/Bitmap;Ljava/lang/String;)V

    .line 85
    .line 86
    .line 87
    iget-object v0, v2, Lcom/android/server/wm/TaskPersister;->mPersisterQueue:Lcom/android/server/wm/PersisterQueue;

    .line 88
    .line 89
    invoke-virtual {v0, v3}, Lcom/android/server/wm/PersisterQueue;->updateLastOrAddItem(Lcom/android/server/wm/PersisterQueue$WriteQueueItem;)V

    .line 90
    .line 91
    .line 92
    invoke-virtual {p1, v1}, Landroid/app/ActivityManager$TaskDescription;->setIconFilename(Ljava/lang/String;)V

    .line 93
    .line 94
    .line 95
    :cond_0
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 96
    .line 97
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 98
    .line 99
    invoke-virtual {p0}, Lcom/android/server/wm/Task;->updateTaskDescription$1()V

    .line 100
    .line 101
    .line 102
    return-void
.end method

.method public final setTaskToAffiliateWith(Lcom/android/server/wm/Task;)V
    .locals 5

    .line 1
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->launchMode:I

    .line 2
    .line 3
    const/4 v1, 0x3

    .line 4
    if-eq v0, v1, :cond_5

    .line 5
    .line 6
    const/4 v1, 0x2

    .line 7
    if-eq v0, v1, :cond_5

    .line 8
    .line 9
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 10
    .line 11
    iget-object v0, p0, Lcom/android/server/wm/Task;->mPrevAffiliate:Lcom/android/server/wm/Task;

    .line 12
    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    iget-object v1, p0, Lcom/android/server/wm/Task;->mNextAffiliate:Lcom/android/server/wm/Task;

    .line 16
    .line 17
    invoke-virtual {v0, v1}, Lcom/android/server/wm/Task;->setNextAffiliate(Lcom/android/server/wm/Task;)V

    .line 18
    .line 19
    .line 20
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/Task;->mNextAffiliate:Lcom/android/server/wm/Task;

    .line 21
    .line 22
    if-eqz v0, :cond_1

    .line 23
    .line 24
    iget-object v1, p0, Lcom/android/server/wm/Task;->mPrevAffiliate:Lcom/android/server/wm/Task;

    .line 25
    .line 26
    invoke-virtual {v0, v1}, Lcom/android/server/wm/Task;->setPrevAffiliate(Lcom/android/server/wm/Task;)V

    .line 27
    .line 28
    .line 29
    :cond_1
    const/4 v0, 0x0

    .line 30
    invoke-virtual {p0, v0}, Lcom/android/server/wm/Task;->setPrevAffiliate(Lcom/android/server/wm/Task;)V

    .line 31
    .line 32
    .line 33
    invoke-virtual {p0, v0}, Lcom/android/server/wm/Task;->setNextAffiliate(Lcom/android/server/wm/Task;)V

    .line 34
    .line 35
    .line 36
    iget v1, p1, Lcom/android/server/wm/Task;->mAffiliatedTaskId:I

    .line 37
    .line 38
    iput v1, p0, Lcom/android/server/wm/Task;->mAffiliatedTaskId:I

    .line 39
    .line 40
    :goto_0
    iget-object v1, p1, Lcom/android/server/wm/Task;->mNextAffiliate:Lcom/android/server/wm/Task;

    .line 41
    .line 42
    if-eqz v1, :cond_4

    .line 43
    .line 44
    iget v2, v1, Lcom/android/server/wm/Task;->mAffiliatedTaskId:I

    .line 45
    .line 46
    iget v3, p0, Lcom/android/server/wm/Task;->mAffiliatedTaskId:I

    .line 47
    .line 48
    if-eq v2, v3, :cond_3

    .line 49
    .line 50
    new-instance v2, Ljava/lang/StringBuilder;

    .line 51
    .line 52
    const-string/jumbo v3, "setTaskToAffiliateWith: nextRecents="

    .line 53
    .line 54
    .line 55
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 56
    .line 57
    .line 58
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 59
    .line 60
    .line 61
    const-string v3, " affilTaskId="

    .line 62
    .line 63
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 64
    .line 65
    .line 66
    iget v3, v1, Lcom/android/server/wm/Task;->mAffiliatedTaskId:I

    .line 67
    .line 68
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 69
    .line 70
    .line 71
    const-string v3, " should be "

    .line 72
    .line 73
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 74
    .line 75
    .line 76
    iget v3, p0, Lcom/android/server/wm/Task;->mAffiliatedTaskId:I

    .line 77
    .line 78
    const-string v4, "ActivityTaskManager"

    .line 79
    .line 80
    invoke-static {v2, v3, v4}, Lcom/android/server/VaultKeeperService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 81
    .line 82
    .line 83
    iget-object v2, v1, Lcom/android/server/wm/Task;->mPrevAffiliate:Lcom/android/server/wm/Task;

    .line 84
    .line 85
    if-ne v2, p1, :cond_2

    .line 86
    .line 87
    invoke-virtual {v1, v0}, Lcom/android/server/wm/Task;->setPrevAffiliate(Lcom/android/server/wm/Task;)V

    .line 88
    .line 89
    .line 90
    :cond_2
    invoke-virtual {p1, v0}, Lcom/android/server/wm/Task;->setNextAffiliate(Lcom/android/server/wm/Task;)V

    .line 91
    .line 92
    .line 93
    goto :goto_1

    .line 94
    :cond_3
    move-object p1, v1

    .line 95
    goto :goto_0

    .line 96
    :cond_4
    :goto_1
    invoke-virtual {p1, p0}, Lcom/android/server/wm/Task;->setNextAffiliate(Lcom/android/server/wm/Task;)V

    .line 97
    .line 98
    .line 99
    invoke-virtual {p0, p1}, Lcom/android/server/wm/Task;->setPrevAffiliate(Lcom/android/server/wm/Task;)V

    .line 100
    .line 101
    .line 102
    invoke-virtual {p0, v0}, Lcom/android/server/wm/Task;->setNextAffiliate(Lcom/android/server/wm/Task;)V

    .line 103
    .line 104
    .line 105
    :cond_5
    return-void
.end method

.method public final setVisibility(Z)V
    .locals 21

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move/from16 v1, p1

    .line 4
    .line 5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 6
    .line 7
    .line 8
    move-result-object v2

    .line 9
    if-nez v2, :cond_0

    .line 10
    .line 11
    new-instance v1, Ljava/lang/StringBuilder;

    .line 12
    .line 13
    const-string v2, "Attempted to set visibility of non-existing app token: "

    .line 14
    .line 15
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 16
    .line 17
    .line 18
    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 19
    .line 20
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 21
    .line 22
    .line 23
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 24
    .line 25
    .line 26
    move-result-object v0

    .line 27
    const-string v1, "WindowManager"

    .line 28
    .line 29
    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 30
    .line 31
    .line 32
    return-void

    .line 33
    :cond_0
    iget-boolean v2, v0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 34
    .line 35
    if-ne v1, v2, :cond_1

    .line 36
    .line 37
    iget-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 38
    .line 39
    if-ne v1, v2, :cond_1

    .line 40
    .line 41
    iget-boolean v2, v0, Lcom/android/server/wm/WindowToken;->mClientVisible:Z

    .line 42
    .line 43
    if-ne v1, v2, :cond_1

    .line 44
    .line 45
    iget-object v2, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 46
    .line 47
    invoke-virtual {v2}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 48
    .line 49
    .line 50
    move-result v2

    .line 51
    if-eqz v2, :cond_1

    .line 52
    .line 53
    return-void

    .line 54
    :cond_1
    const/4 v2, 0x0

    .line 55
    if-eqz v1, :cond_2

    .line 56
    .line 57
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 58
    .line 59
    :cond_2
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mDeferHidingClient:Z

    .line 60
    .line 61
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 62
    .line 63
    .line 64
    move-result-object v4

    .line 65
    iget-object v4, v4, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 66
    .line 67
    const/4 v5, 0x2

    .line 68
    const/4 v6, 0x1

    .line 69
    if-nez v1, :cond_4

    .line 70
    .line 71
    iget-boolean v7, v0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 72
    .line 73
    if-nez v7, :cond_4

    .line 74
    .line 75
    if-nez v3, :cond_21

    .line 76
    .line 77
    iget-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mLastDeferHidingClient:Z

    .line 78
    .line 79
    if-eqz v1, :cond_21

    .line 80
    .line 81
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mLastDeferHidingClient:Z

    .line 82
    .line 83
    sget-boolean v1, Lcom/samsung/android/rune/CoreRune;->FW_SHELL_TRANSITION_BUG_FIX:Z

    .line 84
    .line 85
    if-eqz v1, :cond_3

    .line 86
    .line 87
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->inTransition()Z

    .line 88
    .line 89
    .line 90
    move-result v1

    .line 91
    if-eqz v1, :cond_3

    .line 92
    .line 93
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->canTurnScreenOn()Z

    .line 94
    .line 95
    .line 96
    move-result v1

    .line 97
    invoke-virtual {v0, v6, v1}, Lcom/android/server/wm/WindowContainer;->okToAnimate(ZZ)Z

    .line 98
    .line 99
    .line 100
    move-result v1

    .line 101
    if-eqz v1, :cond_3

    .line 102
    .line 103
    goto/16 :goto_6

    .line 104
    .line 105
    :cond_3
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecord;->setClientVisible(Z)V

    .line 106
    .line 107
    .line 108
    goto/16 :goto_6

    .line 109
    .line 110
    :cond_4
    sget-object v7, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_APP_TRANSITIONS_enabled:[Z

    .line 111
    .line 112
    aget-boolean v8, v7, v6

    .line 113
    .line 114
    if-eqz v8, :cond_5

    .line 115
    .line 116
    iget-object v8, v0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 117
    .line 118
    invoke-static {v8}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 119
    .line 120
    .line 121
    move-result-object v9

    .line 122
    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 123
    .line 124
    .line 125
    move-result-object v11

    .line 126
    iget-boolean v8, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 127
    .line 128
    iget-boolean v10, v0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 129
    .line 130
    const/4 v12, 0x6

    .line 131
    invoke-static {v12}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 132
    .line 133
    .line 134
    move-result-object v12

    .line 135
    invoke-static {v12}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 136
    .line 137
    .line 138
    move-result-object v14

    .line 139
    sget-object v15, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_APP_TRANSITIONS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 140
    .line 141
    invoke-static/range {p1 .. p1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 142
    .line 143
    .line 144
    move-result-object v12

    .line 145
    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 146
    .line 147
    .line 148
    move-result-object v8

    .line 149
    invoke-static {v10}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 150
    .line 151
    .line 152
    move-result-object v13

    .line 153
    move-object v10, v12

    .line 154
    move-object v12, v8

    .line 155
    filled-new-array/range {v9 .. v14}, [Ljava/lang/Object;

    .line 156
    .line 157
    .line 158
    move-result-object v20

    .line 159
    const/16 v19, 0x0

    .line 160
    .line 161
    const-wide v16, -0x2fe82a13bfd0cc92L    # -6.89994527024524E77

    .line 162
    .line 163
    .line 164
    .line 165
    .line 166
    const/16 v18, 0x3cc

    .line 167
    .line 168
    invoke-static/range {v15 .. v20}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 169
    .line 170
    .line 171
    :cond_5
    iget-object v8, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 172
    .line 173
    invoke-virtual {v8}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 174
    .line 175
    .line 176
    move-result v8

    .line 177
    if-eqz v8, :cond_a

    .line 178
    .line 179
    iget-object v8, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 180
    .line 181
    invoke-virtual {v8}, Lcom/android/server/wm/TransitionController;->isCollecting()Z

    .line 182
    .line 183
    .line 184
    move-result v8

    .line 185
    if-eqz v8, :cond_6

    .line 186
    .line 187
    iget-object v9, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 188
    .line 189
    invoke-virtual {v9, v0}, Lcom/android/server/wm/TransitionController;->collect(Lcom/android/server/wm/WindowContainer;)V

    .line 190
    .line 191
    .line 192
    move v9, v2

    .line 193
    goto/16 :goto_0

    .line 194
    .line 195
    :cond_6
    iget-object v9, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 196
    .line 197
    invoke-virtual {v9, v0}, Lcom/android/server/wm/TransitionController;->inFinishingTransition(Lcom/android/server/wm/WindowContainer;)Z

    .line 198
    .line 199
    .line 200
    move-result v9

    .line 201
    if-nez v9, :cond_b

    .line 202
    .line 203
    if-eqz v1, :cond_9

    .line 204
    .line 205
    iget-object v10, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 206
    .line 207
    iget-boolean v10, v10, Lcom/android/server/wm/DisplayContent;->mSleeping:Z

    .line 208
    .line 209
    if-eqz v10, :cond_7

    .line 210
    .line 211
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->canShowWhenLocked()Z

    .line 212
    .line 213
    .line 214
    move-result v10

    .line 215
    if-eqz v10, :cond_b

    .line 216
    .line 217
    :cond_7
    iget-object v10, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 218
    .line 219
    invoke-static {v6, v6}, Landroid/os/Debug;->getCallers(II)Ljava/lang/String;

    .line 220
    .line 221
    .line 222
    move-result-object v11

    .line 223
    iget-object v12, v10, Lcom/android/server/wm/TransitionController;->mPlayingTransitions:Ljava/util/ArrayList;

    .line 224
    .line 225
    invoke-virtual {v12}, Ljava/util/ArrayList;->isEmpty()Z

    .line 226
    .line 227
    .line 228
    move-result v12

    .line 229
    xor-int/2addr v12, v6

    .line 230
    new-instance v13, Ljava/lang/StringBuilder;

    .line 231
    .line 232
    const-string v14, "Set visible without transition "

    .line 233
    .line 234
    invoke-direct {v13, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 235
    .line 236
    .line 237
    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 238
    .line 239
    .line 240
    const-string v14, " playing="

    .line 241
    .line 242
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 243
    .line 244
    .line 245
    invoke-virtual {v13, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 246
    .line 247
    .line 248
    const-string v14, " caller="

    .line 249
    .line 250
    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 251
    .line 252
    .line 253
    const-string v14, "TransitionController"

    .line 254
    .line 255
    invoke-static {v13, v11, v14}, Lcom/android/server/BinaryTransparencyService$$ExternalSyntheticOutline0;->m$1(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V

    .line 256
    .line 257
    .line 258
    if-nez v12, :cond_8

    .line 259
    .line 260
    invoke-static/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->enforceSurfaceVisible(Lcom/android/server/wm/WindowContainer;)V

    .line 261
    .line 262
    .line 263
    goto :goto_0

    .line 264
    :cond_8
    iget-object v10, v10, Lcom/android/server/wm/TransitionController;->mStateValidators:Ljava/util/ArrayList;

    .line 265
    .line 266
    new-instance v11, Lcom/android/server/wm/TransitionController$$ExternalSyntheticLambda4;

    .line 267
    .line 268
    const/4 v12, 0x1

    .line 269
    invoke-direct {v11, v12, v0}, Lcom/android/server/wm/TransitionController$$ExternalSyntheticLambda4;-><init>(ILjava/lang/Object;)V

    .line 270
    .line 271
    .line 272
    invoke-virtual {v10, v11}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 273
    .line 274
    .line 275
    goto :goto_0

    .line 276
    :cond_9
    iget-object v10, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 277
    .line 278
    iget-boolean v10, v10, Lcom/android/server/wm/DisplayContent;->mSleeping:Z

    .line 279
    .line 280
    if-nez v10, :cond_b

    .line 281
    .line 282
    new-instance v10, Ljava/lang/StringBuilder;

    .line 283
    .line 284
    const-string v11, "Set invisible without transition "

    .line 285
    .line 286
    invoke-direct {v10, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 287
    .line 288
    .line 289
    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 290
    .line 291
    .line 292
    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 293
    .line 294
    .line 295
    move-result-object v10

    .line 296
    const-string v11, "ActivityTaskManager"

    .line 297
    .line 298
    invoke-static {v11, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 299
    .line 300
    .line 301
    goto :goto_0

    .line 302
    :cond_a
    move v8, v2

    .line 303
    move v9, v8

    .line 304
    :cond_b
    :goto_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/WindowContainer;->onChildVisibilityRequested(Z)V

    .line 305
    .line 306
    .line 307
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 308
    .line 309
    .line 310
    move-result-object v10

    .line 311
    iget-object v11, v10, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 312
    .line 313
    invoke-virtual {v11, v0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 314
    .line 315
    .line 316
    iget-object v11, v10, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 317
    .line 318
    invoke-virtual {v11, v0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 319
    .line 320
    .line 321
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/ActivityRecord;->setVisibleRequested(Z)Z

    .line 322
    .line 323
    .line 324
    iput-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mLastDeferHidingClient:Z

    .line 325
    .line 326
    if-nez v1, :cond_c

    .line 327
    .line 328
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 329
    .line 330
    if-eqz v3, :cond_12

    .line 331
    .line 332
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 333
    .line 334
    if-nez v3, :cond_12

    .line 335
    .line 336
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->hasChild()Z

    .line 337
    .line 338
    .line 339
    move-result v3

    .line 340
    if-eqz v3, :cond_12

    .line 341
    .line 342
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecord;->setClientVisible(Z)V

    .line 343
    .line 344
    .line 345
    goto :goto_1

    .line 346
    :cond_c
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    .line 347
    .line 348
    .line 349
    move-result v3

    .line 350
    if-nez v3, :cond_d

    .line 351
    .line 352
    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isReady()Z

    .line 353
    .line 354
    .line 355
    move-result v3

    .line 356
    if-eqz v3, :cond_d

    .line 357
    .line 358
    iget-object v3, v10, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 359
    .line 360
    invoke-virtual {v3, v0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 361
    .line 362
    .line 363
    :cond_d
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 364
    .line 365
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 366
    .line 367
    if-eqz v3, :cond_e

    .line 368
    .line 369
    iget-boolean v4, v0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 370
    .line 371
    if-eqz v4, :cond_f

    .line 372
    .line 373
    :cond_e
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 374
    .line 375
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mLastAllDrawn:Z

    .line 376
    .line 377
    if-nez v3, :cond_f

    .line 378
    .line 379
    iget-boolean v3, v0, Lcom/android/server/wm/WindowToken;->mClientVisible:Z

    .line 380
    .line 381
    if-nez v3, :cond_f

    .line 382
    .line 383
    new-instance v3, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;

    .line 384
    .line 385
    const/4 v4, 0x5

    .line 386
    invoke-direct {v3, v4}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda3;-><init>(I)V

    .line 387
    .line 388
    .line 389
    invoke-virtual {v0, v3, v6}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 390
    .line 391
    .line 392
    :cond_f
    invoke-super {v0, v6}, Lcom/android/server/wm/WindowToken;->setClientVisible(Z)V

    .line 393
    .line 394
    .line 395
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->requestUpdateWallpaperIfNeeded()V

    .line 396
    .line 397
    .line 398
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ADD_REMOVE_enabled:[Z

    .line 399
    .line 400
    aget-boolean v3, v3, v6

    .line 401
    .line 402
    if-eqz v3, :cond_10

    .line 403
    .line 404
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 405
    .line 406
    .line 407
    move-result-object v3

    .line 408
    sget-object v10, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 409
    .line 410
    filled-new-array {v3}, [Ljava/lang/Object;

    .line 411
    .line 412
    .line 413
    move-result-object v15

    .line 414
    const/4 v13, 0x0

    .line 415
    const/4 v14, 0x0

    .line 416
    const-wide v11, 0x17fb359aba2e3d2aL

    .line 417
    .line 418
    .line 419
    .line 420
    .line 421
    invoke-static/range {v10 .. v15}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 422
    .line 423
    .line 424
    :cond_10
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 425
    .line 426
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 427
    .line 428
    .line 429
    move-result-object v3

    .line 430
    if-eqz v3, :cond_11

    .line 431
    .line 432
    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 433
    .line 434
    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    .line 435
    .line 436
    .line 437
    move-result v3

    .line 438
    if-eqz v3, :cond_11

    .line 439
    .line 440
    goto :goto_1

    .line 441
    :cond_11
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 442
    .line 443
    new-instance v4, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;

    .line 444
    .line 445
    const/4 v10, 0x1

    .line 446
    invoke-direct {v4, v10, v0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    .line 447
    .line 448
    .line 449
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Predicate;)Z

    .line 450
    .line 451
    .line 452
    :cond_12
    :goto_1
    if-eqz v8, :cond_15

    .line 453
    .line 454
    if-nez v1, :cond_14

    .line 455
    .line 456
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 457
    .line 458
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TransitionController;->inPlayingTransition(Lcom/android/server/wm/WindowContainer;)Z

    .line 459
    .line 460
    .line 461
    move-result v1

    .line 462
    if-eqz v1, :cond_13

    .line 463
    .line 464
    iget v1, v0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 465
    .line 466
    const v2, 0x8000

    .line 467
    .line 468
    .line 469
    or-int/2addr v1, v2

    .line 470
    iput v1, v0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 471
    .line 472
    goto/16 :goto_6

    .line 473
    .line 474
    :cond_13
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 475
    .line 476
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TransitionController;->inFinishingTransition(Lcom/android/server/wm/WindowContainer;)Z

    .line 477
    .line 478
    .line 479
    move-result v1

    .line 480
    if-eqz v1, :cond_21

    .line 481
    .line 482
    iget v1, v0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 483
    .line 484
    const v2, 0x48000

    .line 485
    .line 486
    .line 487
    or-int/2addr v1, v2

    .line 488
    iput v1, v0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 489
    .line 490
    goto/16 :goto_6

    .line 491
    .line 492
    :cond_14
    iget v1, v0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 493
    .line 494
    const v2, -0x8001

    .line 495
    .line 496
    .line 497
    and-int/2addr v1, v2

    .line 498
    iput v1, v0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 499
    .line 500
    goto/16 :goto_6

    .line 501
    .line 502
    :cond_15
    if-eqz v9, :cond_16

    .line 503
    .line 504
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 505
    .line 506
    iget-object v1, v1, Lcom/android/server/wm/TransitionController;->mValidateCommitVis:Ljava/util/ArrayList;

    .line 507
    .line 508
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 509
    .line 510
    .line 511
    goto/16 :goto_6

    .line 512
    .line 513
    :cond_16
    iget-object v3, v0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 514
    .line 515
    invoke-virtual {v3}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 516
    .line 517
    .line 518
    move-result v3

    .line 519
    if-eqz v3, :cond_17

    .line 520
    .line 521
    goto :goto_4

    .line 522
    :cond_17
    iget-object v3, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 523
    .line 524
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 525
    .line 526
    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    .line 527
    .line 528
    .line 529
    move-result v3

    .line 530
    if-nez v3, :cond_18

    .line 531
    .line 532
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeHome()Z

    .line 533
    .line 534
    .line 535
    move-result v3

    .line 536
    if-nez v3, :cond_1c

    .line 537
    .line 538
    const/16 v3, 0x8

    .line 539
    .line 540
    invoke-virtual {v0, v5, v3}, Lcom/android/server/wm/WindowContainer;->isAnimating(II)Z

    .line 541
    .line 542
    .line 543
    move-result v3

    .line 544
    if-nez v3, :cond_18

    .line 545
    .line 546
    goto :goto_4

    .line 547
    :cond_18
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 548
    .line 549
    if-eqz v3, :cond_19

    .line 550
    .line 551
    iget-boolean v3, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 552
    .line 553
    if-ne v3, v1, :cond_19

    .line 554
    .line 555
    goto :goto_4

    .line 556
    :cond_19
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->canTurnScreenOn()Z

    .line 557
    .line 558
    .line 559
    move-result v3

    .line 560
    if-nez v3, :cond_1b

    .line 561
    .line 562
    iget-object v3, v0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 563
    .line 564
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskSupervisor;->mKeyguardController:Lcom/android/server/wm/KeyguardController;

    .line 565
    .line 566
    iget-object v4, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 567
    .line 568
    iget v4, v4, Lcom/android/server/wm/DisplayContent;->mDisplayId:I

    .line 569
    .line 570
    invoke-virtual {v3, v4}, Lcom/android/server/wm/KeyguardController;->isKeyguardGoingAway(I)Z

    .line 571
    .line 572
    .line 573
    move-result v3

    .line 574
    if-eqz v3, :cond_1a

    .line 575
    .line 576
    goto :goto_2

    .line 577
    :cond_1a
    move v3, v2

    .line 578
    goto :goto_3

    .line 579
    :cond_1b
    :goto_2
    move v3, v6

    .line 580
    :goto_3
    invoke-virtual {v0, v6, v3}, Lcom/android/server/wm/WindowContainer;->okToAnimate(ZZ)Z

    .line 581
    .line 582
    .line 583
    move-result v3

    .line 584
    if-nez v3, :cond_1d

    .line 585
    .line 586
    :cond_1c
    :goto_4
    invoke-virtual {v0, v1, v6, v2}, Lcom/android/server/wm/ActivityRecord;->commitVisibility(ZZZ)V

    .line 587
    .line 588
    .line 589
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->updateReportedVisibilityLocked()V

    .line 590
    .line 591
    .line 592
    goto :goto_6

    .line 593
    :cond_1d
    if-eqz v1, :cond_1e

    .line 594
    .line 595
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 596
    .line 597
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 598
    .line 599
    invoke-virtual {v1, v0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 600
    .line 601
    .line 602
    iput-boolean v6, v0, Lcom/android/server/wm/ActivityRecord;->mEnteringAnimation:Z

    .line 603
    .line 604
    goto :goto_5

    .line 605
    :cond_1e
    iget-boolean v1, v0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 606
    .line 607
    if-eqz v1, :cond_1f

    .line 608
    .line 609
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 610
    .line 611
    iget-object v1, v1, Lcom/android/server/wm/DisplayContent;->mClosingApps:Landroid/util/ArraySet;

    .line 612
    .line 613
    invoke-virtual {v1, v0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 614
    .line 615
    .line 616
    iput-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->mEnteringAnimation:Z

    .line 617
    .line 618
    :cond_1f
    :goto_5
    iget-object v1, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 619
    .line 620
    iget-object v3, v1, Lcom/android/server/wm/DisplayContent;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 621
    .line 622
    iget v3, v3, Lcom/android/server/wm/AppTransition;->mNextAppTransitionFlags:I

    .line 623
    .line 624
    and-int/lit8 v3, v3, 0x20

    .line 625
    .line 626
    if-eqz v3, :cond_21

    .line 627
    .line 628
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->findFocusedWindow()Lcom/android/server/wm/WindowState;

    .line 629
    .line 630
    .line 631
    move-result-object v1

    .line 632
    if-eqz v1, :cond_21

    .line 633
    .line 634
    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 635
    .line 636
    if-eqz v1, :cond_21

    .line 637
    .line 638
    aget-boolean v2, v7, v2

    .line 639
    .line 640
    if-eqz v2, :cond_20

    .line 641
    .line 642
    invoke-static {v1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 643
    .line 644
    .line 645
    move-result-object v2

    .line 646
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_APP_TRANSITIONS:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 647
    .line 648
    filled-new-array {v2}, [Ljava/lang/Object;

    .line 649
    .line 650
    .line 651
    move-result-object v12

    .line 652
    const/4 v11, 0x0

    .line 653
    const-wide v8, 0x46407727efd8326fL    # 2.6090551942753094E30

    .line 654
    .line 655
    .line 656
    .line 657
    .line 658
    const/4 v10, 0x0

    .line 659
    invoke-static/range {v7 .. v12}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 660
    .line 661
    .line 662
    :cond_20
    iget-object v2, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 663
    .line 664
    iget-object v2, v2, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 665
    .line 666
    invoke-virtual {v2, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 667
    .line 668
    .line 669
    :cond_21
    :goto_6
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 670
    .line 671
    iget v2, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mLayoutReasons:I

    .line 672
    .line 673
    or-int/2addr v2, v5

    .line 674
    iput v2, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mLayoutReasons:I

    .line 675
    .line 676
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 677
    .line 678
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskSupervisor;->mActivityMetricsLogger:Lcom/android/server/wm/ActivityMetricsLogger;

    .line 679
    .line 680
    invoke-virtual {v1, v0}, Lcom/android/server/wm/ActivityMetricsLogger;->getActiveTransitionInfo(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;

    .line 681
    .line 682
    .line 683
    move-result-object v2

    .line 684
    if-nez v2, :cond_22

    .line 685
    .line 686
    goto :goto_7

    .line 687
    :cond_22
    sget-object v2, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 688
    .line 689
    invoke-virtual {v0, v2}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 690
    .line 691
    .line 692
    move-result v2

    .line 693
    if-eqz v2, :cond_23

    .line 694
    .line 695
    iget-object v2, v0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 696
    .line 697
    iget-boolean v2, v2, Lcom/android/server/wm/DisplayContent;->mSleeping:Z

    .line 698
    .line 699
    if-eqz v2, :cond_23

    .line 700
    .line 701
    goto :goto_7

    .line 702
    :cond_23
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->isVisibleRequested()Z

    .line 703
    .line 704
    .line 705
    move-result v2

    .line 706
    if-eqz v2, :cond_24

    .line 707
    .line 708
    iget-boolean v2, v0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 709
    .line 710
    if-eqz v2, :cond_25

    .line 711
    .line 712
    :cond_24
    const-wide/16 v2, 0x0

    .line 713
    .line 714
    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/wm/ActivityMetricsLogger;->scheduleCheckActivityToBeDrawn(Lcom/android/server/wm/ActivityRecord;J)V

    .line 715
    .line 716
    .line 717
    :cond_25
    :goto_7
    iget-object v0, v0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 718
    .line 719
    iput-boolean v6, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mAppVisibilitiesChangedSinceLastPause:Z

    .line 720
    .line 721
    return-void
.end method

.method public final setVisible(Z)V
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 2
    .line 3
    if-eq p1, v0, :cond_1

    .line 4
    .line 5
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 6
    .line 7
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 8
    .line 9
    if-eqz p1, :cond_0

    .line 10
    .line 11
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 12
    .line 13
    const/4 v1, 0x0

    .line 14
    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/ActivityTaskSupervisor;->onProcessActivityStateChanged(Lcom/android/server/wm/WindowProcessController;Z)V

    .line 15
    .line 16
    .line 17
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->scheduleAnimation()V

    .line 18
    .line 19
    .line 20
    :cond_1
    return-void
.end method

.method public final setVisibleRequested(Z)Z
    .locals 4

    .line 1
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->setVisibleRequested(Z)Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x0

    .line 6
    if-nez v0, :cond_0

    .line 7
    .line 8
    return v1

    .line 9
    :cond_0
    xor-int/lit8 v0, p1, 0x1

    .line 10
    .line 11
    new-instance v2, Lcom/android/server/wm/WindowToken$$ExternalSyntheticLambda1;

    .line 12
    .line 13
    invoke-direct {v2, p0, v0}, Lcom/android/server/wm/WindowToken$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/wm/WindowToken;Z)V

    .line 14
    .line 15
    .line 16
    const/4 v0, 0x1

    .line 17
    invoke-virtual {p0, v2, v0}, Lcom/android/server/wm/WindowContainer;->forAllWindows(Ljava/util/function/Consumer;Z)V

    .line 18
    .line 19
    .line 20
    iget-boolean v2, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 21
    .line 22
    if-nez v2, :cond_2

    .line 23
    .line 24
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 25
    .line 26
    sget-object v3, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 27
    .line 28
    if-eq v2, v3, :cond_2

    .line 29
    .line 30
    sget-object v3, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 31
    .line 32
    if-ne v2, v3, :cond_1

    .line 33
    .line 34
    goto :goto_0

    .line 35
    :cond_1
    move v2, v1

    .line 36
    goto :goto_1

    .line 37
    :cond_2
    :goto_0
    move v2, v0

    .line 38
    :goto_1
    iput-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mVisibleForServiceConnection:Z

    .line 39
    .line 40
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 41
    .line 42
    if-eqz v2, :cond_3

    .line 43
    .line 44
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 45
    .line 46
    invoke-virtual {v3, v2, v1}, Lcom/android/server/wm/ActivityTaskSupervisor;->onProcessActivityStateChanged(Lcom/android/server/wm/WindowProcessController;Z)V

    .line 47
    .line 48
    .line 49
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->logAppCompatState()V

    .line 50
    .line 51
    .line 52
    if-nez p1, :cond_5

    .line 53
    .line 54
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 55
    .line 56
    iget-object p1, p1, Lcom/android/server/wm/DisplayContent;->mImeInputTarget:Lcom/android/server/wm/InputTarget;

    .line 57
    .line 58
    if-eqz p1, :cond_4

    .line 59
    .line 60
    invoke-interface {p1}, Lcom/android/server/wm/InputTarget;->getWindowState()Lcom/android/server/wm/WindowState;

    .line 61
    .line 62
    .line 63
    move-result-object v2

    .line 64
    if-eqz v2, :cond_4

    .line 65
    .line 66
    invoke-interface {p1}, Lcom/android/server/wm/InputTarget;->getWindowState()Lcom/android/server/wm/WindowState;

    .line 67
    .line 68
    .line 69
    move-result-object p1

    .line 70
    iget-object p1, p1, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 71
    .line 72
    if-ne p1, p0, :cond_4

    .line 73
    .line 74
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 75
    .line 76
    iget-object p1, p1, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 77
    .line 78
    if-eqz p1, :cond_4

    .line 79
    .line 80
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isVisible()Z

    .line 81
    .line 82
    .line 83
    move-result p1

    .line 84
    if-eqz p1, :cond_4

    .line 85
    .line 86
    move v1, v0

    .line 87
    :cond_4
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mLastImeShown:Z

    .line 88
    .line 89
    const-wide/16 v1, 0x0

    .line 90
    .line 91
    iput-wide v1, p0, Lcom/android/server/wm/ActivityRecord;->mRelaunchStartTime:J

    .line 92
    .line 93
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 94
    .line 95
    iget-object p1, p1, Lcom/android/server/wm/DisplayContent;->mDisplayPolicy:Lcom/android/server/wm/DisplayPolicy;

    .line 96
    .line 97
    iget-object v1, p1, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 98
    .line 99
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 100
    .line 101
    .line 102
    move-result p0

    .line 103
    iget-object v1, p1, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 104
    .line 105
    invoke-virtual {v1}, Landroid/util/ArraySet;->isEmpty()Z

    .line 106
    .line 107
    .line 108
    move-result v1

    .line 109
    and-int/2addr p0, v1

    .line 110
    if-eqz p0, :cond_5

    .line 111
    .line 112
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayPolicy;->updateSystemBarAttributes()V

    .line 113
    .line 114
    .line 115
    :cond_5
    return v0
.end method

.method public shouldAnimate()Z
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    if-eqz p0, :cond_1

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/wm/Task;->isOrganized()Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_0

    .line 10
    .line 11
    goto :goto_0

    .line 12
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 13
    .line 14
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRecentsAnimationController:Lcom/android/server/wm/RecentsAnimationController;

    .line 15
    .line 16
    if-eqz v0, :cond_1

    .line 17
    .line 18
    invoke-virtual {v0, p0}, Lcom/android/server/wm/RecentsAnimationController;->isAnimatingTask(Lcom/android/server/wm/Task;)Z

    .line 19
    .line 20
    .line 21
    move-result p0

    .line 22
    if-eqz p0, :cond_1

    .line 23
    .line 24
    iget-boolean p0, v0, Lcom/android/server/wm/RecentsAnimationController;->mRequestDeferCancelUntilNextTransition:Z

    .line 25
    .line 26
    if-eqz p0, :cond_1

    .line 27
    .line 28
    :goto_0
    const/4 p0, 0x0

    .line 29
    goto :goto_1

    .line 30
    :cond_1
    const/4 p0, 0x1

    .line 31
    :goto_1
    return p0
.end method

.method public final shouldBeResumed(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    const/4 v2, 0x1

    .line 5
    if-eqz v0, :cond_1

    .line 6
    .line 7
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->isFreeformStashed()Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_1

    .line 12
    .line 13
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldMakeActive(Lcom/android/server/wm/ActivityRecord;)Z

    .line 14
    .line 15
    .line 16
    move-result v0

    .line 17
    if-eqz v0, :cond_0

    .line 18
    .line 19
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 20
    .line 21
    .line 22
    move-result-object v0

    .line 23
    invoke-virtual {v0, p1}, Lcom/android/server/wm/TaskFragment;->getVisibility(Lcom/android/server/wm/ActivityRecord;)I

    .line 24
    .line 25
    .line 26
    move-result p1

    .line 27
    if-nez p1, :cond_0

    .line 28
    .line 29
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->canResumeByCompat()Z

    .line 30
    .line 31
    .line 32
    move-result p0

    .line 33
    if-eqz p0, :cond_0

    .line 34
    .line 35
    move v1, v2

    .line 36
    :cond_0
    return v1

    .line 37
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldMakeActive(Lcom/android/server/wm/ActivityRecord;)Z

    .line 38
    .line 39
    .line 40
    move-result v0

    .line 41
    if-eqz v0, :cond_2

    .line 42
    .line 43
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isFocusable()Z

    .line 44
    .line 45
    .line 46
    move-result v0

    .line 47
    if-eqz v0, :cond_2

    .line 48
    .line 49
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 50
    .line 51
    .line 52
    move-result-object v0

    .line 53
    invoke-virtual {v0, p1}, Lcom/android/server/wm/TaskFragment;->getVisibility(Lcom/android/server/wm/ActivityRecord;)I

    .line 54
    .line 55
    .line 56
    move-result p1

    .line 57
    if-nez p1, :cond_2

    .line 58
    .line 59
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->canResumeByCompat()Z

    .line 60
    .line 61
    .line 62
    move-result p0

    .line 63
    if-eqz p0, :cond_2

    .line 64
    .line 65
    move v1, v2

    .line 66
    :cond_2
    return v1
.end method

.method public final shouldBeVisible(Z)Z
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-nez v0, :cond_0

    .line 5
    .line 6
    return v1

    .line 7
    :cond_0
    const/4 v2, 0x0

    .line 8
    invoke-virtual {v0, v2}, Lcom/android/server/wm/TaskFragment;->shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z

    .line 9
    .line 10
    .line 11
    move-result v3

    .line 12
    if-eqz v3, :cond_2

    .line 13
    .line 14
    new-instance v3, Lcom/android/server/wm/Task$$ExternalSyntheticLambda19;

    .line 15
    .line 16
    const/4 v4, 0x1

    .line 17
    invoke-direct {v3, v4, p0}, Lcom/android/server/wm/Task$$ExternalSyntheticLambda19;-><init>(ILjava/lang/Object;)V

    .line 18
    .line 19
    .line 20
    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord;

    .line 21
    .line 22
    .line 23
    move-result-object v0

    .line 24
    if-eq v0, p0, :cond_1

    .line 25
    .line 26
    move-object v2, v0

    .line 27
    :cond_1
    if-eqz v2, :cond_3

    .line 28
    .line 29
    :cond_2
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mLaunchTaskBehind:Z

    .line 30
    .line 31
    if-eqz v0, :cond_4

    .line 32
    .line 33
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->showToCurrentUser()Z

    .line 34
    .line 35
    .line 36
    move-result v0

    .line 37
    if-eqz v0, :cond_4

    .line 38
    .line 39
    const/4 v1, 0x1

    .line 40
    :cond_4
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->visibleIgnoringKeyguard:Z

    .line 41
    .line 42
    if-eqz p1, :cond_5

    .line 43
    .line 44
    goto :goto_0

    .line 45
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->shouldBeVisibleUnchecked()Z

    .line 46
    .line 47
    .line 48
    move-result v1

    .line 49
    :goto_0
    return v1
.end method

.method public final shouldBeVisibleUnchecked()Z
    .locals 5

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    const/4 v1, 0x0

    .line 6
    if-eqz v0, :cond_8

    .line 7
    .line 8
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->visibleIgnoringKeyguard:Z

    .line 9
    .line 10
    if-nez v2, :cond_0

    .line 11
    .line 12
    goto/16 :goto_2

    .line 13
    .line 14
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 15
    .line 16
    .line 17
    move-result v2

    .line 18
    if-eqz v2, :cond_1

    .line 19
    .line 20
    invoke-virtual {v0}, Lcom/android/server/wm/TaskFragment;->isForceHidden()Z

    .line 21
    .line 22
    .line 23
    move-result v0

    .line 24
    if-eqz v0, :cond_1

    .line 25
    .line 26
    return v1

    .line 27
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOrganizedTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 28
    .line 29
    .line 30
    move-result-object v0

    .line 31
    const/4 v2, 0x1

    .line 32
    if-nez v0, :cond_2

    .line 33
    .line 34
    move v0, v1

    .line 35
    goto :goto_0

    .line 36
    :cond_2
    iget v3, v0, Lcom/android/server/wm/TaskFragment;->mTaskFragmentOrganizerUid:I

    .line 37
    .line 38
    invoke-virtual {v0, v3, p0}, Lcom/android/server/wm/TaskFragment;->isAllowedToEmbedActivityInTrustedMode(ILcom/android/server/wm/ActivityRecord;)Z

    .line 39
    .line 40
    .line 41
    move-result v0

    .line 42
    xor-int/2addr v0, v2

    .line 43
    :goto_0
    if-eqz v0, :cond_4

    .line 44
    .line 45
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 46
    .line 47
    if-nez v0, :cond_3

    .line 48
    .line 49
    goto :goto_1

    .line 50
    :cond_3
    new-instance v3, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;

    .line 51
    .line 52
    const/4 v4, 0x4

    .line 53
    invoke-direct {v3, v4, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    .line 54
    .line 55
    .line 56
    invoke-virtual {v0, v3, p0, v1, v1}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;Lcom/android/server/wm/WindowContainer;ZZ)Lcom/android/server/wm/ActivityRecord;

    .line 57
    .line 58
    .line 59
    move-result-object v0

    .line 60
    if-eqz v0, :cond_4

    .line 61
    .line 62
    return v1

    .line 63
    :cond_4
    :goto_1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 64
    .line 65
    iget-boolean v0, v0, Lcom/android/server/wm/DisplayContent;->mSleeping:Z

    .line 66
    .line 67
    if-eqz v0, :cond_7

    .line 68
    .line 69
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 70
    .line 71
    .line 72
    move-result v0

    .line 73
    const/4 v3, 0x2

    .line 74
    if-ne v0, v3, :cond_5

    .line 75
    .line 76
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 77
    .line 78
    iget-object v4, v4, Lcom/android/server/wm/ActivityTaskManagerService;->mDexController:Lcom/android/server/wm/DexController;

    .line 79
    .line 80
    invoke-virtual {v4}, Lcom/android/server/wm/DexController;->getDexModeLocked()I

    .line 81
    .line 82
    .line 83
    move-result v4

    .line 84
    if-ne v4, v3, :cond_5

    .line 85
    .line 86
    return v1

    .line 87
    :cond_5
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 88
    .line 89
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mKeyguardController:Lcom/android/server/wm/KeyguardController;

    .line 90
    .line 91
    invoke-virtual {v1, v0}, Lcom/android/server/wm/KeyguardController;->getDisplayState(I)Lcom/android/server/wm/KeyguardController$KeyguardDisplayState;

    .line 92
    .line 93
    .line 94
    move-result-object v0

    .line 95
    iget-boolean v0, v0, Lcom/android/server/wm/KeyguardController$KeyguardDisplayState;->mWakeAndUnlock:Z

    .line 96
    .line 97
    if-eqz v0, :cond_6

    .line 98
    .line 99
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 100
    .line 101
    .line 102
    move-result-object v0

    .line 103
    if-eqz v0, :cond_6

    .line 104
    .line 105
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 106
    .line 107
    .line 108
    move-result-object v0

    .line 109
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->isOnTop()Z

    .line 110
    .line 111
    .line 112
    move-result v0

    .line 113
    if-eqz v0, :cond_6

    .line 114
    .line 115
    return v2

    .line 116
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->canTurnScreenOn()Z

    .line 117
    .line 118
    .line 119
    move-result p0

    .line 120
    return p0

    .line 121
    :cond_7
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 122
    .line 123
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mKeyguardController:Lcom/android/server/wm/KeyguardController;

    .line 124
    .line 125
    invoke-virtual {v0, p0}, Lcom/android/server/wm/KeyguardController;->checkKeyguardVisibility(Lcom/android/server/wm/ActivityRecord;)Z

    .line 126
    .line 127
    .line 128
    move-result p0

    .line 129
    return p0

    .line 130
    :cond_8
    :goto_2
    return v1
.end method

.method public final shouldCreateAppCompatDisplayInsets()Z
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 4
    .line 5
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatAspectRatioOverrides:Lcom/android/server/wm/AppCompatAspectRatioOverrides;

    .line 6
    .line 7
    invoke-virtual {v0}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->shouldApplyUserFullscreenOverride()Z

    .line 8
    .line 9
    .line 10
    move-result v1

    .line 11
    const/4 v2, 0x1

    .line 12
    const/4 v3, 0x0

    .line 13
    if-nez v1, :cond_1

    .line 14
    .line 15
    invoke-virtual {v0}, Lcom/android/server/wm/AppCompatAspectRatioOverrides;->isSystemOverrideToFullscreenEnabled()Z

    .line 16
    .line 17
    .line 18
    move-result v0

    .line 19
    if-eqz v0, :cond_0

    .line 20
    .line 21
    goto :goto_0

    .line 22
    :cond_0
    move v0, v3

    .line 23
    goto :goto_1

    .line 24
    :cond_1
    :goto_0
    move v0, v2

    .line 25
    :goto_1
    if-eqz v0, :cond_2

    .line 26
    .line 27
    return v3

    .line 28
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->supportsSizeChanges()I

    .line 29
    .line 30
    .line 31
    move-result v0

    .line 32
    if-eq v0, v2, :cond_13

    .line 33
    .line 34
    const/4 v1, 0x2

    .line 35
    if-eq v0, v1, :cond_12

    .line 36
    .line 37
    const/4 v4, 0x3

    .line 38
    if-eq v0, v4, :cond_12

    .line 39
    .line 40
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 41
    .line 42
    iget-boolean v0, v0, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 43
    .line 44
    if-eqz v0, :cond_3

    .line 45
    .line 46
    return v3

    .line 47
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->isDexMode()Z

    .line 48
    .line 49
    .line 50
    move-result v0

    .line 51
    if-nez v0, :cond_12

    .line 52
    .line 53
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 54
    .line 55
    if-eqz v0, :cond_4

    .line 56
    .line 57
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->isDexMode()Z

    .line 58
    .line 59
    .line 60
    move-result v0

    .line 61
    if-eqz v0, :cond_4

    .line 62
    .line 63
    goto/16 :goto_6

    .line 64
    .line 65
    :cond_4
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 66
    .line 67
    if-eqz v0, :cond_5

    .line 68
    .line 69
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isRemoteAppDisplay()Z

    .line 70
    .line 71
    .line 72
    move-result v0

    .line 73
    if-eqz v0, :cond_5

    .line 74
    .line 75
    return v3

    .line 76
    :cond_5
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 77
    .line 78
    if-eqz v0, :cond_6

    .line 79
    .line 80
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isAppCastingDisplay()Z

    .line 81
    .line 82
    .line 83
    move-result v0

    .line 84
    if-eqz v0, :cond_6

    .line 85
    .line 86
    return v3

    .line 87
    :cond_6
    invoke-static {p0}, Lcom/android/server/wm/MultiTaskingAppCompatController;->inAllowedWindowingMode(Lcom/android/server/wm/ActivityRecord;)Z

    .line 88
    .line 89
    .line 90
    move-result v0

    .line 91
    if-nez v0, :cond_7

    .line 92
    .line 93
    return v3

    .line 94
    :cond_7
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 95
    .line 96
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingAppCompatController:Lcom/android/server/wm/MultiTaskingAppCompatController;

    .line 97
    .line 98
    iget-object v0, v0, Lcom/android/server/wm/MultiTaskingAppCompatController;->mSizeCompatModePolicy:Lcom/android/server/wm/MultiTaskingAppCompatSizeCompatModePolicy;

    .line 99
    .line 100
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 101
    .line 102
    .line 103
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ROTATION_COMPAT_MODE:Z

    .line 104
    .line 105
    if-eqz v0, :cond_8

    .line 106
    .line 107
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 108
    .line 109
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingAppCompatController:Lcom/android/server/wm/MultiTaskingAppCompatController;

    .line 110
    .line 111
    iget-object v0, v0, Lcom/android/server/wm/MultiTaskingAppCompatController;->mOrientationPolicy:Lcom/android/server/wm/MultiTaskingAppCompatOrientationPolicy;

    .line 112
    .line 113
    invoke-virtual {v0, p0}, Lcom/android/server/wm/MultiTaskingAppCompatOrientationPolicy;->shouldCreateAppCompatDisplayInsetsForRotationCompat(Lcom/android/server/wm/ActivityRecord;)Z

    .line 114
    .line 115
    .line 116
    move-result v0

    .line 117
    if-eqz v0, :cond_8

    .line 118
    .line 119
    move v0, v2

    .line 120
    goto :goto_3

    .line 121
    :cond_8
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ASPECT_RATIO_POLICY:Z

    .line 122
    .line 123
    if-eqz v0, :cond_9

    .line 124
    .line 125
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 126
    .line 127
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatAspectRatioPolicy:Lcom/android/server/wm/AppCompatAspectRatioPolicy;

    .line 128
    .line 129
    invoke-virtual {v0}, Lcom/android/server/wm/AppCompatAspectRatioPolicy;->isUserOrSystemMinAspectRatioApplied()Z

    .line 130
    .line 131
    .line 132
    move-result v0

    .line 133
    if-eqz v0, :cond_9

    .line 134
    .line 135
    :goto_2
    move v0, v4

    .line 136
    goto :goto_3

    .line 137
    :cond_9
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ORIENTATION_POLICY:Z

    .line 138
    .line 139
    if-eqz v0, :cond_a

    .line 140
    .line 141
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 142
    .line 143
    if-eqz v0, :cond_a

    .line 144
    .line 145
    iget v0, v0, Lcom/android/server/wm/Task;->mRespectOrientationRequestOverride:I

    .line 146
    .line 147
    const/4 v5, -0x1

    .line 148
    if-eq v0, v5, :cond_a

    .line 149
    .line 150
    goto :goto_2

    .line 151
    :cond_a
    move v0, v3

    .line 152
    :goto_3
    if-eq v0, v2, :cond_11

    .line 153
    .line 154
    if-eq v0, v1, :cond_10

    .line 155
    .line 156
    if-eq v0, v4, :cond_10

    .line 157
    .line 158
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea;

    .line 159
    .line 160
    .line 161
    move-result-object v0

    .line 162
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 163
    .line 164
    .line 165
    move-result v1

    .line 166
    if-nez v1, :cond_b

    .line 167
    .line 168
    if-eqz v0, :cond_d

    .line 169
    .line 170
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->inFreeformWindowingMode()Z

    .line 171
    .line 172
    .line 173
    move-result v0

    .line 174
    if-eqz v0, :cond_d

    .line 175
    .line 176
    :cond_b
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 177
    .line 178
    if-eqz v0, :cond_c

    .line 179
    .line 180
    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/Task;->getRootActivity(ZZ)Lcom/android/server/wm/ActivityRecord;

    .line 181
    .line 182
    .line 183
    move-result-object v0

    .line 184
    goto :goto_4

    .line 185
    :cond_c
    const/4 v0, 0x0

    .line 186
    :goto_4
    if-eqz v0, :cond_d

    .line 187
    .line 188
    if-eq v0, p0, :cond_d

    .line 189
    .line 190
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityRecord;->shouldCreateAppCompatDisplayInsets()Z

    .line 191
    .line 192
    .line 193
    move-result v0

    .line 194
    if-nez v0, :cond_d

    .line 195
    .line 196
    return v3

    .line 197
    :cond_d
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->isResizeable(Z)Z

    .line 198
    .line 199
    .line 200
    move-result v0

    .line 201
    if-nez v0, :cond_f

    .line 202
    .line 203
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 204
    .line 205
    invoke-virtual {v0}, Landroid/content/pm/ActivityInfo;->isFixedOrientation()Z

    .line 206
    .line 207
    .line 208
    move-result v0

    .line 209
    if-nez v0, :cond_e

    .line 210
    .line 211
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getMaxAspectRatio()F

    .line 212
    .line 213
    .line 214
    move-result v0

    .line 215
    const/4 v1, 0x0

    .line 216
    cmpl-float v0, v0, v1

    .line 217
    .line 218
    if-nez v0, :cond_e

    .line 219
    .line 220
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getMinAspectRatio()F

    .line 221
    .line 222
    .line 223
    move-result v0

    .line 224
    cmpl-float v0, v0, v1

    .line 225
    .line 226
    if-eqz v0, :cond_f

    .line 227
    .line 228
    :cond_e
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeStandardOrUndefined()Z

    .line 229
    .line 230
    .line 231
    move-result p0

    .line 232
    if-eqz p0, :cond_f

    .line 233
    .line 234
    goto :goto_5

    .line 235
    :cond_f
    move v2, v3

    .line 236
    :goto_5
    return v2

    .line 237
    :cond_10
    return v3

    .line 238
    :cond_11
    return v2

    .line 239
    :cond_12
    :goto_6
    return v3

    .line 240
    :cond_13
    return v2
.end method

.method public final shouldDeferAnimationFinish(Ljava/lang/Runnable;)Z
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAnimatingActivityRegistry:Lcom/android/server/wm/AnimatingActivityRegistry;

    .line 2
    .line 3
    if-eqz v0, :cond_2

    .line 4
    .line 5
    iget-object v1, v0, Lcom/android/server/wm/AnimatingActivityRegistry;->mAnimatingActivities:Landroid/util/ArraySet;

    .line 6
    .line 7
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 8
    .line 9
    .line 10
    move-result v1

    .line 11
    if-nez v1, :cond_0

    .line 12
    .line 13
    goto :goto_0

    .line 14
    :cond_0
    iget-object v1, v0, Lcom/android/server/wm/AnimatingActivityRegistry;->mAnimatingActivities:Landroid/util/ArraySet;

    .line 15
    .line 16
    invoke-virtual {v1}, Landroid/util/ArraySet;->isEmpty()Z

    .line 17
    .line 18
    .line 19
    move-result v1

    .line 20
    if-eqz v1, :cond_1

    .line 21
    .line 22
    invoke-virtual {v0}, Lcom/android/server/wm/AnimatingActivityRegistry;->endDeferringFinished()V

    .line 23
    .line 24
    .line 25
    goto :goto_0

    .line 26
    :cond_1
    iget-object v0, v0, Lcom/android/server/wm/AnimatingActivityRegistry;->mFinishedTokens:Landroid/util/ArrayMap;

    .line 27
    .line 28
    invoke-virtual {v0, p0, p1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 29
    .line 30
    .line 31
    const/4 p0, 0x1

    .line 32
    goto :goto_1

    .line 33
    :cond_2
    :goto_0
    const/4 p0, 0x0

    .line 34
    :goto_1
    return p0
.end method

.method public shouldIgnoreOrientationRequests()Z
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppActivityEmbeddingSplitsEnabled:Z

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_1

    .line 5
    .line 6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOverrideOrientation()I

    .line 7
    .line 8
    .line 9
    move-result v0

    .line 10
    invoke-static {v0}, Landroid/content/pm/ActivityInfo;->isFixedOrientationPortrait(I)Z

    .line 11
    .line 12
    .line 13
    move-result v0

    .line 14
    if-eqz v0, :cond_1

    .line 15
    .line 16
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 17
    .line 18
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 19
    .line 20
    .line 21
    move-result v0

    .line 22
    if-eqz v0, :cond_0

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :cond_0
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 26
    .line 27
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 28
    .line 29
    .line 30
    move-result-object p0

    .line 31
    iget p0, p0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    .line 32
    .line 33
    const/16 v0, 0x258

    .line 34
    .line 35
    if-lt p0, v0, :cond_1

    .line 36
    .line 37
    const/4 v1, 0x1

    .line 38
    :cond_1
    :goto_0
    return v1
.end method

.method public shouldMakeActive(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 4

    .line 1
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 2
    .line 3
    sget-object v1, Lcom/android/server/wm/ActivityRecord$State;->PAUSED:Lcom/android/server/wm/ActivityRecord$State;

    .line 4
    .line 5
    sget-object v2, Lcom/android/server/wm/ActivityRecord$State;->STOPPED:Lcom/android/server/wm/ActivityRecord$State;

    .line 6
    .line 7
    sget-object v3, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 8
    .line 9
    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/wm/ActivityRecord;->isState$1(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 10
    .line 11
    .line 12
    move-result v0

    .line 13
    const/4 v1, 0x0

    .line 14
    if-eqz v0, :cond_5

    .line 15
    .line 16
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 17
    .line 18
    .line 19
    move-result-object v0

    .line 20
    iget-object v0, v0, Lcom/android/server/wm/Task;->mTranslucentActivityWaiting:Lcom/android/server/wm/ActivityRecord;

    .line 21
    .line 22
    if-eqz v0, :cond_0

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :cond_0
    if-ne p0, p1, :cond_1

    .line 26
    .line 27
    return v1

    .line 28
    :cond_1
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 29
    .line 30
    iget p1, p1, Lcom/android/server/wm/ActivityTaskSupervisor;->mDeferResumeCount:I

    .line 31
    .line 32
    if-nez p1, :cond_5

    .line 33
    .line 34
    iget-boolean p1, p0, Lcom/android/server/wm/WindowContainer;->mLaunchTaskBehind:Z

    .line 35
    .line 36
    if-eqz p1, :cond_2

    .line 37
    .line 38
    return v1

    .line 39
    :cond_2
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 40
    .line 41
    invoke-virtual {p1, p0}, Lcom/android/server/wm/WindowContainer;->hasChild(Lcom/android/server/wm/WindowContainer;)Z

    .line 42
    .line 43
    .line 44
    move-result p1

    .line 45
    if-eqz p1, :cond_4

    .line 46
    .line 47
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 48
    .line 49
    .line 50
    move-result-object p1

    .line 51
    invoke-virtual {p1, v1}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 52
    .line 53
    .line 54
    move-result-object p1

    .line 55
    if-ne p1, p0, :cond_3

    .line 56
    .line 57
    const/4 v1, 0x1

    .line 58
    :cond_3
    return v1

    .line 59
    :cond_4
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 60
    .line 61
    const-string p1, "Activity not found in its task"

    .line 62
    .line 63
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 64
    .line 65
    .line 66
    throw p0

    .line 67
    :cond_5
    :goto_0
    return v1
.end method

.method public shouldPauseActivity(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    if-eqz v0, :cond_0

    .line 5
    .line 6
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->isFreeformStashed()Z

    .line 7
    .line 8
    .line 9
    move-result v0

    .line 10
    if-eqz v0, :cond_0

    .line 11
    .line 12
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldMakeActive(Lcom/android/server/wm/ActivityRecord;)Z

    .line 13
    .line 14
    .line 15
    move-result v0

    .line 16
    if-eqz v0, :cond_0

    .line 17
    .line 18
    return v1

    .line 19
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldMakeActive(Lcom/android/server/wm/ActivityRecord;)Z

    .line 20
    .line 21
    .line 22
    move-result p1

    .line 23
    if-eqz p1, :cond_1

    .line 24
    .line 25
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isFocusable()Z

    .line 26
    .line 27
    .line 28
    move-result p1

    .line 29
    if-nez p1, :cond_1

    .line 30
    .line 31
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->PAUSING:Lcom/android/server/wm/ActivityRecord$State;

    .line 32
    .line 33
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSED:Lcom/android/server/wm/ActivityRecord$State;

    .line 34
    .line 35
    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 36
    .line 37
    .line 38
    move-result p1

    .line 39
    if-nez p1, :cond_1

    .line 40
    .line 41
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 42
    .line 43
    if-nez p0, :cond_1

    .line 44
    .line 45
    const/4 v1, 0x1

    .line 46
    :cond_1
    return v1
.end method

.method public shouldResumeActivity(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->shouldBeResumed(Lcom/android/server/wm/ActivityRecord;)Z

    .line 2
    .line 3
    .line 4
    move-result p1

    .line 5
    if-eqz p1, :cond_0

    .line 6
    .line 7
    sget-object p1, Lcom/android/server/wm/ActivityRecord$State;->RESUMED:Lcom/android/server/wm/ActivityRecord$State;

    .line 8
    .line 9
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->isState(Lcom/android/server/wm/ActivityRecord$State;)Z

    .line 10
    .line 11
    .line 12
    move-result p0

    .line 13
    if-nez p0, :cond_0

    .line 14
    .line 15
    const/4 p0, 0x1

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    const/4 p0, 0x0

    .line 18
    :goto_0
    return p0
.end method

.method public final shouldSendCompatFakeFocus()Z
    .locals 4

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 4
    .line 5
    iget-object p0, p0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatFocusOverrides:Lcom/android/server/wm/AppCompatFocusOverrides;

    .line 6
    .line 7
    iget-object v0, p0, Lcom/android/server/wm/AppCompatFocusOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 8
    .line 9
    iget-object v1, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 10
    .line 11
    const-wide/32 v2, 0xfb1048b

    .line 12
    .line 13
    .line 14
    invoke-virtual {v1, v2, v3}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 15
    .line 16
    .line 17
    move-result v1

    .line 18
    iget-object p0, p0, Lcom/android/server/wm/AppCompatFocusOverrides;->mFakeFocusOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 19
    .line 20
    invoke-virtual {p0, v1}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOverrideAndProperty(Z)Z

    .line 21
    .line 22
    .line 23
    move-result p0

    .line 24
    if-eqz p0, :cond_0

    .line 25
    .line 26
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->inMultiWindowMode()Z

    .line 27
    .line 28
    .line 29
    move-result p0

    .line 30
    if-eqz p0, :cond_0

    .line 31
    .line 32
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 33
    .line 34
    .line 35
    move-result p0

    .line 36
    if-nez p0, :cond_0

    .line 37
    .line 38
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->inFreeformWindowingMode()Z

    .line 39
    .line 40
    .line 41
    move-result p0

    .line 42
    if-nez p0, :cond_0

    .line 43
    .line 44
    const/4 p0, 0x1

    .line 45
    goto :goto_0

    .line 46
    :cond_0
    const/4 p0, 0x0

    .line 47
    :goto_0
    return p0
.end method

.method public final showStartingWindow(Lcom/android/server/wm/ActivityRecord;ZZZZLcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)V
    .locals 13

    move-object v1, p0

    move-object v4, p1

    .line 3
    iget-boolean v0, v1, Lcom/android/server/wm/ActivityRecord;->mTaskOverlay:Z

    if-eqz v0, :cond_0

    return-void

    :cond_0
    if-eqz p7, :cond_1

    move-object/from16 v2, p7

    goto :goto_0

    .line 4
    :cond_1
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    move-object v2, v0

    :goto_0
    if-eqz v2, :cond_2

    .line 5
    invoke-virtual {v2}, Landroid/app/ActivityOptions;->getAnimationType()I

    move-result v0

    const/4 v3, 0x5

    if-ne v0, v3, :cond_2

    return-void

    .line 6
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inSplitScreenWindowingMode()Z

    move-result v0

    if-eqz v0, :cond_3

    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    if-eqz v0, :cond_3

    .line 7
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    if-eqz v0, :cond_3

    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 8
    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    invoke-static {v0}, Lcom/samsung/android/multiwindow/MultiWindowUtils;->isAppsEdgeActivity(Landroid/content/ComponentName;)Z

    move-result v0

    if-eqz v0, :cond_3

    return-void

    :cond_3
    const/4 v3, 0x0

    const/4 v5, 0x0

    if-eqz p5, :cond_8

    if-eqz v2, :cond_4

    .line 9
    invoke-virtual {v2}, Landroid/app/ActivityOptions;->getSplashScreenThemeResName()Ljava/lang/String;

    move-result-object v0

    goto :goto_1

    :cond_4
    move-object v0, v3

    :goto_1
    if-eqz v0, :cond_5

    .line 10
    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v6

    if-eqz v6, :cond_6

    .line 11
    :cond_5
    :try_start_0
    iget-object v6, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 12
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v6

    .line 13
    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    iget v8, v1, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 14
    invoke-interface {v6, v7, v8}, Landroid/content/pm/IPackageManager;->getSplashScreenTheme(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    :catch_0
    :cond_6
    if-eqz v0, :cond_7

    .line 15
    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v6

    if-nez v6, :cond_7

    .line 16
    :try_start_1
    iget-object v6, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v6, v6, Lcom/android/server/wm/ActivityTaskManagerService;->mContext:Landroid/content/Context;

    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 17
    invoke-virtual {v6, v7, v5}, Landroid/content/Context;->createPackageContext(Ljava/lang/String;I)Landroid/content/Context;

    move-result-object v6

    .line 18
    invoke-virtual {v6}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v6

    .line 19
    invoke-virtual {v6, v0, v3, v3}, Landroid/content/res/Resources;->getIdentifier(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move-result v0
    :try_end_1
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Landroid/content/res/Resources$NotFoundException; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_2

    :catch_1
    :cond_7
    move v0, v5

    :goto_2
    move v6, v0

    goto :goto_3

    :cond_8
    move v6, v5

    :goto_3
    const/4 v7, -0x1

    const/4 v8, 0x1

    if-eqz v2, :cond_b

    .line 20
    invoke-virtual {v2}, Landroid/app/ActivityOptions;->getDisableSplashScreen()Z

    move-result v0

    if-eqz v0, :cond_b

    .line 21
    invoke-static {}, Lcom/android/internal/policy/AttributeCache;->instance()Lcom/android/internal/policy/AttributeCache;

    move-result-object v0

    iget-object v9, v1, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    iget v10, v1, Lcom/android/server/wm/ActivityRecord;->theme:I

    sget-object v11, Lcom/android/internal/R$styleable;->Window:[I

    iget-object v12, v1, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    iget v12, v12, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    invoke-virtual {v0, v9, v10, v11, v12}, Lcom/android/internal/policy/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/internal/policy/AttributeCache$Entry;

    move-result-object v0

    if-nez v0, :cond_a

    :cond_9
    move v0, v5

    goto :goto_5

    .line 22
    :cond_a
    :try_start_2
    iget-object v0, v0, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/16 v9, 0x38

    invoke-virtual {v0, v9, v5}, Landroid/content/res/TypedArray;->getColor(II)I

    move-result v0
    :try_end_2
    .catch Ljava/lang/RuntimeException; {:try_start_2 .. :try_end_2} :catch_2

    goto :goto_4

    :catch_2
    move-exception v0

    .line 23
    new-instance v9, Ljava/lang/StringBuilder;

    const-string v10, "allowSplashScreen, Exception While get Color"

    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    const-string v9, "ActivityTaskManager"

    invoke-static {v9, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    move v0, v5

    :goto_4
    if-eqz v0, :cond_9

    move v0, v8

    :goto_5
    if-nez v0, :cond_b

    move v6, v7

    .line 24
    :cond_b
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    iget v9, v1, Lcom/android/server/wm/ActivityRecord;->theme:I

    if-gez v6, :cond_c

    :goto_6
    move v6, v5

    goto :goto_7

    .line 25
    :cond_c
    invoke-virtual {p0, p1, v0, v9}, Lcom/android/server/wm/ActivityRecord;->validateStartingWindowTheme(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;I)Z

    move-result v10

    if-nez v10, :cond_d

    goto :goto_6

    :cond_d
    if-eqz v6, :cond_e

    .line 26
    invoke-virtual {p0, p1, v0, v6}, Lcom/android/server/wm/ActivityRecord;->validateStartingWindowTheme(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_e

    goto :goto_7

    :cond_e
    move v6, v9

    :goto_7
    if-nez p6, :cond_10

    if-nez p5, :cond_10

    .line 27
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    invoke-virtual {v0, p0}, Lcom/android/server/wm/WindowContainer;->getActivityAbove(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    if-eqz v0, :cond_10

    :cond_f
    :goto_8
    move v0, v8

    goto/16 :goto_d

    :cond_10
    if-eqz v2, :cond_11

    .line 28
    invoke-virtual {v2}, Landroid/app/ActivityOptions;->getSplashScreenStyle()I

    move-result v7

    :cond_11
    if-nez v7, :cond_12

    goto :goto_8

    :cond_12
    if-eq v7, v8, :cond_1e

    .line 29
    invoke-virtual {p0, v6}, Lcom/android/server/wm/ActivityRecord;->isIconStylePreferred(I)Z

    move-result v0

    if-eqz v0, :cond_13

    goto/16 :goto_c

    .line 30
    :cond_13
    iget v0, v1, Lcom/android/server/wm/ActivityRecord;->mLaunchSourceType:I

    const/4 v2, 0x2

    if-eq v0, v2, :cond_1e

    iget v2, v1, Lcom/android/server/wm/ActivityRecord;->launchedFromUid:I

    const/16 v7, 0x7d0

    if-ne v2, v7, :cond_14

    goto/16 :goto_c

    :cond_14
    const/4 v2, 0x3

    if-ne v0, v2, :cond_15

    goto :goto_8

    :cond_15
    if-nez p6, :cond_1b

    .line 31
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    invoke-virtual {v0, p0}, Lcom/android/server/wm/WindowContainer;->getActivityBelow(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    if-nez v0, :cond_16

    .line 32
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/wm/WindowContainer;->getActivityBelow(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    :cond_16
    if-eqz v0, :cond_1c

    .line 33
    invoke-virtual {v0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeHome()Z

    move-result v2

    if-eqz v2, :cond_17

    goto :goto_b

    .line 34
    :cond_17
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    if-eqz v2, :cond_18

    goto :goto_9

    .line 35
    :cond_18
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v2, v2, Lcom/android/server/wm/ActivityTaskManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->processName:Ljava/lang/String;

    iget-object v9, v1, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v9, v9, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v7, v9}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowProcessController;

    .line 36
    :goto_9
    iget-object v7, v0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    if-eqz v7, :cond_19

    goto :goto_a

    .line 37
    :cond_19
    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    iget-object v7, v7, Lcom/android/server/wm/ActivityTaskManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v9, v0, Lcom/android/server/wm/ActivityRecord;->processName:Ljava/lang/String;

    iget-object v10, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v10, v10, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v7, v9, v10}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowProcessController;

    :goto_a
    if-eq v7, v2, :cond_1a

    .line 38
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 39
    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v2

    iget-object v7, v0, Lcom/android/server/wm/ActivityRecord;->mActivityComponent:Landroid/content/ComponentName;

    .line 40
    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v2, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1c

    :cond_1a
    move-object v3, v0

    goto :goto_b

    :cond_1b
    move-object/from16 v3, p6

    :cond_1c
    :goto_b
    if-eqz v3, :cond_1d

    .line 41
    iget-boolean v0, v3, Lcom/android/server/wm/ActivityRecord;->mSplashScreenStyleSolidColor:Z

    goto :goto_d

    .line 42
    :cond_1d
    iget v0, v1, Lcom/android/server/wm/ActivityRecord;->mLaunchSourceType:I

    if-ne v0, v8, :cond_f

    if-nez p5, :cond_1e

    goto/16 :goto_8

    :cond_1e
    :goto_c
    move v0, v5

    .line 43
    :goto_d
    iput-boolean v0, v1, Lcom/android/server/wm/ActivityRecord;->mSplashScreenStyleSolidColor:Z

    .line 44
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 45
    invoke-virtual {v0}, Ljava/lang/Enum;->ordinal()I

    move-result v0

    if-lt v0, v8, :cond_1f

    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    invoke-virtual {v0}, Ljava/lang/Enum;->ordinal()I

    move-result v0

    const/4 v2, 0x6

    if-gt v0, v2, :cond_1f

    move v9, v8

    goto :goto_e

    :cond_1f
    move v9, v5

    :goto_e
    if-nez p2, :cond_20

    if-nez v9, :cond_20

    .line 46
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    new-instance v2, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;

    const/4 v3, 0x2

    invoke-direct {v2, v3, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    .line 47
    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v0

    if-nez v0, :cond_20

    move v0, v8

    goto :goto_f

    :cond_20
    move v0, v5

    .line 48
    :goto_f
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    if-nez p2, :cond_22

    if-eqz v0, :cond_21

    goto :goto_10

    :cond_21
    move v0, v5

    goto :goto_11

    :cond_22
    :goto_10
    move v0, v8

    .line 49
    :goto_11
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    if-nez v3, :cond_23

    goto :goto_15

    .line 50
    :cond_23
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    sub-int/2addr v3, v8

    :goto_12
    if-ltz v3, :cond_28

    .line 51
    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/Intent;

    if-eqz v7, :cond_27

    .line 52
    invoke-static {v7}, Lcom/android/server/wm/ActivityRecord;->isMainIntent(Landroid/content/Intent;)Z

    move-result v10

    if-eqz v10, :cond_24

    goto :goto_14

    .line 53
    :cond_24
    iget-object v10, v1, Lcom/android/server/wm/ActivityRecord;->mLastNewIntent:Landroid/content/Intent;

    if-eqz v10, :cond_25

    invoke-virtual {v10, v7}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v10

    goto :goto_13

    .line 54
    :cond_25
    iget-object v10, v1, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v10, v7}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v10

    :goto_13
    if-eqz v10, :cond_26

    .line 55
    invoke-virtual {v7}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v7

    if-eqz v7, :cond_27

    :cond_26
    move v8, v5

    goto :goto_15

    :cond_27
    :goto_14
    add-int/lit8 v3, v3, -0x1

    goto :goto_12

    .line 56
    :cond_28
    :goto_15
    iget-boolean v10, v1, Lcom/android/server/wm/ActivityRecord;->mSplashScreenStyleSolidColor:Z

    iget-boolean v11, v1, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    move-object v1, p0

    move v3, v6

    move-object v4, p1

    move v5, v0

    move/from16 v6, p3

    move/from16 v7, p4

    .line 57
    invoke-virtual/range {v1 .. v11}, Lcom/android/server/wm/ActivityRecord;->addStartingWindow(Ljava/lang/String;ILcom/android/server/wm/ActivityRecord;ZZZZZZZ)Z

    return-void
.end method

.method public final showStartingWindow(Z)V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    new-instance v1, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;

    const/4 v2, 0x0

    invoke-direct {v1, v2, p0}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda1;-><init>(ILcom/android/server/wm/ActivityRecord;)V

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowContainer;->getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord;

    move-result-object v4

    .line 2
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->isProcessRunning()Z

    move-result v7

    const/4 v10, 0x0

    const/4 v5, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object v3, p0

    move v6, p1

    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/ActivityRecord;->showStartingWindow(Lcom/android/server/wm/ActivityRecord;ZZZZLcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)V

    return-void
.end method

.method public final showSurfaceOnCreation()Z
    .locals 0

    .line 1
    const/4 p0, 0x0

    .line 2
    return p0
.end method

.method public final showToCurrentUser()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mShowForAllUsers:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 6
    .line 7
    iget p0, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 8
    .line 9
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUmInternal:Lcom/android/server/pm/UserManagerInternal;

    .line 10
    .line 11
    invoke-virtual {v0, p0}, Lcom/android/server/pm/UserManagerInternal;->isUserVisible(I)Z

    .line 12
    .line 13
    .line 14
    move-result p0

    .line 15
    if-eqz p0, :cond_0

    .line 16
    .line 17
    goto :goto_0

    .line 18
    :cond_0
    const/4 p0, 0x0

    .line 19
    goto :goto_1

    .line 20
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 21
    :goto_1
    return p0
.end method

.method public final startFreezingScreen(I)V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 2
    .line 3
    invoke-virtual {v0}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ORIENTATION_enabled:[Z

    .line 11
    .line 12
    const/4 v1, 0x2

    .line 13
    aget-boolean v0, v0, v1

    .line 14
    .line 15
    if-eqz v0, :cond_1

    .line 16
    .line 17
    iget-object v0, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 18
    .line 19
    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 20
    .line 21
    .line 22
    move-result-object v0

    .line 23
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 24
    .line 25
    iget-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mFreezingScreen:Z

    .line 26
    .line 27
    iget-boolean v3, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 28
    .line 29
    new-instance v4, Ljava/lang/RuntimeException;

    .line 30
    .line 31
    invoke-direct {v4}, Ljava/lang/RuntimeException;-><init>()V

    .line 32
    .line 33
    .line 34
    invoke-virtual {v4}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    .line 35
    .line 36
    .line 37
    move-result-object v4

    .line 38
    invoke-static {v4}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 39
    .line 40
    .line 41
    move-result-object v4

    .line 42
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 43
    .line 44
    invoke-static {v1}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 45
    .line 46
    .line 47
    move-result-object v1

    .line 48
    invoke-static {v2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 49
    .line 50
    .line 51
    move-result-object v2

    .line 52
    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    .line 53
    .line 54
    .line 55
    move-result-object v3

    .line 56
    filled-new-array {v0, v1, v2, v3, v4}, [Ljava/lang/Object;

    .line 57
    .line 58
    .line 59
    move-result-object v10

    .line 60
    const-wide v6, 0x338a48dc8d313330L    # 2.044619536142772E-60

    .line 61
    .line 62
    .line 63
    .line 64
    .line 65
    const/16 v8, 0xfc

    .line 66
    .line 67
    const/4 v9, 0x0

    .line 68
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 69
    .line 70
    .line 71
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 72
    .line 73
    if-nez v0, :cond_2

    .line 74
    .line 75
    return-void

    .line 76
    :cond_2
    const/4 v0, -0x1

    .line 77
    const/4 v1, 0x0

    .line 78
    const/4 v2, 0x1

    .line 79
    if-eq p1, v0, :cond_3

    .line 80
    .line 81
    move v0, v2

    .line 82
    goto :goto_0

    .line 83
    :cond_3
    move v0, v1

    .line 84
    :goto_0
    iget-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mFreezingScreen:Z

    .line 85
    .line 86
    if-nez v3, :cond_6

    .line 87
    .line 88
    iput-boolean v2, p0, Lcom/android/server/wm/ActivityRecord;->mFreezingScreen:Z

    .line 89
    .line 90
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 91
    .line 92
    iget-object v4, v3, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    .line 93
    .line 94
    invoke-virtual {v4, p0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 95
    .line 96
    .line 97
    move-result v4

    .line 98
    if-nez v4, :cond_4

    .line 99
    .line 100
    iget-object v3, v3, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    .line 101
    .line 102
    invoke-virtual {v3, p0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 103
    .line 104
    .line 105
    :cond_4
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 106
    .line 107
    iget v4, v3, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 108
    .line 109
    add-int/2addr v4, v2

    .line 110
    iput v4, v3, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 111
    .line 112
    if-ne v4, v2, :cond_6

    .line 113
    .line 114
    if-eqz v0, :cond_5

    .line 115
    .line 116
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 117
    .line 118
    iget-object v2, v2, Lcom/android/server/wm/DisplayContent;->mDisplayRotation:Lcom/android/server/wm/DisplayRotation;

    .line 119
    .line 120
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayRotation;->cancelSeamlessRotation()V

    .line 121
    .line 122
    .line 123
    :cond_5
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 124
    .line 125
    iget-object v3, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 126
    .line 127
    invoke-virtual {v2, v1, v1, p1, v3}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplay(IIILcom/android/server/wm/DisplayContent;)V

    .line 128
    .line 129
    .line 130
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 131
    .line 132
    iget-object p1, p1, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 133
    .line 134
    const/16 v2, 0x11

    .line 135
    .line 136
    invoke-virtual {p1, v2}, Landroid/os/Handler;->removeMessages(I)V

    .line 137
    .line 138
    .line 139
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 140
    .line 141
    iget-object p1, p1, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 142
    .line 143
    const-wide/16 v3, 0x7d0

    .line 144
    .line 145
    invoke-virtual {p1, v2, v3, v4}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z

    .line 146
    .line 147
    .line 148
    :cond_6
    if-eqz v0, :cond_7

    .line 149
    .line 150
    return-void

    .line 151
    :cond_7
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 152
    .line 153
    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I

    .line 154
    .line 155
    .line 156
    move-result p1

    .line 157
    :goto_1
    if-ge v1, p1, :cond_8

    .line 158
    .line 159
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 160
    .line 161
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 162
    .line 163
    .line 164
    move-result-object v0

    .line 165
    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 166
    .line 167
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->onStartFreezingScreen()V

    .line 168
    .line 169
    .line 170
    add-int/lit8 v1, v1, 0x1

    .line 171
    .line 172
    goto :goto_1

    .line 173
    :cond_8
    return-void
.end method

.method public startRelaunching()V
    .locals 2

    .line 1
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 6
    .line 7
    .line 8
    move-result-wide v0

    .line 9
    iput-wide v0, p0, Lcom/android/server/wm/ActivityRecord;->mRelaunchStartTime:J

    .line 10
    .line 11
    iget-boolean v0, p0, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 12
    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 16
    .line 17
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDisplayPolicy:Lcom/android/server/wm/DisplayPolicy;

    .line 18
    .line 19
    iget-object v1, v0, Lcom/android/server/wm/DisplayPolicy;->mSystemBarColorApps:Landroid/util/ArraySet;

    .line 20
    .line 21
    invoke-virtual {v1, p0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 22
    .line 23
    .line 24
    move-result v1

    .line 25
    if-eqz v1, :cond_0

    .line 26
    .line 27
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->hasStartingWindow()Z

    .line 28
    .line 29
    .line 30
    move-result v1

    .line 31
    if-nez v1, :cond_0

    .line 32
    .line 33
    iget-object v0, v0, Lcom/android/server/wm/DisplayPolicy;->mRelaunchingSystemBarColorApps:Landroid/util/ArraySet;

    .line 34
    .line 35
    invoke-virtual {v0, p0}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 36
    .line 37
    .line 38
    :cond_0
    const/4 v0, 0x0

    .line 39
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 40
    .line 41
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastAllDrawn:Z

    .line 42
    .line 43
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 44
    .line 45
    add-int/lit8 v0, v0, 0x1

    .line 46
    .line 47
    iput v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRelaunchCount:I

    .line 48
    .line 49
    return-void
.end method

.method public final stopFreezingScreen(Z)V
    .locals 12

    .line 1
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mFreezingScreen:Z

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ORIENTATION_enabled:[Z

    .line 7
    .line 8
    const/4 v1, 0x1

    .line 9
    aget-boolean v2, v0, v1

    .line 10
    .line 11
    if-eqz v2, :cond_1

    .line 12
    .line 13
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 14
    .line 15
    .line 16
    move-result-object v2

    .line 17
    sget-object v3, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 18
    .line 19
    sget-object v4, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    .line 20
    .line 21
    filled-new-array {v2, v4}, [Ljava/lang/Object;

    .line 22
    .line 23
    .line 24
    move-result-object v8

    .line 25
    const/16 v6, 0xc

    .line 26
    .line 27
    const/4 v7, 0x0

    .line 28
    const-wide v4, 0x6acdb1275a243469L    # 2.9789732077379918E206

    .line 29
    .line 30
    .line 31
    .line 32
    .line 33
    invoke-static/range {v3 .. v8}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 34
    .line 35
    .line 36
    :cond_1
    iget-object v2, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 37
    .line 38
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    .line 39
    .line 40
    .line 41
    move-result v2

    .line 42
    const/4 v3, 0x0

    .line 43
    move v4, v3

    .line 44
    move v5, v4

    .line 45
    :goto_0
    if-ge v4, v2, :cond_2

    .line 46
    .line 47
    iget-object v6, p0, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 48
    .line 49
    invoke-virtual {v6, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 50
    .line 51
    .line 52
    move-result-object v6

    .line 53
    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 54
    .line 55
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->onStopFreezingScreen()Z

    .line 56
    .line 57
    .line 58
    move-result v6

    .line 59
    or-int/2addr v5, v6

    .line 60
    add-int/lit8 v4, v4, 0x1

    .line 61
    .line 62
    goto :goto_0

    .line 63
    :cond_2
    aget-boolean v0, v0, v1

    .line 64
    .line 65
    if-eqz v0, :cond_3

    .line 66
    .line 67
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 68
    .line 69
    .line 70
    move-result-object v0

    .line 71
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 72
    .line 73
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 74
    .line 75
    .line 76
    move-result-object v11

    .line 77
    const-wide v7, -0x74658a80ae1ec74cL    # -9.022287259014503E-253

    .line 78
    .line 79
    .line 80
    .line 81
    .line 82
    const/4 v9, 0x0

    .line 83
    const/4 v10, 0x0

    .line 84
    invoke-static/range {v6 .. v11}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 85
    .line 86
    .line 87
    :cond_3
    iput-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mFreezingScreen:Z

    .line 88
    .line 89
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 90
    .line 91
    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAppFreezeListeners:Ljava/util/ArrayList;

    .line 92
    .line 93
    invoke-virtual {v0, p0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 94
    .line 95
    .line 96
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 97
    .line 98
    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 99
    .line 100
    sub-int/2addr v2, v1

    .line 101
    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 102
    .line 103
    iput-object p0, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 104
    .line 105
    if-eqz p1, :cond_5

    .line 106
    .line 107
    if-eqz v5, :cond_4

    .line 108
    .line 109
    iget-object p1, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    .line 110
    .line 111
    invoke-virtual {p1, v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement(Z)V

    .line 112
    .line 113
    .line 114
    :cond_4
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 115
    .line 116
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    .line 117
    .line 118
    .line 119
    :cond_5
    return-void
.end method

.method public final stopIfPossible()V
    .locals 12

    .line 1
    const-string/jumbo v0, "stopIfPossible"

    .line 2
    .line 3
    .line 4
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 5
    .line 6
    const-string v2, "ActivityTaskManager"

    .line 7
    .line 8
    if-eqz v1, :cond_0

    .line 9
    .line 10
    new-instance v0, Ljava/lang/StringBuilder;

    .line 11
    .line 12
    const-string v1, "Request to stop a finishing activity: "

    .line 13
    .line 14
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 15
    .line 16
    .line 17
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 18
    .line 19
    .line 20
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 21
    .line 22
    .line 23
    move-result-object v0

    .line 24
    invoke-static {v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 25
    .line 26
    .line 27
    const-string/jumbo v0, "stopIfPossible-finishing"

    .line 28
    .line 29
    .line 30
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->destroyIfPossible(Ljava/lang/String;)Z

    .line 31
    .line 32
    .line 33
    return-void

    .line 34
    :cond_0
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 35
    .line 36
    invoke-virtual {v1}, Landroid/content/Intent;->getFlags()I

    .line 37
    .line 38
    .line 39
    move-result v1

    .line 40
    const/high16 v3, 0x40000000    # 2.0f

    .line 41
    .line 42
    and-int/2addr v1, v3

    .line 43
    const/4 v3, 0x1

    .line 44
    const/4 v4, 0x0

    .line 45
    if-nez v1, :cond_2

    .line 46
    .line 47
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 48
    .line 49
    iget v1, v1, Landroid/content/pm/ActivityInfo;->flags:I

    .line 50
    .line 51
    and-int/lit16 v1, v1, 0x80

    .line 52
    .line 53
    if-eqz v1, :cond_1

    .line 54
    .line 55
    goto :goto_0

    .line 56
    :cond_1
    move v1, v4

    .line 57
    goto :goto_1

    .line 58
    :cond_2
    :goto_0
    move v1, v3

    .line 59
    :goto_1
    sget-object v5, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 60
    .line 61
    if-eqz v1, :cond_5

    .line 62
    .line 63
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 64
    .line 65
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->shouldSleepActivities()Z

    .line 66
    .line 67
    .line 68
    move-result v1

    .line 69
    if-nez v1, :cond_4

    .line 70
    .line 71
    aget-boolean v1, v5, v4

    .line 72
    .line 73
    if-eqz v1, :cond_3

    .line 74
    .line 75
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 76
    .line 77
    .line 78
    move-result-object v1

    .line 79
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 80
    .line 81
    filled-new-array {v1}, [Ljava/lang/Object;

    .line 82
    .line 83
    .line 84
    move-result-object v11

    .line 85
    const-wide v7, 0x68111dd5cb08319aL    # 1.9523303294450152E193

    .line 86
    .line 87
    .line 88
    .line 89
    .line 90
    const/4 v9, 0x0

    .line 91
    const/4 v10, 0x0

    .line 92
    invoke-static/range {v6 .. v11}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 93
    .line 94
    .line 95
    :cond_3
    const-string/jumbo v1, "stop-no-history"

    .line 96
    .line 97
    .line 98
    invoke-virtual {p0, v1, v4}, Lcom/android/server/wm/ActivityRecord;->finishIfPossible(Ljava/lang/String;Z)I

    .line 99
    .line 100
    .line 101
    move-result v1

    .line 102
    if-eqz v1, :cond_5

    .line 103
    .line 104
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->resumeKeyDispatchingLocked()V

    .line 105
    .line 106
    .line 107
    return-void

    .line 108
    :cond_4
    aget-boolean v1, v5, v4

    .line 109
    .line 110
    if-eqz v1, :cond_5

    .line 111
    .line 112
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 113
    .line 114
    .line 115
    move-result-object v1

    .line 116
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 117
    .line 118
    filled-new-array {v1}, [Ljava/lang/Object;

    .line 119
    .line 120
    .line 121
    move-result-object v11

    .line 122
    const-wide v7, 0x2c82159e9cde336aL    # 2.709297565515935E-94

    .line 123
    .line 124
    .line 125
    .line 126
    .line 127
    const/4 v9, 0x0

    .line 128
    const/4 v10, 0x0

    .line 129
    invoke-static/range {v6 .. v11}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 130
    .line 131
    .line 132
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 133
    .line 134
    .line 135
    move-result v1

    .line 136
    if-nez v1, :cond_6

    .line 137
    .line 138
    return-void

    .line 139
    :cond_6
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->resumeKeyDispatchingLocked()V

    .line 140
    .line 141
    .line 142
    :try_start_0
    aget-boolean v1, v5, v3

    .line 143
    .line 144
    if-eqz v1, :cond_7

    .line 145
    .line 146
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 147
    .line 148
    .line 149
    move-result-object v1

    .line 150
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 151
    .line 152
    filled-new-array {v1}, [Ljava/lang/Object;

    .line 153
    .line 154
    .line 155
    move-result-object v11

    .line 156
    const/4 v9, 0x0

    .line 157
    const/4 v10, 0x0

    .line 158
    const-wide v7, -0x231eeb25dd27c9c5L    # -2.542686590137254E139

    .line 159
    .line 160
    .line 161
    .line 162
    .line 163
    invoke-static/range {v6 .. v11}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 164
    .line 165
    .line 166
    goto :goto_2

    .line 167
    :catch_0
    move-exception v1

    .line 168
    goto :goto_3

    .line 169
    :cond_7
    :goto_2
    sget-object v1, Lcom/android/server/wm/ActivityRecord$State;->STOPPING:Lcom/android/server/wm/ActivityRecord$State;

    .line 170
    .line 171
    invoke-virtual {p0, v1, v0}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 172
    .line 173
    .line 174
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 175
    .line 176
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 177
    .line 178
    .line 179
    move-result v4

    .line 180
    iget-object v6, p0, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 181
    .line 182
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 183
    .line 184
    .line 185
    move-result-object v1

    .line 186
    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 187
    .line 188
    .line 189
    move-result-object v4

    .line 190
    filled-new-array {v1, v4, v6}, [Ljava/lang/Object;

    .line 191
    .line 192
    .line 193
    move-result-object v1

    .line 194
    const/16 v4, 0x7560

    .line 195
    .line 196
    invoke-static {v4, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 197
    .line 198
    .line 199
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 200
    .line 201
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 202
    .line 203
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 204
    .line 205
    iget-object v4, v4, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 206
    .line 207
    iget-object v6, p0, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 208
    .line 209
    invoke-static {v6}, Landroid/app/servertransaction/StopActivityItem;->obtain(Landroid/os/IBinder;)Landroid/app/servertransaction/StopActivityItem;

    .line 210
    .line 211
    .line 212
    move-result-object v6

    .line 213
    invoke-virtual {v1, v4, v6}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionItem(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;)V

    .line 214
    .line 215
    .line 216
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 217
    .line 218
    iget-object v1, v1, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 219
    .line 220
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mStopTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 221
    .line 222
    const-wide/16 v6, 0x2af8

    .line 223
    .line 224
    invoke-virtual {v1, v4, v6, v7}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 225
    .line 226
    .line 227
    goto :goto_4

    .line 228
    :goto_3
    const-string v4, "Exception thrown during pause"

    .line 229
    .line 230
    invoke-static {v2, v4, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 231
    .line 232
    .line 233
    iput-boolean v3, p0, Lcom/android/server/wm/ActivityRecord;->mAppStopped:Z

    .line 234
    .line 235
    aget-boolean v1, v5, v3

    .line 236
    .line 237
    if-eqz v1, :cond_8

    .line 238
    .line 239
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 240
    .line 241
    .line 242
    move-result-object v1

    .line 243
    sget-object v2, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 244
    .line 245
    filled-new-array {v1}, [Ljava/lang/Object;

    .line 246
    .line 247
    .line 248
    move-result-object v7

    .line 249
    const-wide v3, -0x74e93f8d5abac5feL

    .line 250
    .line 251
    .line 252
    .line 253
    .line 254
    const/4 v5, 0x0

    .line 255
    const/4 v6, 0x0

    .line 256
    invoke-static/range {v2 .. v7}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 257
    .line 258
    .line 259
    :cond_8
    sget-object v1, Lcom/android/server/wm/ActivityRecord$State;->STOPPED:Lcom/android/server/wm/ActivityRecord$State;

    .line 260
    .line 261
    invoke-virtual {p0, v1, v0}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 262
    .line 263
    .line 264
    :goto_4
    return-void
.end method

.method public final supportsFreeform()Z
    .locals 1

    .line 1
    invoke-super {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    check-cast v0, Lcom/android/server/wm/TaskDisplayArea;

    .line 6
    .line 7
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->supportsFreeformInDisplayArea(Lcom/android/server/wm/TaskDisplayArea;)Z

    .line 8
    .line 9
    .line 10
    move-result p0

    .line 11
    return p0
.end method

.method public final supportsFreeformInDisplayArea(Lcom/android/server/wm/TaskDisplayArea;)Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    iget-boolean v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mSupportsFreeformWindowManagement:Z

    .line 4
    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p0, p1}, Lcom/android/server/wm/ActivityRecord;->supportsMultiWindowInDisplayArea(Lcom/android/server/wm/TaskDisplayArea;)Z

    .line 8
    .line 9
    .line 10
    move-result p0

    .line 11
    if-eqz p0, :cond_0

    .line 12
    .line 13
    const/4 p0, 0x1

    .line 14
    goto :goto_0

    .line 15
    :cond_0
    const/4 p0, 0x0

    .line 16
    :goto_0
    return p0
.end method

.method public final supportsMultiWindowInDisplayArea(Lcom/android/server/wm/TaskDisplayArea;)Z
    .locals 3

    .line 1
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeHome()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    const/4 v1, 0x0

    .line 6
    if-eqz v0, :cond_0

    .line 7
    .line 8
    return v1

    .line 9
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 10
    .line 11
    iget-boolean v2, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mSupportsMultiWindow:Z

    .line 12
    .line 13
    if-nez v2, :cond_1

    .line 14
    .line 15
    return v1

    .line 16
    :cond_1
    if-nez p1, :cond_2

    .line 17
    .line 18
    return v1

    .line 19
    :cond_2
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMwSupportPolicyController:Lcom/android/server/wm/MultiWindowSupportPolicyController;

    .line 20
    .line 21
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 22
    .line 23
    iget v1, v1, Landroid/content/pm/ActivityInfo;->resizeMode:I

    .line 24
    .line 25
    const/4 v2, 0x1

    .line 26
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->isResizeable(Z)Z

    .line 27
    .line 28
    .line 29
    move-result v2

    .line 30
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mIgnoreDevSettingForNonResizable:Z

    .line 31
    .line 32
    invoke-virtual {v0, p1, v1, v2, p0}, Lcom/android/server/wm/MultiWindowSupportPolicyController;->supportsMultiWindowInDisplayArea(Lcom/android/server/wm/TaskDisplayArea;IZZ)Z

    .line 33
    .line 34
    .line 35
    move-result p0

    .line 36
    return p0
.end method

.method public final supportsPictureInPicture()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 2
    .line 3
    iget-boolean v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mSupportsPictureInPicture:Z

    .line 4
    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->isActivityTypeStandardOrUndefined()Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 14
    .line 15
    invoke-virtual {p0}, Landroid/content/pm/ActivityInfo;->supportsPictureInPicture()Z

    .line 16
    .line 17
    .line 18
    move-result p0

    .line 19
    if-eqz p0, :cond_0

    .line 20
    .line 21
    const/4 p0, 0x1

    .line 22
    goto :goto_0

    .line 23
    :cond_0
    const/4 p0, 0x0

    .line 24
    :goto_0
    return p0
.end method

.method public final supportsSizeChanges()I
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object v0, v0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 4
    .line 5
    iget-object v0, v0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatResizeOverrides:Lcom/android/server/wm/AppCompatResizeOverrides;

    .line 6
    .line 7
    iget-object v1, v0, Lcom/android/server/wm/AppCompatResizeOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 8
    .line 9
    iget-object v1, v1, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 10
    .line 11
    const-wide/32 v2, 0xacbec0b

    .line 12
    .line 13
    .line 14
    invoke-virtual {v1, v2, v3}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 15
    .line 16
    .line 17
    move-result v1

    .line 18
    iget-object v0, v0, Lcom/android/server/wm/AppCompatResizeOverrides;->mAllowForceResizeOverrideOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 19
    .line 20
    invoke-virtual {v0, v1}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOptInOverrideAndOptOutProperty(Z)Z

    .line 21
    .line 22
    .line 23
    move-result v0

    .line 24
    if-eqz v0, :cond_0

    .line 25
    .line 26
    const/4 p0, 0x1

    .line 27
    return p0

    .line 28
    :cond_0
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 29
    .line 30
    iget-boolean v0, v0, Landroid/content/pm/ActivityInfo;->supportsSizeChanges:Z

    .line 31
    .line 32
    if-eqz v0, :cond_1

    .line 33
    .line 34
    const/4 p0, 0x2

    .line 35
    return p0

    .line 36
    :cond_1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 37
    .line 38
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 39
    .line 40
    iget-object p0, p0, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatResizeOverrides:Lcom/android/server/wm/AppCompatResizeOverrides;

    .line 41
    .line 42
    iget-object v0, p0, Lcom/android/server/wm/AppCompatResizeOverrides;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 43
    .line 44
    iget-object v0, v0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 45
    .line 46
    const-wide/32 v1, 0xa5faf38

    .line 47
    .line 48
    .line 49
    invoke-virtual {v0, v1, v2}, Landroid/content/pm/ActivityInfo;->isChangeEnabled(J)Z

    .line 50
    .line 51
    .line 52
    move-result v0

    .line 53
    iget-object p0, p0, Lcom/android/server/wm/AppCompatResizeOverrides;->mAllowForceResizeOverrideOptProp:Lcom/android/server/wm/utils/OptPropFactory$OptProp;

    .line 54
    .line 55
    invoke-virtual {p0, v0}, Lcom/android/server/wm/utils/OptPropFactory$OptProp;->shouldEnableWithOptInOverrideAndOptOutProperty(Z)Z

    .line 56
    .line 57
    .line 58
    move-result p0

    .line 59
    if-eqz p0, :cond_2

    .line 60
    .line 61
    const/4 p0, 0x3

    .line 62
    return p0

    .line 63
    :cond_2
    const/4 p0, 0x0

    .line 64
    return p0
.end method

.method public final toString()Ljava/lang/String;
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowToken;->stringName:Ljava/lang/String;

    .line 2
    .line 3
    if-eqz v0, :cond_3

    .line 4
    .line 5
    new-instance v0, Ljava/lang/StringBuilder;

    .line 6
    .line 7
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 8
    .line 9
    .line 10
    iget-object v1, p0, Lcom/android/server/wm/WindowToken;->stringName:Ljava/lang/String;

    .line 11
    .line 12
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13
    .line 14
    .line 15
    const-string v1, " t"

    .line 16
    .line 17
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 18
    .line 19
    .line 20
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 21
    .line 22
    if-nez v1, :cond_0

    .line 23
    .line 24
    const/4 v1, -0x1

    .line 25
    goto :goto_0

    .line 26
    :cond_0
    iget v1, v1, Lcom/android/server/wm/Task;->mTaskId:I

    .line 27
    .line 28
    :goto_0
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 29
    .line 30
    .line 31
    iget-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->finishing:Z

    .line 32
    .line 33
    const-string v2, ""

    .line 34
    .line 35
    if-eqz v1, :cond_1

    .line 36
    .line 37
    const-string v1, " f}"

    .line 38
    .line 39
    goto :goto_1

    .line 40
    :cond_1
    move-object v1, v2

    .line 41
    :goto_1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 42
    .line 43
    .line 44
    iget-boolean p0, p0, Lcom/android/server/wm/ActivityRecord;->mIsExiting:Z

    .line 45
    .line 46
    if-eqz p0, :cond_2

    .line 47
    .line 48
    const-string v2, " isExiting"

    .line 49
    .line 50
    :cond_2
    const-string/jumbo p0, "}"

    .line 51
    .line 52
    .line 53
    invoke-static {v0, v2, p0}, Landroid/hardware/audio/common/V2_0/AudioOffloadInfo$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 54
    .line 55
    .line 56
    move-result-object p0

    .line 57
    return-object p0

    .line 58
    :cond_3
    const/16 v0, 0x80

    .line 59
    .line 60
    const-string v1, "ActivityRecord{"

    .line 61
    .line 62
    invoke-static {v0, v1}, Lcom/android/server/BootReceiver$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/StringBuilder;

    .line 63
    .line 64
    .line 65
    move-result-object v0

    .line 66
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 67
    .line 68
    .line 69
    move-result v1

    .line 70
    invoke-static {v1}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 71
    .line 72
    .line 73
    move-result-object v1

    .line 74
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 75
    .line 76
    .line 77
    const-string v1, " u"

    .line 78
    .line 79
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 80
    .line 81
    .line 82
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 83
    .line 84
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 85
    .line 86
    .line 87
    const/16 v1, 0x20

    .line 88
    .line 89
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 90
    .line 91
    .line 92
    iget-object v1, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 93
    .line 94
    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    .line 95
    .line 96
    .line 97
    move-result-object v1

    .line 98
    invoke-virtual {v1}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    .line 99
    .line 100
    .line 101
    move-result-object v1

    .line 102
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 103
    .line 104
    .line 105
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 106
    .line 107
    .line 108
    move-result-object v0

    .line 109
    iput-object v0, p0, Lcom/android/server/wm/WindowToken;->stringName:Ljava/lang/String;

    .line 110
    .line 111
    return-object v0
.end method

.method public final transferStartingWindow(Lcom/android/server/wm/ActivityRecord;)Z
    .locals 14

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 2
    .line 3
    iget-boolean v0, v0, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 4
    .line 5
    iget-object v1, p1, Lcom/android/server/wm/ActivityRecord;->mPopOverState:Lcom/android/server/wm/PopOverState;

    .line 6
    .line 7
    iget-boolean v1, v1, Lcom/android/server/wm/PopOverState;->mIsActivated:Z

    .line 8
    .line 9
    const/4 v2, 0x0

    .line 10
    if-eq v0, v1, :cond_0

    .line 11
    .line 12
    return v2

    .line 13
    :cond_0
    iget-object v0, p1, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 14
    .line 15
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 16
    .line 17
    const/4 v3, 0x0

    .line 18
    const/4 v4, 0x1

    .line 19
    if-eqz v0, :cond_e

    .line 20
    .line 21
    iget-object v5, p1, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 22
    .line 23
    if-eqz v5, :cond_e

    .line 24
    .line 25
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 26
    .line 27
    .line 28
    move-result-object v5

    .line 29
    if-nez v5, :cond_1

    .line 30
    .line 31
    return v2

    .line 32
    :cond_1
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 33
    .line 34
    .line 35
    move-result v5

    .line 36
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 37
    .line 38
    .line 39
    move-result v6

    .line 40
    if-eq v5, v6, :cond_3

    .line 41
    .line 42
    sget-boolean v5, Lcom/samsung/android/rune/CoreRune;->FW_SHELL_TRANSITION_BUG_FIX:Z

    .line 43
    .line 44
    if-eqz v5, :cond_2

    .line 45
    .line 46
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->getRequestedConfigurationOrientation()I

    .line 47
    .line 48
    .line 49
    move-result v5

    .line 50
    if-eqz v5, :cond_3

    .line 51
    .line 52
    :cond_2
    return v2

    .line 53
    :cond_3
    iget-boolean v5, p1, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 54
    .line 55
    if-eqz v5, :cond_4

    .line 56
    .line 57
    iget-object v5, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 58
    .line 59
    iput-boolean v4, v5, Lcom/android/server/wm/DisplayContent;->mSkipAppTransitionAnimation:Z

    .line 60
    .line 61
    :cond_4
    aget-boolean v1, v1, v4

    .line 62
    .line 63
    if-eqz v1, :cond_5

    .line 64
    .line 65
    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 66
    .line 67
    .line 68
    move-result-object v1

    .line 69
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 70
    .line 71
    .line 72
    move-result-object v5

    .line 73
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 74
    .line 75
    .line 76
    move-result-object v6

    .line 77
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 78
    .line 79
    const-string v11, "Moving existing starting %s from %s to %s"

    .line 80
    .line 81
    filled-new-array {v1, v5, v6}, [Ljava/lang/Object;

    .line 82
    .line 83
    .line 84
    move-result-object v12

    .line 85
    const-wide v8, 0x7409a3aa906e3d16L    # 9.178525759499134E250

    .line 86
    .line 87
    .line 88
    .line 89
    .line 90
    const/4 v10, 0x0

    .line 91
    invoke-static/range {v7 .. v12}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 92
    .line 93
    .line 94
    :cond_5
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 95
    .line 96
    .line 97
    move-result-wide v5

    .line 98
    :try_start_0
    invoke-virtual {p1}, Lcom/android/server/wm/WindowToken;->hasFixedRotationTransform()Z

    .line 99
    .line 100
    .line 101
    move-result v1

    .line 102
    if-eqz v1, :cond_6

    .line 103
    .line 104
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 105
    .line 106
    invoke-virtual {v1, p0, p0, v2}, Lcom/android/server/wm/DisplayContent;->handleTopActivityLaunchingInDifferentOrientation(Lcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/ActivityRecord;Z)Z

    .line 107
    .line 108
    .line 109
    goto :goto_0

    .line 110
    :catchall_0
    move-exception p0

    .line 111
    goto/16 :goto_2

    .line 112
    .line 113
    :cond_6
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 114
    .line 115
    iget-object v1, v1, Lcom/android/server/wm/WindowManagerService;->mFlags:Lcom/android/server/wm/WindowManagerFlags;

    .line 116
    .line 117
    iget-boolean v1, v1, Lcom/android/server/wm/WindowManagerFlags;->mRespectNonTopVisibleFixedOrientation:Z

    .line 118
    .line 119
    if-nez v1, :cond_7

    .line 120
    .line 121
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 122
    .line 123
    invoke-virtual {v1, p0}, Lcom/android/server/wm/DisplayContent;->rotationForActivityInDifferentOrientation(Lcom/android/server/wm/ActivityRecord;)I

    .line 124
    .line 125
    .line 126
    move-result v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 127
    const/4 v7, -0x1

    .line 128
    if-eq v1, v7, :cond_7

    .line 129
    .line 130
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 131
    .line 132
    .line 133
    return v2

    .line 134
    :cond_7
    :goto_0
    :try_start_1
    iget-object v1, p1, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 135
    .line 136
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 137
    .line 138
    iget-object v1, p1, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 139
    .line 140
    iput-object v1, p0, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 141
    .line 142
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 143
    .line 144
    iget-boolean v1, p1, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 145
    .line 146
    iput-boolean v1, p0, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 147
    .line 148
    iput-object v3, p1, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 149
    .line 150
    iput-object v3, p1, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 151
    .line 152
    iput-object v3, p1, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 153
    .line 154
    iput-boolean v4, p1, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 155
    .line 156
    iput-object p0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 157
    .line 158
    iput-object p0, v0, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 159
    .line 160
    sget-object v1, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ADD_REMOVE_enabled:[Z

    .line 161
    .line 162
    aget-boolean v1, v1, v4

    .line 163
    .line 164
    if-eqz v1, :cond_8

    .line 165
    .line 166
    invoke-static {v0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 167
    .line 168
    .line 169
    move-result-object v1

    .line 170
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 171
    .line 172
    .line 173
    move-result-object v7

    .line 174
    sget-object v8, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ADD_REMOVE:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 175
    .line 176
    filled-new-array {v1, v7}, [Ljava/lang/Object;

    .line 177
    .line 178
    .line 179
    move-result-object v13

    .line 180
    const-wide v9, -0x2fe11762c7afcf6bL    # -8.947442604099203E77

    .line 181
    .line 182
    .line 183
    .line 184
    .line 185
    const/4 v11, 0x0

    .line 186
    const/4 v12, 0x0

    .line 187
    invoke-static/range {v8 .. v13}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 188
    .line 189
    .line 190
    :cond_8
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 191
    .line 192
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TransitionController;->collect(Lcom/android/server/wm/WindowContainer;)V

    .line 193
    .line 194
    .line 195
    const v1, 0x7fffffff

    .line 196
    .line 197
    .line 198
    invoke-virtual {v0, p0, v1}, Lcom/android/server/wm/WindowContainer;->reparent(Lcom/android/server/wm/WindowContainer;I)V

    .line 199
    .line 200
    .line 201
    iput-object v3, v0, Lcom/android/server/wm/WindowState;->mFrozenInsetsState:Landroid/view/InsetsState;

    .line 202
    .line 203
    iget-boolean v1, p1, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 204
    .line 205
    if-eqz v1, :cond_9

    .line 206
    .line 207
    iput-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->allDrawn:Z

    .line 208
    .line 209
    :cond_9
    iget-boolean v1, p1, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 210
    .line 211
    if-eqz v1, :cond_a

    .line 212
    .line 213
    iput-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->firstWindowDrawn:Z

    .line 214
    .line 215
    :cond_a
    iget-boolean v1, p1, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 216
    .line 217
    if-eqz v1, :cond_b

    .line 218
    .line 219
    invoke-virtual {p0, v4}, Lcom/android/server/wm/ActivityRecord;->setVisible(Z)V

    .line 220
    .line 221
    .line 222
    invoke-virtual {p0, v4}, Lcom/android/server/wm/ActivityRecord;->setVisibleRequested(Z)Z

    .line 223
    .line 224
    .line 225
    iput-boolean v4, p0, Lcom/android/server/wm/ActivityRecord;->mVisibleSetFromTransferredStartingWindow:Z

    .line 226
    .line 227
    :cond_b
    iget-boolean v1, p1, Lcom/android/server/wm/WindowToken;->mClientVisible:Z

    .line 228
    .line 229
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->setClientVisible(Z)V

    .line 230
    .line 231
    .line 232
    invoke-virtual {p1}, Lcom/android/server/wm/WindowContainer;->isAnimating()Z

    .line 233
    .line 234
    .line 235
    move-result v1

    .line 236
    if-eqz v1, :cond_c

    .line 237
    .line 238
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowContainer;->transferAnimation(Lcom/android/server/wm/WindowContainer;)V

    .line 239
    .line 240
    .line 241
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 242
    .line 243
    or-int/lit8 v1, v1, 0x8

    .line 244
    .line 245
    iput v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 246
    .line 247
    goto :goto_1

    .line 248
    :cond_c
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 249
    .line 250
    invoke-virtual {v1}, Lcom/android/server/wm/TransitionController;->getTransitionPlayer()Landroid/window/ITransitionPlayer;

    .line 251
    .line 252
    .line 253
    move-result-object v1

    .line 254
    if-eqz v1, :cond_d

    .line 255
    .line 256
    iget v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 257
    .line 258
    or-int/lit8 v1, v1, 0x8

    .line 259
    .line 260
    iput v1, p0, Lcom/android/server/wm/ActivityRecord;->mTransitionChangeFlags:I

    .line 261
    .line 262
    :cond_d
    :goto_1
    invoke-virtual {p1, v0}, Lcom/android/server/wm/ActivityRecord;->postWindowRemoveStartingWindowCleanup(Lcom/android/server/wm/WindowState;)V

    .line 263
    .line 264
    .line 265
    iput-boolean v2, p1, Lcom/android/server/wm/ActivityRecord;->mVisibleSetFromTransferredStartingWindow:Z

    .line 266
    .line 267
    iget-object p1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 268
    .line 269
    const/4 v0, 0x3

    .line 270
    invoke-virtual {p1, v0, v4}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 271
    .line 272
    .line 273
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 274
    .line 275
    .line 276
    move-result-object p1

    .line 277
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->setLayoutNeeded()V

    .line 278
    .line 279
    .line 280
    iget-object p0, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 281
    .line 282
    iget-object p0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    .line 283
    .line 284
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement(Z)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 285
    .line 286
    .line 287
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 288
    .line 289
    .line 290
    return v4

    .line 291
    :goto_2
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 292
    .line 293
    .line 294
    throw p0

    .line 295
    :cond_e
    iget-object v0, p1, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 296
    .line 297
    if-eqz v0, :cond_10

    .line 298
    .line 299
    aget-boolean v0, v1, v4

    .line 300
    .line 301
    if-eqz v0, :cond_f

    .line 302
    .line 303
    invoke-static {p1}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 304
    .line 305
    .line 306
    move-result-object v0

    .line 307
    invoke-static {p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 308
    .line 309
    .line 310
    move-result-object v1

    .line 311
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 312
    .line 313
    const-string v9, "Moving pending starting from %s to %s"

    .line 314
    .line 315
    filled-new-array {v0, v1}, [Ljava/lang/Object;

    .line 316
    .line 317
    .line 318
    move-result-object v10

    .line 319
    const-wide v6, 0x77e609a44b5535a5L    # 3.638242793076849E269

    .line 320
    .line 321
    .line 322
    .line 323
    .line 324
    const/4 v8, 0x0

    .line 325
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 326
    .line 327
    .line 328
    :cond_f
    iget-object v0, p1, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 329
    .line 330
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 331
    .line 332
    iput-object v3, p1, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 333
    .line 334
    iput-boolean v4, p1, Lcom/android/server/wm/ActivityRecord;->startingMoved:Z

    .line 335
    .line 336
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->scheduleAddStartingWindow()V

    .line 337
    .line 338
    .line 339
    return v4

    .line 340
    :cond_10
    return v2
.end method

.method public final updateLetterboxSurfaceIfNeeded(Lcom/android/server/wm/WindowState;)V
    .locals 2

    .line 1
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/wm/AppCompatController;->mAppCompatLetterboxPolicy:Lcom/android/server/wm/AppCompatLetterboxPolicy;

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 6
    .line 7
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->getSyncTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 8
    .line 9
    .line 10
    move-result-object v1

    .line 11
    invoke-virtual {v0}, Lcom/android/server/wm/WindowContainer;->getPendingTransaction()Landroid/view/SurfaceControl$Transaction;

    .line 12
    .line 13
    .line 14
    move-result-object v0

    .line 15
    iget-object p0, p0, Lcom/android/server/wm/AppCompatLetterboxPolicy;->mLetterboxPolicyState:Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;

    .line 16
    .line 17
    invoke-virtual {p0, p1, v1, v0}, Lcom/android/server/wm/AppCompatLetterboxPolicy$LetterboxPolicyState;->updateLetterboxSurfaceIfNeeded(Lcom/android/server/wm/WindowState;Landroid/view/SurfaceControl$Transaction;Landroid/view/SurfaceControl$Transaction;)V

    .line 18
    .line 19
    .line 20
    return-void
.end method

.method public final updateOptionsLocked(Landroid/app/ActivityOptions;)V
    .locals 2

    .line 1
    if-eqz p1, :cond_2

    .line 2
    .line 3
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 4
    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    invoke-virtual {v0}, Landroid/app/ActivityOptions;->abort()V

    .line 8
    .line 9
    .line 10
    :cond_0
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getLaunchedFromBubble()Z

    .line 11
    .line 12
    .line 13
    move-result v0

    .line 14
    iput-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLaunchedFromBubble:Z

    .line 15
    .line 16
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mPendingOptions:Landroid/app/ActivityOptions;

    .line 17
    .line 18
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getAnimationType()I

    .line 19
    .line 20
    .line 21
    move-result v0

    .line 22
    const/16 v1, 0xd

    .line 23
    .line 24
    if-ne v0, v1, :cond_1

    .line 25
    .line 26
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getRemoteAnimationAdapter()Landroid/view/RemoteAnimationAdapter;

    .line 27
    .line 28
    .line 29
    move-result-object v0

    .line 30
    iput-object v0, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteAnimation:Landroid/view/RemoteAnimationAdapter;

    .line 31
    .line 32
    :cond_1
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getRemoteTransition()Landroid/window/RemoteTransition;

    .line 33
    .line 34
    .line 35
    move-result-object p1

    .line 36
    iput-object p1, p0, Lcom/android/server/wm/ActivityRecord;->mPendingRemoteTransition:Landroid/window/RemoteTransition;

    .line 37
    .line 38
    :cond_2
    return-void
.end method

.method public final updatePictureInPictureMode(Landroid/graphics/Rect;)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 2
    .line 3
    if-eqz v0, :cond_3

    .line 4
    .line 5
    invoke-virtual {v0}, Lcom/android/server/wm/TaskFragment;->getRootTask()Lcom/android/server/wm/Task;

    .line 6
    .line 7
    .line 8
    move-result-object v0

    .line 9
    if-eqz v0, :cond_3

    .line 10
    .line 11
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 12
    .line 13
    .line 14
    move-result v0

    .line 15
    if-nez v0, :cond_0

    .line 16
    .line 17
    goto :goto_1

    .line 18
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->inPinnedWindowingMode()Z

    .line 19
    .line 20
    .line 21
    move-result v0

    .line 22
    const/4 v1, 0x0

    .line 23
    const/4 v2, 0x1

    .line 24
    if-eqz v0, :cond_1

    .line 25
    .line 26
    if-eqz p1, :cond_1

    .line 27
    .line 28
    move p1, v2

    .line 29
    goto :goto_0

    .line 30
    :cond_1
    move p1, v1

    .line 31
    :goto_0
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedPictureInPictureMode:Z

    .line 32
    .line 33
    if-ne p1, v0, :cond_2

    .line 34
    .line 35
    goto :goto_1

    .line 36
    :cond_2
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedPictureInPictureMode:Z

    .line 37
    .line 38
    iput-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mLastReportedMultiWindowMode:Z

    .line 39
    .line 40
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->ensureActivityConfiguration(Z)Z

    .line 41
    .line 42
    .line 43
    if-eqz p1, :cond_3

    .line 44
    .line 45
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->findMainWindow(Z)Lcom/android/server/wm/WindowState;

    .line 46
    .line 47
    .line 48
    move-result-object p1

    .line 49
    if-nez p1, :cond_3

    .line 50
    .line 51
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 52
    .line 53
    invoke-virtual {p1, v1}, Lcom/android/server/wm/TaskFragment;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 54
    .line 55
    .line 56
    move-result-object p1

    .line 57
    if-ne p1, p0, :cond_3

    .line 58
    .line 59
    const/4 p1, -0x1

    .line 60
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 61
    .line 62
    .line 63
    move-result-object p1

    .line 64
    const-string v0, ""

    .line 65
    .line 66
    const-string v1, "265293293"

    .line 67
    .line 68
    filled-new-array {v1, p1, v0}, [Ljava/lang/Object;

    .line 69
    .line 70
    .line 71
    move-result-object p1

    .line 72
    const v0, 0x534e4554

    .line 73
    .line 74
    .line 75
    invoke-static {v0, p1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 76
    .line 77
    .line 78
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->removeImmediately()V

    .line 79
    .line 80
    .line 81
    :cond_3
    :goto_1
    return-void
.end method

.method public final updateReportedConfigurationAndSend()Z
    .locals 26

    .line 1
    move-object/from16 v1, p0

    .line 2
    .line 3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->isConfigurationDispatchPaused()Z

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const-string v2, "ActivityTaskManager"

    .line 8
    .line 9
    if-eqz v0, :cond_0

    .line 10
    .line 11
    const-string/jumbo v0, "trying to update reported(client) config while dispatch is paused"

    .line 12
    .line 13
    .line 14
    invoke-static {v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 15
    .line 16
    .line 17
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 18
    .line 19
    .line 20
    move-result-object v0

    .line 21
    invoke-static {v0}, Landroid/app/WindowConfiguration;->isSplitScreenWindowingMode(Landroid/app/WindowConfiguration;)Z

    .line 22
    .line 23
    .line 24
    move-result v0

    .line 25
    const/4 v3, 0x1

    .line 26
    if-eqz v0, :cond_1

    .line 27
    .line 28
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 29
    .line 30
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingController:Lcom/android/server/wm/MultiTaskingController;

    .line 31
    .line 32
    iget-boolean v0, v0, Lcom/android/server/wm/MultiTaskingController;->mDeferEnsureConfig:Z

    .line 33
    .line 34
    if-eqz v0, :cond_1

    .line 35
    .line 36
    return v3

    .line 37
    :cond_1
    sget-object v0, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_CONFIGURATION_enabled:[Z

    .line 38
    .line 39
    aget-boolean v4, v0, v3

    .line 40
    .line 41
    if-eqz v4, :cond_2

    .line 42
    .line 43
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 44
    .line 45
    .line 46
    move-result-object v4

    .line 47
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 48
    .line 49
    filled-new-array {v4}, [Ljava/lang/Object;

    .line 50
    .line 51
    .line 52
    move-result-object v10

    .line 53
    const-wide v6, -0x31cdb6f31616c7bdL    # -4.929721496946967E68

    .line 54
    .line 55
    .line 56
    .line 57
    .line 58
    const/4 v8, 0x0

    .line 59
    const/4 v9, 0x0

    .line 60
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 61
    .line 62
    .line 63
    :cond_2
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getDisplayId()I

    .line 64
    .line 65
    .line 66
    move-result v4

    .line 67
    iget v5, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedDisplayId:I

    .line 68
    .line 69
    if-eq v5, v4, :cond_3

    .line 70
    .line 71
    move v5, v3

    .line 72
    goto :goto_0

    .line 73
    :cond_3
    const/4 v5, 0x0

    .line 74
    :goto_0
    if-eqz v5, :cond_4

    .line 75
    .line 76
    iput v4, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedDisplayId:I

    .line 77
    .line 78
    :cond_4
    iget-boolean v7, v1, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 79
    .line 80
    if-eqz v7, :cond_5

    .line 81
    .line 82
    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 83
    .line 84
    iget-object v7, v7, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 85
    .line 86
    invoke-virtual {v7}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->updateAppCompatDisplayInsets()V

    .line 87
    .line 88
    .line 89
    :cond_5
    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 90
    .line 91
    iget-object v8, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 92
    .line 93
    invoke-virtual {v8}, Landroid/util/MergedConfiguration;->getMergedConfiguration()Landroid/content/res/Configuration;

    .line 94
    .line 95
    .line 96
    move-result-object v8

    .line 97
    invoke-virtual {v7, v8}, Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V

    .line 98
    .line 99
    .line 100
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getActivityWindowInfo()Landroid/window/ActivityWindowInfo;

    .line 101
    .line 102
    .line 103
    move-result-object v7

    .line 104
    invoke-static {}, Lcom/android/window/flags/Flags;->activityWindowInfoFlag()Z

    .line 105
    .line 106
    .line 107
    move-result v8

    .line 108
    if-eqz v8, :cond_6

    .line 109
    .line 110
    iget-object v8, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 111
    .line 112
    invoke-virtual {v8, v7}, Landroid/window/ActivityWindowInfo;->equals(Ljava/lang/Object;)Z

    .line 113
    .line 114
    .line 115
    move-result v8

    .line 116
    if-nez v8, :cond_6

    .line 117
    .line 118
    move v8, v3

    .line 119
    goto :goto_1

    .line 120
    :cond_6
    const/4 v8, 0x0

    .line 121
    :goto_1
    if-nez v5, :cond_8

    .line 122
    .line 123
    if-nez v8, :cond_8

    .line 124
    .line 125
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 126
    .line 127
    .line 128
    move-result-object v8

    .line 129
    iget-object v9, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 130
    .line 131
    invoke-virtual {v8, v9}, Landroid/content/res/Configuration;->equals(Landroid/content/res/Configuration;)Z

    .line 132
    .line 133
    .line 134
    move-result v8

    .line 135
    if-eqz v8, :cond_8

    .line 136
    .line 137
    aget-boolean v0, v0, v3

    .line 138
    .line 139
    if-eqz v0, :cond_7

    .line 140
    .line 141
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 142
    .line 143
    .line 144
    move-result-object v0

    .line 145
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 146
    .line 147
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 148
    .line 149
    .line 150
    move-result-object v9

    .line 151
    const-wide v5, 0x40d78ed72a0c31d5L    # 24123.361941383995

    .line 152
    .line 153
    .line 154
    .line 155
    .line 156
    const/4 v7, 0x0

    .line 157
    const/4 v8, 0x0

    .line 158
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 159
    .line 160
    .line 161
    :cond_7
    return v3

    .line 162
    :cond_8
    iget-object v8, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 163
    .line 164
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 165
    .line 166
    .line 167
    move-result-object v9

    .line 168
    invoke-virtual {v8, v9}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    .line 169
    .line 170
    .line 171
    move-result v9

    .line 172
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 173
    .line 174
    .line 175
    move-result-object v10

    .line 176
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->mSizeConfigurations:Landroid/window/SizeConfigurationBuckets;

    .line 177
    .line 178
    invoke-static {v9, v8, v10, v11}, Landroid/window/SizeConfigurationBuckets;->filterDiff(ILandroid/content/res/Configuration;Landroid/content/res/Configuration;Landroid/window/SizeConfigurationBuckets;)I

    .line 179
    .line 180
    .line 181
    move-result v8

    .line 182
    const/high16 v9, 0x20000000

    .line 183
    .line 184
    and-int/2addr v9, v8

    .line 185
    const v10, -0x20000001

    .line 186
    .line 187
    .line 188
    if-eqz v9, :cond_9

    .line 189
    .line 190
    and-int/2addr v8, v10

    .line 191
    :cond_9
    move v14, v8

    .line 192
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getMergedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 193
    .line 194
    .line 195
    move-result-object v8

    .line 196
    sget-boolean v9, Lcom/samsung/android/rune/CoreRune;->MW_SA_LOGGING:Z

    .line 197
    .line 198
    if-eqz v9, :cond_c

    .line 199
    .line 200
    iget-boolean v11, v1, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 201
    .line 202
    if-eqz v11, :cond_c

    .line 203
    .line 204
    iget-object v11, v1, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 205
    .line 206
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    .line 207
    .line 208
    .line 209
    move-result v11

    .line 210
    add-int/lit8 v11, v11, -0x1

    .line 211
    .line 212
    :goto_2
    if-ltz v11, :cond_b

    .line 213
    .line 214
    iget-object v12, v1, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 215
    .line 216
    invoke-virtual {v12, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 217
    .line 218
    .line 219
    move-result-object v12

    .line 220
    check-cast v12, Lcom/android/server/wm/WindowState;

    .line 221
    .line 222
    if-eqz v12, :cond_a

    .line 223
    .line 224
    iget-object v13, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 225
    .line 226
    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->isFullscreen()Z

    .line 227
    .line 228
    .line 229
    move-result v13

    .line 230
    if-eqz v13, :cond_a

    .line 231
    .line 232
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isFullyTransparent()Z

    .line 233
    .line 234
    .line 235
    move-result v13

    .line 236
    if-nez v13, :cond_a

    .line 237
    .line 238
    goto :goto_3

    .line 239
    :cond_a
    add-int/lit8 v11, v11, -0x1

    .line 240
    .line 241
    goto :goto_2

    .line 242
    :cond_b
    const/4 v12, 0x0

    .line 243
    :goto_3
    if-eqz v12, :cond_c

    .line 244
    .line 245
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 246
    .line 247
    invoke-virtual {v11}, Landroid/util/MergedConfiguration;->getOverrideConfiguration()Landroid/content/res/Configuration;

    .line 248
    .line 249
    .line 250
    move-result-object v11

    .line 251
    iget-object v11, v11, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 252
    .line 253
    invoke-virtual {v11}, Landroid/app/WindowConfiguration;->getWindowingMode()I

    .line 254
    .line 255
    .line 256
    move-result v12

    .line 257
    invoke-virtual {v11}, Landroid/app/WindowConfiguration;->getStageType()I

    .line 258
    .line 259
    .line 260
    move-result v11

    .line 261
    move v15, v11

    .line 262
    move v13, v12

    .line 263
    goto :goto_4

    .line 264
    :cond_c
    const/4 v13, 0x0

    .line 265
    const/4 v15, 0x0

    .line 266
    :goto_4
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getProcessGlobalConfiguration()Landroid/content/res/Configuration;

    .line 267
    .line 268
    .line 269
    move-result-object v11

    .line 270
    iget-object v12, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 271
    .line 272
    invoke-virtual {v12, v11, v8}, Landroid/util/MergedConfiguration;->setConfiguration(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 273
    .line 274
    .line 275
    invoke-static {}, Lcom/android/window/flags/Flags;->activityWindowInfoFlag()Z

    .line 276
    .line 277
    .line 278
    move-result v11

    .line 279
    if-eqz v11, :cond_d

    .line 280
    .line 281
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedActivityWindowInfo:Landroid/window/ActivityWindowInfo;

    .line 282
    .line 283
    invoke-virtual {v11, v7}, Landroid/window/ActivityWindowInfo;->set(Landroid/window/ActivityWindowInfo;)V

    .line 284
    .line 285
    .line 286
    :cond_d
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->mState:Lcom/android/server/wm/ActivityRecord$State;

    .line 287
    .line 288
    sget-object v12, Lcom/android/server/wm/ActivityRecord$State;->INITIALIZING:Lcom/android/server/wm/ActivityRecord$State;

    .line 289
    .line 290
    if-ne v11, v12, :cond_f

    .line 291
    .line 292
    aget-boolean v0, v0, v3

    .line 293
    .line 294
    if-eqz v0, :cond_e

    .line 295
    .line 296
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 297
    .line 298
    .line 299
    move-result-object v0

    .line 300
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 301
    .line 302
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 303
    .line 304
    .line 305
    move-result-object v9

    .line 306
    const-wide v5, -0x77af9746bf74cabaL

    .line 307
    .line 308
    .line 309
    .line 310
    .line 311
    const/4 v7, 0x0

    .line 312
    const/4 v8, 0x0

    .line 313
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 314
    .line 315
    .line 316
    :cond_e
    return v3

    .line 317
    :cond_f
    if-nez v14, :cond_13

    .line 318
    .line 319
    aget-boolean v0, v0, v3

    .line 320
    .line 321
    if-eqz v0, :cond_10

    .line 322
    .line 323
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 324
    .line 325
    .line 326
    move-result-object v0

    .line 327
    sget-object v16, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 328
    .line 329
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 330
    .line 331
    .line 332
    move-result-object v21

    .line 333
    const-wide v17, 0x227dca4ed3c73babL    # 1.526850216325029E-142

    .line 334
    .line 335
    .line 336
    .line 337
    .line 338
    const/16 v19, 0x0

    .line 339
    .line 340
    const/16 v20, 0x0

    .line 341
    .line 342
    invoke-static/range {v16 .. v21}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 343
    .line 344
    .line 345
    :cond_10
    if-eqz v5, :cond_11

    .line 346
    .line 347
    invoke-virtual {v1, v4, v8, v7}, Lcom/android/server/wm/ActivityRecord;->scheduleActivityMovedToDisplay(ILandroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)V

    .line 348
    .line 349
    .line 350
    goto :goto_5

    .line 351
    :cond_11
    invoke-virtual {v1, v8, v7}, Lcom/android/server/wm/ActivityRecord;->scheduleConfigurationChanged(Landroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)V

    .line 352
    .line 353
    .line 354
    if-eqz v9, :cond_12

    .line 355
    .line 356
    if-eqz v13, :cond_12

    .line 357
    .line 358
    invoke-virtual {v1, v13, v15}, Lcom/android/server/wm/ActivityRecord;->logForMultiWindowModeChanged(II)V

    .line 359
    .line 360
    .line 361
    :cond_12
    :goto_5
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 362
    .line 363
    invoke-virtual {v0}, Landroid/util/MergedConfiguration;->getMergedConfiguration()Landroid/content/res/Configuration;

    .line 364
    .line 365
    .line 366
    move-result-object v0

    .line 367
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 368
    .line 369
    invoke-virtual {v1, v0, v2}, Lcom/android/server/wm/ActivityRecord;->notifyActivityRefresherAboutConfigurationChange(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 370
    .line 371
    .line 372
    return v3

    .line 373
    :cond_13
    aget-boolean v11, v0, v3

    .line 374
    .line 375
    if-eqz v11, :cond_14

    .line 376
    .line 377
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 378
    .line 379
    .line 380
    move-result-object v11

    .line 381
    invoke-static {v14}, Landroid/content/res/Configuration;->configurationDiffToString(I)Ljava/lang/String;

    .line 382
    .line 383
    .line 384
    move-result-object v12

    .line 385
    invoke-static {v12}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 386
    .line 387
    .line 388
    move-result-object v12

    .line 389
    sget-object v16, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 390
    .line 391
    filled-new-array {v11, v12}, [Ljava/lang/Object;

    .line 392
    .line 393
    .line 394
    move-result-object v21

    .line 395
    const-wide v17, -0x7ba565cbbcd4ccb2L

    .line 396
    .line 397
    .line 398
    .line 399
    .line 400
    const/16 v19, 0x0

    .line 401
    .line 402
    const/16 v20, 0x0

    .line 403
    .line 404
    invoke-static/range {v16 .. v21}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 405
    .line 406
    .line 407
    :cond_14
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->attachedToProcess()Z

    .line 408
    .line 409
    .line 410
    move-result v11

    .line 411
    if-nez v11, :cond_16

    .line 412
    .line 413
    aget-boolean v0, v0, v3

    .line 414
    .line 415
    if-eqz v0, :cond_15

    .line 416
    .line 417
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 418
    .line 419
    .line 420
    move-result-object v0

    .line 421
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 422
    .line 423
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 424
    .line 425
    .line 426
    move-result-object v9

    .line 427
    const-wide v5, -0x6fb1ad2428a1cfd2L

    .line 428
    .line 429
    .line 430
    .line 431
    .line 432
    const/4 v7, 0x0

    .line 433
    const/4 v8, 0x0

    .line 434
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 435
    .line 436
    .line 437
    :cond_15
    return v3

    .line 438
    :cond_16
    sget-object v11, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_FORCE_DEBUG_CONFIGURATION_enabled:[Z

    .line 439
    .line 440
    aget-boolean v11, v11, v3

    .line 441
    .line 442
    if-eqz v11, :cond_17

    .line 443
    .line 444
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 445
    .line 446
    iget-object v11, v11, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    .line 447
    .line 448
    invoke-static {v11}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 449
    .line 450
    .line 451
    move-result-object v11

    .line 452
    invoke-static {v14}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 453
    .line 454
    .line 455
    move-result-object v12

    .line 456
    invoke-static {v12}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 457
    .line 458
    .line 459
    move-result-object v12

    .line 460
    iget-object v6, v1, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 461
    .line 462
    invoke-virtual {v6}, Landroid/content/pm/ActivityInfo;->getRealConfigChanged()I

    .line 463
    .line 464
    .line 465
    move-result v6

    .line 466
    invoke-static {v6}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 467
    .line 468
    .line 469
    move-result-object v6

    .line 470
    invoke-static {v6}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 471
    .line 472
    .line 473
    move-result-object v6

    .line 474
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 475
    .line 476
    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 477
    .line 478
    .line 479
    move-result-object v3

    .line 480
    sget-object v20, Lcom/android/internal/protolog/ProtoLogGroup;->WM_FORCE_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 481
    .line 482
    filled-new-array {v11, v12, v6, v3}, [Ljava/lang/Object;

    .line 483
    .line 484
    .line 485
    move-result-object v25

    .line 486
    const-wide v21, -0x6e3ce873c323ccdcL    # -4.126333012782876E-223

    .line 487
    .line 488
    .line 489
    .line 490
    .line 491
    const/16 v23, 0x0

    .line 492
    .line 493
    const-string v24, "Checking to restart %s: changed=0x%s, handles=0x%s, mLastReportedConfiguration=%s"

    .line 494
    .line 495
    invoke-static/range {v20 .. v25}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 496
    .line 497
    .line 498
    :cond_17
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 499
    .line 500
    iget-object v6, v1, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 501
    .line 502
    invoke-virtual {v6}, Landroid/content/pm/ActivityInfo;->getRealConfigChanged()I

    .line 503
    .line 504
    .line 505
    move-result v6

    .line 506
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getConfiguration()Landroid/content/res/Configuration;

    .line 507
    .line 508
    .line 509
    move-result-object v11

    .line 510
    const/16 v12, 0x200

    .line 511
    .line 512
    if-ne v14, v12, :cond_1a

    .line 513
    .line 514
    iget v11, v11, Landroid/content/res/Configuration;->uiMode:I

    .line 515
    .line 516
    and-int/lit8 v11, v11, 0xf

    .line 517
    .line 518
    const/4 v12, 0x7

    .line 519
    if-ne v11, v12, :cond_18

    .line 520
    .line 521
    const/4 v11, 0x1

    .line 522
    goto :goto_6

    .line 523
    :cond_18
    const/4 v11, 0x0

    .line 524
    :goto_6
    iget v10, v3, Landroid/content/res/Configuration;->uiMode:I

    .line 525
    .line 526
    and-int/lit8 v10, v10, 0xf

    .line 527
    .line 528
    if-ne v10, v12, :cond_19

    .line 529
    .line 530
    const/4 v10, 0x1

    .line 531
    goto :goto_7

    .line 532
    :cond_19
    const/4 v10, 0x0

    .line 533
    :goto_7
    if-eq v11, v10, :cond_1a

    .line 534
    .line 535
    const/4 v10, 0x1

    .line 536
    goto :goto_8

    .line 537
    :cond_1a
    const/4 v10, 0x0

    .line 538
    :goto_8
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 539
    .line 540
    iget-object v11, v11, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 541
    .line 542
    iget v11, v11, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    .line 543
    .line 544
    const/16 v12, 0x1a

    .line 545
    .line 546
    if-ge v11, v12, :cond_1b

    .line 547
    .line 548
    iget-object v11, v1, Lcom/android/server/wm/ActivityRecord;->requestedVrComponent:Landroid/content/ComponentName;

    .line 549
    .line 550
    if-eqz v11, :cond_1b

    .line 551
    .line 552
    if-eqz v10, :cond_1b

    .line 553
    .line 554
    or-int/lit16 v6, v6, 0x200

    .line 555
    .line 556
    :cond_1b
    iget-object v10, v1, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 557
    .line 558
    iget-boolean v10, v10, Lcom/android/server/wm/WindowManagerService;->mSkipActivityRelaunchWhenDocking:Z

    .line 559
    .line 560
    if-eqz v10, :cond_1c

    .line 561
    .line 562
    invoke-virtual {v1, v3}, Lcom/android/server/wm/ActivityRecord;->onlyDeskInUiModeChanged(Landroid/content/res/Configuration;)Z

    .line 563
    .line 564
    .line 565
    move-result v10

    .line 566
    if-eqz v10, :cond_1c

    .line 567
    .line 568
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->hasDeskResources()Z

    .line 569
    .line 570
    .line 571
    move-result v10

    .line 572
    if-nez v10, :cond_1c

    .line 573
    .line 574
    or-int/lit16 v6, v6, 0x200

    .line 575
    .line 576
    :cond_1c
    sget-boolean v10, Lcom/samsung/android/rune/CoreRune;->MT_NEW_DEX_LAUNCH_POLICY:Z

    .line 577
    .line 578
    if-eqz v10, :cond_1e

    .line 579
    .line 580
    const-class v10, Lcom/android/server/UiModeManagerService$LocalService;

    .line 581
    .line 582
    invoke-static {v10}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 583
    .line 584
    .line 585
    move-result-object v10

    .line 586
    check-cast v10, Lcom/android/server/UiModeManagerService$LocalService;

    .line 587
    .line 588
    invoke-virtual {v1, v3}, Lcom/android/server/wm/ActivityRecord;->onlyDeskInUiModeChanged(Landroid/content/res/Configuration;)Z

    .line 589
    .line 590
    .line 591
    move-result v3

    .line 592
    if-eqz v3, :cond_1e

    .line 593
    .line 594
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->hasDeskResources()Z

    .line 595
    .line 596
    .line 597
    move-result v3

    .line 598
    if-nez v3, :cond_1e

    .line 599
    .line 600
    if-eqz v10, :cond_1e

    .line 601
    .line 602
    iget-object v3, v10, Lcom/android/server/UiModeManagerService$LocalService;->this$0:Lcom/android/server/UiModeManagerService;

    .line 603
    .line 604
    iget-object v10, v3, Lcom/android/server/UiModeManagerService;->mLock:Ljava/lang/Object;

    .line 605
    .line 606
    invoke-static {v10}, Ljava/lang/Thread;->holdsLock(Ljava/lang/Object;)Z

    .line 607
    .line 608
    .line 609
    move-result v10

    .line 610
    if-eqz v10, :cond_1d

    .line 611
    .line 612
    iget-boolean v3, v3, Lcom/android/server/UiModeManagerService;->mToggleNewDexMode:Z

    .line 613
    .line 614
    goto :goto_9

    .line 615
    :cond_1d
    const/4 v3, 0x0

    .line 616
    :goto_9
    if-eqz v3, :cond_1e

    .line 617
    .line 618
    or-int/lit16 v6, v6, 0x200

    .line 619
    .line 620
    :cond_1e
    not-int v3, v6

    .line 621
    and-int/2addr v3, v14

    .line 622
    if-eqz v3, :cond_1f

    .line 623
    .line 624
    const/4 v3, 0x1

    .line 625
    goto :goto_a

    .line 626
    :cond_1f
    const/4 v3, 0x0

    .line 627
    :goto_a
    if-eqz v3, :cond_3d

    .line 628
    .line 629
    iget-boolean v3, v1, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 630
    .line 631
    if-eqz v3, :cond_23

    .line 632
    .line 633
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 634
    .line 635
    iget-object v3, v3, Lcom/android/server/wm/ActivityTaskManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;

    .line 636
    .line 637
    iget-boolean v3, v3, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;->mIsUpdating:Z

    .line 638
    .line 639
    if-eqz v3, :cond_23

    .line 640
    .line 641
    iget-object v3, v1, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 642
    .line 643
    invoke-virtual {v3}, Lcom/android/server/wm/TransitionController;->isShellTransitionsEnabled()Z

    .line 644
    .line 645
    .line 646
    move-result v3

    .line 647
    if-nez v3, :cond_23

    .line 648
    .line 649
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 650
    .line 651
    iget-object v4, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 652
    .line 653
    iget-object v4, v4, Lcom/android/server/wm/ActivityTaskManagerService;->mTmpUpdateConfigurationResult:Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;

    .line 654
    .line 655
    iget v4, v4, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;->changes:I

    .line 656
    .line 657
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->hasProcess()Z

    .line 658
    .line 659
    .line 660
    move-result v5

    .line 661
    if-eqz v5, :cond_20

    .line 662
    .line 663
    iget-boolean v5, v3, Lcom/android/server/wm/WindowProcessController;->mCrashing:Z

    .line 664
    .line 665
    if-nez v5, :cond_20

    .line 666
    .line 667
    iget-boolean v3, v3, Lcom/android/server/wm/WindowProcessController;->mNotResponding:Z

    .line 668
    .line 669
    if-nez v3, :cond_20

    .line 670
    .line 671
    const/4 v3, 0x1

    .line 672
    goto :goto_b

    .line 673
    :cond_20
    const/4 v3, 0x0

    .line 674
    :goto_b
    if-eqz v3, :cond_23

    .line 675
    .line 676
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getParent()Lcom/android/server/wm/WindowContainer;

    .line 677
    .line 678
    .line 679
    move-result-object v3

    .line 680
    if-nez v3, :cond_21

    .line 681
    .line 682
    new-instance v3, Ljava/lang/StringBuilder;

    .line 683
    .line 684
    const-string v4, "Attempted to freeze screen with non-existing app token: "

    .line 685
    .line 686
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 687
    .line 688
    .line 689
    iget-object v4, v1, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 690
    .line 691
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 692
    .line 693
    .line 694
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 695
    .line 696
    .line 697
    move-result-object v3

    .line 698
    const-string v4, "WindowManager"

    .line 699
    .line 700
    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 701
    .line 702
    .line 703
    goto :goto_c

    .line 704
    :cond_21
    const v3, -0x20000001

    .line 705
    .line 706
    .line 707
    and-int/2addr v3, v4

    .line 708
    if-nez v3, :cond_22

    .line 709
    .line 710
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->okToDisplay()Z

    .line 711
    .line 712
    .line 713
    move-result v3

    .line 714
    if-eqz v3, :cond_22

    .line 715
    .line 716
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_ORIENTATION_enabled:[Z

    .line 717
    .line 718
    const/4 v4, 0x1

    .line 719
    aget-boolean v3, v3, v4

    .line 720
    .line 721
    if-eqz v3, :cond_23

    .line 722
    .line 723
    iget-object v3, v1, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 724
    .line 725
    invoke-static {v3}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 726
    .line 727
    .line 728
    move-result-object v3

    .line 729
    sget-object v4, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_ORIENTATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 730
    .line 731
    filled-new-array {v3}, [Ljava/lang/Object;

    .line 732
    .line 733
    .line 734
    move-result-object v9

    .line 735
    const/4 v7, 0x0

    .line 736
    const/4 v8, 0x0

    .line 737
    const-wide v5, 0xf0b1d255f593c02L

    .line 738
    .line 739
    .line 740
    .line 741
    .line 742
    invoke-static/range {v4 .. v9}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 743
    .line 744
    .line 745
    goto :goto_c

    .line 746
    :cond_22
    const/4 v3, -0x1

    .line 747
    invoke-virtual {v1, v3}, Lcom/android/server/wm/ActivityRecord;->startFreezingScreen(I)V

    .line 748
    .line 749
    .line 750
    :cond_23
    :goto_c
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 751
    .line 752
    iget-object v3, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 753
    .line 754
    invoke-virtual {v3}, Landroid/app/WindowConfiguration;->getDisplayRotation()I

    .line 755
    .line 756
    .line 757
    move-result v3

    .line 758
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 759
    .line 760
    .line 761
    move-result-object v4

    .line 762
    invoke-virtual {v4}, Landroid/app/WindowConfiguration;->getDisplayRotation()I

    .line 763
    .line 764
    .line 765
    move-result v4

    .line 766
    if-ne v3, v4, :cond_25

    .line 767
    .line 768
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 769
    .line 770
    iget-object v3, v3, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 771
    .line 772
    invoke-virtual {v3}, Landroid/app/WindowConfiguration;->getMaxBounds()Landroid/graphics/Rect;

    .line 773
    .line 774
    .line 775
    move-result-object v3

    .line 776
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 777
    .line 778
    .line 779
    move-result-object v4

    .line 780
    invoke-virtual {v4}, Landroid/app/WindowConfiguration;->getMaxBounds()Landroid/graphics/Rect;

    .line 781
    .line 782
    .line 783
    move-result-object v4

    .line 784
    invoke-virtual {v3, v4}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    .line 785
    .line 786
    .line 787
    move-result v3

    .line 788
    if-nez v3, :cond_24

    .line 789
    .line 790
    goto :goto_d

    .line 791
    :cond_24
    const/4 v3, 0x0

    .line 792
    goto :goto_e

    .line 793
    :cond_25
    :goto_d
    const/4 v3, 0x1

    .line 794
    :goto_e
    if-nez v3, :cond_26

    .line 795
    .line 796
    and-int/lit16 v3, v14, -0xd81

    .line 797
    .line 798
    if-nez v3, :cond_26

    .line 799
    .line 800
    const/4 v3, 0x1

    .line 801
    goto :goto_f

    .line 802
    :cond_26
    const/4 v3, 0x0

    .line 803
    :goto_f
    if-eqz v3, :cond_27

    .line 804
    .line 805
    iget-boolean v3, v1, Lcom/android/server/wm/ActivityRecord;->mFreezingScreen:Z

    .line 806
    .line 807
    if-nez v3, :cond_27

    .line 808
    .line 809
    const/16 v16, 0x1

    .line 810
    .line 811
    goto :goto_10

    .line 812
    :cond_27
    const/16 v16, 0x0

    .line 813
    .line 814
    :goto_10
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 815
    .line 816
    invoke-virtual {v3}, Landroid/content/pm/ActivityInfo;->getRealConfigChanged()I

    .line 817
    .line 818
    .line 819
    move-result v3

    .line 820
    not-int v3, v3

    .line 821
    and-int/2addr v3, v14

    .line 822
    and-int/lit16 v3, v3, 0xd80

    .line 823
    .line 824
    if-eqz v3, :cond_28

    .line 825
    .line 826
    const/4 v3, 0x1

    .line 827
    goto :goto_11

    .line 828
    :cond_28
    const/4 v3, 0x0

    .line 829
    :goto_11
    const/4 v4, 0x2

    .line 830
    if-eqz v3, :cond_2a

    .line 831
    .line 832
    iget-object v3, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 833
    .line 834
    iget-boolean v3, v3, Lcom/android/server/wm/Task;->mDragResizing:Z

    .line 835
    .line 836
    if-eqz v3, :cond_29

    .line 837
    .line 838
    move v3, v4

    .line 839
    goto :goto_12

    .line 840
    :cond_29
    const/4 v3, 0x1

    .line 841
    :goto_12
    iput v3, v1, Lcom/android/server/wm/ActivityRecord;->mRelaunchReason:I

    .line 842
    .line 843
    :goto_13
    const/4 v3, 0x1

    .line 844
    goto :goto_14

    .line 845
    :cond_2a
    const/4 v3, 0x0

    .line 846
    iput v3, v1, Lcom/android/server/wm/ActivityRecord;->mRelaunchReason:I

    .line 847
    .line 848
    goto :goto_13

    .line 849
    :goto_14
    aget-boolean v0, v0, v3

    .line 850
    .line 851
    if-eqz v0, :cond_2b

    .line 852
    .line 853
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 854
    .line 855
    .line 856
    move-result-object v0

    .line 857
    sget-object v5, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_CONFIGURATION:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 858
    .line 859
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 860
    .line 861
    .line 862
    move-result-object v10

    .line 863
    const-wide v6, 0x5e155c8e8a7d3275L    # 1.6671346938309107E145

    .line 864
    .line 865
    .line 866
    .line 867
    .line 868
    const/4 v8, 0x0

    .line 869
    const/4 v9, 0x0

    .line 870
    invoke-static/range {v5 .. v10}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 871
    .line 872
    .line 873
    :cond_2b
    iget-boolean v0, v1, Lcom/android/server/wm/WindowContainer;->mVisibleRequested:Z

    .line 874
    .line 875
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STATES_enabled:[Z

    .line 876
    .line 877
    if-nez v0, :cond_2c

    .line 878
    .line 879
    const/4 v0, 0x1

    .line 880
    aget-boolean v5, v3, v0

    .line 881
    .line 882
    if-eqz v5, :cond_2c

    .line 883
    .line 884
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 885
    .line 886
    .line 887
    move-result-object v0

    .line 888
    const/4 v5, 0x4

    .line 889
    invoke-static {v5}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 890
    .line 891
    .line 892
    move-result-object v5

    .line 893
    invoke-static {v5}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 894
    .line 895
    .line 896
    move-result-object v5

    .line 897
    sget-object v6, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 898
    .line 899
    filled-new-array {v0, v5}, [Ljava/lang/Object;

    .line 900
    .line 901
    .line 902
    move-result-object v11

    .line 903
    const-wide v7, 0x7c79b78539643a95L    # 4.009904604152005E291

    .line 904
    .line 905
    .line 906
    .line 907
    .line 908
    const/4 v9, 0x0

    .line 909
    const/4 v10, 0x0

    .line 910
    invoke-static/range {v6 .. v11}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 911
    .line 912
    .line 913
    :cond_2c
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 914
    .line 915
    iget-boolean v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mSuppressResizeConfigChanges:Z

    .line 916
    .line 917
    if-eqz v0, :cond_2d

    .line 918
    .line 919
    if-eqz v16, :cond_2d

    .line 920
    .line 921
    move v10, v13

    .line 922
    move v4, v15

    .line 923
    goto/16 :goto_1e

    .line 924
    .line 925
    :cond_2d
    if-nez v16, :cond_2f

    .line 926
    .line 927
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 928
    .line 929
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mImeInputTarget:Lcom/android/server/wm/InputTarget;

    .line 930
    .line 931
    if-eqz v0, :cond_2e

    .line 932
    .line 933
    invoke-interface {v0}, Lcom/android/server/wm/InputTarget;->getWindowState()Lcom/android/server/wm/WindowState;

    .line 934
    .line 935
    .line 936
    move-result-object v5

    .line 937
    if-eqz v5, :cond_2e

    .line 938
    .line 939
    invoke-interface {v0}, Lcom/android/server/wm/InputTarget;->getWindowState()Lcom/android/server/wm/WindowState;

    .line 940
    .line 941
    .line 942
    move-result-object v0

    .line 943
    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mActivityRecord:Lcom/android/server/wm/ActivityRecord;

    .line 944
    .line 945
    if-ne v0, v1, :cond_2e

    .line 946
    .line 947
    iget-object v0, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 948
    .line 949
    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 950
    .line 951
    if-eqz v0, :cond_2e

    .line 952
    .line 953
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isVisible()Z

    .line 954
    .line 955
    .line 956
    move-result v0

    .line 957
    if-eqz v0, :cond_2e

    .line 958
    .line 959
    const/4 v0, 0x1

    .line 960
    goto :goto_15

    .line 961
    :cond_2e
    const/4 v0, 0x0

    .line 962
    :goto_15
    iput-boolean v0, v1, Lcom/android/server/wm/ActivityRecord;->mLastImeShown:Z

    .line 963
    .line 964
    :cond_2f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 965
    .line 966
    .line 967
    move-result-object v0

    .line 968
    const/4 v5, 0x0

    .line 969
    if-eqz v0, :cond_31

    .line 970
    .line 971
    iget-object v6, v0, Lcom/android/server/wm/Task;->mTranslucentActivityWaiting:Lcom/android/server/wm/ActivityRecord;

    .line 972
    .line 973
    if-ne v6, v1, :cond_31

    .line 974
    .line 975
    if-eqz v6, :cond_31

    .line 976
    .line 977
    iget-object v6, v0, Lcom/android/server/wm/Task;->mUndrawnActivitiesBelowTopTranslucent:Ljava/util/ArrayList;

    .line 978
    .line 979
    invoke-virtual {v6}, Ljava/util/ArrayList;->clear()V

    .line 980
    .line 981
    .line 982
    iget-object v6, v0, Lcom/android/server/wm/Task;->mTranslucentActivityWaiting:Lcom/android/server/wm/ActivityRecord;

    .line 983
    .line 984
    if-eqz v6, :cond_30

    .line 985
    .line 986
    invoke-virtual {v0, v5}, Lcom/android/server/wm/Task;->notifyActivityDrawnLocked(Lcom/android/server/wm/ActivityRecord;)V

    .line 987
    .line 988
    .line 989
    iput-object v5, v0, Lcom/android/server/wm/Task;->mTranslucentActivityWaiting:Lcom/android/server/wm/ActivityRecord;

    .line 990
    .line 991
    :cond_30
    iget-object v0, v0, Lcom/android/server/wm/Task;->mHandler:Lcom/android/server/wm/Task$ActivityTaskHandler;

    .line 992
    .line 993
    const/16 v6, 0x65

    .line 994
    .line 995
    invoke-virtual {v0, v6}, Landroid/os/Handler;->removeMessages(I)V

    .line 996
    .line 997
    .line 998
    :cond_31
    invoke-virtual {v1, v5}, Lcom/android/server/wm/ActivityRecord;->shouldBeResumed(Lcom/android/server/wm/ActivityRecord;)Z

    .line 999
    .line 1000
    .line 1001
    move-result v6

    .line 1002
    if-eqz v6, :cond_32

    .line 1003
    .line 1004
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 1005
    .line 1006
    iget-object v7, v1, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 1007
    .line 1008
    move-object v12, v0

    .line 1009
    goto :goto_16

    .line 1010
    :cond_32
    move-object v7, v5

    .line 1011
    move-object v12, v7

    .line 1012
    :goto_16
    if-eqz v6, :cond_33

    .line 1013
    .line 1014
    iget v0, v1, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 1015
    .line 1016
    invoke-static/range {p0 .. p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 1017
    .line 1018
    .line 1019
    move-result v8

    .line 1020
    iget-object v9, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 1021
    .line 1022
    iget v9, v9, Lcom/android/server/wm/Task;->mTaskId:I

    .line 1023
    .line 1024
    iget-object v10, v1, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 1025
    .line 1026
    invoke-static {v14}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1027
    .line 1028
    .line 1029
    move-result-object v11

    .line 1030
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 1031
    .line 1032
    .line 1033
    move-result-object v0

    .line 1034
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 1035
    .line 1036
    .line 1037
    move-result-object v8

    .line 1038
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 1039
    .line 1040
    .line 1041
    move-result-object v9

    .line 1042
    filled-new-array {v0, v8, v9, v10, v11}, [Ljava/lang/Object;

    .line 1043
    .line 1044
    .line 1045
    move-result-object v0

    .line 1046
    const/16 v8, 0x7543

    .line 1047
    .line 1048
    invoke-static {v8, v0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 1049
    .line 1050
    .line 1051
    goto :goto_17

    .line 1052
    :cond_33
    iget v0, v1, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 1053
    .line 1054
    invoke-static/range {p0 .. p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 1055
    .line 1056
    .line 1057
    move-result v8

    .line 1058
    iget-object v9, v1, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 1059
    .line 1060
    iget v9, v9, Lcom/android/server/wm/Task;->mTaskId:I

    .line 1061
    .line 1062
    iget-object v10, v1, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 1063
    .line 1064
    invoke-static {v14}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 1065
    .line 1066
    .line 1067
    move-result-object v11

    .line 1068
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 1069
    .line 1070
    .line 1071
    move-result-object v0

    .line 1072
    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 1073
    .line 1074
    .line 1075
    move-result-object v8

    .line 1076
    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 1077
    .line 1078
    .line 1079
    move-result-object v9

    .line 1080
    filled-new-array {v0, v8, v9, v10, v11}, [Ljava/lang/Object;

    .line 1081
    .line 1082
    .line 1083
    move-result-object v0

    .line 1084
    const/16 v8, 0x7544

    .line 1085
    .line 1086
    invoke-static {v8, v0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 1087
    .line 1088
    .line 1089
    :goto_17
    :try_start_0
    aget-boolean v0, v3, v4

    .line 1090
    .line 1091
    if-eqz v0, :cond_35

    .line 1092
    .line 1093
    if-eqz v6, :cond_34

    .line 1094
    .line 1095
    const-string v0, "RESUMED"

    .line 1096
    .line 1097
    goto :goto_18

    .line 1098
    :catch_0
    move-exception v0

    .line 1099
    move v10, v13

    .line 1100
    move v4, v15

    .line 1101
    goto/16 :goto_1b

    .line 1102
    .line 1103
    :cond_34
    const-string v0, "PAUSED"

    .line 1104
    .line 1105
    :goto_18
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 1106
    .line 1107
    .line 1108
    move-result-object v4

    .line 1109
    const/4 v8, 0x6

    .line 1110
    invoke-static {v8}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    .line 1111
    .line 1112
    .line 1113
    move-result-object v8

    .line 1114
    invoke-static {v8}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 1115
    .line 1116
    .line 1117
    move-result-object v8

    .line 1118
    sget-object v20, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 1119
    .line 1120
    filled-new-array {v0, v4, v8}, [Ljava/lang/Object;

    .line 1121
    .line 1122
    .line 1123
    move-result-object v25

    .line 1124
    const/16 v24, 0x0

    .line 1125
    .line 1126
    const-wide v21, 0x4902470505436aeL

    .line 1127
    .line 1128
    .line 1129
    .line 1130
    .line 1131
    const/16 v23, 0x0

    .line 1132
    .line 1133
    invoke-static/range {v20 .. v25}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->i(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 1134
    .line 1135
    .line 1136
    :cond_35
    iget-object v11, v1, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 1137
    .line 1138
    new-instance v0, Landroid/util/MergedConfiguration;

    .line 1139
    .line 1140
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getProcessGlobalConfiguration()Landroid/content/res/Configuration;

    .line 1141
    .line 1142
    .line 1143
    move-result-object v4

    .line 1144
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ConfigurationContainer;->getMergedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 1145
    .line 1146
    .line 1147
    move-result-object v8

    .line 1148
    invoke-direct {v0, v4, v8}, Landroid/util/MergedConfiguration;-><init>(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 1149
    .line 1150
    .line 1151
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getActivityWindowInfo()Landroid/window/ActivityWindowInfo;

    .line 1152
    .line 1153
    .line 1154
    move-result-object v17
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 1155
    move v10, v13

    .line 1156
    move-object v13, v7

    .line 1157
    move v4, v15

    .line 1158
    move-object v15, v0

    .line 1159
    :try_start_1
    invoke-static/range {v11 .. v17}, Landroid/app/servertransaction/ActivityRelaunchItem;->obtain(Landroid/os/IBinder;Ljava/util/List;Ljava/util/List;ILandroid/util/MergedConfiguration;ZLandroid/window/ActivityWindowInfo;)Landroid/app/servertransaction/ActivityRelaunchItem;

    .line 1160
    .line 1161
    .line 1162
    move-result-object v0

    .line 1163
    if-eqz v6, :cond_39

    .line 1164
    .line 1165
    iget-object v7, v1, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 1166
    .line 1167
    iget-object v8, v1, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 1168
    .line 1169
    if-eqz v8, :cond_36

    .line 1170
    .line 1171
    iget-boolean v8, v8, Lcom/android/server/wm/StartingData;->mIsTransitionForward:Z

    .line 1172
    .line 1173
    if-nez v8, :cond_37

    .line 1174
    .line 1175
    :cond_36
    iget-object v8, v1, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1176
    .line 1177
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->isNextTransitionForward()Z

    .line 1178
    .line 1179
    .line 1180
    move-result v8

    .line 1181
    if-eqz v8, :cond_38

    .line 1182
    .line 1183
    :cond_37
    const/4 v8, 0x1

    .line 1184
    goto :goto_19

    .line 1185
    :cond_38
    const/4 v8, 0x0

    .line 1186
    :goto_19
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->shouldSendCompatFakeFocus()Z

    .line 1187
    .line 1188
    .line 1189
    move-result v9

    .line 1190
    invoke-static {v7, v8, v9}, Landroid/app/servertransaction/ResumeActivityItem;->obtain(Landroid/os/IBinder;ZZ)Landroid/app/servertransaction/ResumeActivityItem;

    .line 1191
    .line 1192
    .line 1193
    move-result-object v7

    .line 1194
    goto :goto_1a

    .line 1195
    :catch_1
    move-exception v0

    .line 1196
    goto :goto_1b

    .line 1197
    :cond_39
    iget-object v7, v1, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    .line 1198
    .line 1199
    invoke-static {v7}, Landroid/app/servertransaction/PauseActivityItem;->obtain(Landroid/os/IBinder;)Landroid/app/servertransaction/PauseActivityItem;

    .line 1200
    .line 1201
    .line 1202
    move-result-object v7

    .line 1203
    :goto_1a
    iget-object v8, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1204
    .line 1205
    iget-object v8, v8, Lcom/android/server/wm/ActivityTaskManagerService;->mLifecycleManager:Lcom/android/server/wm/ClientLifecycleManager;

    .line 1206
    .line 1207
    iget-object v9, v1, Lcom/android/server/wm/ActivityRecord;->app:Lcom/android/server/wm/WindowProcessController;

    .line 1208
    .line 1209
    iget-object v9, v9, Lcom/android/server/wm/WindowProcessController;->mThread:Landroid/app/IApplicationThread;

    .line 1210
    .line 1211
    const/4 v11, 0x0

    .line 1212
    invoke-virtual {v8, v9, v0, v7, v11}, Lcom/android/server/wm/ClientLifecycleManager;->scheduleTransactionAndLifecycleItems(Landroid/app/IApplicationThread;Landroid/app/servertransaction/ClientTransactionItem;Landroid/app/servertransaction/ActivityLifecycleItem;Z)V

    .line 1213
    .line 1214
    .line 1215
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->startRelaunching()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 1216
    .line 1217
    .line 1218
    goto :goto_1c

    .line 1219
    :goto_1b
    new-instance v7, Ljava/lang/StringBuilder;

    .line 1220
    .line 1221
    const-string v8, "Failed to relaunch "

    .line 1222
    .line 1223
    invoke-direct {v7, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1224
    .line 1225
    .line 1226
    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 1227
    .line 1228
    .line 1229
    const-string v8, ": "

    .line 1230
    .line 1231
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1232
    .line 1233
    .line 1234
    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 1235
    .line 1236
    .line 1237
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1238
    .line 1239
    .line 1240
    move-result-object v0

    .line 1241
    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 1242
    .line 1243
    .line 1244
    :goto_1c
    if-eqz v6, :cond_3b

    .line 1245
    .line 1246
    const/4 v2, 0x0

    .line 1247
    aget-boolean v0, v3, v2

    .line 1248
    .line 1249
    if-eqz v0, :cond_3a

    .line 1250
    .line 1251
    invoke-static/range {p0 .. p0}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    .line 1252
    .line 1253
    .line 1254
    move-result-object v0

    .line 1255
    sget-object v11, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STATES:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 1256
    .line 1257
    filled-new-array {v0}, [Ljava/lang/Object;

    .line 1258
    .line 1259
    .line 1260
    move-result-object v16

    .line 1261
    const/4 v14, 0x0

    .line 1262
    const/4 v15, 0x0

    .line 1263
    const-wide v12, -0x3778a4d26bfdcda1L    # -2.54326106948074E41

    .line 1264
    .line 1265
    .line 1266
    .line 1267
    .line 1268
    invoke-static/range {v11 .. v16}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->d(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 1269
    .line 1270
    .line 1271
    :cond_3a
    iput-object v5, v1, Lcom/android/server/wm/ActivityRecord;->results:Ljava/util/ArrayList;

    .line 1272
    .line 1273
    iput-object v5, v1, Lcom/android/server/wm/ActivityRecord;->newIntents:Ljava/util/ArrayList;

    .line 1274
    .line 1275
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1276
    .line 1277
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mAppWarnings:Lcom/android/server/wm/AppWarnings;

    .line 1278
    .line 1279
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppWarnings;->showUnsupportedDisplaySizeDialogIfNeeded(Lcom/android/server/wm/ActivityRecord;)V

    .line 1280
    .line 1281
    .line 1282
    goto :goto_1d

    .line 1283
    :cond_3b
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 1284
    .line 1285
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 1286
    .line 1287
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mPauseTimeoutRunnable:Lcom/android/server/wm/ActivityRecord$1;

    .line 1288
    .line 1289
    invoke-virtual {v0, v2}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 1290
    .line 1291
    .line 1292
    sget-object v0, Lcom/android/server/wm/ActivityRecord$State;->PAUSED:Lcom/android/server/wm/ActivityRecord$State;

    .line 1293
    .line 1294
    const-string/jumbo v2, "relaunchActivityLocked"

    .line 1295
    .line 1296
    .line 1297
    invoke-virtual {v1, v0, v2}, Lcom/android/server/wm/ActivityRecord;->setState(Lcom/android/server/wm/ActivityRecord$State;Ljava/lang/String;)V

    .line 1298
    .line 1299
    .line 1300
    :goto_1d
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 1301
    .line 1302
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mStoppingActivities:Ljava/util/ArrayList;

    .line 1303
    .line 1304
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 1305
    .line 1306
    .line 1307
    :goto_1e
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MW_SA_LOGGING:Z

    .line 1308
    .line 1309
    if-eqz v0, :cond_3c

    .line 1310
    .line 1311
    if-eqz v10, :cond_3c

    .line 1312
    .line 1313
    invoke-virtual {v1, v10, v4}, Lcom/android/server/wm/ActivityRecord;->logForMultiWindowModeChanged(II)V

    .line 1314
    .line 1315
    .line 1316
    :cond_3c
    const/4 v1, 0x0

    .line 1317
    return v1

    .line 1318
    :cond_3d
    move v10, v13

    .line 1319
    move v6, v15

    .line 1320
    if-eqz v5, :cond_3e

    .line 1321
    .line 1322
    invoke-virtual {v1, v4, v8, v7}, Lcom/android/server/wm/ActivityRecord;->scheduleActivityMovedToDisplay(ILandroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)V

    .line 1323
    .line 1324
    .line 1325
    goto :goto_1f

    .line 1326
    :cond_3e
    invoke-virtual {v1, v8, v7}, Lcom/android/server/wm/ActivityRecord;->scheduleConfigurationChanged(Landroid/content/res/Configuration;Landroid/window/ActivityWindowInfo;)V

    .line 1327
    .line 1328
    .line 1329
    :goto_1f
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mLastReportedConfiguration:Landroid/util/MergedConfiguration;

    .line 1330
    .line 1331
    invoke-virtual {v0}, Landroid/util/MergedConfiguration;->getMergedConfiguration()Landroid/content/res/Configuration;

    .line 1332
    .line 1333
    .line 1334
    move-result-object v0

    .line 1335
    iget-object v2, v1, Lcom/android/server/wm/ActivityRecord;->mTmpConfig:Landroid/content/res/Configuration;

    .line 1336
    .line 1337
    invoke-virtual {v1, v0, v2}, Lcom/android/server/wm/ActivityRecord;->notifyActivityRefresherAboutConfigurationChange(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 1338
    .line 1339
    .line 1340
    if-eqz v9, :cond_3f

    .line 1341
    .line 1342
    if-eqz v10, :cond_3f

    .line 1343
    .line 1344
    invoke-virtual {v1, v10, v6}, Lcom/android/server/wm/ActivityRecord;->logForMultiWindowModeChanged(II)V

    .line 1345
    .line 1346
    .line 1347
    :cond_3f
    const/4 v0, 0x1

    .line 1348
    return v0
.end method

.method public final updateReportedVisibilityLocked()V
    .locals 18

    .line 1
    move-object/from16 v6, p0

    .line 2
    .line 3
    iget-object v0, v6, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 4
    .line 5
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    iget-object v1, v6, Lcom/android/server/wm/ActivityRecord;->mReportedVisibilityResults:Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;

    .line 10
    .line 11
    const/4 v7, 0x0

    .line 12
    iput v7, v1, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->numInteresting:I

    .line 13
    .line 14
    iput v7, v1, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->numVisible:I

    .line 15
    .line 16
    iput v7, v1, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->numDrawn:I

    .line 17
    .line 18
    const/4 v8, 0x1

    .line 19
    iput-boolean v8, v1, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->nowGone:Z

    .line 20
    .line 21
    move v1, v7

    .line 22
    :goto_0
    if-ge v1, v0, :cond_0

    .line 23
    .line 24
    iget-object v2, v6, Lcom/android/server/wm/WindowContainer;->mChildren:Lcom/android/server/wm/WindowList;

    .line 25
    .line 26
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 27
    .line 28
    .line 29
    move-result-object v2

    .line 30
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 31
    .line 32
    iget-object v3, v6, Lcom/android/server/wm/ActivityRecord;->mReportedVisibilityResults:Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;

    .line 33
    .line 34
    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->updateReportedVisibility(Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;)V

    .line 35
    .line 36
    .line 37
    add-int/lit8 v1, v1, 0x1

    .line 38
    .line 39
    goto :goto_0

    .line 40
    :cond_0
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->mReportedVisibilityResults:Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;

    .line 41
    .line 42
    iget v1, v0, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->numInteresting:I

    .line 43
    .line 44
    iget v2, v0, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->numVisible:I

    .line 45
    .line 46
    iget v3, v0, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->numDrawn:I

    .line 47
    .line 48
    iget-boolean v0, v0, Lcom/android/server/wm/WindowState$UpdateReportedVisibilityResults;->nowGone:Z

    .line 49
    .line 50
    if-lez v1, :cond_1

    .line 51
    .line 52
    if-lt v3, v1, :cond_1

    .line 53
    .line 54
    move v3, v8

    .line 55
    goto :goto_1

    .line 56
    :cond_1
    move v3, v7

    .line 57
    :goto_1
    if-lez v1, :cond_2

    .line 58
    .line 59
    if-lt v2, v1, :cond_2

    .line 60
    .line 61
    iget-boolean v1, v6, Lcom/android/server/wm/ActivityRecord;->mVisible:Z

    .line 62
    .line 63
    if-eqz v1, :cond_2

    .line 64
    .line 65
    move v1, v8

    .line 66
    goto :goto_2

    .line 67
    :cond_2
    move v1, v7

    .line 68
    :goto_2
    if-nez v0, :cond_4

    .line 69
    .line 70
    if-nez v3, :cond_3

    .line 71
    .line 72
    iget-boolean v3, v6, Lcom/android/server/wm/ActivityRecord;->mReportedDrawn:Z

    .line 73
    .line 74
    :cond_3
    if-nez v1, :cond_4

    .line 75
    .line 76
    iget-boolean v1, v6, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 77
    .line 78
    :cond_4
    move v9, v1

    .line 79
    move v10, v3

    .line 80
    iget-boolean v0, v6, Lcom/android/server/wm/ActivityRecord;->mReportedDrawn:Z

    .line 81
    .line 82
    if-eq v10, v0, :cond_1b

    .line 83
    .line 84
    if-eqz v10, :cond_1a

    .line 85
    .line 86
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 87
    .line 88
    iget-object v1, v0, Lcom/android/server/wm/ActivityTaskSupervisor;->mActivityMetricsLogger:Lcom/android/server/wm/ActivityMetricsLogger;

    .line 89
    .line 90
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 91
    .line 92
    .line 93
    invoke-static {}, Landroid/os/SystemClock;->uptimeNanos()J

    .line 94
    .line 95
    .line 96
    move-result-wide v2

    .line 97
    invoke-virtual {v1, v6}, Lcom/android/server/wm/ActivityMetricsLogger;->getActiveTransitionInfo(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;

    .line 98
    .line 99
    .line 100
    move-result-object v5

    .line 101
    const/4 v4, 0x0

    .line 102
    const/4 v0, -0x1

    .line 103
    if-eqz v5, :cond_5

    .line 104
    .line 105
    iget-boolean v11, v5, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;->mIsDrawn:Z

    .line 106
    .line 107
    if-eqz v11, :cond_6

    .line 108
    .line 109
    :cond_5
    move v13, v0

    .line 110
    move-object v14, v4

    .line 111
    goto :goto_6

    .line 112
    :cond_6
    sget-object v11, Ljava/util/concurrent/TimeUnit;->NANOSECONDS:Ljava/util/concurrent/TimeUnit;

    .line 113
    .line 114
    iget-object v12, v5, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;->mLaunchingState:Lcom/android/server/wm/ActivityMetricsLogger$LaunchingState;

    .line 115
    .line 116
    iget-wide v12, v12, Lcom/android/server/wm/ActivityMetricsLogger$LaunchingState;->mStartUptimeNs:J

    .line 117
    .line 118
    sub-long v12, v2, v12

    .line 119
    .line 120
    invoke-virtual {v11, v12, v13}, Ljava/util/concurrent/TimeUnit;->toMillis(J)J

    .line 121
    .line 122
    .line 123
    move-result-wide v11

    .line 124
    long-to-int v11, v11

    .line 125
    iput v11, v5, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;->mWindowsDrawnDelayMs:I

    .line 126
    .line 127
    iput-boolean v8, v5, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;->mIsDrawn:Z

    .line 128
    .line 129
    new-instance v15, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfoSnapshot;

    .line 130
    .line 131
    iget-object v11, v5, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;->mLastLaunchedActivity:Lcom/android/server/wm/ActivityRecord;

    .line 132
    .line 133
    invoke-direct {v15, v5, v11, v0}, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfoSnapshot;-><init>(Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;Lcom/android/server/wm/ActivityRecord;I)V

    .line 134
    .line 135
    .line 136
    iget-boolean v11, v5, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;->mLoggedTransitionStarting:Z

    .line 137
    .line 138
    if-nez v11, :cond_8

    .line 139
    .line 140
    iget-object v11, v6, Lcom/android/server/wm/WindowContainer;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 141
    .line 142
    iget-object v11, v11, Lcom/android/server/wm/DisplayContent;->mOpeningApps:Landroid/util/ArraySet;

    .line 143
    .line 144
    invoke-virtual {v11, v6}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    .line 145
    .line 146
    .line 147
    move-result v11

    .line 148
    if-nez v11, :cond_7

    .line 149
    .line 150
    iget-object v11, v6, Lcom/android/server/wm/WindowContainer;->mTransitionController:Lcom/android/server/wm/TransitionController;

    .line 151
    .line 152
    invoke-virtual {v11, v6}, Lcom/android/server/wm/TransitionController;->isCollecting(Lcom/android/server/wm/WindowContainer;)Z

    .line 153
    .line 154
    .line 155
    move-result v11

    .line 156
    if-nez v11, :cond_7

    .line 157
    .line 158
    goto :goto_3

    .line 159
    :cond_7
    move-object/from16 v17, v15

    .line 160
    .line 161
    goto :goto_4

    .line 162
    :cond_8
    :goto_3
    const/4 v12, 0x0

    .line 163
    const-string/jumbo v14, "notifyWindowsDrawn"

    .line 164
    .line 165
    .line 166
    move-object v11, v1

    .line 167
    move-object v13, v5

    .line 168
    move-object/from16 v17, v15

    .line 169
    .line 170
    move-wide v15, v2

    .line 171
    invoke-virtual/range {v11 .. v16}, Lcom/android/server/wm/ActivityMetricsLogger;->done(ZLcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;Ljava/lang/String;J)V

    .line 172
    .line 173
    .line 174
    :goto_4
    invoke-static {}, Landroid/app/Flags;->appStartInfoTimestamps()Z

    .line 175
    .line 176
    .line 177
    move-result v11

    .line 178
    if-eqz v11, :cond_9

    .line 179
    .line 180
    iget-object v11, v1, Lcom/android/server/wm/ActivityMetricsLogger;->mLoggerHandler:Landroid/os/Handler;

    .line 181
    .line 182
    new-instance v12, Lcom/android/server/wm/ActivityMetricsLogger$$ExternalSyntheticLambda7;

    .line 183
    .line 184
    move v13, v0

    .line 185
    move-object v0, v12

    .line 186
    move-object v14, v4

    .line 187
    move-object/from16 v4, p0

    .line 188
    .line 189
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/ActivityMetricsLogger$$ExternalSyntheticLambda7;-><init>(Lcom/android/server/wm/ActivityMetricsLogger;JLcom/android/server/wm/ActivityRecord;Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfo;)V

    .line 190
    .line 191
    .line 192
    invoke-virtual {v11, v12}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 193
    .line 194
    .line 195
    goto :goto_5

    .line 196
    :cond_9
    move v13, v0

    .line 197
    move-object v14, v4

    .line 198
    :goto_5
    move-object/from16 v4, v17

    .line 199
    .line 200
    goto :goto_7

    .line 201
    :goto_6
    move-object v4, v14

    .line 202
    :goto_7
    if-eqz v4, :cond_a

    .line 203
    .line 204
    move v0, v8

    .line 205
    goto :goto_8

    .line 206
    :cond_a
    move v0, v7

    .line 207
    :goto_8
    if-eqz v0, :cond_b

    .line 208
    .line 209
    iget v1, v4, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfoSnapshot;->windowsDrawnDelayMs:I

    .line 210
    .line 211
    goto :goto_9

    .line 212
    :cond_b
    move v1, v13

    .line 213
    :goto_9
    if-eqz v0, :cond_10

    .line 214
    .line 215
    iget v2, v4, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfoSnapshot;->type:I

    .line 216
    .line 217
    const/4 v3, 0x7

    .line 218
    if-eq v2, v3, :cond_f

    .line 219
    .line 220
    const/16 v3, 0x8

    .line 221
    .line 222
    if-eq v2, v3, :cond_e

    .line 223
    .line 224
    const/16 v3, 0x9

    .line 225
    .line 226
    if-eq v2, v3, :cond_c

    .line 227
    .line 228
    move v2, v13

    .line 229
    goto :goto_a

    .line 230
    :cond_c
    iget-boolean v2, v4, Lcom/android/server/wm/ActivityMetricsLogger$TransitionInfoSnapshot;->relaunched:Z

    .line 231
    .line 232
    if-eqz v2, :cond_d

    .line 233
    .line 234
    const/4 v2, 0x4

    .line 235
    goto :goto_a

    .line 236
    :cond_d
    const/4 v2, 0x3

    .line 237
    goto :goto_a

    .line 238
    :cond_e
    const/4 v2, 0x2

    .line 239
    goto :goto_a

    .line 240
    :cond_f
    move v2, v8

    .line 241
    :goto_a
    move v5, v2

    .line 242
    goto :goto_b

    .line 243
    :cond_10
    move v5, v7

    .line 244
    :goto_b
    invoke-static {}, Lcom/samsung/android/feature/SemGateConfig;->isGateEnabled()Z

    .line 245
    .line 246
    .line 247
    move-result v2

    .line 248
    if-eqz v2, :cond_13

    .line 249
    .line 250
    new-instance v2, Ljava/lang/StringBuilder;

    .line 251
    .line 252
    const-string v3, "<GATE-M>APP_FULLY_LOADED_"

    .line 253
    .line 254
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 255
    .line 256
    .line 257
    iget-object v3, v6, Lcom/android/server/wm/ActivityRecord;->packageName:Ljava/lang/String;

    .line 258
    .line 259
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 260
    .line 261
    .line 262
    const-string v3, "</GATE-M>"

    .line 263
    .line 264
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 265
    .line 266
    .line 267
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 268
    .line 269
    .line 270
    move-result-object v2

    .line 271
    const-string v3, "GATE"

    .line 272
    .line 273
    invoke-static {v3, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 274
    .line 275
    .line 276
    const-string v2, "com.android.vending/.AssetBrowserActivity"

    .line 277
    .line 278
    iget-object v4, v6, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 279
    .line 280
    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 281
    .line 282
    .line 283
    move-result v2

    .line 284
    if-nez v2, :cond_12

    .line 285
    .line 286
    const-string v2, "com.android.vending/com.google.android.finsky.activities.TosActivity"

    .line 287
    .line 288
    iget-object v4, v6, Lcom/android/server/wm/ActivityRecord;->shortComponentName:Ljava/lang/String;

    .line 289
    .line 290
    invoke-virtual {v2, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 291
    .line 292
    .line 293
    move-result v2

    .line 294
    if-eqz v2, :cond_11

    .line 295
    .line 296
    goto :goto_c

    .line 297
    :cond_11
    const-string v2, "<GATE-M> APP_OPENED </GATE-M>"

    .line 298
    .line 299
    invoke-static {v3, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 300
    .line 301
    .line 302
    goto :goto_d

    .line 303
    :cond_12
    :goto_c
    const-string v2, "<GATE-M> MARKET_LAUNCHED </GATE-M>"

    .line 304
    .line 305
    invoke-static {v3, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 306
    .line 307
    .line 308
    :cond_13
    :goto_d
    if-nez v0, :cond_14

    .line 309
    .line 310
    invoke-super/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getDisplayArea()Lcom/android/server/wm/DisplayArea;

    .line 311
    .line 312
    .line 313
    move-result-object v0

    .line 314
    check-cast v0, Lcom/android/server/wm/TaskDisplayArea;

    .line 315
    .line 316
    invoke-virtual {v0, v7}, Lcom/android/server/wm/TaskDisplayArea;->topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord;

    .line 317
    .line 318
    .line 319
    move-result-object v0

    .line 320
    if-ne v6, v0, :cond_15

    .line 321
    .line 322
    :cond_14
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 323
    .line 324
    const/4 v2, 0x0

    .line 325
    int-to-long v3, v1

    .line 326
    move v1, v2

    .line 327
    move-object/from16 v2, p0

    .line 328
    .line 329
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/ActivityTaskSupervisor;->reportActivityLaunched(ZLcom/android/server/wm/ActivityRecord;JI)V

    .line 330
    .line 331
    .line 332
    :cond_15
    const-wide/16 v0, 0x0

    .line 333
    .line 334
    iput-wide v0, v6, Lcom/android/server/wm/ActivityRecord;->launchTickTime:J

    .line 335
    .line 336
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/ActivityRecord;->getRootTask()Lcom/android/server/wm/Task;

    .line 337
    .line 338
    .line 339
    move-result-object v0

    .line 340
    if-nez v0, :cond_16

    .line 341
    .line 342
    goto :goto_e

    .line 343
    :cond_16
    new-instance v1, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6;

    .line 344
    .line 345
    const/4 v2, 0x5

    .line 346
    invoke-direct {v1, v2}, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6;-><init>(I)V

    .line 347
    .line 348
    .line 349
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowContainer;->forAllActivities(Ljava/util/function/Consumer;)V

    .line 350
    .line 351
    .line 352
    :goto_e
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 353
    .line 354
    if-eqz v0, :cond_19

    .line 355
    .line 356
    iget-boolean v0, v0, Lcom/android/server/wm/Task;->mHasBeenVisible:Z

    .line 357
    .line 358
    if-eqz v0, :cond_17

    .line 359
    .line 360
    goto :goto_f

    .line 361
    :cond_17
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->inTransition()Z

    .line 362
    .line 363
    .line 364
    move-result v0

    .line 365
    if-eqz v0, :cond_18

    .line 366
    .line 367
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 368
    .line 369
    invoke-virtual {v0, v8}, Lcom/android/server/wm/Task;->setDeferTaskAppear(Z)V

    .line 370
    .line 371
    .line 372
    :cond_18
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 373
    .line 374
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->setHasBeenVisible()V

    .line 375
    .line 376
    .line 377
    :cond_19
    :goto_f
    iput-object v14, v6, Lcom/android/server/wm/ActivityRecord;->mLaunchRootTask:Landroid/window/WindowContainerToken;

    .line 378
    .line 379
    :cond_1a
    iput-boolean v10, v6, Lcom/android/server/wm/ActivityRecord;->mReportedDrawn:Z

    .line 380
    .line 381
    :cond_1b
    iget-boolean v0, v6, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 382
    .line 383
    if-eq v9, v0, :cond_1e

    .line 384
    .line 385
    iput-boolean v9, v6, Lcom/android/server/wm/ActivityRecord;->reportedVisible:Z

    .line 386
    .line 387
    if-eqz v9, :cond_1d

    .line 388
    .line 389
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 390
    .line 391
    const/4 v5, 0x0

    .line 392
    const/4 v1, 0x0

    .line 393
    const-wide/16 v3, -0x1

    .line 394
    .line 395
    move-object/from16 v2, p0

    .line 396
    .line 397
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/ActivityTaskSupervisor;->reportActivityLaunched(ZLcom/android/server/wm/ActivityRecord;JI)V

    .line 398
    .line 399
    .line 400
    iget-boolean v0, v6, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 401
    .line 402
    if-nez v0, :cond_1c

    .line 403
    .line 404
    iput-boolean v8, v6, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 405
    .line 406
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 407
    .line 408
    .line 409
    move-result-wide v0

    .line 410
    iput-wide v0, v6, Lcom/android/server/wm/ActivityRecord;->lastVisibleTime:J

    .line 411
    .line 412
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 413
    .line 414
    iget-object v1, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mH:Lcom/android/server/wm/ActivityTaskManagerService$H;

    .line 415
    .line 416
    new-instance v2, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda14;

    .line 417
    .line 418
    const/4 v3, 0x1

    .line 419
    invoke-direct {v2, v3, v0}, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda14;-><init>(ILjava/lang/Object;)V

    .line 420
    .line 421
    .line 422
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 423
    .line 424
    .line 425
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->mTaskSupervisor:Lcom/android/server/wm/ActivityTaskSupervisor;

    .line 426
    .line 427
    invoke-virtual {v0}, Lcom/android/server/wm/ActivityTaskSupervisor;->scheduleProcessStoppingAndFinishingActivitiesIfNeeded()V

    .line 428
    .line 429
    .line 430
    iget-boolean v0, v6, Lcom/android/server/wm/ActivityRecord;->mImeInsetsFrozenUntilStartInput:Z

    .line 431
    .line 432
    if-eqz v0, :cond_1c

    .line 433
    .line 434
    new-instance v0, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;

    .line 435
    .line 436
    const/4 v1, 0x0

    .line 437
    invoke-direct {v0, v1}, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4;-><init>(I)V

    .line 438
    .line 439
    .line 440
    invoke-virtual {v6, v0}, Lcom/android/server/wm/WindowContainer;->getWindow(Ljava/util/function/Predicate;)Lcom/android/server/wm/WindowState;

    .line 441
    .line 442
    .line 443
    move-result-object v0

    .line 444
    if-nez v0, :cond_1c

    .line 445
    .line 446
    iput-boolean v7, v6, Lcom/android/server/wm/ActivityRecord;->mImeInsetsFrozenUntilStartInput:Z

    .line 447
    .line 448
    :cond_1c
    iget-object v0, v6, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 449
    .line 450
    iget-object v0, v0, Lcom/android/server/wm/ActivityTaskManagerService;->mAMBooster:Lcom/android/server/wm/ActivityManagerPerformance;

    .line 451
    .line 452
    if-eqz v0, :cond_1e

    .line 453
    .line 454
    invoke-virtual {v0, v6}, Lcom/android/server/wm/ActivityManagerPerformance;->onActivityVisibleLocked(Lcom/android/server/wm/ActivityRecord;)V

    .line 455
    .line 456
    .line 457
    goto :goto_10

    .line 458
    :cond_1d
    iput-boolean v7, v6, Lcom/android/server/wm/ActivityRecord;->nowVisible:Z

    .line 459
    .line 460
    :cond_1e
    :goto_10
    return-void
.end method

.method public final updateResolvedBoundsPosition(Landroid/content/res/Configuration;)V
    .locals 14

    .line 1
    sget-boolean v0, Lcom/samsung/android/rune/CoreRune;->MT_SIZE_COMPAT_POLICY:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget v0, p0, Lcom/android/server/wm/ActivityRecord;->mResolvedConfigChangeFlags:I

    .line 6
    .line 7
    if-eqz v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getResolvedOverrideConfiguration()Landroid/content/res/Configuration;

    .line 11
    .line 12
    .line 13
    move-result-object v0

    .line 14
    iget-object v1, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 15
    .line 16
    invoke-virtual {v1}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 17
    .line 18
    .line 19
    move-result-object v1

    .line 20
    invoke-virtual {v1}, Landroid/graphics/Rect;->isEmpty()Z

    .line 21
    .line 22
    .line 23
    move-result v2

    .line 24
    if-nez v2, :cond_a

    .line 25
    .line 26
    iget-object v2, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 27
    .line 28
    iget-object v2, v2, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 29
    .line 30
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 31
    .line 32
    .line 33
    move-result v3

    .line 34
    if-eqz v3, :cond_1

    .line 35
    .line 36
    iget-object v3, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 37
    .line 38
    goto :goto_0

    .line 39
    :cond_1
    move-object v3, v1

    .line 40
    :goto_0
    iget-object v4, p0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 41
    .line 42
    iget-object v4, v4, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mParentAppBoundsOverride:Landroid/graphics/Rect;

    .line 43
    .line 44
    iget-object v5, p1, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 45
    .line 46
    invoke-virtual {v5}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 47
    .line 48
    .line 49
    move-result-object v5

    .line 50
    invoke-virtual {v3}, Landroid/graphics/Rect;->width()I

    .line 51
    .line 52
    .line 53
    move-result v6

    .line 54
    int-to-float v6, v6

    .line 55
    invoke-virtual {v4}, Landroid/graphics/Rect;->width()I

    .line 56
    .line 57
    .line 58
    move-result v7

    .line 59
    int-to-float v7, v7

    .line 60
    invoke-static {}, Lcom/android/window/flags/Flags;->immersiveAppRepositioning()Z

    .line 61
    .line 62
    .line 63
    move-result v8

    .line 64
    if-nez v8, :cond_2

    .line 65
    .line 66
    goto :goto_1

    .line 67
    :cond_2
    iget-object v8, p0, Lcom/android/server/wm/ActivityRecord;->mResolveConfigHint:Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;

    .line 68
    .line 69
    iget-boolean v8, v8, Lcom/android/server/wm/TaskFragment$ConfigOverrideHint;->mUseOverrideInsetsForConfig:Z

    .line 70
    .line 71
    if-nez v8, :cond_3

    .line 72
    .line 73
    iget-object v8, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 74
    .line 75
    iget-object v8, v8, Lcom/android/server/wm/WindowManagerService;->mFlags:Lcom/android/server/wm/WindowManagerFlags;

    .line 76
    .line 77
    iget-boolean v8, v8, Lcom/android/server/wm/WindowManagerFlags;->mInsetsDecoupledConfiguration:Z

    .line 78
    .line 79
    :cond_3
    :goto_1
    sget-object v8, Landroid/graphics/Insets;->NONE:Landroid/graphics/Insets;

    .line 80
    .line 81
    iget-object v9, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 82
    .line 83
    iget-object v9, v9, Lcom/android/server/wm/AppCompatController;->mAppCompatOverrides:Lcom/android/server/wm/AppCompatOverrides;

    .line 84
    .line 85
    iget-object v9, v9, Lcom/android/server/wm/AppCompatOverrides;->mAppCompatReachabilityOverrides:Lcom/android/server/wm/AppCompatReachabilityOverrides;

    .line 86
    .line 87
    invoke-virtual {v5}, Landroid/graphics/Rect;->width()I

    .line 88
    .line 89
    .line 90
    move-result v10

    .line 91
    int-to-float v10, v10

    .line 92
    cmpl-float v10, v10, v6

    .line 93
    .line 94
    const/4 v11, 0x0

    .line 95
    if-eqz v10, :cond_4

    .line 96
    .line 97
    cmpg-float v10, v6, v7

    .line 98
    .line 99
    if-gtz v10, :cond_4

    .line 100
    .line 101
    invoke-virtual {v9, p1}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->getHorizontalPositionMultiplier(Landroid/content/res/Configuration;)F

    .line 102
    .line 103
    .line 104
    move-result v10

    .line 105
    iget v12, v8, Landroid/graphics/Insets;->right:I

    .line 106
    .line 107
    int-to-float v12, v12

    .line 108
    add-float/2addr v7, v12

    .line 109
    float-to-int v7, v7

    .line 110
    int-to-float v7, v7

    .line 111
    sub-float/2addr v7, v6

    .line 112
    mul-float/2addr v7, v10

    .line 113
    float-to-double v6, v7

    .line 114
    invoke-static {v6, v7}, Ljava/lang/Math;->ceil(D)D

    .line 115
    .line 116
    .line 117
    move-result-wide v6

    .line 118
    double-to-int v6, v6

    .line 119
    iget v7, v3, Landroid/graphics/Rect;->left:I

    .line 120
    .line 121
    sub-int/2addr v6, v7

    .line 122
    iget v7, v4, Landroid/graphics/Rect;->left:I

    .line 123
    .line 124
    add-int/2addr v6, v7

    .line 125
    invoke-static {v11, v6}, Ljava/lang/Math;->max(II)I

    .line 126
    .line 127
    .line 128
    move-result v6

    .line 129
    goto :goto_2

    .line 130
    :cond_4
    move v6, v11

    .line 131
    :goto_2
    invoke-virtual {v4}, Landroid/graphics/Rect;->height()I

    .line 132
    .line 133
    .line 134
    move-result v7

    .line 135
    int-to-float v7, v7

    .line 136
    invoke-virtual {v5}, Landroid/graphics/Rect;->height()I

    .line 137
    .line 138
    .line 139
    move-result v10

    .line 140
    int-to-float v10, v10

    .line 141
    invoke-virtual {v3}, Landroid/graphics/Rect;->height()I

    .line 142
    .line 143
    .line 144
    move-result v12

    .line 145
    int-to-float v12, v12

    .line 146
    cmpl-float v10, v10, v12

    .line 147
    .line 148
    if-eqz v10, :cond_7

    .line 149
    .line 150
    cmpg-float v10, v12, v7

    .line 151
    .line 152
    if-gtz v10, :cond_7

    .line 153
    .line 154
    iget-object v10, v9, Lcom/android/server/wm/AppCompatReachabilityOverrides;->mAppCompatDeviceStateQuery:Lcom/android/server/wm/AppCompatDeviceStateQuery;

    .line 155
    .line 156
    const/4 v13, 0x1

    .line 157
    invoke-virtual {v10, v13}, Lcom/android/server/wm/AppCompatDeviceStateQuery;->isDisplayFullScreenAndInPosture(Z)Z

    .line 158
    .line 159
    .line 160
    move-result v10

    .line 161
    invoke-virtual {v9, p1}, Lcom/android/server/wm/AppCompatReachabilityOverrides;->isVerticalReachabilityEnabled(Landroid/content/res/Configuration;)Z

    .line 162
    .line 163
    .line 164
    move-result v13

    .line 165
    iget-object v9, v9, Lcom/android/server/wm/AppCompatReachabilityOverrides;->mAppCompatConfiguration:Lcom/android/server/wm/AppCompatConfiguration;

    .line 166
    .line 167
    if-eqz v13, :cond_5

    .line 168
    .line 169
    invoke-virtual {v9, v10}, Lcom/android/server/wm/AppCompatConfiguration;->getVerticalMultiplierForReachability(Z)F

    .line 170
    .line 171
    .line 172
    move-result v9

    .line 173
    goto :goto_3

    .line 174
    :cond_5
    if-eqz v10, :cond_6

    .line 175
    .line 176
    iget v9, v9, Lcom/android/server/wm/AppCompatConfiguration;->mLetterboxTabletopModePositionMultiplier:F

    .line 177
    .line 178
    goto :goto_3

    .line 179
    :cond_6
    iget v9, v9, Lcom/android/server/wm/AppCompatConfiguration;->mLetterboxVerticalPositionMultiplier:F

    .line 180
    .line 181
    :goto_3
    iget v8, v8, Landroid/graphics/Insets;->bottom:I

    .line 182
    .line 183
    int-to-float v8, v8

    .line 184
    add-float/2addr v7, v8

    .line 185
    float-to-int v7, v7

    .line 186
    int-to-float v7, v7

    .line 187
    sub-float/2addr v7, v12

    .line 188
    mul-float/2addr v7, v9

    .line 189
    float-to-double v7, v7

    .line 190
    invoke-static {v7, v8}, Ljava/lang/Math;->ceil(D)D

    .line 191
    .line 192
    .line 193
    move-result-wide v7

    .line 194
    double-to-int v7, v7

    .line 195
    iget v3, v3, Landroid/graphics/Rect;->top:I

    .line 196
    .line 197
    sub-int/2addr v7, v3

    .line 198
    iget v3, v4, Landroid/graphics/Rect;->top:I

    .line 199
    .line 200
    add-int/2addr v7, v3

    .line 201
    invoke-static {v11, v7}, Ljava/lang/Math;->max(II)I

    .line 202
    .line 203
    .line 204
    move-result v11

    .line 205
    iget-object v3, p0, Lcom/android/server/wm/ActivityRecord;->mAppCompatController:Lcom/android/server/wm/AppCompatController;

    .line 206
    .line 207
    iget-object v3, v3, Lcom/android/server/wm/AppCompatController;->mAppCompatSizeCompatModePolicy:Lcom/android/server/wm/AppCompatSizeCompatModePolicy;

    .line 208
    .line 209
    iget v3, v3, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mViewportStableTop:I

    .line 210
    .line 211
    if-lez v3, :cond_7

    .line 212
    .line 213
    if-le v3, v11, :cond_7

    .line 214
    .line 215
    iget-object v7, p0, Lcom/android/server/wm/ActivityRecord;->mAtmService:Lcom/android/server/wm/ActivityTaskManagerService;

    .line 216
    .line 217
    iget-object v7, v7, Lcom/android/server/wm/ActivityTaskManagerService;->mMultiTaskingAppCompatController:Lcom/android/server/wm/MultiTaskingAppCompatController;

    .line 218
    .line 219
    iget-object v7, v7, Lcom/android/server/wm/MultiTaskingAppCompatController;->mSizeCompatModePolicy:Lcom/android/server/wm/MultiTaskingAppCompatSizeCompatModePolicy;

    .line 220
    .line 221
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getAppCompatDisplayInsets()Lcom/android/server/wm/AppCompatDisplayInsets;

    .line 222
    .line 223
    .line 224
    move-result-object v8

    .line 225
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 226
    .line 227
    .line 228
    if-eqz v8, :cond_7

    .line 229
    .line 230
    sget-boolean v7, Lcom/samsung/android/rune/CoreRune;->MT_APP_COMPAT_ROTATION_COMPAT_MODE:Z

    .line 231
    .line 232
    if-eqz v7, :cond_7

    .line 233
    .line 234
    iget-boolean v7, v8, Lcom/android/server/wm/AppCompatDisplayInsets;->mIsRotationCompatMode:Z

    .line 235
    .line 236
    if-eqz v7, :cond_7

    .line 237
    .line 238
    move v11, v3

    .line 239
    :cond_7
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 240
    .line 241
    .line 242
    move-result v3

    .line 243
    if-eqz v3, :cond_8

    .line 244
    .line 245
    iget-object v3, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 246
    .line 247
    invoke-virtual {v3, v6, v11}, Landroid/graphics/Rect;->offset(II)V

    .line 248
    .line 249
    .line 250
    iget-object v3, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 251
    .line 252
    iget v6, v3, Landroid/graphics/Rect;->top:I

    .line 253
    .line 254
    iget v7, v1, Landroid/graphics/Rect;->top:I

    .line 255
    .line 256
    sub-int/2addr v6, v7

    .line 257
    iget v3, v3, Landroid/graphics/Rect;->left:I

    .line 258
    .line 259
    iget v7, v1, Landroid/graphics/Rect;->left:I

    .line 260
    .line 261
    sub-int/2addr v3, v7

    .line 262
    invoke-static {v0, v3, v6}, Lcom/android/server/wm/AppCompatUtils;->offsetBounds(Landroid/content/res/Configuration;II)V

    .line 263
    .line 264
    .line 265
    goto :goto_4

    .line 266
    :cond_8
    invoke-static {v0, v6, v11}, Lcom/android/server/wm/AppCompatUtils;->offsetBounds(Landroid/content/res/Configuration;II)V

    .line 267
    .line 268
    .line 269
    :goto_4
    iget-object v3, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 270
    .line 271
    invoke-virtual {v3}, Landroid/app/WindowConfiguration;->getAppBounds()Landroid/graphics/Rect;

    .line 272
    .line 273
    .line 274
    move-result-object v3

    .line 275
    iget v3, v3, Landroid/graphics/Rect;->top:I

    .line 276
    .line 277
    iget v4, v4, Landroid/graphics/Rect;->top:I

    .line 278
    .line 279
    if-ne v3, v4, :cond_9

    .line 280
    .line 281
    iget-object v3, v0, Landroid/content/res/Configuration;->windowConfiguration:Landroid/app/WindowConfiguration;

    .line 282
    .line 283
    invoke-virtual {v3}, Landroid/app/WindowConfiguration;->getBounds()Landroid/graphics/Rect;

    .line 284
    .line 285
    .line 286
    move-result-object v3

    .line 287
    iget v4, v5, Landroid/graphics/Rect;->top:I

    .line 288
    .line 289
    iput v4, v3, Landroid/graphics/Rect;->top:I

    .line 290
    .line 291
    invoke-virtual {v2}, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->hasSizeCompatBounds()Z

    .line 292
    .line 293
    .line 294
    move-result v3

    .line 295
    if-eqz v3, :cond_9

    .line 296
    .line 297
    iget-object v3, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatBounds:Landroid/graphics/Rect;

    .line 298
    .line 299
    iget v4, v5, Landroid/graphics/Rect;->top:I

    .line 300
    .line 301
    iput v4, v3, Landroid/graphics/Rect;->top:I

    .line 302
    .line 303
    :cond_9
    invoke-virtual {p0, v0, p1}, Lcom/android/server/wm/ActivityRecord;->computeConfigByResolveHint(Landroid/content/res/Configuration;Landroid/content/res/Configuration;)V

    .line 304
    .line 305
    .line 306
    iget p0, v2, Lcom/android/server/wm/AppCompatSizeCompatModePolicy;->mSizeCompatScale:F

    .line 307
    .line 308
    const/high16 p1, 0x3f800000    # 1.0f

    .line 309
    .line 310
    cmpl-float p1, p0, p1

    .line 311
    .line 312
    if-eqz p1, :cond_a

    .line 313
    .line 314
    iget p1, v1, Landroid/graphics/Rect;->left:I

    .line 315
    .line 316
    iget v1, v1, Landroid/graphics/Rect;->top:I

    .line 317
    .line 318
    int-to-float v2, p1

    .line 319
    div-float/2addr v2, p0

    .line 320
    const/high16 v3, 0x3f000000    # 0.5f

    .line 321
    .line 322
    add-float/2addr v2, v3

    .line 323
    float-to-int v2, v2

    .line 324
    sub-int/2addr v2, p1

    .line 325
    int-to-float p1, v1

    .line 326
    div-float/2addr p1, p0

    .line 327
    add-float/2addr p1, v3

    .line 328
    float-to-int p0, p1

    .line 329
    sub-int/2addr p0, v1

    .line 330
    invoke-static {v0, v2, p0}, Lcom/android/server/wm/AppCompatUtils;->offsetBounds(Landroid/content/res/Configuration;II)V

    .line 331
    .line 332
    .line 333
    :cond_a
    return-void
.end method

.method public final updateUntrustedEmbeddingInputProtection()V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/wm/WindowContainer;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/wm/ActivityRecord;->mIsInputDroppedForAnimation:Z

    .line 7
    .line 8
    const/4 v1, 0x1

    .line 9
    if-eqz v0, :cond_1

    .line 10
    .line 11
    invoke-virtual {p0, v1}, Lcom/android/server/wm/ActivityRecord;->setDropInputMode(I)V

    .line 12
    .line 13
    .line 14
    goto :goto_1

    .line 15
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getOrganizedTaskFragment()Lcom/android/server/wm/TaskFragment;

    .line 16
    .line 17
    .line 18
    move-result-object v0

    .line 19
    const/4 v2, 0x0

    .line 20
    if-nez v0, :cond_2

    .line 21
    .line 22
    move v0, v2

    .line 23
    goto :goto_0

    .line 24
    :cond_2
    iget v3, v0, Lcom/android/server/wm/TaskFragment;->mTaskFragmentOrganizerUid:I

    .line 25
    .line 26
    invoke-virtual {v0, v3, p0}, Lcom/android/server/wm/TaskFragment;->isAllowedToEmbedActivityInTrustedMode(ILcom/android/server/wm/ActivityRecord;)Z

    .line 27
    .line 28
    .line 29
    move-result v0

    .line 30
    xor-int/2addr v0, v1

    .line 31
    :goto_0
    if-eqz v0, :cond_3

    .line 32
    .line 33
    const/4 v0, 0x2

    .line 34
    invoke-virtual {p0, v0}, Lcom/android/server/wm/ActivityRecord;->setDropInputMode(I)V

    .line 35
    .line 36
    .line 37
    goto :goto_1

    .line 38
    :cond_3
    invoke-virtual {p0, v2}, Lcom/android/server/wm/ActivityRecord;->setDropInputMode(I)V

    .line 39
    .line 40
    .line 41
    :goto_1
    return-void
.end method

.method public final updateUseForceLayoutInUdcCutoutIfNeeded()Z
    .locals 0

    .line 1
    const/4 p0, 0x0

    .line 2
    throw p0
.end method

.method public final validateStartingWindowTheme(Lcom/android/server/wm/ActivityRecord;Ljava/lang/String;I)Z
    .locals 18

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    move/from16 v2, p3

    .line 6
    .line 7
    sget-object v3, Lcom/android/internal/protolog/ProtoLogImpl_54989576$Cache;->WM_DEBUG_STARTING_WINDOW_enabled:[Z

    .line 8
    .line 9
    const/4 v4, 0x1

    .line 10
    aget-boolean v5, v3, v4

    .line 11
    .line 12
    if-eqz v5, :cond_0

    .line 13
    .line 14
    int-to-long v5, v2

    .line 15
    sget-object v7, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 16
    .line 17
    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 18
    .line 19
    .line 20
    move-result-object v5

    .line 21
    filled-new-array {v5}, [Ljava/lang/Object;

    .line 22
    .line 23
    .line 24
    move-result-object v12

    .line 25
    const-wide v8, 0x4b2e6b0352c343fL

    .line 26
    .line 27
    .line 28
    .line 29
    .line 30
    const/4 v10, 0x1

    .line 31
    const-string v11, "Checking theme of starting window: 0x%x"

    .line 32
    .line 33
    invoke-static/range {v7 .. v12}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 34
    .line 35
    .line 36
    :cond_0
    const/4 v5, 0x0

    .line 37
    if-nez v2, :cond_1

    .line 38
    .line 39
    return v5

    .line 40
    :cond_1
    invoke-static {}, Lcom/android/internal/policy/AttributeCache;->instance()Lcom/android/internal/policy/AttributeCache;

    .line 41
    .line 42
    .line 43
    move-result-object v6

    .line 44
    sget-object v7, Lcom/android/internal/R$styleable;->Window:[I

    .line 45
    .line 46
    iget-object v8, v0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 47
    .line 48
    iget v8, v8, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 49
    .line 50
    move-object/from16 v9, p2

    .line 51
    .line 52
    invoke-virtual {v6, v9, v2, v7, v8}, Lcom/android/internal/policy/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/internal/policy/AttributeCache$Entry;

    .line 53
    .line 54
    .line 55
    move-result-object v2

    .line 56
    if-nez v2, :cond_2

    .line 57
    .line 58
    return v5

    .line 59
    :cond_2
    iget-object v6, v2, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 60
    .line 61
    const/4 v7, 0x5

    .line 62
    invoke-virtual {v6, v7, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    .line 63
    .line 64
    .line 65
    move-result v6

    .line 66
    iget-object v7, v2, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 67
    .line 68
    const/4 v8, 0x4

    .line 69
    invoke-virtual {v7, v8, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    .line 70
    .line 71
    .line 72
    move-result v7

    .line 73
    iget-object v8, v2, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 74
    .line 75
    const/16 v9, 0xe

    .line 76
    .line 77
    invoke-virtual {v8, v9, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    .line 78
    .line 79
    .line 80
    move-result v8

    .line 81
    iget-object v2, v2, Lcom/android/internal/policy/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 82
    .line 83
    const/16 v9, 0xc

    .line 84
    .line 85
    invoke-virtual {v2, v9, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    .line 86
    .line 87
    .line 88
    move-result v2

    .line 89
    aget-boolean v3, v3, v4

    .line 90
    .line 91
    if-eqz v3, :cond_3

    .line 92
    .line 93
    invoke-static {v6}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 94
    .line 95
    .line 96
    move-result-object v3

    .line 97
    invoke-static {v7}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 98
    .line 99
    .line 100
    move-result-object v9

    .line 101
    invoke-static {v8}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 102
    .line 103
    .line 104
    move-result-object v10

    .line 105
    invoke-static {v2}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 106
    .line 107
    .line 108
    move-result-object v11

    .line 109
    sget-object v12, Lcom/android/internal/protolog/ProtoLogGroup;->WM_DEBUG_STARTING_WINDOW:Lcom/android/internal/protolog/ProtoLogGroup;

    .line 110
    .line 111
    const-string v16, "Translucent=%s Floating=%s ShowWallpaper=%s Disable=%s"

    .line 112
    .line 113
    filled-new-array {v3, v9, v10, v11}, [Ljava/lang/Object;

    .line 114
    .line 115
    .line 116
    move-result-object v17

    .line 117
    const-wide v13, -0x238d5172ed39cb05L    # -2.1725895730886493E137

    .line 118
    .line 119
    .line 120
    .line 121
    .line 122
    const/4 v15, 0x0

    .line 123
    invoke-static/range {v12 .. v17}, Lcom/android/internal/protolog/ProtoLogImpl_54989576;->v(Lcom/android/internal/protolog/common/IProtoLogGroup;JILjava/lang/String;[Ljava/lang/Object;)V

    .line 124
    .line 125
    .line 126
    :cond_3
    if-nez v6, :cond_9

    .line 127
    .line 128
    if-eqz v7, :cond_4

    .line 129
    .line 130
    goto :goto_1

    .line 131
    :cond_4
    if-eqz v8, :cond_5

    .line 132
    .line 133
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowContainer;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    .line 134
    .line 135
    .line 136
    move-result-object v3

    .line 137
    iget-object v3, v3, Lcom/android/server/wm/DisplayContent;->mWallpaperController:Lcom/android/server/wm/WallpaperController;

    .line 138
    .line 139
    iget-object v3, v3, Lcom/android/server/wm/WallpaperController;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 140
    .line 141
    if-eqz v3, :cond_5

    .line 142
    .line 143
    return v5

    .line 144
    :cond_5
    if-eqz v2, :cond_8

    .line 145
    .line 146
    iget v0, v0, Lcom/android/server/wm/ActivityRecord;->mLaunchSourceType:I

    .line 147
    .line 148
    if-eq v0, v4, :cond_8

    .line 149
    .line 150
    const/4 v2, 0x2

    .line 151
    if-eq v0, v2, :cond_8

    .line 152
    .line 153
    const/4 v2, 0x3

    .line 154
    if-ne v0, v2, :cond_6

    .line 155
    .line 156
    goto :goto_0

    .line 157
    :cond_6
    if-eqz v1, :cond_7

    .line 158
    .line 159
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/ConfigurationContainer;->getActivityType()I

    .line 160
    .line 161
    .line 162
    move-result v0

    .line 163
    if-ne v0, v4, :cond_7

    .line 164
    .line 165
    iget v0, v1, Lcom/android/server/wm/ActivityRecord;->mTransferringSplashScreenState:I

    .line 166
    .line 167
    if-nez v0, :cond_7

    .line 168
    .line 169
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 170
    .line 171
    if-nez v0, :cond_8

    .line 172
    .line 173
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mStartingWindow:Lcom/android/server/wm/WindowState;

    .line 174
    .line 175
    if-eqz v0, :cond_7

    .line 176
    .line 177
    iget-object v0, v1, Lcom/android/server/wm/ActivityRecord;->mStartingSurface:Lcom/android/server/wm/StartingSurfaceController$StartingSurface;

    .line 178
    .line 179
    if-eqz v0, :cond_7

    .line 180
    .line 181
    goto :goto_0

    .line 182
    :cond_7
    move v4, v5

    .line 183
    :cond_8
    :goto_0
    return v4

    .line 184
    :cond_9
    :goto_1
    return v5
.end method

.method public final waitForSyncTransactionCommit(Landroid/util/ArraySet;)V
    .locals 0

    .line 1
    invoke-super {p0, p1}, Lcom/android/server/wm/WindowContainer;->waitForSyncTransactionCommit(Landroid/util/ArraySet;)V

    .line 2
    .line 3
    .line 4
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->mStartingData:Lcom/android/server/wm/StartingData;

    .line 5
    .line 6
    if-eqz p0, :cond_0

    .line 7
    .line 8
    const/4 p1, 0x1

    .line 9
    iput-boolean p1, p0, Lcom/android/server/wm/StartingData;->mWaitForSyncTransactionCommit:Z

    .line 10
    .line 11
    :cond_0
    return-void
.end method

.method public final windowsAreFocusable(Z)Z
    .locals 2

    .line 1
    const/4 v0, 0x0

    .line 2
    if-nez p1, :cond_0

    .line 3
    .line 4
    iget p1, p0, Lcom/android/server/wm/ActivityRecord;->mTargetSdk:I

    .line 5
    .line 6
    const/16 v1, 0x1d

    .line 7
    .line 8
    if-ge p1, v1, :cond_0

    .line 9
    .line 10
    invoke-virtual {p0}, Lcom/android/server/wm/ActivityRecord;->getPid()I

    .line 11
    .line 12
    .line 13
    move-result p1

    .line 14
    iget-object v1, p0, Lcom/android/server/wm/WindowContainer;->mWmService:Lcom/android/server/wm/WindowManagerService;

    .line 15
    .line 16
    iget-object v1, v1, Lcom/android/server/wm/WindowManagerService;->mRoot:Lcom/android/server/wm/RootWindowContainer;

    .line 17
    .line 18
    iget-object v1, v1, Lcom/android/server/wm/RootWindowContainer;->mTopFocusedAppByProcess:Landroid/util/ArrayMap;

    .line 19
    .line 20
    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 21
    .line 22
    .line 23
    move-result-object p1

    .line 24
    invoke-virtual {v1, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    .line 25
    .line 26
    .line 27
    move-result-object p1

    .line 28
    check-cast p1, Lcom/android/server/wm/ActivityRecord;

    .line 29
    .line 30
    if-eqz p1, :cond_0

    .line 31
    .line 32
    if-eq p1, p0, :cond_0

    .line 33
    .line 34
    return v0

    .line 35
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/wm/ConfigurationContainer;->getWindowConfiguration()Landroid/app/WindowConfiguration;

    .line 36
    .line 37
    .line 38
    move-result-object p1

    .line 39
    invoke-virtual {p1}, Landroid/app/WindowConfiguration;->canReceiveKeys()Z

    .line 40
    .line 41
    .line 42
    move-result p1

    .line 43
    if-eqz p1, :cond_1

    .line 44
    .line 45
    iget-boolean p1, p0, Lcom/android/server/wm/ActivityRecord;->mWaitForEnteringPinnedMode:Z

    .line 46
    .line 47
    if-nez p1, :cond_1

    .line 48
    .line 49
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->task:Lcom/android/server/wm/Task;

    .line 50
    .line 51
    if-eqz p1, :cond_2

    .line 52
    .line 53
    invoke-virtual {p1}, Lcom/android/server/wm/Task;->isFreeformStashed()Z

    .line 54
    .line 55
    .line 56
    move-result p1

    .line 57
    if-nez p1, :cond_1

    .line 58
    .line 59
    goto :goto_0

    .line 60
    :cond_1
    iget-object p1, p0, Lcom/android/server/wm/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    .line 61
    .line 62
    iget p1, p1, Landroid/content/pm/ActivityInfo;->flags:I

    .line 63
    .line 64
    const/high16 v1, 0x40000

    .line 65
    .line 66
    and-int/2addr p1, v1

    .line 67
    if-eqz p1, :cond_3

    .line 68
    .line 69
    :cond_2
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/wm/WindowContainer;->isAttached()Z

    .line 70
    .line 71
    .line 72
    move-result p0

    .line 73
    if-eqz p0, :cond_3

    .line 74
    .line 75
    const/4 v0, 0x1

    .line 76
    :cond_3
    return v0
.end method

.method public final writeIdentifierToProto(Landroid/util/proto/ProtoOutputStream;J)V
    .locals 3

    .line 1
    invoke-virtual {p1, p2, p3}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 2
    .line 3
    .line 4
    move-result-wide p2

    .line 5
    const-wide v0, 0x10500000001L

    .line 6
    .line 7
    .line 8
    .line 9
    .line 10
    invoke-static {p0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    .line 11
    .line 12
    .line 13
    move-result v2

    .line 14
    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 15
    .line 16
    .line 17
    const-wide v0, 0x10500000002L

    .line 18
    .line 19
    .line 20
    .line 21
    .line 22
    iget v2, p0, Lcom/android/server/wm/ActivityRecord;->mUserId:I

    .line 23
    .line 24
    invoke-virtual {p1, v0, v1, v2}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 25
    .line 26
    .line 27
    iget-object p0, p0, Lcom/android/server/wm/ActivityRecord;->intent:Landroid/content/Intent;

    .line 28
    .line 29
    invoke-virtual {p0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    .line 30
    .line 31
    .line 32
    move-result-object p0

    .line 33
    invoke-virtual {p0}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    .line 34
    .line 35
    .line 36
    move-result-object p0

    .line 37
    const-wide v0, 0x10900000003L

    .line 38
    .line 39
    .line 40
    .line 41
    .line 42
    invoke-virtual {p1, v0, v1, p0}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 43
    .line 44
    .line 45
    invoke-virtual {p1, p2, p3}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 46
    .line 47
    .line 48
    return-void
.end method
