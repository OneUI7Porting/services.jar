.class public final Lcom/android/server/power/PowerManagerService;
.super Lcom/android/server/SystemService;
.source "qb/89523975 b19e8d3036bb0bb04c0b123e55579fdc5d41bbd9c06260ba21f1b25f8ce00bef"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;


# static fields
.field public static final DATE_FORMAT:Ljava/text/SimpleDateFormat;

.field public static final DEFAULT_DISPLAY_GROUP_IDS:Landroid/util/IntArray;

.field public static final DEX_SETTINGS_URI:Landroid/net/Uri;

.field public static final SEC_USE_FACTORY_BINARY:Z

.field public static sQuiescent:Z


# instance fields
.field public mAbuseWakeLockDetector:Lcom/android/server/power/AbuseWakeLockDetector;

.field public final mAbuseWakeLockDetectorCallback:Lcom/android/server/power/PowerManagerService$1;

.field public final mAdaptiveScreenOffTimeoutCallbacks:Lcom/android/server/power/PowerManagerService$1;

.field public mAdaptiveScreenOffTimeoutController:Lcom/android/server/power/AdaptiveScreenOffTimeoutController;

.field public mAlpmHlpmMode:I

.field public mAlwaysOnEnabled:Z

.field public final mAmbientDisplayConfiguration:Landroid/hardware/display/AmbientDisplayConfiguration;

.field public final mAmbientDisplaySuppressionController:Lcom/android/server/power/AmbientDisplaySuppressionController;

.field public mAodMode:Z

.field public final mAttentionDetector:Lcom/android/server/power/AttentionDetector;

.field public mAttentionLight:Lcom/android/server/lights/LightsService$LightImpl;

.field public mAttentiveTimeoutConfig:I

.field public mAttentiveTimeoutSetting:J

.field public mAttentiveWarningDurationConfig:J

.field public mAutoBrightnessLimitLastCaller:Ljava/lang/String;

.field public mAutoBrightnessLowerLimit:I

.field public mAutoBrightnessUpperLimit:I

.field public mBatteryLevel:I

.field public mBatteryLevelCritical:Z

.field public mBatteryLevelLow:Z

.field public mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

.field public mBatteryOnline:I

.field public final mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

.field public final mBatterySaverSupported:Z

.field public mBatterySavingAdjustBrightnessFactor:F

.field public mBatterySavingScreenOffTimeoutSetting:J

.field public mBatteryStats:Lcom/android/internal/app/IBatteryStats;

.field public final mBinderService:Lcom/android/server/power/PowerManagerService$BinderService;

.field public mBootCompleted:Z

.field public final mBootingSuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

.field public mBrightWhenDozingConfig:Z

.field public mBrightnessLimitByCoverConfig:I

.field public final mBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

.field public final mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

.field public final mConstants:Lcom/android/server/power/PowerManagerService$Constants;

.field public final mContext:Landroid/content/Context;

.field public mCoverAuthReady:Z

.field public mCoverAuthReadyRunnable:Ljava/lang/Runnable;

.field public mCoverManager:Lcom/samsung/android/cover/CoverManager;

.field public final mCoverStateListener:Lcom/android/server/power/PowerManagerService$10;

.field public mCoverType:I

.field public mDecoupleHalAutoSuspendModeFromDisplayConfig:Z

.field public mDecoupleHalInteractiveModeFromDisplayConfig:Z

.field public mDefaultDisplayReadyByProximity:Z

.field public mDefaultDisplayState:I

.field public mDelayTimePrintWakeLock:J

.field public final mDeviceConfigProvider:Lcom/android/server/display/feature/DeviceConfigParameterProvider;

.field public mDeviceIdleMode:Z

.field public mDeviceIdleTempWhitelist:[I

.field public mDeviceIdleWhitelist:[I

.field public mDirty:I

.field public mDisableScreenWakeLocksWhileCached:Z

.field public mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field public final mDisplayPowerCallbacks:Lcom/android/server/power/PowerManagerService$3;

.field public final mDisplaySuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

.field public mDockState:I

.field public mDoubleTapWakeEnabled:Z

.field public mDozeAfterScreenOff:Z

.field public mDozeScreenBrightnessOverrideFromDreamManager:I

.field public mDozeScreenBrightnessOverrideFromDreamManagerFloat:F

.field public mDozeScreenStateOverrideFromDreamManager:I

.field public mDozeScreenStateOverrideReasonFromDreamManager:I

.field public mDozeStartInProgress:Z

.field public mDrawWakeLockOverrideFromSidekick:Z

.field public mDreamManager:Landroid/service/dreams/DreamManagerInternal;

.field public mDreamsActivateOnDockSetting:Z

.field public mDreamsActivateOnSleepSetting:Z

.field public mDreamsActivatedOnDockByDefaultConfig:Z

.field public mDreamsActivatedOnSleepByDefaultConfig:Z

.field public mDreamsBatteryLevelDrain:I

.field public mDreamsBatteryLevelDrainCutoffConfig:I

.field public mDreamsBatteryLevelMinimumWhenNotPoweredConfig:I

.field public mDreamsBatteryLevelMinimumWhenPoweredConfig:I

.field public mDreamsDisabledByAmbientModeSuppressionConfig:Z

.field public mDreamsEnabledByDefaultConfig:Z

.field public mDreamsEnabledOnBatteryConfig:Z

.field public mDreamsEnabledSetting:Z

.field public mDreamsSupportedConfig:Z

.field public mDualScreenPolicy:I

.field public mEarlyWakeUp:Z

.field public mEnhancedDischargePredictionIsPersonalized:Z

.field public mEnhancedDischargeTimeElapsed:J

.field public final mEnhancedDischargeTimeLock:Ljava/lang/Object;

.field public final mEnsureTransitionToDozingReleaser:Lcom/android/server/power/PowerManagerService$6;

.field public mEnsureTransitionToDozingReleaserRunning:Z

.field public final mFeatureCoverSysfs:Z

.field public final mFeatureFlags:Lcom/android/server/power/feature/PowerManagerFlags;

.field public final mFoldGracePeriodProvider:Lcom/android/internal/foldables/FoldGracePeriodProvider;

.field public mForceSetHalInteractiveMode:Z

.field public mForceSlowChange:Z

.field public mForceSuspendActive:Z

.field public mForegroundPackageObserver:Lcom/android/server/power/ForegroundPackageObserver;

.field public mForegroundProfile:I

.field public mFreezingScreenBrightness:Z

.field public mGoToSleepPreventionEnabled:Z

.field public mHalAutoSuspendModeEnabled:Z

.field public mHalInteractiveModeEnabled:Z

.field public final mHandler:Landroid/os/Handler;

.field public final mHandlerPmsMisc:Landroid/os/Handler;

.field public mHbmBlock:Z

.field public final mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

.field public mHdrBrightnessLimitPeriod:I

.field public final mHdrBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

.field public mHdrBrightnessLimitRunning:Z

.field public mHdrBrightnessUpperLimit:I

.field public mHoldingBootingSuspendBlocker:Z

.field public mHoldingDisplaySuspendBlocker:Z

.field public mHoldingWakeLockSuspendBlocker:Z

.field public final mInattentiveSleepWarningOverlayController:Lcom/android/server/power/InattentiveSleepWarningController;

.field public final mInjector:Lcom/android/server/power/PowerManagerService$Injector;

.field public mInterceptedKeyForProximity:Z

.field public mInterceptedPowerKeyForProximity:Z

.field public mInternalDisplayOffByPowerKeyIntent:Landroid/content/Intent;

.field public mIsCoverClosed:Z

.field public mIsDualViewMode:Z

.field public final mIsPowerBoostInvokedFromLocal:Ljava/util/concurrent/atomic/AtomicBoolean;

.field public mIsPowered:Z

.field public final mIsUserActivityInvoked:Ljava/util/concurrent/atomic/AtomicBoolean;

.field public final mIsUserActivityNativeInvoked:Ljava/util/concurrent/atomic/AtomicBoolean;

.field public mKeepDreamingWhenUnplugging:Z

.field public mLCDFlashMode:Z

.field public mLCDFlashModeLock:Lcom/android/server/power/PowerManagerService$LCDFlashModeLock;

.field public mLastAndroidAutoBoostTime:J

.field public mLastAutoBrightnessLimitTime:J

.field public mLastBrightnessOverrideState:Z

.field public mLastEnhancedDischargeTimeUpdatedElapsed:J

.field public mLastGlobalSleepReason:I

.field public mLastGlobalSleepTime:J

.field public mLastGlobalSleepTimeRealtime:J

.field public mLastGlobalWakeReason:I

.field public mLastGlobalWakeTime:J

.field public mLastGlobalWakeTimeRealtime:J

.field public mLastInteractivePowerHintTime:J

.field public mLastNormalTouchBoostTime:J

.field public mLastOutdoorModeEnabledTime:J

.field public mLastRequestedLimitationOfBrightness:I

.field public mLastRequestedLimitationOfHdrBrightness:I

.field public mLastScreenBrightnessBoostTime:J

.field public mLastScreenTimeout:I

.field public mLastUserActivityStateListenerCalledTime:J

.field public mLastUserActivityStateListenerState:I

.field public mLastWakeUpReason:I

.field public mLastWarningAboutUserActivityPermission:J

.field public mLightDeviceIdleMode:Z

.field public final mLocalService:Lcom/android/server/power/PowerManagerService$LocalService;

.field public final mLock:Ljava/lang/Object;

.field public mLowPowerStandbyActive:Z

.field public mLowPowerStandbyAllowlist:[I

.field public final mLowPowerStandbyController:Lcom/android/server/power/LowPowerStandbyController;

.field public mMasterBrightnessLimitLastCaller:Ljava/lang/String;

.field public mMasterBrightnessLimitPeriod:I

.field public mMasterBrightnessLimitRunning:Z

.field public mMasterBrightnessLowerLimit:I

.field public mMasterBrightnessUpperLimit:I

.field public mMaximumScreenDimDurationConfig:J

.field public mMaximumScreenDimRatioConfig:F

.field public mMaximumScreenOffTimeoutFromDeviceAdmin:J

.field public mMinimumScreenOffTimeoutConfig:J

.field public final mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

.field public mNoUserActivityIntent:Landroid/content/Intent;

.field public mNoUserActivitySent:Z

.field public mNotifier:Lcom/android/server/power/Notifier;

.field public mNotifyLongDispatched:J

.field public mNotifyLongNextCheck:J

.field public mNotifyLongScheduled:J

.field public mOutdoorModeSetting:Z

.field public mOverriddenTimeout:J

.field public final mPermissionCheckerWrapper:Lcom/android/server/power/PowerManagerService$Injector$$ExternalSyntheticLambda0;

.field public mPlugType:I

.field public mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

.field public final mPowerGroupWakefulnessChangeListener:Lcom/android/server/power/PowerManagerService$1;

.field public final mPowerGroups:Landroid/util/SparseArray;

.field public final mPowerHistorian:Lcom/android/server/power/PowerHistorian;

.field public final mPowerPropertiesWrapper:Lcom/android/server/power/PowerManagerService$Injector$1;

.field public final mPrintWakeLockAperiodicallyRunnable:Lcom/android/server/power/PowerManagerService$6;

.field public final mProfilePowerState:Landroid/util/SparseArray;

.field public mProximityPositive:Z

.field public mQuickTilesSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

.field public mRequestWaitForNegativeProximity:Z

.field public mSafeMode:Z

.field public mSandmanScheduled:Z

.field public mScreenBrightnessBoostInProgress:Z

.field public final mScreenBrightnessDefault:F

.field public final mScreenBrightnessDim:F

.field public final mScreenBrightnessDoze:F

.field public mScreenBrightnessForClearCoverConfig:F

.field public final mScreenBrightnessMaximum:F

.field public final mScreenBrightnessMinimum:F

.field public mScreenBrightnessOverrideFromWindowManager:F

.field public mScreenBrightnessOverridePackageFromWindowManager:Ljava/lang/String;

.field public mScreenBrightnessScaleFactor:F

.field public mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

.field public mScreenDimDurationOverrideFromSQD:J

.field public mScreenDimDurationOverrideFromWindowManager:J

.field public final mScreenExtendedBrightnessMaximum:I

.field public mScreenOffReason:Ljava/lang/String;

.field public mScreenOffTimeoutForDex:I

.field public mScreenOffTimeoutSetting:J

.field public mScreenOnKeeper:Lcom/android/server/power/ScreenOnKeeper;

.field public mScreenOnOffCount:I

.field public mScreenOnReason:Ljava/lang/String;

.field public mScreenTimeoutOverridePolicy:Lcom/android/server/power/ScreenTimeoutOverridePolicy;

.field public final mScreenUndimDetector:Lcom/android/server/power/ScreenUndimDetector;

.field public mSemInputDeviceManager:Lcom/samsung/android/hardware/secinputdev/SemInputDeviceManager;

.field public mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

.field public mShouldWaitForTransitionToAodUi:Z

.field public mShutdownOrRebootCaller:Ljava/lang/String;

.field public mSleepTimeoutSetting:J

.field public mSmartStayController:Lcom/android/server/power/SmartStayController;

.field public mSmartStayEnabledSetting:Z

.field public mStayOn:Z

.field public mStayOnWhilePluggedInSetting:I

.field public mSupportsDoubleTapWakeConfig:Z

.field public final mSuspendBlockerMonitor:Lcom/android/server/power/SuspendBlockerMonitor;

.field public final mSuspendBlockers:Ljava/util/ArrayList;

.field public mSuspendWhenScreenOffDueToProximityConfig:Z

.field public final mSystemProperties:Lcom/android/server/power/PowerManagerService$Injector$1;

.field public mSystemReady:Z

.field public mTargetBrightnessForHdrLimit:I

.field public mTargetBrightnessForLimit:I

.field public mTheaterModeEnabled:Z

.field public final mUidState:Landroid/util/SparseArray;

.field public mUidsChanged:Z

.field public mUidsChanging:Z

.field public mUpdatePowerStateInProgress:Z

.field public mUseAdaptiveScreenOffTimeout:Z

.field public final mUseAutoSuspend:Z

.field public mUseKeepScreenOn:Z

.field public mUseScreenCurtain:Z

.field public mUserActivityIntent:Landroid/content/Intent;

.field public final mUserActivityStateListenerListeners:Ljava/util/ArrayList;

.field public final mUserActivityStateListenerTimeoutRunnable:Lcom/android/server/power/PowerManagerService$6;

.field public final mUserActivityTask:Lcom/android/server/power/PowerManagerService$6;

.field public mUserActivityTimeoutForDexOverrideFromWindowManager:J

.field public mUserActivityTimeoutOverrideFromWindowManager:J

.field public mUserActivityTimeoutSetting:I

.field public final mUserActivityTimeoutTask:Lcom/android/server/power/PowerManagerService$6;

.field public mUserId:I

.field public mUserInactiveOverrideFromWindowManager:Z

.field public mWakeLockSummary:I

.field public final mWakeLockSuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

.field public final mWakeLocks:Ljava/util/ArrayList;

.field public final mWakeUpPreventionLocks:Ljava/util/ArrayList;

.field public mWakeUpWhenPluggedOrUnpluggedConfig:Z

.field public mWakeUpWhenPluggedOrUnpluggedInTheaterModeConfig:Z

.field public mWakefulnessChanging:Z

.field public mWakefulnessRaw:I

.field public final mWakelockBlacklistAppid:Ljava/util/ArrayList;

.field public mWirelessChargerDetector:Lcom/android/server/power/WirelessChargerDetector;

.field public mWirelessChargerMotionDetector:Lcom/android/server/power/WirelessChargerMotionDetector;

.field public mlastSetCoverTypeTime:J

.field public mlastUpdateCoverStateReason:Ljava/lang/String;

.field public mlastUpdateCoverStateTime:J

.field public mlastUpdateCoverTypeReason:Ljava/lang/String;


# direct methods
.method public static -$$Nest$macquireWakeLockInternal(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;Ljava/lang/String;IILandroid/os/IWakeLockCallback;Z)V
    .locals 20

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move/from16 v4, p2

    .line 4
    .line 5
    move/from16 v11, p8

    .line 6
    .line 7
    const-string v14, "[api] acquire WakeLock "

    .line 8
    .line 9
    const-string v1, "Tried to acquire wake lock for invalid display: "

    .line 10
    .line 11
    iget-object v15, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 12
    .line 13
    monitor-enter v15

    .line 14
    const/4 v2, -0x1

    .line 15
    if-eq v4, v2, :cond_3

    .line 16
    .line 17
    :try_start_0
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 18
    .line 19
    if-eqz v2, :cond_0

    .line 20
    .line 21
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 22
    .line 23
    invoke-virtual {v2, v4}, Landroid/hardware/display/DisplayManagerInternal;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    .line 24
    .line 25
    .line 26
    move-result-object v2

    .line 27
    goto :goto_0

    .line 28
    :catchall_0
    move-exception v0

    .line 29
    goto/16 :goto_a

    .line 30
    .line 31
    :cond_0
    const/4 v2, 0x0

    .line 32
    :goto_0
    if-nez v2, :cond_1

    .line 33
    .line 34
    const-string v0, "PowerManagerService"

    .line 35
    .line 36
    new-instance v2, Ljava/lang/StringBuilder;

    .line 37
    .line 38
    invoke-direct {v2, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 39
    .line 40
    .line 41
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 42
    .line 43
    .line 44
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 45
    .line 46
    .line 47
    move-result-object v1

    .line 48
    sget v2, Lcom/android/server/power/Slog;->$r8$clinit:I

    .line 49
    .line 50
    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 51
    .line 52
    .line 53
    monitor-exit v15

    .line 54
    goto/16 :goto_9

    .line 55
    .line 56
    :cond_1
    invoke-virtual {v2, v11}, Landroid/view/DisplayInfo;->hasAccess(I)Z

    .line 57
    .line 58
    .line 59
    move-result v1

    .line 60
    if-eqz v1, :cond_2

    .line 61
    .line 62
    goto :goto_1

    .line 63
    :cond_2
    new-instance v0, Ljava/lang/SecurityException;

    .line 64
    .line 65
    const-string v1, "Caller does not have access to display"

    .line 66
    .line 67
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 68
    .line 69
    .line 70
    throw v0

    .line 71
    :cond_3
    :goto_1
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/PowerManagerService;->findWakeLockIndexLocked(Landroid/os/IBinder;)I

    .line 72
    .line 73
    .line 74
    move-result v1

    .line 75
    const/16 v16, 0x0

    .line 76
    .line 77
    const/16 v17, 0x1

    .line 78
    .line 79
    if-ltz v1, :cond_8

    .line 80
    .line 81
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 82
    .line 83
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 84
    .line 85
    .line 86
    move-result-object v1

    .line 87
    move-object v12, v1

    .line 88
    check-cast v12, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 89
    .line 90
    iget v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 91
    .line 92
    move/from16 v13, p3

    .line 93
    .line 94
    if-ne v1, v13, :cond_6

    .line 95
    .line 96
    iget-object v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 97
    .line 98
    move-object/from16 v10, p4

    .line 99
    .line 100
    invoke-virtual {v1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 101
    .line 102
    .line 103
    move-result v1

    .line 104
    if-eqz v1, :cond_5

    .line 105
    .line 106
    iget-object v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 107
    .line 108
    move-object/from16 v9, p6

    .line 109
    .line 110
    invoke-static {v1, v9}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 111
    .line 112
    .line 113
    move-result v1

    .line 114
    if-eqz v1, :cond_4

    .line 115
    .line 116
    iget v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 117
    .line 118
    if-ne v1, v11, :cond_4

    .line 119
    .line 120
    iget v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerPid:I

    .line 121
    .line 122
    move/from16 v8, p9

    .line 123
    .line 124
    if-ne v1, v8, :cond_7

    .line 125
    .line 126
    move/from16 v1, v17

    .line 127
    .line 128
    goto :goto_5

    .line 129
    :cond_4
    :goto_2
    move/from16 v8, p9

    .line 130
    .line 131
    goto :goto_4

    .line 132
    :cond_5
    :goto_3
    move-object/from16 v9, p6

    .line 133
    .line 134
    goto :goto_2

    .line 135
    :cond_6
    move-object/from16 v10, p4

    .line 136
    .line 137
    goto :goto_3

    .line 138
    :cond_7
    :goto_4
    move-object/from16 v1, p0

    .line 139
    .line 140
    move-object v2, v12

    .line 141
    move/from16 v3, p3

    .line 142
    .line 143
    move-object/from16 v4, p4

    .line 144
    .line 145
    move-object/from16 v5, p5

    .line 146
    .line 147
    move/from16 v6, p8

    .line 148
    .line 149
    move/from16 v7, p9

    .line 150
    .line 151
    move-object/from16 v8, p6

    .line 152
    .line 153
    move-object/from16 v9, p7

    .line 154
    .line 155
    move-object/from16 v10, p10

    .line 156
    .line 157
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockChangingLocked(Lcom/android/server/power/PowerManagerService$WakeLock;ILjava/lang/String;Ljava/lang/String;IILandroid/os/WorkSource;Ljava/lang/String;Landroid/os/IWakeLockCallback;)V

    .line 158
    .line 159
    .line 160
    move-object v1, v12

    .line 161
    move/from16 v2, p3

    .line 162
    .line 163
    move/from16 v3, p8

    .line 164
    .line 165
    move/from16 v4, p9

    .line 166
    .line 167
    move-object/from16 v5, p10

    .line 168
    .line 169
    move-object/from16 v6, p6

    .line 170
    .line 171
    move-object/from16 v7, p4

    .line 172
    .line 173
    move-object/from16 v8, p5

    .line 174
    .line 175
    move-object/from16 v9, p7

    .line 176
    .line 177
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/power/PowerManagerService$WakeLock;->updateProperties(IIILandroid/os/IWakeLockCallback;Landroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 178
    .line 179
    .line 180
    move/from16 v1, v16

    .line 181
    .line 182
    :goto_5
    move-object/from16 v18, v14

    .line 183
    .line 184
    move/from16 v19, v16

    .line 185
    .line 186
    move/from16 v16, v1

    .line 187
    .line 188
    move/from16 v1, v19

    .line 189
    .line 190
    goto :goto_6

    .line 191
    :cond_8
    move/from16 v13, p3

    .line 192
    .line 193
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 194
    .line 195
    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 196
    .line 197
    .line 198
    move-result-object v1

    .line 199
    check-cast v1, Lcom/android/server/power/PowerManagerService$UidState;

    .line 200
    .line 201
    if-nez v1, :cond_9

    .line 202
    .line 203
    new-instance v1, Lcom/android/server/power/PowerManagerService$UidState;

    .line 204
    .line 205
    invoke-direct {v1, v11}, Lcom/android/server/power/PowerManagerService$UidState;-><init>(I)V

    .line 206
    .line 207
    .line 208
    const/16 v2, 0x14

    .line 209
    .line 210
    iput v2, v1, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 211
    .line 212
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 213
    .line 214
    invoke-virtual {v2, v11, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 215
    .line 216
    .line 217
    :cond_9
    move-object v12, v1

    .line 218
    iget v1, v12, Lcom/android/server/power/PowerManagerService$UidState;->mNumWakeLocks:I

    .line 219
    .line 220
    add-int/lit8 v1, v1, 0x1

    .line 221
    .line 222
    iput v1, v12, Lcom/android/server/power/PowerManagerService$UidState;->mNumWakeLocks:I

    .line 223
    .line 224
    new-instance v10, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 225
    .line 226
    move-object v1, v10

    .line 227
    move-object/from16 v2, p0

    .line 228
    .line 229
    move-object/from16 v3, p1

    .line 230
    .line 231
    move/from16 v4, p2

    .line 232
    .line 233
    move/from16 v5, p3

    .line 234
    .line 235
    move-object/from16 v6, p4

    .line 236
    .line 237
    move-object/from16 v7, p5

    .line 238
    .line 239
    move-object/from16 v8, p6

    .line 240
    .line 241
    move-object/from16 v9, p7

    .line 242
    .line 243
    move-object v13, v10

    .line 244
    move/from16 v10, p8

    .line 245
    .line 246
    move/from16 v11, p9

    .line 247
    .line 248
    move-object/from16 v18, v14

    .line 249
    .line 250
    move-object v14, v13

    .line 251
    move-object/from16 v13, p10

    .line 252
    .line 253
    invoke-direct/range {v1 .. v13}, Lcom/android/server/power/PowerManagerService$WakeLock;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;IILjava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;Ljava/lang/String;IILcom/android/server/power/PowerManagerService$UidState;Landroid/os/IWakeLockCallback;)V

    .line 254
    .line 255
    .line 256
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 257
    .line 258
    invoke-virtual {v1, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 259
    .line 260
    .line 261
    invoke-virtual {v0, v14}, Lcom/android/server/power/PowerManagerService;->setWakeLockDisabledStateLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 262
    .line 263
    .line 264
    move-object v12, v14

    .line 265
    move/from16 v1, v17

    .line 266
    .line 267
    :goto_6
    if-eqz v16, :cond_a

    .line 268
    .line 269
    iget v2, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mConsecutiveAcquireCount:I

    .line 270
    .line 271
    add-int/lit8 v2, v2, 0x1

    .line 272
    .line 273
    iput v2, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mConsecutiveAcquireCount:I

    .line 274
    .line 275
    :goto_7
    move/from16 v2, p11

    .line 276
    .line 277
    goto :goto_8

    .line 278
    :cond_a
    iget v2, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 279
    .line 280
    const v3, 0xffff

    .line 281
    .line 282
    .line 283
    and-int/2addr v2, v3

    .line 284
    const/4 v3, 0x6

    .line 285
    if-eq v2, v3, :cond_b

    .line 286
    .line 287
    const/16 v3, 0xa

    .line 288
    .line 289
    if-eq v2, v3, :cond_b

    .line 290
    .line 291
    const/16 v3, 0x1a

    .line 292
    .line 293
    if-eq v2, v3, :cond_b

    .line 294
    .line 295
    const/16 v3, 0x20

    .line 296
    .line 297
    if-eq v2, v3, :cond_b

    .line 298
    .line 299
    const/16 v3, 0x40

    .line 300
    .line 301
    if-eq v2, v3, :cond_b

    .line 302
    .line 303
    const/16 v3, 0x80

    .line 304
    .line 305
    if-eq v2, v3, :cond_b

    .line 306
    .line 307
    goto :goto_7

    .line 308
    :cond_b
    const-string v2, "PowerManagerService"

    .line 309
    .line 310
    new-instance v3, Ljava/lang/StringBuilder;

    .line 311
    .line 312
    move-object/from16 v4, v18

    .line 313
    .line 314
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 315
    .line 316
    .line 317
    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 318
    .line 319
    .line 320
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 321
    .line 322
    .line 323
    move-result-object v3

    .line 324
    invoke-static {v2, v3}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 325
    .line 326
    .line 327
    goto :goto_7

    .line 328
    :goto_8
    invoke-virtual {v0, v12, v2}, Lcom/android/server/power/PowerManagerService;->applyWakeLockFlagsOnAcquireLocked(Lcom/android/server/power/PowerManagerService$WakeLock;Z)V

    .line 329
    .line 330
    .line 331
    iget v2, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 332
    .line 333
    or-int/lit8 v2, v2, 0x1

    .line 334
    .line 335
    iput v2, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 336
    .line 337
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 338
    .line 339
    .line 340
    if-eqz v1, :cond_c

    .line 341
    .line 342
    invoke-virtual {v0, v12}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockAcquiredLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V

    .line 343
    .line 344
    .line 345
    :cond_c
    monitor-exit v15

    .line 346
    :goto_9
    return-void

    .line 347
    :goto_a
    monitor-exit v15
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 348
    throw v0
.end method

.method public static -$$Nest$mboostScreenBrightnessInternal(Lcom/android/server/power/PowerManagerService;JI)V
    .locals 9

    .line 1
    const-string v0, "Brightness boost activated (uid "

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 4
    .line 5
    monitor-enter v1

    .line 6
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 7
    .line 8
    if-eqz v2, :cond_1

    .line 9
    .line 10
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 11
    .line 12
    .line 13
    move-result v2

    .line 14
    if-eqz v2, :cond_1

    .line 15
    .line 16
    iget-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mLastScreenBrightnessBoostTime:J

    .line 17
    .line 18
    cmp-long v2, p1, v2

    .line 19
    .line 20
    if-gez v2, :cond_0

    .line 21
    .line 22
    goto :goto_0

    .line 23
    :cond_0
    const-string v2, "PowerManagerService"

    .line 24
    .line 25
    new-instance v3, Ljava/lang/StringBuilder;

    .line 26
    .line 27
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 28
    .line 29
    .line 30
    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 31
    .line 32
    .line 33
    const-string v0, ")..."

    .line 34
    .line 35
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 36
    .line 37
    .line 38
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 39
    .line 40
    .line 41
    move-result-object v0

    .line 42
    invoke-static {v2, v0}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 43
    .line 44
    .line 45
    iput-wide p1, p0, Lcom/android/server/power/PowerManagerService;->mLastScreenBrightnessBoostTime:J

    .line 46
    .line 47
    const/4 v0, 0x1

    .line 48
    iput-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 49
    .line 50
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 51
    .line 52
    or-int/lit16 v0, v0, 0x800

    .line 53
    .line 54
    iput v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 55
    .line 56
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 57
    .line 58
    const/4 v2, 0x0

    .line 59
    invoke-virtual {v0, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 60
    .line 61
    .line 62
    move-result-object v0

    .line 63
    move-object v3, v0

    .line 64
    check-cast v3, Lcom/android/server/power/PowerGroup;

    .line 65
    .line 66
    const/4 v6, 0x0

    .line 67
    const/4 v7, 0x0

    .line 68
    move-object v2, p0

    .line 69
    move-wide v4, p1

    .line 70
    move v8, p3

    .line 71
    invoke-virtual/range {v2 .. v8}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(Lcom/android/server/power/PowerGroup;JIII)Z

    .line 72
    .line 73
    .line 74
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 75
    .line 76
    .line 77
    monitor-exit v1

    .line 78
    goto :goto_1

    .line 79
    :catchall_0
    move-exception p0

    .line 80
    goto :goto_2

    .line 81
    :cond_1
    :goto_0
    monitor-exit v1

    .line 82
    :goto_1
    return-void

    .line 83
    :goto_2
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 84
    throw p0
.end method

.method public static -$$Nest$mdisableAbusiveWakeLockInternal(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;Z)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->findWakeLockIndexLocked(Landroid/os/IBinder;)I

    .line 5
    .line 6
    .line 7
    move-result p1

    .line 8
    if-ltz p1, :cond_1

    .line 9
    .line 10
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 11
    .line 12
    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 13
    .line 14
    .line 15
    move-result-object p1

    .line 16
    check-cast p1, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 17
    .line 18
    iget-boolean v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 19
    .line 20
    if-eq v1, p2, :cond_1

    .line 21
    .line 22
    iput-boolean p2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 23
    .line 24
    if-eqz p2, :cond_0

    .line 25
    .line 26
    const/4 p2, -0x1

    .line 27
    invoke-virtual {p0, p1, p2}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockReleasedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;I)V

    .line 28
    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockAcquiredLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V

    .line 32
    .line 33
    .line 34
    goto :goto_0

    .line 35
    :catchall_0
    move-exception p0

    .line 36
    goto :goto_1

    .line 37
    :cond_1
    :goto_0
    monitor-exit v0

    .line 38
    return-void

    .line 39
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 40
    throw p0
.end method

.method public static -$$Nest$mdisableWakeUpPreventionInternal(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;Z)V
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpPreventionLocks:Ljava/util/ArrayList;

    .line 5
    .line 6
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 7
    .line 8
    .line 9
    move-result v1

    .line 10
    const/4 v2, 0x0

    .line 11
    move v3, v2

    .line 12
    :goto_0
    const/4 v4, -0x1

    .line 13
    if-ge v3, v1, :cond_1

    .line 14
    .line 15
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpPreventionLocks:Ljava/util/ArrayList;

    .line 16
    .line 17
    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 18
    .line 19
    .line 20
    move-result-object v5

    .line 21
    check-cast v5, Lcom/android/server/power/PowerManagerService$WakeUpPreventionLock;

    .line 22
    .line 23
    iget-object v5, v5, Lcom/android/server/power/PowerManagerService$WakeUpPreventionLock;->mBinder:Landroid/os/IBinder;

    .line 24
    .line 25
    if-ne v5, p1, :cond_0

    .line 26
    .line 27
    goto :goto_1

    .line 28
    :cond_0
    add-int/lit8 v3, v3, 0x1

    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_1
    move v3, v4

    .line 32
    :goto_1
    if-ne v3, v4, :cond_2

    .line 33
    .line 34
    const-string p0, "PowerManagerService"

    .line 35
    .line 36
    const-string p1, "disableWakeUpPreventionInternal: aleadyDisabled"

    .line 37
    .line 38
    invoke-static {p0, p1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 39
    .line 40
    .line 41
    monitor-exit v0

    .line 42
    goto :goto_2

    .line 43
    :catchall_0
    move-exception p0

    .line 44
    goto :goto_3

    .line 45
    :cond_2
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpPreventionLocks:Ljava/util/ArrayList;

    .line 46
    .line 47
    invoke-virtual {p1, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    if-eqz p2, :cond_3

    .line 51
    .line 52
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpPreventionLocks:Ljava/util/ArrayList;

    .line 53
    .line 54
    invoke-virtual {p1}, Ljava/util/ArrayList;->isEmpty()Z

    .line 55
    .line 56
    .line 57
    move-result p1

    .line 58
    if-eqz p1, :cond_3

    .line 59
    .line 60
    const-string p1, " wakeUpPrevention disabled"

    .line 61
    .line 62
    iput-object p1, p0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 63
    .line 64
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 65
    .line 66
    invoke-virtual {p1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 67
    .line 68
    .line 69
    move-result-object p1

    .line 70
    move-object v2, p1

    .line 71
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 72
    .line 73
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 74
    .line 75
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 76
    .line 77
    .line 78
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 79
    .line 80
    .line 81
    move-result-wide v3

    .line 82
    const-string v6, "android.server.power:WAKE_UP_PREVENTION_DISABLED"

    .line 83
    .line 84
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 85
    .line 86
    invoke-virtual {p1}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    .line 87
    .line 88
    .line 89
    move-result-object v8

    .line 90
    const/4 v10, 0x0

    .line 91
    const/16 v5, 0x73

    .line 92
    .line 93
    const/16 v7, 0x3e8

    .line 94
    .line 95
    const/16 v9, 0x3e8

    .line 96
    .line 97
    move-object v1, p0

    .line 98
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/PowerManagerService;->wakePowerGroupLocked(Lcom/android/server/power/PowerGroup;JILjava/lang/String;ILjava/lang/String;IZ)V

    .line 99
    .line 100
    .line 101
    :cond_3
    monitor-exit v0

    .line 102
    :goto_2
    return-void

    .line 103
    :goto_3
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 104
    throw p0
.end method

.method public static -$$Nest$mdumpProto(Lcom/android/server/power/PowerManagerService;Ljava/io/FileDescriptor;)V
    .locals 22

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    invoke-virtual/range {p0 .. p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    .line 5
    .line 6
    new-instance v1, Landroid/util/proto/ProtoOutputStream;

    .line 7
    .line 8
    move-object/from16 v2, p1

    .line 9
    .line 10
    invoke-direct {v1, v2}, Landroid/util/proto/ProtoOutputStream;-><init>(Ljava/io/FileDescriptor;)V

    .line 11
    .line 12
    .line 13
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 14
    .line 15
    monitor-enter v2

    .line 16
    :try_start_0
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mConstants:Lcom/android/server/power/PowerManagerService$Constants;

    .line 17
    .line 18
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 19
    .line 20
    .line 21
    const-wide v4, 0x10b00000001L

    .line 22
    .line 23
    .line 24
    .line 25
    .line 26
    invoke-virtual {v1, v4, v5}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 27
    .line 28
    .line 29
    move-result-wide v4

    .line 30
    iget-boolean v3, v3, Lcom/android/server/power/PowerManagerService$Constants;->NO_CACHED_WAKE_LOCKS:Z

    .line 31
    .line 32
    const-wide v6, 0x10800000001L

    .line 33
    .line 34
    .line 35
    .line 36
    .line 37
    invoke-virtual {v1, v6, v7, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 38
    .line 39
    .line 40
    invoke-virtual {v1, v4, v5}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 41
    .line 42
    .line 43
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 44
    .line 45
    const-wide v4, 0x10500000002L

    .line 46
    .line 47
    .line 48
    .line 49
    .line 50
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 51
    .line 52
    .line 53
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 54
    .line 55
    .line 56
    move-result v3

    .line 57
    const-wide v8, 0x10e00000003L

    .line 58
    .line 59
    .line 60
    .line 61
    .line 62
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 63
    .line 64
    .line 65
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mWakefulnessChanging:Z

    .line 66
    .line 67
    const-wide v8, 0x10800000004L

    .line 68
    .line 69
    .line 70
    .line 71
    .line 72
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 73
    .line 74
    .line 75
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 76
    .line 77
    const-wide v10, 0x10800000005L

    .line 78
    .line 79
    .line 80
    .line 81
    .line 82
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 83
    .line 84
    .line 85
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 86
    .line 87
    const-wide v12, 0x10e00000006L

    .line 88
    .line 89
    .line 90
    .line 91
    .line 92
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 93
    .line 94
    .line 95
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 96
    .line 97
    const-wide v12, 0x10500000007L

    .line 98
    .line 99
    .line 100
    .line 101
    .line 102
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 103
    .line 104
    .line 105
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 106
    .line 107
    const-wide v14, 0x10500000039L

    .line 108
    .line 109
    .line 110
    .line 111
    .line 112
    invoke-virtual {v1, v14, v15, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 113
    .line 114
    .line 115
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDockState:I

    .line 116
    .line 117
    const-wide v14, 0x10e00000009L

    .line 118
    .line 119
    .line 120
    .line 121
    .line 122
    invoke-virtual {v1, v14, v15, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 123
    .line 124
    .line 125
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 126
    .line 127
    const-wide v14, 0x1080000000aL

    .line 128
    .line 129
    .line 130
    .line 131
    .line 132
    invoke-virtual {v1, v14, v15, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 133
    .line 134
    .line 135
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 136
    .line 137
    const-wide v12, 0x1080000000bL

    .line 138
    .line 139
    .line 140
    .line 141
    .line 142
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 143
    .line 144
    .line 145
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 146
    .line 147
    const-wide v4, 0x1080000000cL

    .line 148
    .line 149
    .line 150
    .line 151
    .line 152
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 153
    .line 154
    .line 155
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 156
    .line 157
    const-wide v4, 0x1080000000dL

    .line 158
    .line 159
    .line 160
    .line 161
    .line 162
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 163
    .line 164
    .line 165
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mEnhancedDischargeTimeLock:Ljava/lang/Object;

    .line 166
    .line 167
    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 168
    :try_start_1
    iget-wide v4, v0, Lcom/android/server/power/PowerManagerService;->mEnhancedDischargeTimeElapsed:J

    .line 169
    .line 170
    const-wide v12, 0x10300000034L

    .line 171
    .line 172
    .line 173
    .line 174
    .line 175
    invoke-virtual {v1, v12, v13, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 176
    .line 177
    .line 178
    iget-wide v4, v0, Lcom/android/server/power/PowerManagerService;->mLastEnhancedDischargeTimeUpdatedElapsed:J

    .line 179
    .line 180
    const-wide v12, 0x10300000035L

    .line 181
    .line 182
    .line 183
    .line 184
    .line 185
    invoke-virtual {v1, v12, v13, v4, v5}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 186
    .line 187
    .line 188
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mEnhancedDischargePredictionIsPersonalized:Z

    .line 189
    .line 190
    const-wide v12, 0x10800000036L

    .line 191
    .line 192
    .line 193
    .line 194
    .line 195
    invoke-virtual {v1, v12, v13, v4}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 196
    .line 197
    .line 198
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    .line 199
    :try_start_2
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mHalAutoSuspendModeEnabled:Z

    .line 200
    .line 201
    const-wide v4, 0x1080000000eL

    .line 202
    .line 203
    .line 204
    .line 205
    .line 206
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 207
    .line 208
    .line 209
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mHalInteractiveModeEnabled:Z

    .line 210
    .line 211
    const-wide v4, 0x1080000000fL

    .line 212
    .line 213
    .line 214
    .line 215
    .line 216
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 217
    .line 218
    .line 219
    const-wide v12, 0x10b00000010L

    .line 220
    .line 221
    .line 222
    .line 223
    .line 224
    invoke-virtual {v1, v12, v13}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 225
    .line 226
    .line 227
    move-result-wide v12

    .line 228
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 229
    .line 230
    const/16 v16, 0x1

    .line 231
    .line 232
    and-int/lit8 v3, v3, 0x1

    .line 233
    .line 234
    const/16 v17, 0x0

    .line 235
    .line 236
    if-eqz v3, :cond_0

    .line 237
    .line 238
    move/from16 v3, v16

    .line 239
    .line 240
    goto :goto_0

    .line 241
    :cond_0
    move/from16 v3, v17

    .line 242
    .line 243
    :goto_0
    invoke-virtual {v1, v6, v7, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 244
    .line 245
    .line 246
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 247
    .line 248
    and-int/lit8 v3, v3, 0x2

    .line 249
    .line 250
    if-eqz v3, :cond_1

    .line 251
    .line 252
    move/from16 v3, v16

    .line 253
    .line 254
    goto :goto_1

    .line 255
    :cond_1
    move/from16 v3, v17

    .line 256
    .line 257
    :goto_1
    const-wide v4, 0x10800000002L

    .line 258
    .line 259
    .line 260
    .line 261
    .line 262
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 263
    .line 264
    .line 265
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 266
    .line 267
    and-int/lit8 v3, v3, 0x4

    .line 268
    .line 269
    if-eqz v3, :cond_2

    .line 270
    .line 271
    move/from16 v3, v16

    .line 272
    .line 273
    goto :goto_2

    .line 274
    :cond_2
    move/from16 v3, v17

    .line 275
    .line 276
    :goto_2
    const-wide v14, 0x10800000003L

    .line 277
    .line 278
    .line 279
    .line 280
    .line 281
    invoke-virtual {v1, v14, v15, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 282
    .line 283
    .line 284
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 285
    .line 286
    and-int/lit8 v3, v3, 0x8

    .line 287
    .line 288
    if-eqz v3, :cond_3

    .line 289
    .line 290
    move/from16 v3, v16

    .line 291
    .line 292
    goto :goto_3

    .line 293
    :cond_3
    move/from16 v3, v17

    .line 294
    .line 295
    :goto_3
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 296
    .line 297
    .line 298
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 299
    .line 300
    and-int/lit8 v3, v3, 0x10

    .line 301
    .line 302
    if-eqz v3, :cond_4

    .line 303
    .line 304
    move/from16 v3, v16

    .line 305
    .line 306
    goto :goto_4

    .line 307
    :cond_4
    move/from16 v3, v17

    .line 308
    .line 309
    :goto_4
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 310
    .line 311
    .line 312
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 313
    .line 314
    and-int/lit8 v3, v3, 0x20

    .line 315
    .line 316
    if-eqz v3, :cond_5

    .line 317
    .line 318
    move/from16 v3, v16

    .line 319
    .line 320
    goto :goto_5

    .line 321
    :cond_5
    move/from16 v3, v17

    .line 322
    .line 323
    :goto_5
    const-wide v10, 0x10800000006L

    .line 324
    .line 325
    .line 326
    .line 327
    .line 328
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 329
    .line 330
    .line 331
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 332
    .line 333
    and-int/lit8 v3, v3, 0x40

    .line 334
    .line 335
    if-eqz v3, :cond_6

    .line 336
    .line 337
    move/from16 v3, v16

    .line 338
    .line 339
    goto :goto_6

    .line 340
    :cond_6
    move/from16 v3, v17

    .line 341
    .line 342
    :goto_6
    const-wide v10, 0x10800000007L

    .line 343
    .line 344
    .line 345
    .line 346
    .line 347
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 348
    .line 349
    .line 350
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 351
    .line 352
    and-int/lit16 v3, v3, 0x80

    .line 353
    .line 354
    if-eqz v3, :cond_7

    .line 355
    .line 356
    move/from16 v3, v16

    .line 357
    .line 358
    goto :goto_7

    .line 359
    :cond_7
    move/from16 v3, v17

    .line 360
    .line 361
    :goto_7
    const-wide v10, 0x10800000008L

    .line 362
    .line 363
    .line 364
    .line 365
    .line 366
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 367
    .line 368
    .line 369
    invoke-virtual {v1, v12, v13}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 370
    .line 371
    .line 372
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mNotifyLongScheduled:J

    .line 373
    .line 374
    const-wide v10, 0x10300000011L

    .line 375
    .line 376
    .line 377
    .line 378
    .line 379
    invoke-virtual {v1, v10, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 380
    .line 381
    .line 382
    iget-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mNotifyLongDispatched:J

    .line 383
    .line 384
    const-wide v12, 0x10300000012L

    .line 385
    .line 386
    .line 387
    .line 388
    .line 389
    invoke-virtual {v1, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 390
    .line 391
    .line 392
    iget-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mNotifyLongNextCheck:J

    .line 393
    .line 394
    const-wide v12, 0x10300000013L

    .line 395
    .line 396
    .line 397
    .line 398
    .line 399
    invoke-virtual {v1, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 400
    .line 401
    .line 402
    move/from16 v3, v17

    .line 403
    .line 404
    :goto_8
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 405
    .line 406
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    .line 407
    .line 408
    .line 409
    move-result v10

    .line 410
    if-ge v3, v10, :cond_b

    .line 411
    .line 412
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 413
    .line 414
    invoke-virtual {v10, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 415
    .line 416
    .line 417
    move-result-object v10

    .line 418
    check-cast v10, Lcom/android/server/power/PowerGroup;

    .line 419
    .line 420
    const-wide v8, 0x20b00000014L

    .line 421
    .line 422
    .line 423
    .line 424
    .line 425
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 426
    .line 427
    .line 428
    move-result-wide v8

    .line 429
    iget v13, v10, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 430
    .line 431
    const-wide v11, 0x10500000006L

    .line 432
    .line 433
    .line 434
    .line 435
    .line 436
    invoke-virtual {v1, v11, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 437
    .line 438
    .line 439
    iget v11, v10, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 440
    .line 441
    int-to-long v11, v11

    .line 442
    const-wide/16 v18, 0x1

    .line 443
    .line 444
    and-long v18, v11, v18

    .line 445
    .line 446
    const-wide/16 v20, 0x0

    .line 447
    .line 448
    cmp-long v13, v18, v20

    .line 449
    .line 450
    if-eqz v13, :cond_8

    .line 451
    .line 452
    move/from16 v13, v16

    .line 453
    .line 454
    goto :goto_9

    .line 455
    :cond_8
    move/from16 v13, v17

    .line 456
    .line 457
    :goto_9
    invoke-virtual {v1, v6, v7, v13}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 458
    .line 459
    .line 460
    const-wide/16 v18, 0x2

    .line 461
    .line 462
    and-long v18, v11, v18

    .line 463
    .line 464
    cmp-long v13, v18, v20

    .line 465
    .line 466
    if-eqz v13, :cond_9

    .line 467
    .line 468
    move/from16 v13, v16

    .line 469
    .line 470
    goto :goto_a

    .line 471
    :cond_9
    move/from16 v13, v17

    .line 472
    .line 473
    :goto_a
    invoke-virtual {v1, v4, v5, v13}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 474
    .line 475
    .line 476
    const-wide/16 v18, 0x4

    .line 477
    .line 478
    and-long v11, v11, v18

    .line 479
    .line 480
    cmp-long v11, v11, v20

    .line 481
    .line 482
    if-eqz v11, :cond_a

    .line 483
    .line 484
    move/from16 v11, v16

    .line 485
    .line 486
    goto :goto_b

    .line 487
    :cond_a
    move/from16 v11, v17

    .line 488
    .line 489
    :goto_b
    invoke-virtual {v1, v14, v15, v11}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 490
    .line 491
    .line 492
    iget-wide v11, v10, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 493
    .line 494
    const-wide v14, 0x10300000004L

    .line 495
    .line 496
    .line 497
    .line 498
    .line 499
    invoke-virtual {v1, v14, v15, v11, v12}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 500
    .line 501
    .line 502
    iget-wide v10, v10, Lcom/android/server/power/PowerGroup;->mLastUserActivityTimeNoChangeLights:J

    .line 503
    .line 504
    const-wide v12, 0x10300000005L

    .line 505
    .line 506
    .line 507
    .line 508
    .line 509
    invoke-virtual {v1, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 510
    .line 511
    .line 512
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 513
    .line 514
    .line 515
    add-int/lit8 v3, v3, 0x1

    .line 516
    .line 517
    const-wide v8, 0x10800000004L

    .line 518
    .line 519
    .line 520
    .line 521
    .line 522
    const-wide v14, 0x10800000003L

    .line 523
    .line 524
    .line 525
    .line 526
    .line 527
    goto :goto_8

    .line 528
    :catchall_0
    move-exception v0

    .line 529
    goto/16 :goto_18

    .line 530
    .line 531
    :cond_b
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mRequestWaitForNegativeProximity:Z

    .line 532
    .line 533
    const-wide v8, 0x10800000015L

    .line 534
    .line 535
    .line 536
    .line 537
    .line 538
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 539
    .line 540
    .line 541
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mSandmanScheduled:Z

    .line 542
    .line 543
    const-wide v8, 0x10800000016L

    .line 544
    .line 545
    .line 546
    .line 547
    .line 548
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 549
    .line 550
    .line 551
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevelLow:Z

    .line 552
    .line 553
    const-wide v8, 0x10800000018L

    .line 554
    .line 555
    .line 556
    .line 557
    .line 558
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 559
    .line 560
    .line 561
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mLightDeviceIdleMode:Z

    .line 562
    .line 563
    const-wide v8, 0x10800000019L

    .line 564
    .line 565
    .line 566
    .line 567
    .line 568
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 569
    .line 570
    .line 571
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleMode:Z

    .line 572
    .line 573
    const-wide v10, 0x1080000001aL

    .line 574
    .line 575
    .line 576
    .line 577
    .line 578
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 579
    .line 580
    .line 581
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleWhitelist:[I

    .line 582
    .line 583
    array-length v10, v3

    .line 584
    move/from16 v11, v17

    .line 585
    .line 586
    :goto_c
    if-ge v11, v10, :cond_c

    .line 587
    .line 588
    aget v12, v3, v11

    .line 589
    .line 590
    const-wide v13, 0x2050000001bL

    .line 591
    .line 592
    .line 593
    .line 594
    .line 595
    invoke-virtual {v1, v13, v14, v12}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 596
    .line 597
    .line 598
    add-int/lit8 v11, v11, 0x1

    .line 599
    .line 600
    goto :goto_c

    .line 601
    :cond_c
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleTempWhitelist:[I

    .line 602
    .line 603
    array-length v10, v3

    .line 604
    move/from16 v11, v17

    .line 605
    .line 606
    :goto_d
    if-ge v11, v10, :cond_d

    .line 607
    .line 608
    aget v12, v3, v11

    .line 609
    .line 610
    const-wide v13, 0x2050000001cL

    .line 611
    .line 612
    .line 613
    .line 614
    .line 615
    invoke-virtual {v1, v13, v14, v12}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 616
    .line 617
    .line 618
    add-int/lit8 v11, v11, 0x1

    .line 619
    .line 620
    goto :goto_d

    .line 621
    :cond_d
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyActive:Z

    .line 622
    .line 623
    const-wide v10, 0x10800000037L

    .line 624
    .line 625
    .line 626
    .line 627
    .line 628
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 629
    .line 630
    .line 631
    iget-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalWakeTime:J

    .line 632
    .line 633
    const-wide v12, 0x1030000001dL

    .line 634
    .line 635
    .line 636
    .line 637
    .line 638
    invoke-virtual {v1, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 639
    .line 640
    .line 641
    iget-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepTime:J

    .line 642
    .line 643
    const-wide v12, 0x1030000001eL

    .line 644
    .line 645
    .line 646
    .line 647
    .line 648
    invoke-virtual {v1, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 649
    .line 650
    .line 651
    iget-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mLastInteractivePowerHintTime:J

    .line 652
    .line 653
    const-wide v12, 0x10300000021L

    .line 654
    .line 655
    .line 656
    .line 657
    .line 658
    invoke-virtual {v1, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 659
    .line 660
    .line 661
    iget-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mLastScreenBrightnessBoostTime:J

    .line 662
    .line 663
    const-wide v12, 0x10300000022L

    .line 664
    .line 665
    .line 666
    .line 667
    .line 668
    invoke-virtual {v1, v12, v13, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 669
    .line 670
    .line 671
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 672
    .line 673
    const-wide v10, 0x10800000023L

    .line 674
    .line 675
    .line 676
    .line 677
    .line 678
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 679
    .line 680
    .line 681
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mHoldingWakeLockSuspendBlocker:Z

    .line 682
    .line 683
    const-wide v10, 0x10800000025L

    .line 684
    .line 685
    .line 686
    .line 687
    .line 688
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 689
    .line 690
    .line 691
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mHoldingDisplaySuspendBlocker:Z

    .line 692
    .line 693
    const-wide v10, 0x10800000026L

    .line 694
    .line 695
    .line 696
    .line 697
    .line 698
    invoke-virtual {v1, v10, v11, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 699
    .line 700
    .line 701
    const-wide v10, 0x10b00000027L

    .line 702
    .line 703
    .line 704
    .line 705
    .line 706
    invoke-virtual {v1, v10, v11}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 707
    .line 708
    .line 709
    move-result-wide v10

    .line 710
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDecoupleHalAutoSuspendModeFromDisplayConfig:Z

    .line 711
    .line 712
    invoke-virtual {v1, v6, v7, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 713
    .line 714
    .line 715
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDecoupleHalInteractiveModeFromDisplayConfig:Z

    .line 716
    .line 717
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 718
    .line 719
    .line 720
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedConfig:Z

    .line 721
    .line 722
    const-wide v12, 0x10800000003L

    .line 723
    .line 724
    .line 725
    .line 726
    .line 727
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 728
    .line 729
    .line 730
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedInTheaterModeConfig:Z

    .line 731
    .line 732
    const-wide v12, 0x10800000004L

    .line 733
    .line 734
    .line 735
    .line 736
    .line 737
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 738
    .line 739
    .line 740
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mTheaterModeEnabled:Z

    .line 741
    .line 742
    const-wide v12, 0x10800000005L

    .line 743
    .line 744
    .line 745
    .line 746
    .line 747
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 748
    .line 749
    .line 750
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mSuspendWhenScreenOffDueToProximityConfig:Z

    .line 751
    .line 752
    const-wide v12, 0x10800000006L

    .line 753
    .line 754
    .line 755
    .line 756
    .line 757
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 758
    .line 759
    .line 760
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsSupportedConfig:Z

    .line 761
    .line 762
    const-wide v12, 0x10800000007L

    .line 763
    .line 764
    .line 765
    .line 766
    .line 767
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 768
    .line 769
    .line 770
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledByDefaultConfig:Z

    .line 771
    .line 772
    const-wide v12, 0x10800000008L

    .line 773
    .line 774
    .line 775
    .line 776
    .line 777
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 778
    .line 779
    .line 780
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnSleepByDefaultConfig:Z

    .line 781
    .line 782
    const-wide v12, 0x10800000009L

    .line 783
    .line 784
    .line 785
    .line 786
    .line 787
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 788
    .line 789
    .line 790
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnDockByDefaultConfig:Z

    .line 791
    .line 792
    const-wide v12, 0x1080000000aL

    .line 793
    .line 794
    .line 795
    .line 796
    .line 797
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 798
    .line 799
    .line 800
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledOnBatteryConfig:Z

    .line 801
    .line 802
    const-wide v12, 0x1080000000bL

    .line 803
    .line 804
    .line 805
    .line 806
    .line 807
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 808
    .line 809
    .line 810
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenPoweredConfig:I

    .line 811
    .line 812
    const-wide v12, 0x1110000000cL

    .line 813
    .line 814
    .line 815
    .line 816
    .line 817
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 818
    .line 819
    .line 820
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenNotPoweredConfig:I

    .line 821
    .line 822
    const-wide v12, 0x1110000000dL

    .line 823
    .line 824
    .line 825
    .line 826
    .line 827
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 828
    .line 829
    .line 830
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrainCutoffConfig:I

    .line 831
    .line 832
    const-wide v12, 0x1110000000eL

    .line 833
    .line 834
    .line 835
    .line 836
    .line 837
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 838
    .line 839
    .line 840
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledSetting:Z

    .line 841
    .line 842
    const-wide v12, 0x1080000000fL

    .line 843
    .line 844
    .line 845
    .line 846
    .line 847
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 848
    .line 849
    .line 850
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnSleepSetting:Z

    .line 851
    .line 852
    const-wide v12, 0x10800000010L

    .line 853
    .line 854
    .line 855
    .line 856
    .line 857
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 858
    .line 859
    .line 860
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnDockSetting:Z

    .line 861
    .line 862
    const-wide v12, 0x10800000011L

    .line 863
    .line 864
    .line 865
    .line 866
    .line 867
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 868
    .line 869
    .line 870
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDozeAfterScreenOff:Z

    .line 871
    .line 872
    const-wide v12, 0x10800000012L

    .line 873
    .line 874
    .line 875
    .line 876
    .line 877
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 878
    .line 879
    .line 880
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mMinimumScreenOffTimeoutConfig:J

    .line 881
    .line 882
    const-wide v14, 0x10500000013L

    .line 883
    .line 884
    .line 885
    .line 886
    .line 887
    invoke-virtual {v1, v14, v15, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 888
    .line 889
    .line 890
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimDurationConfig:J

    .line 891
    .line 892
    const-wide v14, 0x10500000014L

    .line 893
    .line 894
    .line 895
    .line 896
    .line 897
    invoke-virtual {v1, v14, v15, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 898
    .line 899
    .line 900
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimRatioConfig:F

    .line 901
    .line 902
    const-wide v12, 0x10200000015L

    .line 903
    .line 904
    .line 905
    .line 906
    .line 907
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 908
    .line 909
    .line 910
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 911
    .line 912
    const-wide v14, 0x10500000016L

    .line 913
    .line 914
    .line 915
    .line 916
    .line 917
    invoke-virtual {v1, v14, v15, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 918
    .line 919
    .line 920
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mSleepTimeoutSetting:J

    .line 921
    .line 922
    const-wide v14, 0x11100000017L

    .line 923
    .line 924
    .line 925
    .line 926
    .line 927
    invoke-virtual {v1, v14, v15, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 928
    .line 929
    .line 930
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutSetting:J

    .line 931
    .line 932
    const-wide v14, 0x11100000025L

    .line 933
    .line 934
    .line 935
    .line 936
    .line 937
    invoke-virtual {v1, v14, v15, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 938
    .line 939
    .line 940
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutConfig:I

    .line 941
    .line 942
    const-wide v12, 0x11100000026L

    .line 943
    .line 944
    .line 945
    .line 946
    .line 947
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 948
    .line 949
    .line 950
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mAttentiveWarningDurationConfig:J

    .line 951
    .line 952
    const-wide v14, 0x11100000027L

    .line 953
    .line 954
    .line 955
    .line 956
    .line 957
    invoke-virtual {v1, v14, v15, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 958
    .line 959
    .line 960
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenOffTimeoutFromDeviceAdmin:J

    .line 961
    .line 962
    const-wide/32 v14, 0x7fffffff

    .line 963
    .line 964
    .line 965
    invoke-static {v12, v13, v14, v15}, Ljava/lang/Math;->min(JJ)J

    .line 966
    .line 967
    .line 968
    move-result-wide v12

    .line 969
    const-wide v14, 0x10500000018L

    .line 970
    .line 971
    .line 972
    .line 973
    .line 974
    invoke-virtual {v1, v14, v15, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 975
    .line 976
    .line 977
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()Z

    .line 978
    .line 979
    .line 980
    move-result v3

    .line 981
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 982
    .line 983
    .line 984
    const-wide v8, 0x10b0000001aL

    .line 985
    .line 986
    .line 987
    .line 988
    .line 989
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 990
    .line 991
    .line 992
    move-result-wide v8

    .line 993
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 994
    .line 995
    and-int/lit8 v3, v3, 0x1

    .line 996
    .line 997
    if-eqz v3, :cond_e

    .line 998
    .line 999
    move/from16 v3, v16

    .line 1000
    .line 1001
    goto :goto_e

    .line 1002
    :cond_e
    move/from16 v3, v17

    .line 1003
    .line 1004
    :goto_e
    invoke-virtual {v1, v6, v7, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1005
    .line 1006
    .line 1007
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 1008
    .line 1009
    and-int/lit8 v3, v3, 0x2

    .line 1010
    .line 1011
    if-eqz v3, :cond_f

    .line 1012
    .line 1013
    move/from16 v3, v16

    .line 1014
    .line 1015
    goto :goto_f

    .line 1016
    :cond_f
    move/from16 v3, v17

    .line 1017
    .line 1018
    :goto_f
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1019
    .line 1020
    .line 1021
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 1022
    .line 1023
    and-int/lit8 v3, v3, 0x4

    .line 1024
    .line 1025
    if-eqz v3, :cond_10

    .line 1026
    .line 1027
    move/from16 v3, v16

    .line 1028
    .line 1029
    :goto_10
    const-wide v12, 0x10800000003L

    .line 1030
    .line 1031
    .line 1032
    .line 1033
    .line 1034
    goto :goto_11

    .line 1035
    :cond_10
    move/from16 v3, v17

    .line 1036
    .line 1037
    goto :goto_10

    .line 1038
    :goto_11
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1039
    .line 1040
    .line 1041
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 1042
    .line 1043
    and-int/lit8 v3, v3, 0x8

    .line 1044
    .line 1045
    if-eqz v3, :cond_11

    .line 1046
    .line 1047
    move/from16 v3, v16

    .line 1048
    .line 1049
    :goto_12
    const-wide v12, 0x10800000004L

    .line 1050
    .line 1051
    .line 1052
    .line 1053
    .line 1054
    goto :goto_13

    .line 1055
    :cond_11
    move/from16 v3, v17

    .line 1056
    .line 1057
    goto :goto_12

    .line 1058
    :goto_13
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1059
    .line 1060
    .line 1061
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1062
    .line 1063
    .line 1064
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessOverrideFromWindowManager:F

    .line 1065
    .line 1066
    const-wide v8, 0x1110000001cL

    .line 1067
    .line 1068
    .line 1069
    .line 1070
    .line 1071
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1072
    .line 1073
    .line 1074
    iget-wide v8, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutOverrideFromWindowManager:J

    .line 1075
    .line 1076
    const-wide v12, 0x1120000001dL

    .line 1077
    .line 1078
    .line 1079
    .line 1080
    .line 1081
    invoke-virtual {v1, v12, v13, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 1082
    .line 1083
    .line 1084
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mUserInactiveOverrideFromWindowManager:Z

    .line 1085
    .line 1086
    const-wide v8, 0x1080000001eL

    .line 1087
    .line 1088
    .line 1089
    .line 1090
    .line 1091
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1092
    .line 1093
    .line 1094
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideFromDreamManager:I

    .line 1095
    .line 1096
    const-wide v8, 0x10e0000001fL

    .line 1097
    .line 1098
    .line 1099
    .line 1100
    .line 1101
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1102
    .line 1103
    .line 1104
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDrawWakeLockOverrideFromSidekick:Z

    .line 1105
    .line 1106
    const-wide v8, 0x10800000024L

    .line 1107
    .line 1108
    .line 1109
    .line 1110
    .line 1111
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1112
    .line 1113
    .line 1114
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManager:I

    .line 1115
    .line 1116
    const-wide v8, 0x10200000020L

    .line 1117
    .line 1118
    .line 1119
    .line 1120
    .line 1121
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1122
    .line 1123
    .line 1124
    const-wide v8, 0x10b00000021L

    .line 1125
    .line 1126
    .line 1127
    .line 1128
    .line 1129
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 1130
    .line 1131
    .line 1132
    move-result-wide v8

    .line 1133
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMinimum:F

    .line 1134
    .line 1135
    const-wide v12, 0x10200000004L

    .line 1136
    .line 1137
    .line 1138
    .line 1139
    .line 1140
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1141
    .line 1142
    .line 1143
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMaximum:F

    .line 1144
    .line 1145
    const-wide v12, 0x10200000005L

    .line 1146
    .line 1147
    .line 1148
    .line 1149
    .line 1150
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1151
    .line 1152
    .line 1153
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDefault:F

    .line 1154
    .line 1155
    const-wide v12, 0x10200000006L

    .line 1156
    .line 1157
    .line 1158
    .line 1159
    .line 1160
    invoke-virtual {v1, v12, v13, v3}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1161
    .line 1162
    .line 1163
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1164
    .line 1165
    .line 1166
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mDoubleTapWakeEnabled:Z

    .line 1167
    .line 1168
    const-wide v8, 0x10800000022L

    .line 1169
    .line 1170
    .line 1171
    .line 1172
    .line 1173
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1174
    .line 1175
    .line 1176
    invoke-virtual {v1, v10, v11}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1177
    .line 1178
    .line 1179
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getAttentiveTimeoutLocked()J

    .line 1180
    .line 1181
    .line 1182
    move-result-wide v8

    .line 1183
    invoke-virtual {v0, v8, v9}, Lcom/android/server/power/PowerManagerService;->getSleepTimeoutLocked(J)J

    .line 1184
    .line 1185
    .line 1186
    move-result-wide v10

    .line 1187
    invoke-virtual {v0, v10, v11, v8, v9}, Lcom/android/server/power/PowerManagerService;->getScreenOffTimeoutLocked(JJ)J

    .line 1188
    .line 1189
    .line 1190
    move-result-wide v12

    .line 1191
    invoke-virtual {v0, v12, v13}, Lcom/android/server/power/PowerManagerService;->getScreenDimDurationLocked(J)J

    .line 1192
    .line 1193
    .line 1194
    move-result-wide v14

    .line 1195
    const-wide v4, 0x11100000033L

    .line 1196
    .line 1197
    .line 1198
    .line 1199
    .line 1200
    invoke-virtual {v1, v4, v5, v8, v9}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 1201
    .line 1202
    .line 1203
    const-wide v3, 0x11100000028L

    .line 1204
    .line 1205
    .line 1206
    .line 1207
    .line 1208
    invoke-virtual {v1, v3, v4, v10, v11}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 1209
    .line 1210
    .line 1211
    const-wide v3, 0x10500000029L

    .line 1212
    .line 1213
    .line 1214
    .line 1215
    .line 1216
    invoke-virtual {v1, v3, v4, v12, v13}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 1217
    .line 1218
    .line 1219
    const-wide v3, 0x1050000002aL

    .line 1220
    .line 1221
    .line 1222
    .line 1223
    .line 1224
    invoke-virtual {v1, v3, v4, v14, v15}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 1225
    .line 1226
    .line 1227
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mUidsChanging:Z

    .line 1228
    .line 1229
    const-wide v4, 0x1080000002bL

    .line 1230
    .line 1231
    .line 1232
    .line 1233
    .line 1234
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1235
    .line 1236
    .line 1237
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mUidsChanged:Z

    .line 1238
    .line 1239
    const-wide v4, 0x1080000002cL

    .line 1240
    .line 1241
    .line 1242
    .line 1243
    .line 1244
    invoke-virtual {v1, v4, v5, v3}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1245
    .line 1246
    .line 1247
    move/from16 v3, v17

    .line 1248
    .line 1249
    :goto_14
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 1250
    .line 1251
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    .line 1252
    .line 1253
    .line 1254
    move-result v4

    .line 1255
    if-ge v3, v4, :cond_12

    .line 1256
    .line 1257
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 1258
    .line 1259
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 1260
    .line 1261
    .line 1262
    move-result-object v4

    .line 1263
    check-cast v4, Lcom/android/server/power/PowerManagerService$UidState;

    .line 1264
    .line 1265
    const-wide v8, 0x20b0000002dL

    .line 1266
    .line 1267
    .line 1268
    .line 1269
    .line 1270
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 1271
    .line 1272
    .line 1273
    move-result-wide v8

    .line 1274
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 1275
    .line 1276
    invoke-virtual {v5, v3}, Landroid/util/SparseArray;->keyAt(I)I

    .line 1277
    .line 1278
    .line 1279
    move-result v5

    .line 1280
    const-wide v10, 0x10500000001L

    .line 1281
    .line 1282
    .line 1283
    .line 1284
    .line 1285
    invoke-virtual {v1, v10, v11, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1286
    .line 1287
    .line 1288
    invoke-static {v5}, Landroid/os/UserHandle;->formatUid(I)Ljava/lang/String;

    .line 1289
    .line 1290
    .line 1291
    move-result-object v5

    .line 1292
    const-wide v10, 0x10900000002L

    .line 1293
    .line 1294
    .line 1295
    .line 1296
    .line 1297
    invoke-virtual {v1, v10, v11, v5}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 1298
    .line 1299
    .line 1300
    iget-boolean v5, v4, Lcom/android/server/power/PowerManagerService$UidState;->mActive:Z

    .line 1301
    .line 1302
    const-wide v10, 0x10800000003L

    .line 1303
    .line 1304
    .line 1305
    .line 1306
    .line 1307
    invoke-virtual {v1, v10, v11, v5}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1308
    .line 1309
    .line 1310
    iget v5, v4, Lcom/android/server/power/PowerManagerService$UidState;->mNumWakeLocks:I

    .line 1311
    .line 1312
    const-wide v12, 0x10500000004L

    .line 1313
    .line 1314
    .line 1315
    .line 1316
    .line 1317
    invoke-virtual {v1, v12, v13, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1318
    .line 1319
    .line 1320
    iget v4, v4, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 1321
    .line 1322
    invoke-static {v4}, Landroid/app/ActivityManager;->processStateAmToProto(I)I

    .line 1323
    .line 1324
    .line 1325
    move-result v4

    .line 1326
    const-wide v12, 0x10e00000005L

    .line 1327
    .line 1328
    .line 1329
    .line 1330
    .line 1331
    invoke-virtual {v1, v12, v13, v4}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1332
    .line 1333
    .line 1334
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1335
    .line 1336
    .line 1337
    add-int/lit8 v3, v3, 0x1

    .line 1338
    .line 1339
    goto :goto_14

    .line 1340
    :cond_12
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 1341
    .line 1342
    if-eqz v3, :cond_13

    .line 1343
    .line 1344
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 1345
    .line 1346
    invoke-virtual {v3, v1}, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->dumpProto(Landroid/util/proto/ProtoOutputStream;)V

    .line 1347
    .line 1348
    .line 1349
    :cond_13
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 1350
    .line 1351
    invoke-virtual {v3}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    .line 1352
    .line 1353
    .line 1354
    move-result-object v3

    .line 1355
    const-wide v4, 0x10b0000002eL

    .line 1356
    .line 1357
    .line 1358
    .line 1359
    .line 1360
    invoke-virtual {v3, v1, v4, v5}, Landroid/os/Looper;->dumpDebug(Landroid/util/proto/ProtoOutputStream;J)V

    .line 1361
    .line 1362
    .line 1363
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 1364
    .line 1365
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 1366
    .line 1367
    .line 1368
    move-result-object v3

    .line 1369
    :goto_15
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 1370
    .line 1371
    .line 1372
    move-result v4

    .line 1373
    if-eqz v4, :cond_14

    .line 1374
    .line 1375
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 1376
    .line 1377
    .line 1378
    move-result-object v4

    .line 1379
    check-cast v4, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 1380
    .line 1381
    invoke-virtual {v4, v1}, Lcom/android/server/power/PowerManagerService$WakeLock;->dumpDebug(Landroid/util/proto/ProtoOutputStream;)V

    .line 1382
    .line 1383
    .line 1384
    goto :goto_15

    .line 1385
    :cond_14
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mSuspendBlockers:Ljava/util/ArrayList;

    .line 1386
    .line 1387
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 1388
    .line 1389
    .line 1390
    move-result-object v3

    .line 1391
    :goto_16
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 1392
    .line 1393
    .line 1394
    move-result v4

    .line 1395
    if-eqz v4, :cond_15

    .line 1396
    .line 1397
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 1398
    .line 1399
    .line 1400
    move-result-object v4

    .line 1401
    check-cast v4, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 1402
    .line 1403
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1404
    .line 1405
    .line 1406
    const-wide v8, 0x20b00000030L

    .line 1407
    .line 1408
    .line 1409
    .line 1410
    .line 1411
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 1412
    .line 1413
    .line 1414
    move-result-wide v8

    .line 1415
    monitor-enter v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 1416
    :try_start_3
    iget-object v5, v4, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->mName:Ljava/lang/String;

    .line 1417
    .line 1418
    const-wide v10, 0x10900000001L

    .line 1419
    .line 1420
    .line 1421
    .line 1422
    .line 1423
    invoke-virtual {v1, v10, v11, v5}, Landroid/util/proto/ProtoOutputStream;->write(JLjava/lang/String;)V

    .line 1424
    .line 1425
    .line 1426
    iget v5, v4, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->mReferenceCount:I

    .line 1427
    .line 1428
    const-wide v10, 0x10500000002L

    .line 1429
    .line 1430
    .line 1431
    .line 1432
    .line 1433
    invoke-virtual {v1, v10, v11, v5}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1434
    .line 1435
    .line 1436
    monitor-exit v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 1437
    :try_start_4
    invoke-virtual {v1, v8, v9}, Landroid/util/proto/ProtoOutputStream;->end(J)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 1438
    .line 1439
    .line 1440
    goto :goto_16

    .line 1441
    :catchall_1
    move-exception v0

    .line 1442
    :try_start_5
    monitor-exit v4
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 1443
    :try_start_6
    throw v0

    .line 1444
    :cond_15
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mWirelessChargerDetector:Lcom/android/server/power/WirelessChargerDetector;

    .line 1445
    .line 1446
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 1447
    if-eqz v3, :cond_16

    .line 1448
    .line 1449
    const-wide v4, 0x10b00000031L

    .line 1450
    .line 1451
    .line 1452
    .line 1453
    .line 1454
    invoke-virtual {v1, v4, v5}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 1455
    .line 1456
    .line 1457
    move-result-wide v4

    .line 1458
    iget-object v2, v3, Lcom/android/server/power/WirelessChargerDetector;->mLock:Ljava/lang/Object;

    .line 1459
    .line 1460
    monitor-enter v2

    .line 1461
    :try_start_7
    iget-boolean v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mPoweredWirelessly:Z

    .line 1462
    .line 1463
    invoke-virtual {v1, v6, v7, v8}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1464
    .line 1465
    .line 1466
    iget-boolean v6, v3, Lcom/android/server/power/WirelessChargerDetector;->mAtRest:Z

    .line 1467
    .line 1468
    const-wide v7, 0x10800000002L

    .line 1469
    .line 1470
    .line 1471
    .line 1472
    .line 1473
    invoke-virtual {v1, v7, v8, v6}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1474
    .line 1475
    .line 1476
    const-wide v6, 0x10b00000003L

    .line 1477
    .line 1478
    .line 1479
    .line 1480
    .line 1481
    invoke-virtual {v1, v6, v7}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 1482
    .line 1483
    .line 1484
    move-result-wide v6

    .line 1485
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mRestX:F

    .line 1486
    .line 1487
    const-wide v9, 0x10200000001L

    .line 1488
    .line 1489
    .line 1490
    .line 1491
    .line 1492
    invoke-virtual {v1, v9, v10, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1493
    .line 1494
    .line 1495
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mRestY:F

    .line 1496
    .line 1497
    const-wide v11, 0x10200000002L

    .line 1498
    .line 1499
    .line 1500
    .line 1501
    .line 1502
    invoke-virtual {v1, v11, v12, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1503
    .line 1504
    .line 1505
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mRestZ:F

    .line 1506
    .line 1507
    const-wide v13, 0x10200000003L

    .line 1508
    .line 1509
    .line 1510
    .line 1511
    .line 1512
    invoke-virtual {v1, v13, v14, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1513
    .line 1514
    .line 1515
    invoke-virtual {v1, v6, v7}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1516
    .line 1517
    .line 1518
    iget-boolean v6, v3, Lcom/android/server/power/WirelessChargerDetector;->mDetectionInProgress:Z

    .line 1519
    .line 1520
    const-wide v7, 0x10800000004L

    .line 1521
    .line 1522
    .line 1523
    .line 1524
    .line 1525
    invoke-virtual {v1, v7, v8, v6}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1526
    .line 1527
    .line 1528
    iget-wide v6, v3, Lcom/android/server/power/WirelessChargerDetector;->mDetectionStartTime:J

    .line 1529
    .line 1530
    const-wide v13, 0x10300000005L

    .line 1531
    .line 1532
    .line 1533
    .line 1534
    .line 1535
    invoke-virtual {v1, v13, v14, v6, v7}, Landroid/util/proto/ProtoOutputStream;->write(JJ)V

    .line 1536
    .line 1537
    .line 1538
    iget-boolean v6, v3, Lcom/android/server/power/WirelessChargerDetector;->mMustUpdateRestPosition:Z

    .line 1539
    .line 1540
    const-wide v7, 0x10800000006L

    .line 1541
    .line 1542
    .line 1543
    .line 1544
    .line 1545
    invoke-virtual {v1, v7, v8, v6}, Landroid/util/proto/ProtoOutputStream;->write(JZ)V

    .line 1546
    .line 1547
    .line 1548
    iget v6, v3, Lcom/android/server/power/WirelessChargerDetector;->mTotalSamples:I

    .line 1549
    .line 1550
    const-wide v7, 0x10500000007L

    .line 1551
    .line 1552
    .line 1553
    .line 1554
    .line 1555
    invoke-virtual {v1, v7, v8, v6}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1556
    .line 1557
    .line 1558
    iget v6, v3, Lcom/android/server/power/WirelessChargerDetector;->mMovingSamples:I

    .line 1559
    .line 1560
    const-wide v7, 0x10500000008L

    .line 1561
    .line 1562
    .line 1563
    .line 1564
    .line 1565
    invoke-virtual {v1, v7, v8, v6}, Landroid/util/proto/ProtoOutputStream;->write(JI)V

    .line 1566
    .line 1567
    .line 1568
    const-wide v6, 0x10b00000009L

    .line 1569
    .line 1570
    .line 1571
    .line 1572
    .line 1573
    invoke-virtual {v1, v6, v7}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 1574
    .line 1575
    .line 1576
    move-result-wide v6

    .line 1577
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mFirstSampleX:F

    .line 1578
    .line 1579
    invoke-virtual {v1, v9, v10, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1580
    .line 1581
    .line 1582
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mFirstSampleY:F

    .line 1583
    .line 1584
    invoke-virtual {v1, v11, v12, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1585
    .line 1586
    .line 1587
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mFirstSampleZ:F

    .line 1588
    .line 1589
    const-wide v13, 0x10200000003L

    .line 1590
    .line 1591
    .line 1592
    .line 1593
    .line 1594
    invoke-virtual {v1, v13, v14, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1595
    .line 1596
    .line 1597
    invoke-virtual {v1, v6, v7}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1598
    .line 1599
    .line 1600
    const-wide v6, 0x10b0000000aL

    .line 1601
    .line 1602
    .line 1603
    .line 1604
    .line 1605
    invoke-virtual {v1, v6, v7}, Landroid/util/proto/ProtoOutputStream;->start(J)J

    .line 1606
    .line 1607
    .line 1608
    move-result-wide v6

    .line 1609
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mLastSampleX:F

    .line 1610
    .line 1611
    invoke-virtual {v1, v9, v10, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1612
    .line 1613
    .line 1614
    iget v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mLastSampleY:F

    .line 1615
    .line 1616
    invoke-virtual {v1, v11, v12, v8}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1617
    .line 1618
    .line 1619
    iget v3, v3, Lcom/android/server/power/WirelessChargerDetector;->mLastSampleZ:F

    .line 1620
    .line 1621
    const-wide v8, 0x10200000003L

    .line 1622
    .line 1623
    .line 1624
    .line 1625
    .line 1626
    invoke-virtual {v1, v8, v9, v3}, Landroid/util/proto/ProtoOutputStream;->write(JF)V

    .line 1627
    .line 1628
    .line 1629
    invoke-virtual {v1, v6, v7}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1630
    .line 1631
    .line 1632
    monitor-exit v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    .line 1633
    invoke-virtual {v1, v4, v5}, Landroid/util/proto/ProtoOutputStream;->end(J)V

    .line 1634
    .line 1635
    .line 1636
    goto :goto_17

    .line 1637
    :catchall_2
    move-exception v0

    .line 1638
    :try_start_8
    monitor-exit v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    .line 1639
    throw v0

    .line 1640
    :cond_16
    :goto_17
    iget-object v0, v0, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyController:Lcom/android/server/power/LowPowerStandbyController;

    .line 1641
    .line 1642
    invoke-virtual {v0, v1}, Lcom/android/server/power/LowPowerStandbyController;->dumpProto(Landroid/util/proto/ProtoOutputStream;)V

    .line 1643
    .line 1644
    .line 1645
    invoke-virtual {v1}, Landroid/util/proto/ProtoOutputStream;->flush()V

    .line 1646
    .line 1647
    .line 1648
    return-void

    .line 1649
    :catchall_3
    move-exception v0

    .line 1650
    :try_start_9
    monitor-exit v3
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 1651
    :try_start_a
    throw v0

    .line 1652
    :goto_18
    monitor-exit v2
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    .line 1653
    throw v0
.end method

.method public static -$$Nest$mforceSuspendInternal(Lcom/android/server/power/PowerManagerService;I)Z
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    const/4 v1, 0x1

    .line 5
    const/4 v2, 0x0

    .line 6
    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mForceSuspendActive:Z

    .line 7
    .line 8
    move v1, v2

    .line 9
    :goto_0
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 10
    .line 11
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    .line 12
    .line 13
    .line 14
    move-result v3

    .line 15
    if-ge v1, v3, :cond_0

    .line 16
    .line 17
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 18
    .line 19
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 20
    .line 21
    .line 22
    move-result-object v3

    .line 23
    move-object v5, v3

    .line 24
    check-cast v5, Lcom/android/server/power/PowerGroup;

    .line 25
    .line 26
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 27
    .line 28
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 29
    .line 30
    .line 31
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 32
    .line 33
    .line 34
    move-result-wide v6

    .line 35
    const/16 v8, 0x8

    .line 36
    .line 37
    move-object v4, p0

    .line 38
    move v9, p1

    .line 39
    invoke-virtual/range {v4 .. v9}, Lcom/android/server/power/PowerManagerService;->sleepPowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 40
    .line 41
    .line 42
    add-int/lit8 v1, v1, 0x1

    .line 43
    .line 44
    goto :goto_0

    .line 45
    :catchall_0
    move-exception p1

    .line 46
    goto :goto_1

    .line 47
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updateWakeLockDisabledStatesLocked()V

    .line 48
    .line 49
    .line 50
    const-string v1, "PowerManagerService"

    .line 51
    .line 52
    new-instance v3, Ljava/lang/StringBuilder;

    .line 53
    .line 54
    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    .line 55
    .line 56
    .line 57
    const-string v4, "Force-Suspending (uid "

    .line 58
    .line 59
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 60
    .line 61
    .line 62
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 63
    .line 64
    .line 65
    const-string p1, ")..."

    .line 66
    .line 67
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 68
    .line 69
    .line 70
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 71
    .line 72
    .line 73
    move-result-object p1

    .line 74
    invoke-static {v1, p1}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 75
    .line 76
    .line 77
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

    .line 78
    .line 79
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 80
    .line 81
    .line 82
    invoke-static {}, Lcom/android/server/power/PowerManagerService;->nativeForceSuspend()Z

    .line 83
    .line 84
    .line 85
    move-result p1

    .line 86
    if-nez p1, :cond_1

    .line 87
    .line 88
    const-string v1, "PowerManagerService"

    .line 89
    .line 90
    const-string v3, "Force-Suspending failed in native."

    .line 91
    .line 92
    invoke-static {v1, v3}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 93
    .line 94
    .line 95
    :cond_1
    :try_start_1
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mForceSuspendActive:Z

    .line 96
    .line 97
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updateWakeLockDisabledStatesLocked()V

    .line 98
    .line 99
    .line 100
    monitor-exit v0

    .line 101
    return p1

    .line 102
    :catchall_1
    move-exception p0

    .line 103
    goto :goto_2

    .line 104
    :goto_1
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mForceSuspendActive:Z

    .line 105
    .line 106
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updateWakeLockDisabledStatesLocked()V

    .line 107
    .line 108
    .line 109
    throw p1

    .line 110
    :goto_2
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 111
    throw p0
.end method

.method public static -$$Nest$mgoToSleepInternal(Lcom/android/server/power/PowerManagerService;Landroid/util/IntArray;JII)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-wide/from16 v7, p2

    .line 4
    .line 5
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 6
    .line 7
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 8
    .line 9
    .line 10
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 11
    .line 12
    .line 13
    move-result-wide v1

    .line 14
    cmp-long v3, v7, v1

    .line 15
    .line 16
    if-gtz v3, :cond_7

    .line 17
    .line 18
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 19
    .line 20
    const-string v2, "android.permission.DEVICE_POWER"

    .line 21
    .line 22
    const/4 v3, 0x0

    .line 23
    invoke-virtual {v1, v2, v3}, Landroid/content/Context;->enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 24
    .line 25
    .line 26
    new-instance v1, Ljava/lang/StringBuilder;

    .line 27
    .line 28
    const-string v2, " goToSleep: "

    .line 29
    .line 30
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 31
    .line 32
    .line 33
    const/4 v2, 0x0

    .line 34
    invoke-static {v2}, Lcom/android/server/power/PowerManagerUtil;->callerInfoToString(Z)Ljava/lang/String;

    .line 35
    .line 36
    .line 37
    move-result-object v3

    .line 38
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 39
    .line 40
    .line 41
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 42
    .line 43
    .line 44
    move-result-object v1

    .line 45
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 46
    .line 47
    and-int/lit8 v1, p5, 0x1

    .line 48
    .line 49
    if-eqz v1, :cond_0

    .line 50
    .line 51
    const/4 v1, 0x1

    .line 52
    move v9, v1

    .line 53
    goto :goto_0

    .line 54
    :cond_0
    move v9, v2

    .line 55
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 56
    .line 57
    .line 58
    move-result v10

    .line 59
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    .line 60
    .line 61
    .line 62
    move-result-wide v11

    .line 63
    :try_start_0
    iget-object v13, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 64
    .line 65
    monitor-enter v13
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 66
    move v14, v2

    .line 67
    :goto_1
    :try_start_1
    invoke-virtual/range {p1 .. p1}, Landroid/util/IntArray;->size()I

    .line 68
    .line 69
    .line 70
    move-result v1

    .line 71
    if-ge v14, v1, :cond_6

    .line 72
    .line 73
    move-object/from16 v15, p1

    .line 74
    .line 75
    invoke-virtual {v15, v14}, Landroid/util/IntArray;->get(I)I

    .line 76
    .line 77
    .line 78
    move-result v1

    .line 79
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 80
    .line 81
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 82
    .line 83
    .line 84
    move-result-object v2

    .line 85
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 86
    .line 87
    if-eqz v2, :cond_5

    .line 88
    .line 89
    and-int/lit8 v1, p5, 0x2

    .line 90
    .line 91
    if-eqz v1, :cond_3

    .line 92
    .line 93
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mFoldGracePeriodProvider:Lcom/android/internal/foldables/FoldGracePeriodProvider;

    .line 94
    .line 95
    invoke-virtual {v1}, Lcom/android/internal/foldables/FoldGracePeriodProvider;->isEnabled()Z

    .line 96
    .line 97
    .line 98
    move-result v1

    .line 99
    if-eqz v1, :cond_2

    .line 100
    .line 101
    iget v1, v2, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 102
    .line 103
    and-int/lit8 v1, v1, 0x26

    .line 104
    .line 105
    if-eqz v1, :cond_1

    .line 106
    .line 107
    goto :goto_2

    .line 108
    :cond_1
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 109
    .line 110
    iget-object v1, v1, Lcom/android/server/power/Notifier;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    .line 111
    .line 112
    check-cast v1, Lcom/android/server/policy/PhoneWindowManager;

    .line 113
    .line 114
    invoke-virtual {v1}, Lcom/android/server/policy/PhoneWindowManager;->showDismissibleKeyguard()V

    .line 115
    .line 116
    .line 117
    goto :goto_2

    .line 118
    :catchall_0
    move-exception v0

    .line 119
    goto :goto_3

    .line 120
    :cond_2
    iget v1, v2, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 121
    .line 122
    and-int/lit8 v1, v1, 0x26

    .line 123
    .line 124
    if-eqz v1, :cond_3

    .line 125
    .line 126
    goto :goto_2

    .line 127
    :cond_3
    if-eqz v9, :cond_4

    .line 128
    .line 129
    move-object/from16 v1, p0

    .line 130
    .line 131
    move-wide/from16 v3, p2

    .line 132
    .line 133
    move/from16 v5, p4

    .line 134
    .line 135
    move v6, v10

    .line 136
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->sleepPowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 137
    .line 138
    .line 139
    goto :goto_2

    .line 140
    :cond_4
    move-object/from16 v1, p0

    .line 141
    .line 142
    move-wide/from16 v3, p2

    .line 143
    .line 144
    move/from16 v5, p4

    .line 145
    .line 146
    move v6, v10

    .line 147
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->dozePowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 148
    .line 149
    .line 150
    :goto_2
    add-int/lit8 v14, v14, 0x1

    .line 151
    .line 152
    goto :goto_1

    .line 153
    :cond_5
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 154
    .line 155
    new-instance v2, Ljava/lang/StringBuilder;

    .line 156
    .line 157
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 158
    .line 159
    .line 160
    const-string/jumbo v3, "power group("

    .line 161
    .line 162
    .line 163
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 164
    .line 165
    .line 166
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 167
    .line 168
    .line 169
    const-string v1, ") doesn\'t exist"

    .line 170
    .line 171
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 172
    .line 173
    .line 174
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 175
    .line 176
    .line 177
    move-result-object v1

    .line 178
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 179
    .line 180
    .line 181
    throw v0

    .line 182
    :cond_6
    monitor-exit v13
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 183
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 184
    .line 185
    .line 186
    return-void

    .line 187
    :goto_3
    :try_start_2
    monitor-exit v13
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 188
    :try_start_3
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 189
    :catchall_1
    move-exception v0

    .line 190
    invoke-static {v11, v12}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 191
    .line 192
    .line 193
    throw v0

    .line 194
    :cond_7
    const-string v0, "PowerManagerService"

    .line 195
    .line 196
    const-string v3, "Event time "

    .line 197
    .line 198
    const-string v4, " cannot be newer than "

    .line 199
    .line 200
    invoke-static {v3, v7, v8, v4}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;JLjava/lang/String;)Ljava/lang/StringBuilder;

    .line 201
    .line 202
    .line 203
    move-result-object v3

    .line 204
    invoke-virtual {v3, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 205
    .line 206
    .line 207
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 208
    .line 209
    .line 210
    move-result-object v1

    .line 211
    invoke-static {v0, v1}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 212
    .line 213
    .line 214
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 215
    .line 216
    const-string v1, "event time must not be in the future"

    .line 217
    .line 218
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 219
    .line 220
    .line 221
    throw v0
.end method

.method public static -$$Nest$mhandleSandman(Lcom/android/server/power/PowerManagerService;I)V
    .locals 15

    .line 1
    move-object v0, p0

    .line 2
    move/from16 v1, p1

    .line 3
    .line 4
    const-string v2, "Stopping dream because the battery appears to be draining faster than it is charging.  Battery level drained while dreaming: "

    .line 5
    .line 6
    const-string v3, "handleSandman : startDreaming: "

    .line 7
    .line 8
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 9
    .line 10
    monitor-enter v4

    .line 11
    const/4 v11, 0x0

    .line 12
    :try_start_0
    iput-boolean v11, v0, Lcom/android/server/power/PowerManagerService;->mSandmanScheduled:Z

    .line 13
    .line 14
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 15
    .line 16
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->contains(I)Z

    .line 17
    .line 18
    .line 19
    move-result v5

    .line 20
    if-nez v5, :cond_0

    .line 21
    .line 22
    monitor-exit v4

    .line 23
    goto/16 :goto_b

    .line 24
    .line 25
    :catchall_0
    move-exception v0

    .line 26
    goto/16 :goto_d

    .line 27
    .line 28
    :cond_0
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 29
    .line 30
    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 31
    .line 32
    .line 33
    move-result-object v5

    .line 34
    check-cast v5, Lcom/android/server/power/PowerGroup;

    .line 35
    .line 36
    iget v6, v5, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 37
    .line 38
    iget-boolean v7, v5, Lcom/android/server/power/PowerGroup;->mIsSandmanSummoned:Z

    .line 39
    .line 40
    const/4 v8, 0x1

    .line 41
    const/4 v9, 0x3

    .line 42
    if-eqz v7, :cond_4

    .line 43
    .line 44
    iget-boolean v7, v5, Lcom/android/server/power/PowerGroup;->mReady:Z

    .line 45
    .line 46
    if-eqz v7, :cond_4

    .line 47
    .line 48
    invoke-virtual {p0, v5}, Lcom/android/server/power/PowerManagerService;->canDreamLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 49
    .line 50
    .line 51
    move-result v7

    .line 52
    if-nez v7, :cond_2

    .line 53
    .line 54
    iget-boolean v7, v5, Lcom/android/server/power/PowerGroup;->mSupportsSandman:Z

    .line 55
    .line 56
    if-eqz v7, :cond_1

    .line 57
    .line 58
    iget v7, v5, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 59
    .line 60
    if-ne v7, v9, :cond_1

    .line 61
    .line 62
    goto :goto_0

    .line 63
    :cond_1
    move v7, v11

    .line 64
    goto :goto_1

    .line 65
    :cond_2
    :goto_0
    move v7, v8

    .line 66
    :goto_1
    const-string v10, "PowerManagerService"

    .line 67
    .line 68
    new-instance v12, Ljava/lang/StringBuilder;

    .line 69
    .line 70
    invoke-direct {v12, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 71
    .line 72
    .line 73
    invoke-virtual {v12, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 74
    .line 75
    .line 76
    const-string v3, "  (canDreamLocked: "

    .line 77
    .line 78
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 79
    .line 80
    .line 81
    invoke-virtual {p0, v5}, Lcom/android/server/power/PowerManagerService;->canDreamLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 82
    .line 83
    .line 84
    move-result v3

    .line 85
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 86
    .line 87
    .line 88
    const-string v3, "  canDozeLocked: "

    .line 89
    .line 90
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 91
    .line 92
    .line 93
    iget-boolean v3, v5, Lcom/android/server/power/PowerGroup;->mSupportsSandman:Z

    .line 94
    .line 95
    if-eqz v3, :cond_3

    .line 96
    .line 97
    iget v3, v5, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 98
    .line 99
    if-ne v3, v9, :cond_3

    .line 100
    .line 101
    move v3, v8

    .line 102
    goto :goto_2

    .line 103
    :cond_3
    move v3, v11

    .line 104
    :goto_2
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 105
    .line 106
    .line 107
    const-string v3, ")  groupId="

    .line 108
    .line 109
    invoke-virtual {v12, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 110
    .line 111
    .line 112
    invoke-virtual {v12, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 113
    .line 114
    .line 115
    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 116
    .line 117
    .line 118
    move-result-object v3

    .line 119
    invoke-static {v10, v3}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 120
    .line 121
    .line 122
    iput-boolean v11, v5, Lcom/android/server/power/PowerGroup;->mIsSandmanSummoned:Z

    .line 123
    .line 124
    goto :goto_3

    .line 125
    :cond_4
    move v7, v11

    .line 126
    :goto_3
    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 127
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamManager:Landroid/service/dreams/DreamManagerInternal;

    .line 128
    .line 129
    if-eqz v3, :cond_8

    .line 130
    .line 131
    if-eqz v7, :cond_7

    .line 132
    .line 133
    const-string/jumbo v4, "power manager request before starting dream"

    .line 134
    .line 135
    .line 136
    invoke-virtual {v3, v11, v4}, Landroid/service/dreams/DreamManagerInternal;->stopDream(ZLjava/lang/String;)V

    .line 137
    .line 138
    .line 139
    const-string v3, "PowerManagerService"

    .line 140
    .line 141
    new-instance v4, Ljava/lang/StringBuilder;

    .line 142
    .line 143
    const-string v5, "handleSandman : startDream("

    .line 144
    .line 145
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 146
    .line 147
    .line 148
    if-ne v6, v9, :cond_5

    .line 149
    .line 150
    move v5, v8

    .line 151
    goto :goto_4

    .line 152
    :cond_5
    move v5, v11

    .line 153
    :goto_4
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 154
    .line 155
    .line 156
    const-string v5, ")"

    .line 157
    .line 158
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 159
    .line 160
    .line 161
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 162
    .line 163
    .line 164
    move-result-object v4

    .line 165
    invoke-static {v3, v4}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 166
    .line 167
    .line 168
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamManager:Landroid/service/dreams/DreamManagerInternal;

    .line 169
    .line 170
    if-ne v6, v9, :cond_6

    .line 171
    .line 172
    goto :goto_5

    .line 173
    :cond_6
    move v8, v11

    .line 174
    :goto_5
    const-string/jumbo v4, "power manager request"

    .line 175
    .line 176
    .line 177
    invoke-virtual {v3, v8, v4}, Landroid/service/dreams/DreamManagerInternal;->startDream(ZLjava/lang/String;)V

    .line 178
    .line 179
    .line 180
    :cond_7
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamManager:Landroid/service/dreams/DreamManagerInternal;

    .line 181
    .line 182
    invoke-virtual {v3}, Landroid/service/dreams/DreamManagerInternal;->isDreaming()Z

    .line 183
    .line 184
    .line 185
    move-result v3

    .line 186
    move v12, v3

    .line 187
    goto :goto_6

    .line 188
    :cond_8
    move v12, v11

    .line 189
    :goto_6
    if-eqz v7, :cond_9

    .line 190
    .line 191
    if-nez v12, :cond_9

    .line 192
    .line 193
    const-string v3, "PowerManagerService"

    .line 194
    .line 195
    const-string v4, "handleSandman : startDreaming, but isDreaming false"

    .line 196
    .line 197
    invoke-static {v3, v4}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 198
    .line 199
    .line 200
    :cond_9
    sget-boolean v3, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_ENSURE_TRANSITION_TO_DOZING:Z

    .line 201
    .line 202
    if-nez v3, :cond_a

    .line 203
    .line 204
    iput-boolean v11, v0, Lcom/android/server/power/PowerManagerService;->mDozeStartInProgress:Z

    .line 205
    .line 206
    :cond_a
    iget-object v13, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 207
    .line 208
    monitor-enter v13

    .line 209
    :try_start_1
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 210
    .line 211
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->contains(I)Z

    .line 212
    .line 213
    .line 214
    move-result v3

    .line 215
    if-nez v3, :cond_b

    .line 216
    .line 217
    monitor-exit v13

    .line 218
    goto/16 :goto_b

    .line 219
    .line 220
    :catchall_1
    move-exception v0

    .line 221
    goto/16 :goto_c

    .line 222
    .line 223
    :cond_b
    if-eqz v7, :cond_d

    .line 224
    .line 225
    if-eqz v12, :cond_d

    .line 226
    .line 227
    iput v11, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 228
    .line 229
    if-ne v6, v9, :cond_c

    .line 230
    .line 231
    const-string v3, "PowerManagerService"

    .line 232
    .line 233
    const-string v4, "Dozing..."

    .line 234
    .line 235
    invoke-static {v3, v4}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 236
    .line 237
    .line 238
    goto :goto_7

    .line 239
    :cond_c
    const-string v3, "PowerManagerService"

    .line 240
    .line 241
    const-string v4, "Dreaming..."

    .line 242
    .line 243
    invoke-static {v3, v4}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 244
    .line 245
    .line 246
    :cond_d
    :goto_7
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 247
    .line 248
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 249
    .line 250
    .line 251
    move-result-object v1

    .line 252
    move-object v3, v1

    .line 253
    check-cast v3, Lcom/android/server/power/PowerGroup;

    .line 254
    .line 255
    iget-boolean v1, v3, Lcom/android/server/power/PowerGroup;->mIsSandmanSummoned:Z

    .line 256
    .line 257
    if-nez v1, :cond_16

    .line 258
    .line 259
    iget v1, v3, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 260
    .line 261
    if-eq v1, v6, :cond_e

    .line 262
    .line 263
    goto/16 :goto_a

    .line 264
    .line 265
    :cond_e
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 266
    .line 267
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 268
    .line 269
    .line 270
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 271
    .line 272
    .line 273
    move-result-wide v4

    .line 274
    const/4 v1, 0x2

    .line 275
    if-ne v6, v1, :cond_13

    .line 276
    .line 277
    if-eqz v12, :cond_10

    .line 278
    .line 279
    invoke-virtual {p0, v3}, Lcom/android/server/power/PowerManagerService;->canDreamLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 280
    .line 281
    .line 282
    move-result v1

    .line 283
    if-eqz v1, :cond_10

    .line 284
    .line 285
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrainCutoffConfig:I

    .line 286
    .line 287
    if-ltz v1, :cond_f

    .line 288
    .line 289
    iget v6, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 290
    .line 291
    if-le v6, v1, :cond_f

    .line 292
    .line 293
    invoke-virtual {p0, v3}, Lcom/android/server/power/PowerManagerService;->isBeingKeptAwakeLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 294
    .line 295
    .line 296
    move-result v1

    .line 297
    if-nez v1, :cond_f

    .line 298
    .line 299
    const-string v1, "PowerManagerService"

    .line 300
    .line 301
    new-instance v6, Ljava/lang/StringBuilder;

    .line 302
    .line 303
    invoke-direct {v6, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 304
    .line 305
    .line 306
    iget v2, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 307
    .line 308
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 309
    .line 310
    .line 311
    const-string v2, "%.  Battery level now: "

    .line 312
    .line 313
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 314
    .line 315
    .line 316
    iget v2, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 317
    .line 318
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 319
    .line 320
    .line 321
    const-string v2, "%."

    .line 322
    .line 323
    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 324
    .line 325
    .line 326
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 327
    .line 328
    .line 329
    move-result-object v2

    .line 330
    invoke-static {v1, v2}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 331
    .line 332
    .line 333
    goto :goto_8

    .line 334
    :cond_f
    monitor-exit v13

    .line 335
    goto/16 :goto_b

    .line 336
    .line 337
    :cond_10
    :goto_8
    invoke-virtual {p0, v3}, Lcom/android/server/power/PowerManagerService;->isItBedTimeYetLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 338
    .line 339
    .line 340
    move-result v1

    .line 341
    if-eqz v1, :cond_12

    .line 342
    .line 343
    const-string v1, " dream(timeout)"

    .line 344
    .line 345
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 346
    .line 347
    invoke-virtual {p0, v3, v4, v5}, Lcom/android/server/power/PowerManagerService;->isAttentiveTimeoutExpired(Lcom/android/server/power/PowerGroup;J)Z

    .line 348
    .line 349
    .line 350
    move-result v1

    .line 351
    if-eqz v1, :cond_11

    .line 352
    .line 353
    const/4 v6, 0x2

    .line 354
    const/16 v7, 0x3e8

    .line 355
    .line 356
    move-object v1, p0

    .line 357
    move-object v2, v3

    .line 358
    move-wide v3, v4

    .line 359
    move v5, v6

    .line 360
    move v6, v7

    .line 361
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->sleepPowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 362
    .line 363
    .line 364
    goto :goto_9

    .line 365
    :cond_11
    const/4 v6, 0x2

    .line 366
    const/16 v7, 0x3e8

    .line 367
    .line 368
    move-object v1, p0

    .line 369
    move-object v2, v3

    .line 370
    move-wide v3, v4

    .line 371
    move v5, v6

    .line 372
    move v6, v7

    .line 373
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->dozePowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 374
    .line 375
    .line 376
    goto :goto_9

    .line 377
    :cond_12
    const-string v1, " dream end"

    .line 378
    .line 379
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 380
    .line 381
    const/16 v1, 0x6c

    .line 382
    .line 383
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 384
    .line 385
    const-string v6, "android.server.power:DREAM_FINISHED"

    .line 386
    .line 387
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 388
    .line 389
    invoke-virtual {v1}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    .line 390
    .line 391
    .line 392
    move-result-object v8

    .line 393
    const/4 v10, 0x0

    .line 394
    const/16 v7, 0xd

    .line 395
    .line 396
    const/16 v9, 0x3e8

    .line 397
    .line 398
    const/16 v14, 0x3e8

    .line 399
    .line 400
    move-object v1, p0

    .line 401
    move-object v2, v3

    .line 402
    move-wide v3, v4

    .line 403
    move v5, v7

    .line 404
    move v7, v9

    .line 405
    move v9, v14

    .line 406
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/PowerManagerService;->wakePowerGroupLocked(Lcom/android/server/power/PowerGroup;JILjava/lang/String;ILjava/lang/String;IZ)V

    .line 407
    .line 408
    .line 409
    goto :goto_9

    .line 410
    :cond_13
    if-ne v6, v9, :cond_15

    .line 411
    .line 412
    if-eqz v12, :cond_14

    .line 413
    .line 414
    monitor-exit v13

    .line 415
    goto :goto_b

    .line 416
    :cond_14
    const/4 v6, 0x2

    .line 417
    const/16 v7, 0x3e8

    .line 418
    .line 419
    move-object v1, p0

    .line 420
    move-object v2, v3

    .line 421
    move-wide v3, v4

    .line 422
    move v5, v6

    .line 423
    move v6, v7

    .line 424
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->sleepPowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 425
    .line 426
    .line 427
    :cond_15
    :goto_9
    monitor-exit v13
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 428
    if-eqz v12, :cond_17

    .line 429
    .line 430
    const-string v1, "PowerManagerService"

    .line 431
    .line 432
    const-string v2, "handleSandman : stopDream"

    .line 433
    .line 434
    invoke-static {v1, v2}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 435
    .line 436
    .line 437
    iget-object v0, v0, Lcom/android/server/power/PowerManagerService;->mDreamManager:Landroid/service/dreams/DreamManagerInternal;

    .line 438
    .line 439
    const-string/jumbo v1, "power manager request"

    .line 440
    .line 441
    .line 442
    invoke-virtual {v0, v11, v1}, Landroid/service/dreams/DreamManagerInternal;->stopDream(ZLjava/lang/String;)V

    .line 443
    .line 444
    .line 445
    goto :goto_b

    .line 446
    :cond_16
    :goto_a
    :try_start_2
    monitor-exit v13

    .line 447
    :cond_17
    :goto_b
    return-void

    .line 448
    :goto_c
    monitor-exit v13
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 449
    throw v0

    .line 450
    :goto_d
    :try_start_3
    monitor-exit v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 451
    throw v0
.end method

.method public static -$$Nest$mhandleUserActivityTimeout(Lcom/android/server/power/PowerManagerService;)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mSmartStayEnabledSetting:Z

    .line 5
    .line 6
    if-eqz v1, :cond_1

    .line 7
    .line 8
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mSmartStayController:Lcom/android/server/power/SmartStayController;

    .line 9
    .line 10
    iget-boolean v2, v1, Lcom/android/server/power/SmartStayController;->mFaceDetected:Z

    .line 11
    .line 12
    if-eqz v2, :cond_0

    .line 13
    .line 14
    const-string v2, "SmartStayController"

    .line 15
    .line 16
    const-string v3, "UserActivityState : poke userActivity (face detected)"

    .line 17
    .line 18
    invoke-static {v2, v3}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 19
    .line 20
    .line 21
    iget-object v2, v1, Lcom/android/server/power/SmartStayController;->mOnFaceDetected:Ljava/lang/Runnable;

    .line 22
    .line 23
    invoke-interface {v2}, Ljava/lang/Runnable;->run()V

    .line 24
    .line 25
    .line 26
    :cond_0
    iget-object v2, v1, Lcom/android/server/power/SmartStayController;->mFaceDetectRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 27
    .line 28
    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 29
    .line 30
    .line 31
    move-result v2

    .line 32
    if-eqz v2, :cond_1

    .line 33
    .line 34
    iget-object v2, v1, Lcom/android/server/power/SmartStayController;->mFaceDetectRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 35
    .line 36
    const/4 v3, 0x0

    .line 37
    invoke-virtual {v2, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 38
    .line 39
    .line 40
    iput-boolean v3, v1, Lcom/android/server/power/SmartStayController;->mFaceDetected:Z

    .line 41
    .line 42
    goto :goto_0

    .line 43
    :catchall_0
    move-exception p0

    .line 44
    goto :goto_1

    .line 45
    :cond_1
    :goto_0
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 46
    .line 47
    or-int/lit8 v1, v1, 0x4

    .line 48
    .line 49
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 50
    .line 51
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 52
    .line 53
    .line 54
    monitor-exit v0

    .line 55
    return-void

    .line 56
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 57
    throw p0
.end method

.method public static -$$Nest$misInteractiveForDisplayInternal(Lcom/android/server/power/PowerManagerService;II)Z
    .locals 5

    .line 1
    const-string v0, "isInteractiveInternal(): uid="

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 4
    .line 5
    monitor-enter v1

    .line 6
    :try_start_0
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 7
    .line 8
    if-eqz v2, :cond_5

    .line 9
    .line 10
    const/4 v2, -0x1

    .line 11
    if-ne p1, v2, :cond_0

    .line 12
    .line 13
    goto :goto_1

    .line 14
    :cond_0
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 15
    .line 16
    invoke-virtual {v3, p1}, Landroid/hardware/display/DisplayManagerInternal;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    .line 17
    .line 18
    .line 19
    move-result-object p1

    .line 20
    if-eqz p1, :cond_1

    .line 21
    .line 22
    iget p1, p1, Landroid/view/DisplayInfo;->displayGroupId:I

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :catchall_0
    move-exception p0

    .line 26
    goto :goto_3

    .line 27
    :cond_1
    move p1, v2

    .line 28
    :goto_0
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    .line 29
    .line 30
    .line 31
    move-result v3

    .line 32
    invoke-static {p2}, Landroid/os/UserHandle;->isApp(I)Z

    .line 33
    .line 34
    .line 35
    move-result v4

    .line 36
    if-nez v4, :cond_2

    .line 37
    .line 38
    const/16 v4, 0x3e9

    .line 39
    .line 40
    if-ne v3, v4, :cond_4

    .line 41
    .line 42
    :cond_2
    if-eq p1, v2, :cond_4

    .line 43
    .line 44
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->getWakefulnessLocked(I)I

    .line 45
    .line 46
    .line 47
    move-result p1

    .line 48
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 49
    .line 50
    .line 51
    move-result p0

    .line 52
    invoke-static {p0}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 53
    .line 54
    .line 55
    move-result p0

    .line 56
    invoke-static {p1}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 57
    .line 58
    .line 59
    move-result p1

    .line 60
    if-eq p0, p1, :cond_3

    .line 61
    .line 62
    const-string v2, "PowerManagerService"

    .line 63
    .line 64
    new-instance v3, Ljava/lang/StringBuilder;

    .line 65
    .line 66
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 67
    .line 68
    .line 69
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 70
    .line 71
    .line 72
    const-string p2, ", interactive="

    .line 73
    .line 74
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 75
    .line 76
    .line 77
    invoke-virtual {v3, p0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 78
    .line 79
    .line 80
    const-string p0, ", interactive(internal)="

    .line 81
    .line 82
    invoke-virtual {v3, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 83
    .line 84
    .line 85
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 86
    .line 87
    .line 88
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 89
    .line 90
    .line 91
    move-result-object p0

    .line 92
    invoke-static {v2, p0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 93
    .line 94
    .line 95
    :cond_3
    monitor-exit v1

    .line 96
    goto :goto_2

    .line 97
    :cond_4
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 98
    .line 99
    .line 100
    move-result p0

    .line 101
    invoke-static {p0}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 102
    .line 103
    .line 104
    move-result p1

    .line 105
    monitor-exit v1

    .line 106
    goto :goto_2

    .line 107
    :cond_5
    :goto_1
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 108
    .line 109
    .line 110
    move-result p0

    .line 111
    invoke-static {p0}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 112
    .line 113
    .line 114
    move-result p1

    .line 115
    monitor-exit v1

    .line 116
    :goto_2
    return p1

    .line 117
    :goto_3
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 118
    throw p0
.end method

.method public static -$$Nest$misInteractiveInternal(Lcom/android/server/power/PowerManagerService;II)Z
    .locals 6

    .line 1
    const-string v0, "Did not find PowerGroup for displayId "

    .line 2
    .line 3
    const-string/jumbo v1, "uid "

    .line 4
    .line 5
    .line 6
    const-string v2, "Did not find DisplayInfo for displayId "

    .line 7
    .line 8
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 9
    .line 10
    monitor-enter v3

    .line 11
    :try_start_0
    iget-object v4, p0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 12
    .line 13
    invoke-virtual {v4, p1}, Landroid/hardware/display/DisplayManagerInternal;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    .line 14
    .line 15
    .line 16
    move-result-object v4

    .line 17
    const/4 v5, 0x0

    .line 18
    if-nez v4, :cond_0

    .line 19
    .line 20
    const-string p0, "PowerManagerService"

    .line 21
    .line 22
    new-instance p2, Ljava/lang/StringBuilder;

    .line 23
    .line 24
    invoke-direct {p2, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 25
    .line 26
    .line 27
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 28
    .line 29
    .line 30
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 31
    .line 32
    .line 33
    move-result-object p1

    .line 34
    invoke-static {p0, p1}, Lcom/android/server/power/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 35
    .line 36
    .line 37
    monitor-exit v3

    .line 38
    goto :goto_0

    .line 39
    :catchall_0
    move-exception p0

    .line 40
    goto :goto_1

    .line 41
    :cond_0
    invoke-virtual {v4, p2}, Landroid/view/DisplayInfo;->hasAccess(I)Z

    .line 42
    .line 43
    .line 44
    move-result v2

    .line 45
    if-eqz v2, :cond_2

    .line 46
    .line 47
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 48
    .line 49
    iget p2, v4, Landroid/view/DisplayInfo;->displayGroupId:I

    .line 50
    .line 51
    invoke-virtual {p0, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 52
    .line 53
    .line 54
    move-result-object p0

    .line 55
    check-cast p0, Lcom/android/server/power/PowerGroup;

    .line 56
    .line 57
    if-nez p0, :cond_1

    .line 58
    .line 59
    const-string p0, "PowerManagerService"

    .line 60
    .line 61
    new-instance p2, Ljava/lang/StringBuilder;

    .line 62
    .line 63
    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 64
    .line 65
    .line 66
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 67
    .line 68
    .line 69
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 70
    .line 71
    .line 72
    move-result-object p1

    .line 73
    invoke-static {p0, p1}, Lcom/android/server/power/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 74
    .line 75
    .line 76
    monitor-exit v3

    .line 77
    goto :goto_0

    .line 78
    :cond_1
    iget p0, p0, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 79
    .line 80
    invoke-static {p0}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 81
    .line 82
    .line 83
    move-result v5

    .line 84
    monitor-exit v3

    .line 85
    :goto_0
    return v5

    .line 86
    :cond_2
    new-instance p0, Ljava/lang/SecurityException;

    .line 87
    .line 88
    new-instance v0, Ljava/lang/StringBuilder;

    .line 89
    .line 90
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 91
    .line 92
    .line 93
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 94
    .line 95
    .line 96
    const-string p2, " does not have access to display "

    .line 97
    .line 98
    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 99
    .line 100
    .line 101
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 102
    .line 103
    .line 104
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 105
    .line 106
    .line 107
    move-result-object p1

    .line 108
    invoke-direct {p0, p1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    .line 109
    .line 110
    .line 111
    throw p0

    .line 112
    :goto_1
    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 113
    throw p0
.end method

.method public static -$$Nest$misWakeLockLevelSupportedInternal(Lcom/android/server/power/PowerManagerService;I)Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    const/4 v1, 0x1

    .line 5
    if-eq p1, v1, :cond_4

    .line 6
    .line 7
    const/4 v2, 0x6

    .line 8
    if-eq p1, v2, :cond_4

    .line 9
    .line 10
    const/16 v2, 0xa

    .line 11
    .line 12
    if-eq p1, v2, :cond_4

    .line 13
    .line 14
    const/16 v2, 0x1a

    .line 15
    .line 16
    if-eq p1, v2, :cond_4

    .line 17
    .line 18
    const/16 v2, 0x20

    .line 19
    .line 20
    const/4 v3, 0x0

    .line 21
    if-eq p1, v2, :cond_2

    .line 22
    .line 23
    const/16 v2, 0x40

    .line 24
    .line 25
    if-eq p1, v2, :cond_4

    .line 26
    .line 27
    const/16 v2, 0x80

    .line 28
    .line 29
    if-eq p1, v2, :cond_4

    .line 30
    .line 31
    const/16 v2, 0x100

    .line 32
    .line 33
    if-eq p1, v2, :cond_0

    .line 34
    .line 35
    :try_start_0
    monitor-exit v0

    .line 36
    move v1, v3

    .line 37
    goto :goto_2

    .line 38
    :catchall_0
    move-exception p0

    .line 39
    goto :goto_3

    .line 40
    :cond_0
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 41
    .line 42
    if-eqz p1, :cond_1

    .line 43
    .line 44
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mFeatureFlags:Lcom/android/server/power/feature/PowerManagerFlags;

    .line 45
    .line 46
    iget-object p1, p1, Lcom/android/server/power/feature/PowerManagerFlags;->mEarlyScreenTimeoutDetectorFlagState:Lcom/android/server/power/feature/PowerManagerFlags$FlagState;

    .line 47
    .line 48
    invoke-virtual {p1}, Lcom/android/server/power/feature/PowerManagerFlags$FlagState;->isEnabled()Z

    .line 49
    .line 50
    .line 51
    move-result p1

    .line 52
    if-eqz p1, :cond_1

    .line 53
    .line 54
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mScreenTimeoutOverridePolicy:Lcom/android/server/power/ScreenTimeoutOverridePolicy;

    .line 55
    .line 56
    if-eqz p0, :cond_1

    .line 57
    .line 58
    goto :goto_0

    .line 59
    :cond_1
    move v1, v3

    .line 60
    :goto_0
    monitor-exit v0

    .line 61
    goto :goto_2

    .line 62
    :cond_2
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 63
    .line 64
    if-eqz p1, :cond_3

    .line 65
    .line 66
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 67
    .line 68
    invoke-virtual {p0}, Landroid/hardware/display/DisplayManagerInternal;->isProximitySensorAvailable()Z

    .line 69
    .line 70
    .line 71
    move-result p0

    .line 72
    if-eqz p0, :cond_3

    .line 73
    .line 74
    goto :goto_1

    .line 75
    :cond_3
    move v1, v3

    .line 76
    :goto_1
    monitor-exit v0

    .line 77
    goto :goto_2

    .line 78
    :cond_4
    monitor-exit v0

    .line 79
    :goto_2
    return v1

    .line 80
    :goto_3
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 81
    throw p0
.end method

.method public static bridge synthetic -$$Nest$mnativeInit(Lcom/android/server/power/PowerManagerService;)V
    .locals 0

    .line 1
    invoke-direct {p0}, Lcom/android/server/power/PowerManagerService;->nativeInit()V

    .line 2
    .line 3
    .line 4
    return-void
.end method

.method public static -$$Nest$mprintWakeLockLocked(Lcom/android/server/power/PowerManagerService;)V
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 2
    .line 3
    const/4 v1, 0x0

    .line 4
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 5
    .line 6
    .line 7
    move-result-object v0

    .line 8
    check-cast v0, Lcom/android/server/power/PowerGroup;

    .line 9
    .line 10
    iget v2, v0, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 11
    .line 12
    iget-object v3, v0, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 13
    .line 14
    iget-boolean v0, v0, Lcom/android/server/power/PowerGroup;->mReady:Z

    .line 15
    .line 16
    iget-boolean v4, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 17
    .line 18
    if-eqz v4, :cond_b

    .line 19
    .line 20
    invoke-virtual {v3}, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isBrightOrDim()Z

    .line 21
    .line 22
    .line 23
    move-result v4

    .line 24
    if-eqz v4, :cond_0

    .line 25
    .line 26
    goto/16 :goto_6

    .line 27
    .line 28
    :cond_0
    const-string v4, "PowerManagerService"

    .line 29
    .line 30
    new-instance v5, Ljava/lang/StringBuilder;

    .line 31
    .line 32
    const-string v6, "[PWL] Off : "

    .line 33
    .line 34
    invoke-direct {v5, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 35
    .line 36
    .line 37
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 38
    .line 39
    monitor-enter v6

    .line 40
    :try_start_0
    iget-object v7, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 41
    .line 42
    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 43
    .line 44
    .line 45
    move-result-object v7

    .line 46
    check-cast v7, Lcom/android/server/power/PowerGroup;

    .line 47
    .line 48
    iget v7, v7, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 49
    .line 50
    invoke-static {v7}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 51
    .line 52
    .line 53
    move-result v7

    .line 54
    if-eqz v7, :cond_1

    .line 55
    .line 56
    monitor-exit v6

    .line 57
    const-wide/16 v6, 0x0

    .line 58
    .line 59
    goto :goto_0

    .line 60
    :catchall_0
    move-exception p0

    .line 61
    goto/16 :goto_5

    .line 62
    .line 63
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 64
    .line 65
    .line 66
    move-result-wide v7

    .line 67
    monitor-exit v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 68
    move-wide v6, v7

    .line 69
    :goto_0
    const-wide/16 v8, 0x3e8

    .line 70
    .line 71
    div-long/2addr v6, v8

    .line 72
    invoke-virtual {v5, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 73
    .line 74
    .line 75
    const-string/jumbo v6, "s ago"

    .line 76
    .line 77
    .line 78
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 79
    .line 80
    .line 81
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 82
    .line 83
    .line 84
    move-result-object v5

    .line 85
    invoke-static {v4, v5}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 86
    .line 87
    .line 88
    iget-object v4, p0, Lcom/android/server/power/PowerManagerService;->mSuspendBlockers:Ljava/util/ArrayList;

    .line 89
    .line 90
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 91
    .line 92
    .line 93
    move-result-object v4

    .line 94
    :cond_2
    :goto_1
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    .line 95
    .line 96
    .line 97
    move-result v5

    .line 98
    if-eqz v5, :cond_d

    .line 99
    .line 100
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 101
    .line 102
    .line 103
    move-result-object v5

    .line 104
    check-cast v5, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 105
    .line 106
    monitor-enter v5

    .line 107
    :try_start_1
    iget v6, v5, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->mReferenceCount:I

    .line 108
    .line 109
    const/4 v7, 0x1

    .line 110
    if-eqz v6, :cond_3

    .line 111
    .line 112
    move v6, v7

    .line 113
    goto :goto_2

    .line 114
    :cond_3
    move v6, v1

    .line 115
    :goto_2
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 116
    if-eqz v6, :cond_2

    .line 117
    .line 118
    const-string v6, "PowerManagerService"

    .line 119
    .line 120
    new-instance v8, Ljava/lang/StringBuilder;

    .line 121
    .line 122
    const-string v9, "[PWL]   "

    .line 123
    .line 124
    invoke-direct {v8, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 125
    .line 126
    .line 127
    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 128
    .line 129
    .line 130
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 131
    .line 132
    .line 133
    move-result-object v8

    .line 134
    invoke-static {v6, v8}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 135
    .line 136
    .line 137
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 138
    .line 139
    invoke-virtual {v5, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    .line 140
    .line 141
    .line 142
    move-result v6

    .line 143
    if-eqz v6, :cond_7

    .line 144
    .line 145
    iget v5, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 146
    .line 147
    and-int/lit8 v5, v5, -0x11

    .line 148
    .line 149
    if-eqz v5, :cond_2

    .line 150
    .line 151
    const-string v5, "PowerManagerService"

    .line 152
    .line 153
    new-instance v6, Ljava/lang/StringBuilder;

    .line 154
    .line 155
    const-string v8, "[PWL]     mWakeLockSummary : 0x"

    .line 156
    .line 157
    invoke-direct {v6, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 158
    .line 159
    .line 160
    iget v8, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 161
    .line 162
    invoke-static {v8}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 163
    .line 164
    .line 165
    move-result-object v8

    .line 166
    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 167
    .line 168
    .line 169
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 170
    .line 171
    .line 172
    move-result-object v6

    .line 173
    invoke-static {v5, v6}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 174
    .line 175
    .line 176
    iget v5, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 177
    .line 178
    and-int/2addr v5, v7

    .line 179
    if-eqz v5, :cond_5

    .line 180
    .line 181
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 182
    .line 183
    invoke-virtual {v5}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 184
    .line 185
    .line 186
    move-result-object v5

    .line 187
    :cond_4
    :goto_3
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    .line 188
    .line 189
    .line 190
    move-result v6

    .line 191
    if-eqz v6, :cond_5

    .line 192
    .line 193
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 194
    .line 195
    .line 196
    move-result-object v6

    .line 197
    check-cast v6, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 198
    .line 199
    iget v7, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 200
    .line 201
    and-int/lit16 v7, v7, 0x81

    .line 202
    .line 203
    if-eqz v7, :cond_4

    .line 204
    .line 205
    const-string v7, "PowerManagerService"

    .line 206
    .line 207
    new-instance v8, Ljava/lang/StringBuilder;

    .line 208
    .line 209
    const-string v9, "[PWL]       "

    .line 210
    .line 211
    invoke-direct {v8, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 212
    .line 213
    .line 214
    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 215
    .line 216
    .line 217
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 218
    .line 219
    .line 220
    move-result-object v6

    .line 221
    invoke-static {v7, v6}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 222
    .line 223
    .line 224
    goto :goto_3

    .line 225
    :cond_5
    iget v5, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 226
    .line 227
    and-int/lit8 v5, v5, -0x2

    .line 228
    .line 229
    if-eqz v5, :cond_2

    .line 230
    .line 231
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 232
    .line 233
    invoke-virtual {v5}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 234
    .line 235
    .line 236
    move-result-object v5

    .line 237
    :cond_6
    :goto_4
    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z

    .line 238
    .line 239
    .line 240
    move-result v6

    .line 241
    if-eqz v6, :cond_2

    .line 242
    .line 243
    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 244
    .line 245
    .line 246
    move-result-object v6

    .line 247
    check-cast v6, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 248
    .line 249
    invoke-static {v6}, Lcom/android/server/power/PowerManagerService;->isScreenLock(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 250
    .line 251
    .line 252
    move-result v7

    .line 253
    if-eqz v7, :cond_6

    .line 254
    .line 255
    const-string v7, "PowerManagerService"

    .line 256
    .line 257
    new-instance v8, Ljava/lang/StringBuilder;

    .line 258
    .line 259
    const-string v9, "[PWL]       "

    .line 260
    .line 261
    invoke-direct {v8, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 262
    .line 263
    .line 264
    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 265
    .line 266
    .line 267
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 268
    .line 269
    .line 270
    move-result-object v6

    .line 271
    invoke-static {v7, v6}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 272
    .line 273
    .line 274
    goto :goto_4

    .line 275
    :cond_7
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mDisplaySuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 276
    .line 277
    invoke-virtual {v5, v6}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    .line 278
    .line 279
    .line 280
    move-result v5

    .line 281
    if-eqz v5, :cond_2

    .line 282
    .line 283
    if-eqz v2, :cond_8

    .line 284
    .line 285
    const-string v5, "PowerManagerService"

    .line 286
    .line 287
    new-instance v6, Ljava/lang/StringBuilder;

    .line 288
    .line 289
    const-string v7, "[PWL]     userActivitySummary : 0x"

    .line 290
    .line 291
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 292
    .line 293
    .line 294
    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 295
    .line 296
    .line 297
    move-result-object v7

    .line 298
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 299
    .line 300
    .line 301
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 302
    .line 303
    .line 304
    move-result-object v6

    .line 305
    invoke-static {v5, v6}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 306
    .line 307
    .line 308
    :cond_8
    iget v5, v3, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 309
    .line 310
    if-eqz v5, :cond_9

    .line 311
    .line 312
    const-string v5, "PowerManagerService"

    .line 313
    .line 314
    new-instance v6, Ljava/lang/StringBuilder;

    .line 315
    .line 316
    const-string v7, "[PWL]     displayPowerRequest.policy : "

    .line 317
    .line 318
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 319
    .line 320
    .line 321
    iget v7, v3, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 322
    .line 323
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 324
    .line 325
    .line 326
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 327
    .line 328
    .line 329
    move-result-object v6

    .line 330
    invoke-static {v5, v6}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 331
    .line 332
    .line 333
    :cond_9
    if-nez v0, :cond_a

    .line 334
    .line 335
    const-string v5, "PowerManagerService"

    .line 336
    .line 337
    new-instance v6, Ljava/lang/StringBuilder;

    .line 338
    .line 339
    const-string v7, "[PWL]     displayReady : "

    .line 340
    .line 341
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 342
    .line 343
    .line 344
    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 345
    .line 346
    .line 347
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 348
    .line 349
    .line 350
    move-result-object v6

    .line 351
    invoke-static {v5, v6}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 352
    .line 353
    .line 354
    :cond_a
    iget-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 355
    .line 356
    if-nez v5, :cond_2

    .line 357
    .line 358
    const-string v5, "PowerManagerService"

    .line 359
    .line 360
    new-instance v6, Ljava/lang/StringBuilder;

    .line 361
    .line 362
    const-string v7, "[PWL]     mBootCompleted : "

    .line 363
    .line 364
    invoke-direct {v6, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 365
    .line 366
    .line 367
    iget-boolean v7, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 368
    .line 369
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 370
    .line 371
    .line 372
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 373
    .line 374
    .line 375
    move-result-object v6

    .line 376
    invoke-static {v5, v6}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 377
    .line 378
    .line 379
    goto/16 :goto_1

    .line 380
    .line 381
    :catchall_1
    move-exception p0

    .line 382
    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 383
    throw p0

    .line 384
    :goto_5
    :try_start_3
    monitor-exit v6
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 385
    throw p0

    .line 386
    :cond_b
    :goto_6
    const-string v0, "PowerManagerService"

    .line 387
    .line 388
    new-instance v1, Ljava/lang/StringBuilder;

    .line 389
    .line 390
    const-string v3, "[PWL] On : "

    .line 391
    .line 392
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 393
    .line 394
    .line 395
    iget-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mLastGlobalWakeTime:J

    .line 396
    .line 397
    invoke-static {v3, v4}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 398
    .line 399
    .line 400
    move-result-object v3

    .line 401
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 402
    .line 403
    .line 404
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 405
    .line 406
    .line 407
    move-result-object v1

    .line 408
    invoke-static {v0, v1}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 409
    .line 410
    .line 411
    const-string v0, "PowerManagerService"

    .line 412
    .line 413
    new-instance v1, Ljava/lang/StringBuilder;

    .line 414
    .line 415
    const-string v3, "[PWL]  mStayOn: "

    .line 416
    .line 417
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 418
    .line 419
    .line 420
    iget-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 421
    .line 422
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 423
    .line 424
    .line 425
    const-string v3, "  mWakeLockSummary & WAKE_LOCK_STAY_AWAKE: "

    .line 426
    .line 427
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 428
    .line 429
    .line 430
    iget v3, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 431
    .line 432
    and-int/lit8 v3, v3, 0x20

    .line 433
    .line 434
    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 435
    .line 436
    .line 437
    move-result-object v3

    .line 438
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 439
    .line 440
    .line 441
    const-string v3, "  mUserActivitySummary: 0x"

    .line 442
    .line 443
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 444
    .line 445
    .line 446
    invoke-static {v2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 447
    .line 448
    .line 449
    move-result-object v2

    .line 450
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 451
    .line 452
    .line 453
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 454
    .line 455
    .line 456
    move-result-object v1

    .line 457
    invoke-static {v0, v1}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 458
    .line 459
    .line 460
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 461
    .line 462
    and-int/lit8 v0, v0, 0x20

    .line 463
    .line 464
    if-eqz v0, :cond_d

    .line 465
    .line 466
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 467
    .line 468
    invoke-virtual {p0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 469
    .line 470
    .line 471
    move-result-object p0

    .line 472
    :cond_c
    :goto_7
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 473
    .line 474
    .line 475
    move-result v0

    .line 476
    if-eqz v0, :cond_d

    .line 477
    .line 478
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 479
    .line 480
    .line 481
    move-result-object v0

    .line 482
    check-cast v0, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 483
    .line 484
    invoke-static {v0}, Lcom/android/server/power/PowerManagerService;->isScreenLock(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 485
    .line 486
    .line 487
    move-result v1

    .line 488
    if-eqz v1, :cond_c

    .line 489
    .line 490
    const-string v1, "PowerManagerService"

    .line 491
    .line 492
    new-instance v2, Ljava/lang/StringBuilder;

    .line 493
    .line 494
    const-string v3, "[PWL]  "

    .line 495
    .line 496
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 497
    .line 498
    .line 499
    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 500
    .line 501
    .line 502
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 503
    .line 504
    .line 505
    move-result-object v0

    .line 506
    invoke-static {v1, v0}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 507
    .line 508
    .line 509
    goto :goto_7

    .line 510
    :cond_d
    return-void
.end method

.method public static -$$Nest$mreleaseWakeLockInternal(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;I)V
    .locals 16

    .line 1
    move-object/from16 v1, p0

    .line 2
    .line 3
    const-string v0, "[api] release WakeLock "

    .line 4
    .line 5
    iget-object v2, v1, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 6
    .line 7
    monitor-enter v2

    .line 8
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/PowerManagerService;->findWakeLockIndexLocked(Landroid/os/IBinder;)I

    .line 9
    .line 10
    .line 11
    move-result v3

    .line 12
    if-gez v3, :cond_0

    .line 13
    .line 14
    monitor-exit v2

    .line 15
    goto/16 :goto_3

    .line 16
    .line 17
    :catchall_0
    move-exception v0

    .line 18
    goto/16 :goto_4

    .line 19
    .line 20
    :cond_0
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 21
    .line 22
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 23
    .line 24
    .line 25
    move-result-object v4

    .line 26
    check-cast v4, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 27
    .line 28
    const/4 v5, 0x1

    .line 29
    and-int/lit8 v6, p2, 0x1

    .line 30
    .line 31
    if-eqz v6, :cond_1

    .line 32
    .line 33
    iput-boolean v5, v1, Lcom/android/server/power/PowerManagerService;->mRequestWaitForNegativeProximity:Z

    .line 34
    .line 35
    :cond_1
    iget-object v7, v1, Lcom/android/server/power/PowerManagerService;->mPowerHistorian:Lcom/android/server/power/PowerHistorian;

    .line 36
    .line 37
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 38
    .line 39
    .line 40
    iget v8, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 41
    .line 42
    const v9, 0xffff

    .line 43
    .line 44
    .line 45
    and-int/2addr v8, v9

    .line 46
    const/4 v10, 0x0

    .line 47
    const/16 v11, 0x1a

    .line 48
    .line 49
    const/16 v12, 0xa

    .line 50
    .line 51
    const/4 v13, 0x6

    .line 52
    if-eq v8, v13, :cond_2

    .line 53
    .line 54
    if-eq v8, v12, :cond_2

    .line 55
    .line 56
    if-eq v8, v11, :cond_2

    .line 57
    .line 58
    move/from16 p2, v6

    .line 59
    .line 60
    goto :goto_0

    .line 61
    :cond_2
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 62
    .line 63
    .line 64
    move-result-wide v14

    .line 65
    move/from16 p2, v6

    .line 66
    .line 67
    iget-wide v5, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mAcquireTime:J

    .line 68
    .line 69
    sub-long/2addr v14, v5

    .line 70
    const-wide/32 v5, 0xea60

    .line 71
    .line 72
    .line 73
    cmp-long v5, v14, v5

    .line 74
    .line 75
    if-gez v5, :cond_3

    .line 76
    .line 77
    goto :goto_0

    .line 78
    :cond_3
    new-instance v5, Lcom/android/server/power/PowerHistorian$WakeLockReleaseRecord;

    .line 79
    .line 80
    invoke-direct {v5, v4, v14, v15}, Lcom/android/server/power/PowerHistorian$WakeLockReleaseRecord;-><init>(Lcom/android/server/power/PowerManagerService$WakeLock;J)V

    .line 81
    .line 82
    .line 83
    invoke-virtual {v7, v10, v5}, Lcom/android/server/power/PowerHistorian;->addRecord(ILcom/android/server/power/PowerHistorian$Record;)V

    .line 84
    .line 85
    .line 86
    :goto_0
    iget v5, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 87
    .line 88
    and-int/2addr v5, v9

    .line 89
    if-eq v5, v13, :cond_4

    .line 90
    .line 91
    if-eq v5, v12, :cond_4

    .line 92
    .line 93
    if-eq v5, v11, :cond_4

    .line 94
    .line 95
    const/16 v6, 0x20

    .line 96
    .line 97
    if-eq v5, v6, :cond_4

    .line 98
    .line 99
    const/16 v6, 0x40

    .line 100
    .line 101
    if-eq v5, v6, :cond_4

    .line 102
    .line 103
    const/16 v6, 0x80

    .line 104
    .line 105
    if-eq v5, v6, :cond_4

    .line 106
    .line 107
    goto :goto_1

    .line 108
    :cond_4
    const-string v5, ""

    .line 109
    .line 110
    if-eqz p2, :cond_5

    .line 111
    .line 112
    const-string v5, " (WAIT_FOR_NO_PROXIMITY)"

    .line 113
    .line 114
    :cond_5
    const-string v6, "PowerManagerService"

    .line 115
    .line 116
    new-instance v7, Ljava/lang/StringBuilder;

    .line 117
    .line 118
    invoke-direct {v7, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 119
    .line 120
    .line 121
    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 122
    .line 123
    .line 124
    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 125
    .line 126
    .line 127
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 128
    .line 129
    .line 130
    move-result-object v0

    .line 131
    invoke-static {v6, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 132
    .line 133
    .line 134
    :goto_1
    :try_start_1
    iget-object v0, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mLock:Landroid/os/IBinder;

    .line 135
    .line 136
    invoke-interface {v0, v4, v10}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_1
    .catch Ljava/util/NoSuchElementException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 137
    .line 138
    .line 139
    goto :goto_2

    .line 140
    :catch_0
    move-exception v0

    .line 141
    :try_start_2
    sget v5, Lcom/android/server/power/Slog;->$r8$clinit:I

    .line 142
    .line 143
    const-string v5, "PowerManagerService"

    .line 144
    .line 145
    const-string v6, "Failed to unlink Wakelock.mLock"

    .line 146
    .line 147
    invoke-static {v5, v6, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 148
    .line 149
    .line 150
    :goto_2
    iget-boolean v0, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 151
    .line 152
    const/4 v5, 0x1

    .line 153
    if-eq v0, v5, :cond_6

    .line 154
    .line 155
    iput-boolean v5, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 156
    .line 157
    iput v10, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisableReason:I

    .line 158
    .line 159
    :cond_6
    const/4 v0, -0x1

    .line 160
    invoke-virtual {v1, v4, v3, v0}, Lcom/android/server/power/PowerManagerService;->removeWakeLockNoUpdateLocked(Lcom/android/server/power/PowerManagerService$WakeLock;II)V

    .line 161
    .line 162
    .line 163
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 164
    .line 165
    .line 166
    monitor-exit v2

    .line 167
    :goto_3
    return-void

    .line 168
    :goto_4
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 169
    throw v0
.end method

.method public static -$$Nest$msetDozeOverrideFromDreamManagerInternal(Lcom/android/server/power/PowerManagerService;IIIZ)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideFromDreamManager:I

    .line 5
    .line 6
    if-ne v1, p1, :cond_0

    .line 7
    .line 8
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManager:I

    .line 9
    .line 10
    if-ne v1, p3, :cond_0

    .line 11
    .line 12
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mShouldWaitForTransitionToAodUi:Z

    .line 13
    .line 14
    if-eq v1, p4, :cond_1

    .line 15
    .line 16
    goto :goto_0

    .line 17
    :catchall_0
    move-exception p0

    .line 18
    goto :goto_1

    .line 19
    :cond_0
    :goto_0
    iput p1, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideFromDreamManager:I

    .line 20
    .line 21
    iput p2, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideReasonFromDreamManager:I

    .line 22
    .line 23
    iput p3, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManager:I

    .line 24
    .line 25
    invoke-static {p3}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    .line 26
    .line 27
    .line 28
    move-result p1

    .line 29
    iput p1, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManagerFloat:F

    .line 30
    .line 31
    iput-boolean p4, p0, Lcom/android/server/power/PowerManagerService;->mShouldWaitForTransitionToAodUi:Z

    .line 32
    .line 33
    iget p1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 34
    .line 35
    or-int/lit8 p1, p1, 0x20

    .line 36
    .line 37
    iput p1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 38
    .line 39
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 40
    .line 41
    .line 42
    :cond_1
    monitor-exit v0

    .line 43
    return-void

    .line 44
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 45
    throw p0
.end method

.method public static -$$Nest$msetHdrBrightnessLimitInternal(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;IIII)V
    .locals 14

    .line 1
    move-object v0, p0

    .line 2
    move/from16 v8, p2

    .line 3
    .line 4
    move/from16 v9, p3

    .line 5
    .line 6
    const-string v1, "[api] setHdrBrightnessLimit : upperLimit : "

    .line 7
    .line 8
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 9
    .line 10
    monitor-enter v10

    .line 11
    :try_start_0
    const-string v2, "PowerManagerService"

    .line 12
    .line 13
    new-instance v3, Ljava/lang/StringBuilder;

    .line 14
    .line 15
    invoke-direct {v3, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 16
    .line 17
    .line 18
    invoke-virtual {v3, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 19
    .line 20
    .line 21
    const-string v1, "  brightnessLimitPeriod : "

    .line 22
    .line 23
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24
    .line 25
    .line 26
    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 27
    .line 28
    .line 29
    const/4 v11, 0x0

    .line 30
    invoke-static {v11}, Lcom/android/server/power/PowerManagerUtil;->callerInfoToString(Z)Ljava/lang/String;

    .line 31
    .line 32
    .line 33
    move-result-object v1

    .line 34
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 35
    .line 36
    .line 37
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 38
    .line 39
    .line 40
    move-result-object v1

    .line 41
    invoke-static {v2, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 42
    .line 43
    .line 44
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 45
    .line 46
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 47
    .line 48
    .line 49
    move-result v1

    .line 50
    move v2, v11

    .line 51
    :goto_0
    const/4 v12, -0x1

    .line 52
    if-ge v2, v1, :cond_1

    .line 53
    .line 54
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 55
    .line 56
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 57
    .line 58
    .line 59
    move-result-object v3

    .line 60
    check-cast v3, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;

    .line 61
    .line 62
    iget-object v3, v3, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;->mLock:Landroid/os/IBinder;

    .line 63
    .line 64
    move-object v4, p1

    .line 65
    if-ne v3, v4, :cond_0

    .line 66
    .line 67
    goto :goto_1

    .line 68
    :cond_0
    add-int/lit8 v2, v2, 0x1

    .line 69
    .line 70
    goto :goto_0

    .line 71
    :cond_1
    move-object v4, p1

    .line 72
    move v2, v12

    .line 73
    :goto_1
    if-eq v8, v12, :cond_3

    .line 74
    .line 75
    if-ltz v2, :cond_2

    .line 76
    .line 77
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 78
    .line 79
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 80
    .line 81
    .line 82
    move-result-object v1

    .line 83
    check-cast v1, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;

    .line 84
    .line 85
    iput v8, v1, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;->mUpperLimit:I

    .line 86
    .line 87
    iput v9, v1, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;->mBrightnessLimitPeriod:I

    .line 88
    .line 89
    goto :goto_2

    .line 90
    :catchall_0
    move-exception v0

    .line 91
    goto/16 :goto_5

    .line 92
    .line 93
    :cond_2
    new-instance v13, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;

    .line 94
    .line 95
    move-object v1, v13

    .line 96
    move-object v2, p0

    .line 97
    move-object v3, p1

    .line 98
    move/from16 v4, p2

    .line 99
    .line 100
    move/from16 v5, p3

    .line 101
    .line 102
    move/from16 v6, p4

    .line 103
    .line 104
    move/from16 v7, p5

    .line 105
    .line 106
    invoke-direct/range {v1 .. v7}, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;IIII)V

    .line 107
    .line 108
    .line 109
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 110
    .line 111
    invoke-virtual {v1, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 112
    .line 113
    .line 114
    goto :goto_2

    .line 115
    :cond_3
    if-ltz v2, :cond_4

    .line 116
    .line 117
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 118
    .line 119
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 120
    .line 121
    .line 122
    :cond_4
    :goto_2
    invoke-virtual {p0, v8, v9}, Lcom/android/server/power/PowerManagerService;->calculateHdrBrightnessLimitLocked(II)V

    .line 123
    .line 124
    .line 125
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitPeriod:I

    .line 126
    .line 127
    if-lez v1, :cond_7

    .line 128
    .line 129
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessUpperLimit:I

    .line 130
    .line 131
    if-eq v1, v12, :cond_5

    .line 132
    .line 133
    goto :goto_3

    .line 134
    :cond_5
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenExtendedBrightnessMaximum:I

    .line 135
    .line 136
    :goto_3
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForHdrLimit:I

    .line 137
    .line 138
    iget v2, v0, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfHdrBrightness:I

    .line 139
    .line 140
    invoke-virtual {p0, v1, v2}, Lcom/android/server/power/PowerManagerService;->getStartingLimitationOfBrightness(II)I

    .line 141
    .line 142
    .line 143
    move-result v1

    .line 144
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfHdrBrightness:I

    .line 145
    .line 146
    iget v2, v0, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForHdrLimit:I

    .line 147
    .line 148
    if-ne v2, v1, :cond_6

    .line 149
    .line 150
    iput-boolean v11, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunning:Z

    .line 151
    .line 152
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 153
    .line 154
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 155
    .line 156
    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 157
    .line 158
    .line 159
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 160
    .line 161
    or-int/lit8 v1, v1, 0x20

    .line 162
    .line 163
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 164
    .line 165
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 166
    .line 167
    .line 168
    goto :goto_4

    .line 169
    :cond_6
    const/4 v1, 0x1

    .line 170
    iput-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunning:Z

    .line 171
    .line 172
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 173
    .line 174
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 175
    .line 176
    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 177
    .line 178
    .line 179
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 180
    .line 181
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 182
    .line 183
    iget-object v0, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 184
    .line 185
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 186
    .line 187
    .line 188
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 189
    .line 190
    .line 191
    move-result-wide v3

    .line 192
    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 193
    .line 194
    .line 195
    goto :goto_4

    .line 196
    :cond_7
    iput-boolean v11, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunning:Z

    .line 197
    .line 198
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessUpperLimit:I

    .line 199
    .line 200
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfHdrBrightness:I

    .line 201
    .line 202
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 203
    .line 204
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 205
    .line 206
    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 207
    .line 208
    .line 209
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 210
    .line 211
    or-int/lit8 v1, v1, 0x20

    .line 212
    .line 213
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 214
    .line 215
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 216
    .line 217
    .line 218
    :goto_4
    monitor-exit v10

    .line 219
    return-void

    .line 220
    :goto_5
    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 221
    throw v0
.end method

.method public static -$$Nest$msetLowPowerModeInternal(Lcom/android/server/power/PowerManagerService;Z)V
    .locals 4

    .line 1
    const-string/jumbo v0, "setLowPowerModeInternal "

    .line 2
    .line 3
    .line 4
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 5
    .line 6
    monitor-enter v1

    .line 7
    :try_start_0
    const-string v2, "PowerManagerService"

    .line 8
    .line 9
    new-instance v3, Ljava/lang/StringBuilder;

    .line 10
    .line 11
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 12
    .line 13
    .line 14
    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 15
    .line 16
    .line 17
    const-string v0, " mIsPowered="

    .line 18
    .line 19
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 20
    .line 21
    .line 22
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 23
    .line 24
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 25
    .line 26
    .line 27
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 28
    .line 29
    .line 30
    move-result-object v0

    .line 31
    invoke-static {v2, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 32
    .line 33
    .line 34
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 35
    .line 36
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 37
    .line 38
    .line 39
    const-string v0, "BatterySaverStateMachine"

    .line 40
    .line 41
    new-instance v2, Ljava/lang/StringBuilder;

    .line 42
    .line 43
    const-string/jumbo v3, "setBatterySaverEnabledManually: enabled="

    .line 44
    .line 45
    .line 46
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 47
    .line 48
    .line 49
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 50
    .line 51
    .line 52
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 53
    .line 54
    .line 55
    move-result-object v2

    .line 56
    invoke-static {v0, v2}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 57
    .line 58
    .line 59
    iget-object v0, p0, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mLock:Ljava/lang/Object;

    .line 60
    .line 61
    monitor-enter v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 62
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->updateStateLocked(Z)V

    .line 63
    .line 64
    .line 65
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 66
    :try_start_2
    monitor-exit v1
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 67
    return-void

    .line 68
    :catchall_0
    move-exception p0

    .line 69
    goto :goto_0

    .line 70
    :catchall_1
    move-exception p0

    .line 71
    :try_start_3
    monitor-exit v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 72
    :try_start_4
    throw p0

    .line 73
    :goto_0
    monitor-exit v1
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 74
    throw p0
.end method

.method public static -$$Nest$msetScreenOffTimeoutForBatterySaver(Lcom/android/server/power/PowerManagerService;)V
    .locals 4

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 6
    .line 7
    iget-object v0, v0, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mBatterySaverController:Lcom/android/server/power/batterysaver/BatterySaverController;

    .line 8
    .line 9
    invoke-virtual {v0}, Lcom/android/server/power/batterysaver/BatterySaverController;->isEnabled()Z

    .line 10
    .line 11
    .line 12
    move-result v0

    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mBatterySavingScreenOffTimeoutSetting:J

    .line 16
    .line 17
    const-wide/16 v2, 0x0

    .line 18
    .line 19
    cmp-long v0, v0, v2

    .line 20
    .line 21
    if-lez v0, :cond_0

    .line 22
    .line 23
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 24
    .line 25
    const-wide/16 v2, 0x7530

    .line 26
    .line 27
    cmp-long v0, v0, v2

    .line 28
    .line 29
    if-eqz v0, :cond_0

    .line 30
    .line 31
    new-instance v0, Ljava/lang/StringBuilder;

    .line 32
    .line 33
    const-string/jumbo v1, "setScreenOffTimeoutForBatterySaver: backup_screen_off_timeout = "

    .line 34
    .line 35
    .line 36
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 37
    .line 38
    .line 39
    iget-wide v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 40
    .line 41
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 42
    .line 43
    .line 44
    const-string v1, ", SCREEN_OFF_TIMEOUT = 30000"

    .line 45
    .line 46
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 47
    .line 48
    .line 49
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 50
    .line 51
    .line 52
    move-result-object v0

    .line 53
    const-string v1, "PowerManagerService"

    .line 54
    .line 55
    invoke-static {v1, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 56
    .line 57
    .line 58
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 59
    .line 60
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 61
    .line 62
    .line 63
    move-result-object v0

    .line 64
    iget-wide v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 65
    .line 66
    long-to-int v1, v1

    .line 67
    const-string v2, "backup_screen_off_timeout"

    .line 68
    .line 69
    const/4 v3, -0x2

    .line 70
    invoke-static {v0, v2, v1, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 71
    .line 72
    .line 73
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 74
    .line 75
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 76
    .line 77
    .line 78
    move-result-object p0

    .line 79
    const-string/jumbo v0, "screen_off_timeout"

    .line 80
    .line 81
    .line 82
    const/16 v1, 0x7530

    .line 83
    .line 84
    invoke-static {p0, v0, v1, v3}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 85
    .line 86
    .line 87
    :cond_0
    return-void
.end method

.method public static -$$Nest$mshutdownOrRebootInternal(Lcom/android/server/power/PowerManagerService;IZLjava/lang/String;Z)V
    .locals 2

    .line 1
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 2
    .line 3
    .line 4
    const-string/jumbo v0, "userspace"

    .line 5
    .line 6
    .line 7
    invoke-virtual {v0, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 8
    .line 9
    .line 10
    move-result v0

    .line 11
    if-eqz v0, :cond_2

    .line 12
    .line 13
    invoke-static {}, Landroid/os/PowerManager;->isRebootingUserspaceSupportedImpl()Z

    .line 14
    .line 15
    .line 16
    move-result v0

    .line 17
    if-eqz v0, :cond_1

    .line 18
    .line 19
    invoke-static {}, Landroid/os/PowerManager;->isRebootingUserspaceSupportedImpl()Z

    .line 20
    .line 21
    .line 22
    move-result v0

    .line 23
    if-nez v0, :cond_0

    .line 24
    .line 25
    const-string v0, "UserspaceRebootLogger"

    .line 26
    .line 27
    const-string/jumbo v1, "noteUserspaceRebootWasRequested: Userspace reboot is not supported."

    .line 28
    .line 29
    .line 30
    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 31
    .line 32
    .line 33
    goto :goto_0

    .line 34
    :cond_0
    const-string/jumbo v0, "persist.sys.userspace_reboot.log.should_log"

    .line 35
    .line 36
    .line 37
    const-string v1, "1"

    .line 38
    .line 39
    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 40
    .line 41
    .line 42
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 43
    .line 44
    .line 45
    move-result-wide v0

    .line 46
    invoke-static {v0, v1}, Ljava/lang/String;->valueOf(J)Ljava/lang/String;

    .line 47
    .line 48
    .line 49
    move-result-object v0

    .line 50
    const-string/jumbo v1, "sys.userspace_reboot.log.last_started"

    .line 51
    .line 52
    .line 53
    invoke-static {v1, v0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 54
    .line 55
    .line 56
    goto :goto_0

    .line 57
    :cond_1
    new-instance p0, Ljava/lang/UnsupportedOperationException;

    .line 58
    .line 59
    const-string p1, "Attempted userspace reboot on a device that doesn\'t support it"

    .line 60
    .line 61
    invoke-direct {p0, p1}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    .line 62
    .line 63
    .line 64
    throw p0

    .line 65
    :cond_2
    :goto_0
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 66
    .line 67
    if-eqz v0, :cond_3

    .line 68
    .line 69
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 70
    .line 71
    if-nez v0, :cond_6

    .line 72
    .line 73
    :cond_3
    sget v0, Lcom/android/server/RescueParty;->LEVEL_ISRB_BOOT:I

    .line 74
    .line 75
    invoke-static {}, Landroid/sysprop/CrashRecoveryProperties;->attemptingFactoryReset()Ljava/util/Optional;

    .line 76
    .line 77
    .line 78
    move-result-object v0

    .line 79
    sget-object v1, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 80
    .line 81
    invoke-virtual {v0, v1}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    .line 82
    .line 83
    .line 84
    move-result-object v0

    .line 85
    check-cast v0, Ljava/lang/Boolean;

    .line 86
    .line 87
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    .line 88
    .line 89
    .line 90
    move-result v0

    .line 91
    if-nez v0, :cond_5

    .line 92
    .line 93
    invoke-static {}, Lcom/android/server/RescueParty;->isRebootPropertySet()Z

    .line 94
    .line 95
    .line 96
    move-result v0

    .line 97
    if-eqz v0, :cond_4

    .line 98
    .line 99
    goto :goto_1

    .line 100
    :cond_4
    new-instance p0, Ljava/lang/IllegalStateException;

    .line 101
    .line 102
    const-string p1, "Too early to call shutdown() or reboot()"

    .line 103
    .line 104
    invoke-direct {p0, p1}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    .line 105
    .line 106
    .line 107
    throw p0

    .line 108
    :cond_5
    :goto_1
    invoke-static {p3}, Lcom/android/server/power/PowerManagerService;->lowLevelReboot(Ljava/lang/String;)V

    .line 109
    .line 110
    .line 111
    :cond_6
    new-instance v0, Lcom/android/server/power/PowerManagerService$4;

    .line 112
    .line 113
    invoke-direct {v0, p0, p3, p1, p2}, Lcom/android/server/power/PowerManagerService$4;-><init>(Lcom/android/server/power/PowerManagerService;Ljava/lang/String;IZ)V

    .line 114
    .line 115
    .line 116
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    .line 117
    .line 118
    .line 119
    move-result-object p0

    .line 120
    invoke-static {p0, v0}, Landroid/os/Message;->obtain(Landroid/os/Handler;Ljava/lang/Runnable;)Landroid/os/Message;

    .line 121
    .line 122
    .line 123
    move-result-object p0

    .line 124
    const/4 p1, 0x1

    .line 125
    invoke-virtual {p0, p1}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 126
    .line 127
    .line 128
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    .line 129
    .line 130
    .line 131
    move-result-object p1

    .line 132
    invoke-virtual {p1, p0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 133
    .line 134
    .line 135
    if-eqz p4, :cond_7

    .line 136
    .line 137
    monitor-enter v0

    .line 138
    :catch_0
    :goto_2
    :try_start_0
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 139
    .line 140
    .line 141
    goto :goto_2

    .line 142
    :catchall_0
    move-exception p0

    .line 143
    :try_start_1
    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 144
    throw p0

    .line 145
    :cond_7
    return-void
.end method

.method public static -$$Nest$mupdateWakeLockCallbackInternal(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;Landroid/os/IWakeLockCallback;I)V
    .locals 12

    .line 1
    const-string v0, "Wake lock not active: "

    .line 2
    .line 3
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 4
    .line 5
    monitor-enter v1

    .line 6
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->findWakeLockIndexLocked(Landroid/os/IBinder;)I

    .line 7
    .line 8
    .line 9
    move-result v2

    .line 10
    if-ltz v2, :cond_2

    .line 11
    .line 12
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 13
    .line 14
    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 15
    .line 16
    .line 17
    move-result-object p1

    .line 18
    check-cast p1, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 19
    .line 20
    iget-object p3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mCallback:Landroid/os/IWakeLockCallback;

    .line 21
    .line 22
    if-ne p2, p3, :cond_0

    .line 23
    .line 24
    goto :goto_0

    .line 25
    :cond_0
    if-eqz p2, :cond_1

    .line 26
    .line 27
    if-eqz p3, :cond_1

    .line 28
    .line 29
    invoke-interface {p2}, Landroid/os/IWakeLockCallback;->asBinder()Landroid/os/IBinder;

    .line 30
    .line 31
    .line 32
    move-result-object v0

    .line 33
    invoke-interface {p3}, Landroid/os/IWakeLockCallback;->asBinder()Landroid/os/IBinder;

    .line 34
    .line 35
    .line 36
    move-result-object p3

    .line 37
    if-ne v0, p3, :cond_1

    .line 38
    .line 39
    goto :goto_0

    .line 40
    :cond_1
    iget v4, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 41
    .line 42
    iget-object v5, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 43
    .line 44
    iget-object v6, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 45
    .line 46
    iget v7, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 47
    .line 48
    iget v8, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerPid:I

    .line 49
    .line 50
    iget-object v9, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 51
    .line 52
    iget-object v10, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mHistoryTag:Ljava/lang/String;

    .line 53
    .line 54
    move-object v2, p0

    .line 55
    move-object v3, p1

    .line 56
    move-object v11, p2

    .line 57
    invoke-virtual/range {v2 .. v11}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockChangingLocked(Lcom/android/server/power/PowerManagerService$WakeLock;ILjava/lang/String;Ljava/lang/String;IILandroid/os/WorkSource;Ljava/lang/String;Landroid/os/IWakeLockCallback;)V

    .line 58
    .line 59
    .line 60
    iput-object p2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mCallback:Landroid/os/IWakeLockCallback;

    .line 61
    .line 62
    :goto_0
    monitor-exit v1

    .line 63
    return-void

    .line 64
    :catchall_0
    move-exception p0

    .line 65
    goto :goto_1

    .line 66
    :cond_2
    new-instance p0, Ljava/lang/IllegalArgumentException;

    .line 67
    .line 68
    new-instance p2, Ljava/lang/StringBuilder;

    .line 69
    .line 70
    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 71
    .line 72
    .line 73
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 74
    .line 75
    .line 76
    const-string p1, " from uid "

    .line 77
    .line 78
    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 79
    .line 80
    .line 81
    invoke-virtual {p2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 82
    .line 83
    .line 84
    invoke-virtual {p2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 85
    .line 86
    .line 87
    move-result-object p1

    .line 88
    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 89
    .line 90
    .line 91
    throw p0

    .line 92
    :goto_1
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 93
    throw p0
.end method

.method public static -$$Nest$mupdateWakeLockWorkSourceInternal(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;Landroid/os/WorkSource;Ljava/lang/String;I)V
    .locals 14

    .line 1
    move-object v0, p0

    .line 2
    move-object/from16 v11, p2

    .line 3
    .line 4
    const-string v1, "Wake lock not active: "

    .line 5
    .line 6
    iget-object v12, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 7
    .line 8
    monitor-enter v12

    .line 9
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->findWakeLockIndexLocked(Landroid/os/IBinder;)I

    .line 10
    .line 11
    .line 12
    move-result v2

    .line 13
    if-ltz v2, :cond_2

    .line 14
    .line 15
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 16
    .line 17
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 18
    .line 19
    .line 20
    move-result-object v1

    .line 21
    move-object v13, v1

    .line 22
    check-cast v13, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 23
    .line 24
    iget-object v1, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 25
    .line 26
    invoke-static {v1, v11}, Ljava/util/Objects;->equals(Ljava/lang/Object;Ljava/lang/Object;)Z

    .line 27
    .line 28
    .line 29
    move-result v1

    .line 30
    if-nez v1, :cond_1

    .line 31
    .line 32
    iget v3, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 33
    .line 34
    iget-object v4, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 35
    .line 36
    iget-object v5, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 37
    .line 38
    iget v6, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 39
    .line 40
    iget v7, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerPid:I

    .line 41
    .line 42
    const/4 v10, 0x0

    .line 43
    move-object v1, p0

    .line 44
    move-object v2, v13

    .line 45
    move-object/from16 v8, p2

    .line 46
    .line 47
    move-object/from16 v9, p3

    .line 48
    .line 49
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockChangingLocked(Lcom/android/server/power/PowerManagerService$WakeLock;ILjava/lang/String;Ljava/lang/String;IILandroid/os/WorkSource;Ljava/lang/String;Landroid/os/IWakeLockCallback;)V

    .line 50
    .line 51
    .line 52
    move-object/from16 v0, p3

    .line 53
    .line 54
    iput-object v0, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mHistoryTag:Ljava/lang/String;

    .line 55
    .line 56
    if-eqz v11, :cond_0

    .line 57
    .line 58
    new-instance v0, Landroid/os/WorkSource;

    .line 59
    .line 60
    invoke-direct {v0, v11}, Landroid/os/WorkSource;-><init>(Landroid/os/WorkSource;)V

    .line 61
    .line 62
    .line 63
    goto :goto_0

    .line 64
    :cond_0
    const/4 v0, 0x0

    .line 65
    :goto_0
    iput-object v0, v13, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 66
    .line 67
    goto :goto_1

    .line 68
    :catchall_0
    move-exception v0

    .line 69
    goto :goto_2

    .line 70
    :cond_1
    :goto_1
    monitor-exit v12

    .line 71
    return-void

    .line 72
    :cond_2
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 73
    .line 74
    new-instance v2, Ljava/lang/StringBuilder;

    .line 75
    .line 76
    invoke-direct {v2, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 77
    .line 78
    .line 79
    move-object v1, p1

    .line 80
    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 81
    .line 82
    .line 83
    const-string v1, " from uid "

    .line 84
    .line 85
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 86
    .line 87
    .line 88
    move/from16 v1, p4

    .line 89
    .line 90
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 91
    .line 92
    .line 93
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 94
    .line 95
    .line 96
    move-result-object v1

    .line 97
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 98
    .line 99
    .line 100
    throw v0

    .line 101
    :goto_2
    monitor-exit v12
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 102
    throw v0
.end method

.method public static -$$Nest$smcallerInfoWithProcessName()Ljava/lang/String;
    .locals 7

    .line 1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    .line 6
    .line 7
    .line 8
    move-result v1

    .line 9
    const/4 v2, 0x0

    .line 10
    :try_start_0
    new-instance v3, Ljava/io/BufferedReader;

    .line 11
    .line 12
    new-instance v4, Ljava/io/FileReader;

    .line 13
    .line 14
    const-string v5, "/proc/%d/cmdline"

    .line 15
    .line 16
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 17
    .line 18
    .line 19
    move-result-object v6

    .line 20
    filled-new-array {v6}, [Ljava/lang/Object;

    .line 21
    .line 22
    .line 23
    move-result-object v6

    .line 24
    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 25
    .line 26
    .line 27
    move-result-object v5

    .line 28
    invoke-direct {v4, v5}, Ljava/io/FileReader;-><init>(Ljava/lang/String;)V

    .line 29
    .line 30
    .line 31
    invoke-direct {v3, v4}, Ljava/io/BufferedReader;-><init>(Ljava/io/Reader;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 32
    .line 33
    .line 34
    :try_start_1
    invoke-virtual {v3}, Ljava/io/BufferedReader;->readLine()Ljava/lang/String;

    .line 35
    .line 36
    .line 37
    move-result-object v4

    .line 38
    if-eqz v4, :cond_0

    .line 39
    .line 40
    const-string v5, "\u0000"

    .line 41
    .line 42
    invoke-virtual {v4, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    .line 43
    .line 44
    .line 45
    move-result-object v4

    .line 46
    array-length v5, v4

    .line 47
    if-lez v5, :cond_0

    .line 48
    .line 49
    const/4 v5, 0x0

    .line 50
    aget-object v2, v4, v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 51
    .line 52
    goto :goto_0

    .line 53
    :catchall_0
    move-exception v4

    .line 54
    goto :goto_1

    .line 55
    :cond_0
    :goto_0
    :try_start_2
    invoke-virtual {v3}, Ljava/io/BufferedReader;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    .line 56
    .line 57
    .line 58
    goto :goto_4

    .line 59
    :catch_0
    move-exception v3

    .line 60
    goto :goto_3

    .line 61
    :goto_1
    :try_start_3
    invoke-virtual {v3}, Ljava/io/BufferedReader;->close()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 62
    .line 63
    .line 64
    goto :goto_2

    .line 65
    :catchall_1
    move-exception v3

    .line 66
    :try_start_4
    invoke-virtual {v4, v3}, Ljava/lang/Throwable;->addSuppressed(Ljava/lang/Throwable;)V

    .line 67
    .line 68
    .line 69
    :goto_2
    throw v4
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_0

    .line 70
    :goto_3
    const-string v4, "PowerManagerService"

    .line 71
    .line 72
    const-string v5, "error on read process name"

    .line 73
    .line 74
    invoke-static {v4, v5, v3}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 75
    .line 76
    .line 77
    :goto_4
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 78
    .line 79
    .line 80
    move-result-object v0

    .line 81
    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 82
    .line 83
    .line 84
    move-result-object v1

    .line 85
    filled-new-array {v0, v1, v2}, [Ljava/lang/Object;

    .line 86
    .line 87
    .line 88
    move-result-object v0

    .line 89
    const-string v1, " (uid: %d pid: %d processName: %s)"

    .line 90
    .line 91
    invoke-static {v1, v0}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    .line 92
    .line 93
    .line 94
    move-result-object v0

    .line 95
    return-object v0
.end method

.method public static bridge synthetic -$$Nest$smnativeAcquireSuspendBlocker(Ljava/lang/String;)V
    .locals 0

    .line 1
    invoke-static {p0}, Lcom/android/server/power/PowerManagerService;->nativeAcquireSuspendBlocker(Ljava/lang/String;)V

    .line 2
    .line 3
    .line 4
    return-void
.end method

.method public static bridge synthetic -$$Nest$smnativeForceSuspend()Z
    .locals 1

    .line 1
    invoke-static {}, Lcom/android/server/power/PowerManagerService;->nativeForceSuspend()Z

    .line 2
    .line 3
    .line 4
    move-result v0

    .line 5
    return v0
.end method

.method public static bridge synthetic -$$Nest$smnativeReleaseSuspendBlocker(Ljava/lang/String;)V
    .locals 0

    .line 1
    invoke-static {p0}, Lcom/android/server/power/PowerManagerService;->nativeReleaseSuspendBlocker(Ljava/lang/String;)V

    .line 2
    .line 3
    .line 4
    return-void
.end method

.method public static bridge synthetic -$$Nest$smnativeSetAutoSuspend(Z)V
    .locals 0

    .line 1
    invoke-static {p0}, Lcom/android/server/power/PowerManagerService;->nativeSetAutoSuspend(Z)V

    .line 2
    .line 3
    .line 4
    return-void
.end method

.method public static bridge synthetic -$$Nest$smnativeSetInteractiveAsync(IZ)V
    .locals 0

    .line 1
    invoke-static {p1, p0}, Lcom/android/server/power/PowerManagerService;->nativeSetInteractiveAsync(ZI)V

    .line 2
    .line 3
    .line 4
    return-void
.end method

.method public static bridge synthetic -$$Nest$smnativeSetPowerBoost(II)V
    .locals 0

    .line 1
    invoke-static {p0, p1}, Lcom/android/server/power/PowerManagerService;->nativeSetPowerBoost(II)V

    .line 2
    .line 3
    .line 4
    return-void
.end method

.method public static bridge synthetic -$$Nest$smnativeSetPowerMode(IZ)Z
    .locals 0

    .line 1
    invoke-static {p0, p1}, Lcom/android/server/power/PowerManagerService;->nativeSetPowerMode(IZ)Z

    .line 2
    .line 3
    .line 4
    move-result p0

    .line 5
    return p0
.end method

.method static constructor <clinit>()V
    .locals 2

    .line 1
    new-instance v0, Ljava/text/SimpleDateFormat;

    .line 2
    .line 3
    const-string v1, "MM-dd HH:mm:ss.SSS"

    .line 4
    .line 5
    invoke-direct {v0, v1}, Ljava/text/SimpleDateFormat;-><init>(Ljava/lang/String;)V

    .line 6
    .line 7
    .line 8
    sput-object v0, Lcom/android/server/power/PowerManagerService;->DATE_FORMAT:Ljava/text/SimpleDateFormat;

    .line 9
    .line 10
    const/4 v0, 0x0

    .line 11
    filled-new-array {v0}, [I

    .line 12
    .line 13
    .line 14
    move-result-object v0

    .line 15
    invoke-static {v0}, Landroid/util/IntArray;->wrap([I)Landroid/util/IntArray;

    .line 16
    .line 17
    .line 18
    move-result-object v0

    .line 19
    sput-object v0, Lcom/android/server/power/PowerManagerService;->DEFAULT_DISPLAY_GROUP_IDS:Landroid/util/IntArray;

    .line 20
    .line 21
    invoke-static {}, Landroid/os/FactoryTest;->isFactoryBinary()Z

    .line 22
    .line 23
    .line 24
    move-result v0

    .line 25
    sput-boolean v0, Lcom/android/server/power/PowerManagerService;->SEC_USE_FACTORY_BINARY:Z

    .line 26
    .line 27
    const-string v0, "content://com.sec.android.desktopmode.uiservice.SettingsProvider/settings"

    .line 28
    .line 29
    invoke-static {v0}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    .line 30
    .line 31
    .line 32
    move-result-object v0

    .line 33
    sput-object v0, Lcom/android/server/power/PowerManagerService;->DEX_SETTINGS_URI:Landroid/net/Uri;

    .line 34
    .line 35
    return-void
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .locals 1

    .line 1
    new-instance v0, Lcom/android/server/power/PowerManagerService$Injector;

    invoke-direct {v0}, Lcom/android/server/power/PowerManagerService$Injector;-><init>()V

    invoke-direct {p0, p1, v0}, Lcom/android/server/power/PowerManagerService;-><init>(Landroid/content/Context;Lcom/android/server/power/PowerManagerService$Injector;)V

    return-void
.end method

.method public constructor <init>(Landroid/content/Context;Lcom/android/server/power/PowerManagerService$Injector;)V
    .locals 12

    .line 2
    invoke-direct {p0, p1}, Lcom/android/server/SystemService;-><init>(Landroid/content/Context;)V

    const/4 v8, 0x0

    .line 3
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutSetting:I

    .line 4
    new-instance v1, Lcom/android/server/power/PowerManagerService$6;

    const/4 v2, 0x6

    invoke-direct {v1, p0, v2}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTask:Lcom/android/server/power/PowerManagerService$6;

    .line 5
    new-instance v1, Lcom/android/server/power/PowerManagerService$6;

    const/4 v2, 0x7

    invoke-direct {v1, p0, v2}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutTask:Lcom/android/server/power/PowerManagerService$6;

    const/4 v9, 0x1

    .line 6
    invoke-static {v9, v8}, Lcom/android/server/LockGuard;->installNewLock(IZ)Ljava/lang/Object;

    move-result-object v7

    .line 7
    iput-object v7, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 8
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mSuspendBlockers:Ljava/util/ArrayList;

    .line 9
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    const/4 v1, -0x1

    .line 10
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessLowerLimit:I

    .line 11
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessUpperLimit:I

    .line 12
    const-string v2, ""

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessLimitLastCaller:Ljava/lang/String;

    .line 13
    sget-object v2, Lcom/android/server/power/SuspendBlockerMonitor;->GLOBAL_INSTANCE:Lcom/android/server/power/SuspendBlockerMonitor;

    .line 14
    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mSuspendBlockerMonitor:Lcom/android/server/power/SuspendBlockerMonitor;

    .line 15
    new-instance v2, Ljava/lang/Object;

    invoke-direct {v2}, Ljava/lang/Object;-><init>()V

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mEnhancedDischargeTimeLock:Ljava/lang/Object;

    .line 16
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mDockState:I

    const-wide v2, 0x7fffffffffffffffL

    .line 17
    iput-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenOffTimeoutFromDeviceAdmin:J

    .line 18
    iput-boolean v9, p0, Lcom/android/server/power/PowerManagerService;->mDefaultDisplayReadyByProximity:Z

    const/high16 v2, 0x7fc00000    # Float.NaN

    .line 19
    iput v2, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessOverrideFromWindowManager:F

    .line 20
    const-string v3, ""

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessOverridePackageFromWindowManager:Ljava/lang/String;

    const-wide/16 v3, -0x1

    .line 21
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mOverriddenTimeout:J

    .line 22
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutOverrideFromWindowManager:J

    .line 23
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutForDexOverrideFromWindowManager:J

    .line 24
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideFromDreamManager:I

    .line 25
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideReasonFromDreamManager:I

    .line 26
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManager:I

    .line 27
    iput v2, p0, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManagerFloat:F

    const-wide/high16 v5, -0x8000000000000000L

    .line 28
    iput-wide v5, p0, Lcom/android/server/power/PowerManagerService;->mLastWarningAboutUserActivityPermission:J

    .line 29
    new-array v2, v8, [I

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleWhitelist:[I

    .line 30
    new-array v2, v8, [I

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleTempWhitelist:[I

    .line 31
    new-array v2, v8, [I

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyAllowlist:[I

    .line 32
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 33
    new-instance v2, Landroid/util/SparseArray;

    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 34
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mUseScreenCurtain:Z

    .line 35
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mUseKeepScreenOn:Z

    .line 36
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mUseAdaptiveScreenOffTimeout:Z

    .line 37
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mDelayTimePrintWakeLock:J

    .line 38
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 39
    const-string v2, ""

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mlastUpdateCoverStateReason:Ljava/lang/String;

    .line 40
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mlastUpdateCoverStateTime:J

    .line 41
    const-string v2, ""

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mlastUpdateCoverTypeReason:Ljava/lang/String;

    .line 42
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mlastSetCoverTypeTime:J

    .line 43
    iput-boolean v9, p0, Lcom/android/server/power/PowerManagerService;->mFeatureCoverSysfs:Z

    const/4 v2, 0x0

    .line 44
    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mCoverManager:Lcom/samsung/android/cover/CoverManager;

    const/4 v5, 0x2

    .line 45
    iput v5, p0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    const/high16 v5, -0x40800000    # -1.0f

    .line 46
    iput v5, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessForClearCoverConfig:F

    .line 47
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mBrightnessLimitByCoverConfig:I

    .line 48
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mAlpmHlpmMode:I

    .line 49
    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mLCDFlashModeLock:Lcom/android/server/power/PowerManagerService$LCDFlashModeLock;

    .line 50
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mOutdoorModeSetting:Z

    .line 51
    const-string v6, ""

    iput-object v6, p0, Lcom/android/server/power/PowerManagerService;->mShutdownOrRebootCaller:Ljava/lang/String;

    .line 52
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mLastScreenTimeout:I

    .line 53
    const-string v6, "600000"

    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v6

    iput v6, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 54
    iput v5, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessScaleFactor:F

    .line 55
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mFreezingScreenBrightness:Z

    .line 56
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromWindowManager:J

    .line 57
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromSQD:J

    .line 58
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mWakelockBlacklistAppid:Ljava/util/ArrayList;

    .line 59
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mLastBrightnessOverrideState:Z

    .line 60
    const-string v5, ""

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 61
    const-string v5, ""

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 62
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 63
    new-instance v5, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v5}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>()V

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mIsUserActivityNativeInvoked:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 64
    new-instance v5, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v5}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>()V

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mIsUserActivityInvoked:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 65
    new-instance v5, Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-direct {v5}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>()V

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mIsPowerBoostInvokedFromLocal:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 66
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLowerLimit:I

    .line 67
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessUpperLimit:I

    .line 68
    const-string v5, ""

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitLastCaller:Ljava/lang/String;

    const/16 v5, 0x1e5

    .line 69
    iput v5, p0, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfBrightness:I

    .line 70
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForLimit:I

    .line 71
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitRunning:Z

    .line 72
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitPeriod:I

    .line 73
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessUpperLimit:I

    .line 74
    iput v5, p0, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfHdrBrightness:I

    .line 75
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForHdrLimit:I

    .line 76
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunning:Z

    .line 77
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitPeriod:I

    .line 78
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 79
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mBatteryOnline:I

    .line 80
    new-instance v5, Ljava/util/ArrayList;

    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V

    iput-object v5, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityStateListenerListeners:Ljava/util/ArrayList;

    .line 81
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 82
    sget-object v1, Lcom/android/server/power/PowerHistorian;->INSTANCE:Lcom/android/server/power/PowerHistorian;

    .line 83
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerHistorian:Lcom/android/server/power/PowerHistorian;

    .line 84
    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mSemInputDeviceManager:Lcom/samsung/android/hardware/secinputdev/SemInputDeviceManager;

    .line 85
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mDefaultDisplayState:I

    .line 86
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpPreventionLocks:Ljava/util/ArrayList;

    .line 87
    new-instance v1, Landroid/util/SparseArray;

    invoke-direct {v1}, Landroid/util/SparseArray;-><init>()V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 88
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mLastAndroidAutoBoostTime:J

    .line 89
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mLastNormalTouchBoostTime:J

    .line 90
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 91
    new-instance v1, Lcom/android/server/power/PowerManagerService$1;

    invoke-direct {v1, p0}, Lcom/android/server/power/PowerManagerService$1;-><init>(Lcom/android/server/power/PowerManagerService;)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mAbuseWakeLockDetectorCallback:Lcom/android/server/power/PowerManagerService$1;

    .line 92
    new-instance v1, Lcom/android/server/power/PowerManagerService$1;

    invoke-direct {v1, p0}, Lcom/android/server/power/PowerManagerService$1;-><init>(Lcom/android/server/power/PowerManagerService;)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mAdaptiveScreenOffTimeoutCallbacks:Lcom/android/server/power/PowerManagerService$1;

    .line 93
    new-instance v1, Lcom/android/server/power/PowerManagerService$3;

    invoke-direct {v1, p0}, Lcom/android/server/power/PowerManagerService$3;-><init>(Lcom/android/server/power/PowerManagerService;)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mDisplayPowerCallbacks:Lcom/android/server/power/PowerManagerService$3;

    .line 94
    iput-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerCalledTime:J

    .line 95
    iput v8, p0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerState:I

    .line 96
    new-instance v1, Lcom/android/server/power/PowerManagerService$6;

    const/4 v3, 0x0

    invoke-direct {v1, p0, v3}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityStateListenerTimeoutRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 97
    new-instance v1, Lcom/android/server/power/PowerManagerService$1;

    invoke-direct {v1, p0}, Lcom/android/server/power/PowerManagerService$1;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 98
    new-instance v3, Lcom/android/server/power/PowerManagerService$6;

    const/4 v4, 0x4

    invoke-direct {v3, p0, v4}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mEnsureTransitionToDozingReleaser:Lcom/android/server/power/PowerManagerService$6;

    .line 99
    new-instance v3, Lcom/android/server/power/PowerManagerService$6;

    const/4 v4, 0x5

    invoke-direct {v3, p0, v4}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mCoverAuthReadyRunnable:Ljava/lang/Runnable;

    .line 100
    new-instance v3, Lcom/android/server/power/PowerManagerService$10;

    invoke-direct {v3, p0}, Lcom/android/server/power/PowerManagerService$10;-><init>(Lcom/android/server/power/PowerManagerService;)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mCoverStateListener:Lcom/android/server/power/PowerManagerService$10;

    .line 101
    new-instance v3, Lcom/android/server/power/PowerManagerService$6;

    const/4 v4, 0x1

    invoke-direct {v3, p0, v4}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mPrintWakeLockAperiodicallyRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 102
    new-instance v3, Lcom/android/server/power/PowerManagerService$6;

    const/4 v4, 0x2

    invoke-direct {v3, p0, v4}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 103
    new-instance v3, Lcom/android/server/power/PowerManagerService$6;

    const/4 v4, 0x3

    invoke-direct {v3, p0, v4}, Lcom/android/server/power/PowerManagerService$6;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 104
    iput-object p1, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 105
    new-instance v3, Lcom/android/server/power/PowerManagerService$BinderService;

    invoke-direct {v3, p0, p1}, Lcom/android/server/power/PowerManagerService$BinderService;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/content/Context;)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mBinderService:Lcom/android/server/power/PowerManagerService$BinderService;

    .line 106
    new-instance v3, Lcom/android/server/power/PowerManagerService$LocalService;

    invoke-direct {v3, p0}, Lcom/android/server/power/PowerManagerService$LocalService;-><init>(Lcom/android/server/power/PowerManagerService;)V

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mLocalService:Lcom/android/server/power/PowerManagerService$LocalService;

    .line 107
    invoke-virtual {p2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 108
    new-instance v3, Lcom/android/server/power/PowerManagerService$NativeWrapper;

    invoke-direct {v3}, Lcom/android/server/power/PowerManagerService$NativeWrapper;-><init>()V

    .line 109
    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

    .line 110
    new-instance v3, Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 111
    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    .line 112
    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mSystemProperties:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 113
    new-instance v3, Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 114
    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    .line 115
    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 116
    new-instance v3, Lcom/android/server/power/feature/PowerManagerFlags;

    invoke-direct {v3}, Lcom/android/server/power/feature/PowerManagerFlags;-><init>()V

    .line 117
    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mFeatureFlags:Lcom/android/server/power/feature/PowerManagerFlags;

    .line 118
    iput-object p2, p0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 119
    const-string v3, "PowerManagerService"

    const/4 v4, -0x4

    .line 120
    invoke-static {v4, v3, v8}, Lcom/android/server/Watchdog$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Z)Lcom/android/server/ServiceThread;

    move-result-object v3

    .line 121
    invoke-virtual {v3}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v4

    new-instance v5, Lcom/android/server/power/PowerManagerService$PowerManagerHandlerCallback;

    invoke-direct {v5, p0}, Lcom/android/server/power/PowerManagerService$PowerManagerHandlerCallback;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 122
    new-instance v6, Landroid/os/Handler;

    invoke-direct {v6, v4, v5, v9}, Landroid/os/Handler;-><init>(Landroid/os/Looper;Landroid/os/Handler$Callback;Z)V

    .line 123
    iput-object v6, p0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 124
    invoke-virtual {v3}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v3

    const-wide/16 v4, 0x64

    const-wide/16 v10, 0x6e

    invoke-virtual {v3, v4, v5, v10, v11}, Landroid/os/Looper;->setSlowLogThresholdMs(JJ)V

    .line 125
    new-instance v3, Landroid/os/HandlerThread;

    const-string/jumbo v4, "pms.misc"

    invoke-direct {v3, v4}, Landroid/os/HandlerThread;-><init>(Ljava/lang/String;)V

    .line 126
    invoke-virtual {v3}, Landroid/os/HandlerThread;->start()V

    .line 127
    invoke-virtual {v3}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v3

    .line 128
    new-instance v4, Landroid/os/Handler;

    invoke-direct {v4, v3, v2, v9}, Landroid/os/Handler;-><init>(Landroid/os/Looper;Landroid/os/Handler$Callback;Z)V

    .line 129
    iput-object v4, p0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 130
    new-instance v2, Lcom/android/server/power/PowerManagerService$Constants;

    invoke-direct {v2, p0, v6}, Lcom/android/server/power/PowerManagerService$Constants;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/os/Handler;)V

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mConstants:Lcom/android/server/power/PowerManagerService$Constants;

    .line 131
    new-instance v2, Lcom/android/internal/foldables/FoldGracePeriodProvider;

    invoke-direct {v2}, Lcom/android/internal/foldables/FoldGracePeriodProvider;-><init>()V

    .line 132
    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mFoldGracePeriodProvider:Lcom/android/internal/foldables/FoldGracePeriodProvider;

    .line 133
    new-instance v2, Landroid/hardware/display/AmbientDisplayConfiguration;

    invoke-direct {v2, p1}, Landroid/hardware/display/AmbientDisplayConfiguration;-><init>(Landroid/content/Context;)V

    .line 134
    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mAmbientDisplayConfiguration:Landroid/hardware/display/AmbientDisplayConfiguration;

    .line 135
    new-instance v2, Lcom/android/server/power/AmbientDisplaySuppressionController;

    invoke-direct {v2, v1}, Lcom/android/server/power/AmbientDisplaySuppressionController;-><init>(Lcom/android/server/power/PowerManagerService$1;)V

    .line 136
    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mAmbientDisplaySuppressionController:Lcom/android/server/power/AmbientDisplaySuppressionController;

    .line 137
    new-instance v1, Lcom/android/server/power/AttentionDetector;

    new-instance v2, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;

    const/4 v3, 0x0

    invoke-direct {v2, p0, v3}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    invoke-direct {v1, v2, v7}, Lcom/android/server/power/AttentionDetector;-><init>(Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;Ljava/lang/Object;)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mAttentionDetector:Lcom/android/server/power/AttentionDetector;

    .line 138
    new-instance v1, Lcom/android/server/power/ScreenUndimDetector;

    .line 139
    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 140
    iput v8, v1, Lcom/android/server/power/ScreenUndimDetector;->mUndimCounter:I

    .line 141
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenUndimDetector:Lcom/android/server/power/ScreenUndimDetector;

    .line 142
    iput-boolean v9, p0, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 143
    new-instance v6, Lcom/android/server/power/batterysaver/BatterySavingStats;

    invoke-direct {v6, v7}, Lcom/android/server/power/batterysaver/BatterySavingStats;-><init>(Ljava/lang/Object;)V

    .line 144
    new-instance v5, Lcom/android/server/power/batterysaver/BatterySaverPolicy;

    invoke-direct {v5, v7, p1, v6}, Lcom/android/server/power/batterysaver/BatterySaverPolicy;-><init>(Ljava/lang/Object;Landroid/content/Context;Lcom/android/server/power/batterysaver/BatterySavingStats;)V

    .line 145
    new-instance v10, Lcom/android/server/power/batterysaver/BatterySaverController;

    .line 146
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->get()Lcom/android/internal/os/BackgroundThread;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/internal/os/BackgroundThread;->getLooper()Landroid/os/Looper;

    move-result-object v4

    move-object v1, v10

    move-object v2, v7

    move-object v3, p1

    invoke-direct/range {v1 .. v6}, Lcom/android/server/power/batterysaver/BatterySaverController;-><init>(Ljava/lang/Object;Landroid/content/Context;Landroid/os/Looper;Lcom/android/server/power/batterysaver/BatterySaverPolicy;Lcom/android/server/power/batterysaver/BatterySavingStats;)V

    .line 147
    new-instance v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    invoke-direct {v1, v7, p1, v10}, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;-><init>(Ljava/lang/Object;Landroid/content/Context;Lcom/android/server/power/batterysaver/BatterySaverController;)V

    .line 148
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 149
    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    move-result-object v3

    .line 150
    new-instance v10, Lcom/android/server/power/LowPowerStandbyController;

    .line 151
    new-instance v4, Lcom/android/server/power/LowPowerStandbyController$RealClock;

    .line 152
    invoke-direct {v4}, Ljava/lang/Object;-><init>()V

    .line 153
    new-instance v5, Lcom/android/server/power/LowPowerStandbyController$DeviceConfigWrapper;

    invoke-direct {v5}, Lcom/android/server/power/LowPowerStandbyController$DeviceConfigWrapper;-><init>()V

    new-instance v6, Lcom/android/server/power/LowPowerStandbyController$$ExternalSyntheticLambda2;

    invoke-direct {v6}, Ljava/lang/Object;-><init>()V

    new-instance v7, Ljava/io/File;

    .line 154
    invoke-static {}, Landroid/os/Environment;->getDataSystemDirectory()Ljava/io/File;

    move-result-object v1

    const-string v2, "low_power_standby_policy.xml"

    invoke-direct {v7, v1, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    move-object v1, v10

    move-object v2, p1

    .line 155
    invoke-direct/range {v1 .. v7}, Lcom/android/server/power/LowPowerStandbyController;-><init>(Landroid/content/Context;Landroid/os/Looper;Lcom/android/server/power/LowPowerStandbyController$Clock;Lcom/android/server/power/LowPowerStandbyController$DeviceConfigWrapper;Ljava/util/function/Supplier;Ljava/io/File;)V

    .line 156
    iput-object v10, p0, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyController:Lcom/android/server/power/LowPowerStandbyController;

    .line 157
    new-instance v1, Lcom/android/server/power/InattentiveSleepWarningController;

    invoke-direct {v1}, Lcom/android/server/power/InattentiveSleepWarningController;-><init>()V

    .line 158
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mInattentiveSleepWarningOverlayController:Lcom/android/server/power/InattentiveSleepWarningController;

    .line 159
    new-instance v1, Lcom/android/server/power/PowerManagerService$Injector$$ExternalSyntheticLambda0;

    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 160
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPermissionCheckerWrapper:Lcom/android/server/power/PowerManagerService$Injector$$ExternalSyntheticLambda0;

    .line 161
    new-instance v1, Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 162
    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 163
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerPropertiesWrapper:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 164
    new-instance v1, Lcom/android/server/display/feature/DeviceConfigParameterProvider;

    sget-object v2, Landroid/provider/DeviceConfigInterface;->REAL:Landroid/provider/DeviceConfigInterface;

    invoke-direct {v1, v2}, Lcom/android/server/display/feature/DeviceConfigParameterProvider;-><init>(Landroid/provider/DeviceConfigInterface;)V

    .line 165
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mDeviceConfigProvider:Lcom/android/server/display/feature/DeviceConfigParameterProvider;

    .line 166
    new-instance v1, Lcom/android/server/power/PowerManagerService$1;

    invoke-direct {v1, p0}, Lcom/android/server/power/PowerManagerService$1;-><init>(Lcom/android/server/power/PowerManagerService;)V

    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroupWakefulnessChangeListener:Lcom/android/server/power/PowerManagerService$1;

    .line 167
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x111026f

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mUseAutoSuspend:Z

    .line 168
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x105010f

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getFloat(I)F

    move-result v1

    .line 169
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    const v3, 0x105010e

    invoke-virtual {v2, v3}, Landroid/content/res/Resources;->getFloat(I)F

    move-result v2

    .line 170
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    const v4, 0x105010d

    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getFloat(I)F

    move-result v3

    .line 171
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    const v5, 0x105010b

    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getFloat(I)F

    move-result v4

    .line 172
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v5

    const v6, 0x105010a

    invoke-virtual {v5, v6}, Landroid/content/res/Resources;->getFloat(I)F

    move-result v5

    .line 173
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v6

    const v7, 0x10e0136

    invoke-virtual {v6, v7}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v6

    iput v6, p0, Lcom/android/server/power/PowerManagerService;->mScreenExtendedBrightnessMaximum:I

    const/high16 v6, -0x40000000    # -2.0f

    cmpl-float v7, v1, v6

    if-eqz v7, :cond_1

    cmpl-float v7, v2, v6

    if-eqz v7, :cond_1

    cmpl-float v7, v3, v6

    if-nez v7, :cond_0

    goto :goto_0

    .line 174
    :cond_0
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMinimum:F

    .line 175
    iput v2, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMaximum:F

    .line 176
    iput v3, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDefault:F

    goto :goto_1

    .line 177
    :cond_1
    :goto_0
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e013b

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    .line 178
    invoke-static {v1}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    move-result v1

    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMinimum:F

    .line 179
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e013a

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    .line 180
    invoke-static {v1}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    move-result v1

    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMaximum:F

    .line 181
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e0139

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    .line 182
    invoke-static {v1}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    move-result v1

    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDefault:F

    :goto_1
    cmpl-float v1, v4, v6

    if-nez v1, :cond_2

    .line 183
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e0135

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    .line 184
    invoke-static {v1}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    move-result v1

    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDoze:F

    goto :goto_2

    .line 185
    :cond_2
    iput v4, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDoze:F

    :goto_2
    cmpl-float v1, v5, v6

    if-nez v1, :cond_3

    .line 186
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v1

    const v2, 0x10e0134

    invoke-virtual {v1, v2}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v1

    .line 187
    invoke-static {v1}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    move-result v1

    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDim:F

    goto :goto_3

    .line 188
    :cond_3
    iput v5, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDim:F

    .line 189
    :goto_3
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    monitor-enter v1

    .line 190
    :try_start_0
    const-string v2, "PowerManagerService.Booting"

    .line 191
    invoke-static {p0, v2}, Lcom/android/server/power/PowerManagerService$Injector;->createSuspendBlocker(Lcom/android/server/power/PowerManagerService;Ljava/lang/String;)Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/power/PowerManagerService;->mBootingSuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 192
    const-string v3, "PowerManagerService.WakeLocks"

    .line 193
    invoke-static {p0, v3}, Lcom/android/server/power/PowerManagerService$Injector;->createSuspendBlocker(Lcom/android/server/power/PowerManagerService;Ljava/lang/String;)Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 194
    const-string v3, "PowerManagerService.Display"

    .line 195
    invoke-static {p0, v3}, Lcom/android/server/power/PowerManagerService$Injector;->createSuspendBlocker(Lcom/android/server/power/PowerManagerService;Ljava/lang/String;)Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/power/PowerManagerService;->mDisplaySuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 196
    const-string/jumbo v4, "unknown"

    invoke-virtual {v2, v4}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->acquire(Ljava/lang/String;)V

    .line 197
    iput-boolean v9, p0, Lcom/android/server/power/PowerManagerService;->mHoldingBootingSuspendBlocker:Z

    .line 198
    const-string v2, "holding display"

    invoke-virtual {v3, v2}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->acquire(Ljava/lang/String;)V

    .line 199
    iput-boolean v9, p0, Lcom/android/server/power/PowerManagerService;->mHoldingDisplaySuspendBlocker:Z

    .line 200
    iput-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mHalAutoSuspendModeEnabled:Z

    .line 201
    invoke-virtual {p0, v9}, Lcom/android/server/power/PowerManagerService;->setHalInteractiveModeLocked(Z)V

    .line 202
    iput v9, p0, Lcom/android/server/power/PowerManagerService;->mWakefulnessRaw:I

    .line 203
    const-string/jumbo v2, "ro.boot.quiescent"

    const-string v3, "0"

    .line 204
    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 205
    const-string v3, "1"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_5

    .line 206
    invoke-static {}, Landroid/sysprop/InitProperties;->userspace_reboot_in_progress()Ljava/util/Optional;

    move-result-object v2

    sget-object v3, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    invoke-virtual {v2, v3}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Boolean;

    invoke-virtual {v2}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v2

    if-eqz v2, :cond_4

    goto :goto_4

    :cond_4
    move v2, v8

    goto :goto_5

    :catchall_0
    move-exception v0

    goto :goto_6

    :cond_5
    :goto_4
    move v2, v9

    :goto_5
    sput-boolean v2, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 207
    invoke-direct {p0}, Lcom/android/server/power/PowerManagerService;->nativeInit()V

    .line 208
    invoke-static {v8}, Lcom/android/server/power/PowerManagerService;->nativeSetAutoSuspend(Z)V

    const/4 v0, 0x7

    .line 209
    invoke-static {v0, v9}, Lcom/android/server/power/PowerManagerService;->nativeSetPowerMode(IZ)Z

    .line 210
    invoke-static {v8, v8}, Lcom/android/server/power/PowerManagerService;->nativeSetPowerMode(IZ)Z

    .line 211
    invoke-static {}, Landroid/os/PowerManager;->invalidateIsInteractiveCaches()V

    .line 212
    monitor-exit v1

    return-void

    :goto_6
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public static adjustWakeLockSummary(III)I
    .locals 3

    .line 1
    const/4 v0, 0x3

    .line 2
    if-eq p0, v0, :cond_0

    .line 3
    .line 4
    and-int/lit16 p1, p1, -0xc1

    .line 5
    .line 6
    :cond_0
    const/4 v1, 0x4

    .line 7
    if-eqz p0, :cond_1

    .line 8
    .line 9
    and-int/lit8 v2, p1, 0x40

    .line 10
    .line 11
    if-eqz v2, :cond_3

    .line 12
    .line 13
    :cond_1
    and-int/lit8 v2, p1, -0xf

    .line 14
    .line 15
    if-nez p0, :cond_2

    .line 16
    .line 17
    if-ne p2, v1, :cond_2

    .line 18
    .line 19
    and-int/lit8 p1, p1, -0x1f

    .line 20
    .line 21
    goto :goto_0

    .line 22
    :cond_2
    move p1, v2

    .line 23
    :cond_3
    :goto_0
    if-ne p0, v0, :cond_4

    .line 24
    .line 25
    if-ne p2, v1, :cond_4

    .line 26
    .line 27
    and-int/lit8 p1, p1, -0x11

    .line 28
    .line 29
    :cond_4
    and-int/lit8 p2, p1, 0x6

    .line 30
    .line 31
    if-eqz p2, :cond_6

    .line 32
    .line 33
    const/4 p2, 0x1

    .line 34
    if-ne p0, p2, :cond_5

    .line 35
    .line 36
    or-int/lit8 p1, p1, 0x21

    .line 37
    .line 38
    goto :goto_1

    .line 39
    :cond_5
    const/4 p2, 0x2

    .line 40
    if-ne p0, p2, :cond_6

    .line 41
    .line 42
    or-int/lit8 p1, p1, 0x1

    .line 43
    .line 44
    :cond_6
    :goto_1
    and-int/lit16 p0, p1, 0x80

    .line 45
    .line 46
    if-eqz p0, :cond_7

    .line 47
    .line 48
    or-int/lit8 p1, p1, 0x1

    .line 49
    .line 50
    :cond_7
    return p1
.end method

.method public static getFirstNonEmptyWorkChain(Landroid/os/WorkSource;)Landroid/os/WorkSource$WorkChain;
    .locals 3

    .line 1
    invoke-virtual {p0}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    .line 2
    .line 3
    .line 4
    move-result-object v0

    .line 5
    const/4 v1, 0x0

    .line 6
    if-nez v0, :cond_0

    .line 7
    .line 8
    return-object v1

    .line 9
    :cond_0
    invoke-virtual {p0}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    .line 10
    .line 11
    .line 12
    move-result-object p0

    .line 13
    invoke-interface {p0}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    .line 14
    .line 15
    .line 16
    move-result-object p0

    .line 17
    :cond_1
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    .line 18
    .line 19
    .line 20
    move-result v0

    .line 21
    if-eqz v0, :cond_2

    .line 22
    .line 23
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 24
    .line 25
    .line 26
    move-result-object v0

    .line 27
    check-cast v0, Landroid/os/WorkSource$WorkChain;

    .line 28
    .line 29
    invoke-virtual {v0}, Landroid/os/WorkSource$WorkChain;->getSize()I

    .line 30
    .line 31
    .line 32
    move-result v2

    .line 33
    if-lez v2, :cond_1

    .line 34
    .line 35
    return-object v0

    .line 36
    :cond_2
    return-object v1
.end method

.method public static isScreenLock(Lcom/android/server/power/PowerManagerService$WakeLock;)Z
    .locals 1

    .line 1
    iget p0, p0, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 2
    .line 3
    const v0, 0xffff

    .line 4
    .line 5
    .line 6
    and-int/2addr p0, v0

    .line 7
    const/4 v0, 0x6

    .line 8
    if-eq p0, v0, :cond_0

    .line 9
    .line 10
    const/16 v0, 0xa

    .line 11
    .line 12
    if-eq p0, v0, :cond_0

    .line 13
    .line 14
    const/16 v0, 0x1a

    .line 15
    .line 16
    if-eq p0, v0, :cond_0

    .line 17
    .line 18
    const/4 p0, 0x0

    .line 19
    return p0

    .line 20
    :cond_0
    const/4 p0, 0x1

    .line 21
    return p0
.end method

.method public static lowLevelReboot(Ljava/lang/String;)V
    .locals 5

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 2
    .line 3
    const-string v1, "[api] lowLevelReboot: "

    .line 4
    .line 5
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 6
    .line 7
    .line 8
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 9
    .line 10
    .line 11
    const/4 v1, 0x1

    .line 12
    invoke-static {v1}, Lcom/android/server/power/PowerManagerUtil;->callerInfoToString(Z)Ljava/lang/String;

    .line 13
    .line 14
    .line 15
    move-result-object v2

    .line 16
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 17
    .line 18
    .line 19
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 20
    .line 21
    .line 22
    move-result-object v0

    .line 23
    const-string v2, "PowerManagerService"

    .line 24
    .line 25
    invoke-static {v2, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 26
    .line 27
    .line 28
    invoke-static {}, Lcom/android/server/power/Slog;->saveLogAsFile()V

    .line 29
    .line 30
    .line 31
    const-string v0, ""

    .line 32
    .line 33
    if-nez p0, :cond_0

    .line 34
    .line 35
    move-object p0, v0

    .line 36
    :cond_0
    const-string/jumbo v3, "quiescent"

    .line 37
    .line 38
    .line 39
    invoke-virtual {p0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 40
    .line 41
    .line 42
    move-result v4

    .line 43
    if-eqz v4, :cond_1

    .line 44
    .line 45
    sput-boolean v1, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 46
    .line 47
    move-object p0, v0

    .line 48
    goto :goto_0

    .line 49
    :cond_1
    const-string v4, ",quiescent"

    .line 50
    .line 51
    invoke-virtual {p0, v4}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    .line 52
    .line 53
    .line 54
    move-result v4

    .line 55
    if-eqz v4, :cond_2

    .line 56
    .line 57
    sput-boolean v1, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 58
    .line 59
    const/16 v1, 0xa

    .line 60
    .line 61
    const/4 v4, 0x0

    .line 62
    invoke-static {v1, v4, p0}, Lcom/android/server/DropBoxManagerService$EntryFile$$ExternalSyntheticOutline0;->m(IILjava/lang/String;)Ljava/lang/String;

    .line 63
    .line 64
    .line 65
    move-result-object p0

    .line 66
    :cond_2
    :goto_0
    const-string/jumbo v1, "recovery"

    .line 67
    .line 68
    .line 69
    invoke-virtual {p0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 70
    .line 71
    .line 72
    move-result v4

    .line 73
    if-nez v4, :cond_3

    .line 74
    .line 75
    const-string/jumbo v4, "recovery-update"

    .line 76
    .line 77
    .line 78
    invoke-virtual {p0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 79
    .line 80
    .line 81
    move-result v4

    .line 82
    if-eqz v4, :cond_4

    .line 83
    .line 84
    :cond_3
    move-object p0, v1

    .line 85
    :cond_4
    sget-boolean v1, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 86
    .line 87
    if-eqz v1, :cond_6

    .line 88
    .line 89
    invoke-virtual {v0, p0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 90
    .line 91
    .line 92
    move-result v0

    .line 93
    if-nez v0, :cond_5

    .line 94
    .line 95
    const-string v0, ","

    .line 96
    .line 97
    invoke-virtual {p0, v0}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 98
    .line 99
    .line 100
    move-result-object p0

    .line 101
    :cond_5
    invoke-static {p0, v3}, Landroid/net/ConnectivityModuleConnector$$ExternalSyntheticOutline0;->m$1(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 102
    .line 103
    .line 104
    move-result-object p0

    .line 105
    :cond_6
    new-instance v0, Ljava/lang/StringBuilder;

    .line 106
    .line 107
    const-string/jumbo v1, "reboot,"

    .line 108
    .line 109
    .line 110
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 111
    .line 112
    .line 113
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 114
    .line 115
    .line 116
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 117
    .line 118
    .line 119
    move-result-object p0

    .line 120
    const-string/jumbo v0, "sys.powerctl"

    .line 121
    .line 122
    .line 123
    invoke-static {v0, p0}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 124
    .line 125
    .line 126
    const-wide/16 v0, 0x4e20

    .line 127
    .line 128
    :try_start_0
    invoke-static {v0, v1}, Ljava/lang/Thread;->sleep(J)V
    :try_end_0
    .catch Ljava/lang/InterruptedException; {:try_start_0 .. :try_end_0} :catch_0

    .line 129
    .line 130
    .line 131
    goto :goto_1

    .line 132
    :catch_0
    invoke-static {}, Ljava/lang/Thread;->currentThread()Ljava/lang/Thread;

    .line 133
    .line 134
    .line 135
    move-result-object p0

    .line 136
    invoke-virtual {p0}, Ljava/lang/Thread;->interrupt()V

    .line 137
    .line 138
    .line 139
    :goto_1
    const-string p0, "Unexpected return from lowLevelReboot!"

    .line 140
    .line 141
    invoke-static {v2, p0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 142
    .line 143
    .line 144
    return-void
.end method

.method private static native nativeAcquireSuspendBlocker(Ljava/lang/String;)V
.end method

.method private static native nativeForceSuspend()Z
.end method

.method private native nativeInit()V
.end method

.method private static native nativeReleaseSuspendBlocker(Ljava/lang/String;)V
.end method

.method private static native nativeSetAutoSuspend(Z)V
.end method

.method private static native nativeSetInteractiveAsync(ZI)V
.end method

.method private static native nativeSetPowerBoost(II)V
.end method

.method private static native nativeSetPowerMode(IZ)Z
.end method


# virtual methods
.method public final addPowerGroupsForNonDefaultDisplayGroupLocked()V
    .locals 12

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/hardware/display/DisplayManagerInternal;->getDisplayGroupIds()Landroid/util/IntArray;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    return-void

    .line 10
    :cond_0
    const/4 v1, 0x0

    .line 11
    :goto_0
    invoke-virtual {v0}, Landroid/util/IntArray;->size()I

    .line 12
    .line 13
    .line 14
    move-result v2

    .line 15
    if-ge v1, v2, :cond_3

    .line 16
    .line 17
    invoke-virtual {v0, v1}, Landroid/util/IntArray;->get(I)I

    .line 18
    .line 19
    .line 20
    move-result v2

    .line 21
    if-nez v2, :cond_1

    .line 22
    .line 23
    goto :goto_1

    .line 24
    :cond_1
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 25
    .line 26
    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->contains(I)Z

    .line 27
    .line 28
    .line 29
    move-result v3

    .line 30
    if-eqz v3, :cond_2

    .line 31
    .line 32
    new-instance v3, Ljava/lang/StringBuilder;

    .line 33
    .line 34
    const-string v4, "Tried to add already existing group:"

    .line 35
    .line 36
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 37
    .line 38
    .line 39
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 40
    .line 41
    .line 42
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 43
    .line 44
    .line 45
    move-result-object v2

    .line 46
    const-string v3, "PowerManagerService"

    .line 47
    .line 48
    invoke-static {v3, v2}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 49
    .line 50
    .line 51
    goto :goto_1

    .line 52
    :cond_2
    new-instance v11, Lcom/android/server/power/PowerGroup;

    .line 53
    .line 54
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 55
    .line 56
    iget-object v7, p0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 57
    .line 58
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 59
    .line 60
    invoke-virtual {v3}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 61
    .line 62
    .line 63
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 64
    .line 65
    .line 66
    move-result-wide v9

    .line 67
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroupWakefulnessChangeListener:Lcom/android/server/power/PowerManagerService$1;

    .line 68
    .line 69
    const/4 v8, 0x0

    .line 70
    move-object v3, v11

    .line 71
    move v4, v2

    .line 72
    invoke-direct/range {v3 .. v10}, Lcom/android/server/power/PowerGroup;-><init>(ILcom/android/server/power/PowerManagerService$1;Lcom/android/server/power/Notifier;Landroid/hardware/display/DisplayManagerInternal;ZJ)V

    .line 73
    .line 74
    .line 75
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 76
    .line 77
    invoke-virtual {v3, v2, v11}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 78
    .line 79
    .line 80
    :goto_1
    add-int/lit8 v1, v1, 0x1

    .line 81
    .line 82
    goto :goto_0

    .line 83
    :cond_3
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 84
    .line 85
    const/high16 v1, 0x10000

    .line 86
    .line 87
    or-int/2addr v0, v1

    .line 88
    iput v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 89
    .line 90
    return-void
.end method

.method public final applyWakeLockFlagsOnAcquireLocked(Lcom/android/server/power/PowerManagerService$WakeLock;Z)V
    .locals 17

    .line 1
    move-object/from16 v11, p0

    .line 2
    .line 3
    move-object/from16 v12, p1

    .line 4
    .line 5
    const-string v0, "Screen__On : Cancel (not allow 3rd-party app on sub screen : "

    .line 6
    .line 7
    iget v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 8
    .line 9
    const/high16 v2, 0x10000000

    .line 10
    .line 11
    and-int/2addr v1, v2

    .line 12
    if-eqz v1, :cond_f

    .line 13
    .line 14
    invoke-static/range {p1 .. p1}, Lcom/android/server/power/PowerManagerService;->isScreenLock(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 15
    .line 16
    .line 17
    move-result v1

    .line 18
    if-eqz v1, :cond_f

    .line 19
    .line 20
    iget-object v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 21
    .line 22
    const/4 v2, -0x1

    .line 23
    const/4 v3, 0x0

    .line 24
    if-eqz v1, :cond_2

    .line 25
    .line 26
    invoke-virtual {v1}, Landroid/os/WorkSource;->isEmpty()Z

    .line 27
    .line 28
    .line 29
    move-result v1

    .line 30
    if-nez v1, :cond_2

    .line 31
    .line 32
    iget-object v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 33
    .line 34
    invoke-static {v1}, Lcom/android/server/power/PowerManagerService;->getFirstNonEmptyWorkChain(Landroid/os/WorkSource;)Landroid/os/WorkSource$WorkChain;

    .line 35
    .line 36
    .line 37
    move-result-object v4

    .line 38
    if-eqz v4, :cond_0

    .line 39
    .line 40
    invoke-virtual {v4}, Landroid/os/WorkSource$WorkChain;->getAttributionTag()Ljava/lang/String;

    .line 41
    .line 42
    .line 43
    move-result-object v1

    .line 44
    invoke-virtual {v4}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    .line 45
    .line 46
    .line 47
    move-result v4

    .line 48
    goto :goto_1

    .line 49
    :cond_0
    invoke-virtual {v1, v3}, Landroid/os/WorkSource;->getPackageName(I)Ljava/lang/String;

    .line 50
    .line 51
    .line 52
    move-result-object v4

    .line 53
    if-eqz v4, :cond_1

    .line 54
    .line 55
    invoke-virtual {v1, v3}, Landroid/os/WorkSource;->getPackageName(I)Ljava/lang/String;

    .line 56
    .line 57
    .line 58
    move-result-object v4

    .line 59
    goto :goto_0

    .line 60
    :cond_1
    iget-object v4, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 61
    .line 62
    :goto_0
    invoke-virtual {v1, v3}, Landroid/os/WorkSource;->getUid(I)I

    .line 63
    .line 64
    .line 65
    move-result v1

    .line 66
    move-object/from16 v16, v4

    .line 67
    .line 68
    move v4, v1

    .line 69
    move-object/from16 v1, v16

    .line 70
    .line 71
    :goto_1
    move-object v13, v1

    .line 72
    move v5, v2

    .line 73
    :goto_2
    move v14, v4

    .line 74
    goto :goto_3

    .line 75
    :cond_2
    iget-object v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 76
    .line 77
    iget v4, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 78
    .line 79
    iget v5, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerPid:I

    .line 80
    .line 81
    move-object v13, v1

    .line 82
    goto :goto_2

    .line 83
    :goto_3
    sget-boolean v1, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_FLIP_COVER_DISPLAY:Z

    .line 84
    .line 85
    const-string v4, ")"

    .line 86
    .line 87
    const-string v6, "PowerManagerService"

    .line 88
    .line 89
    const/4 v7, 0x1

    .line 90
    const/16 v8, 0x2710

    .line 91
    .line 92
    if-eqz v1, :cond_3

    .line 93
    .line 94
    if-lt v14, v8, :cond_3

    .line 95
    .line 96
    iget v1, v11, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 97
    .line 98
    if-ne v1, v7, :cond_3

    .line 99
    .line 100
    :try_start_0
    iget-object v1, v11, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 101
    .line 102
    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 103
    .line 104
    .line 105
    move-result-object v1

    .line 106
    const-string v9, "com.android.systemui"

    .line 107
    .line 108
    invoke-virtual {v1, v9, v3}, Landroid/content/pm/PackageManager;->getPackageUidAsUser(Ljava/lang/String;I)I

    .line 109
    .line 110
    .line 111
    move-result v1

    .line 112
    if-eq v14, v1, :cond_3

    .line 113
    .line 114
    new-instance v1, Ljava/lang/StringBuilder;

    .line 115
    .line 116
    invoke-direct {v1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 117
    .line 118
    .line 119
    invoke-virtual {v1, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 120
    .line 121
    .line 122
    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 123
    .line 124
    .line 125
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 126
    .line 127
    .line 128
    move-result-object v0

    .line 129
    invoke-static {v0}, Lcom/android/server/power/Slog;->dk(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .line 130
    .line 131
    .line 132
    return-void

    .line 133
    :catch_0
    move-exception v0

    .line 134
    const-string v1, "Unable to resolve SystemUI\'s UID."

    .line 135
    .line 136
    invoke-static {v6, v1, v0}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V

    .line 137
    .line 138
    .line 139
    :cond_3
    if-lt v14, v8, :cond_4

    .line 140
    .line 141
    if-nez p2, :cond_4

    .line 142
    .line 143
    new-instance v0, Ljava/lang/StringBuilder;

    .line 144
    .line 145
    const-string v1, "Screen__On : Cancel (notifications are disabled : "

    .line 146
    .line 147
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 148
    .line 149
    .line 150
    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 151
    .line 152
    .line 153
    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 154
    .line 155
    .line 156
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 157
    .line 158
    .line 159
    move-result-object v0

    .line 160
    invoke-static {v6, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 161
    .line 162
    .line 163
    return-void

    .line 164
    :cond_4
    iget-object v1, v11, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 165
    .line 166
    monitor-enter v1

    .line 167
    :try_start_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 168
    .line 169
    .line 170
    move-result v0

    .line 171
    invoke-static {v0}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 172
    .line 173
    .line 174
    move-result v0

    .line 175
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 176
    if-eqz v0, :cond_6

    .line 177
    .line 178
    const-string v0, "isWakeUpPreventionNeededForEdgeLightingLocked - interactive"

    .line 179
    .line 180
    invoke-static {v6, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 181
    .line 182
    .line 183
    :cond_5
    :goto_4
    move v0, v3

    .line 184
    goto :goto_5

    .line 185
    :cond_6
    iget v0, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 186
    .line 187
    const v1, 0xffff

    .line 188
    .line 189
    .line 190
    and-int/2addr v0, v1

    .line 191
    const/4 v1, 0x6

    .line 192
    if-eq v0, v1, :cond_7

    .line 193
    .line 194
    const/16 v1, 0xa

    .line 195
    .line 196
    if-eq v0, v1, :cond_7

    .line 197
    .line 198
    const/16 v1, 0x1a

    .line 199
    .line 200
    if-eq v0, v1, :cond_7

    .line 201
    .line 202
    goto :goto_4

    .line 203
    :cond_7
    iget-object v0, v11, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 204
    .line 205
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 206
    .line 207
    .line 208
    invoke-static {}, Landroid/app/NotificationManager;->getService()Landroid/app/INotificationManager;

    .line 209
    .line 210
    .line 211
    move-result-object v0

    .line 212
    if-eqz v0, :cond_5

    .line 213
    .line 214
    :try_start_2
    iget v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 215
    .line 216
    iget-object v4, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 217
    .line 218
    iget-object v8, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 219
    .line 220
    iget v9, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 221
    .line 222
    invoke-interface {v0, v1, v4, v8, v9}, Landroid/app/INotificationManager;->dispatchDelayedWakelockAndBlocked(ILjava/lang/String;Ljava/lang/String;I)Z

    .line 223
    .line 224
    .line 225
    move-result v0
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 226
    goto :goto_5

    .line 227
    :catch_1
    move-exception v0

    .line 228
    new-instance v1, Ljava/lang/StringBuilder;

    .line 229
    .line 230
    const-string v4, "Failed to call NotificationManager : "

    .line 231
    .line 232
    invoke-direct {v1, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 233
    .line 234
    .line 235
    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 236
    .line 237
    .line 238
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 239
    .line 240
    .line 241
    move-result-object v0

    .line 242
    invoke-static {v6, v0}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 243
    .line 244
    .line 245
    goto :goto_4

    .line 246
    :goto_5
    if-eqz v0, :cond_8

    .line 247
    .line 248
    const-string v0, "applyWakeLockFlagsOnAcquireLocked return by isWakeUpPreventionNeededForEdgeLighting"

    .line 249
    .line 250
    invoke-static {v6, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 251
    .line 252
    .line 253
    return-void

    .line 254
    :cond_8
    new-instance v0, Ljava/lang/StringBuilder;

    .line 255
    .line 256
    const-string v1, " wl: "

    .line 257
    .line 258
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 259
    .line 260
    .line 261
    iget-object v1, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 262
    .line 263
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 264
    .line 265
    .line 266
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 267
    .line 268
    .line 269
    move-result-object v0

    .line 270
    iput-object v0, v11, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 271
    .line 272
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/power/PowerManagerService$WakeLock;->getPowerGroupId()Ljava/lang/Integer;

    .line 273
    .line 274
    .line 275
    move-result-object v0

    .line 276
    if-eqz v0, :cond_f

    .line 277
    .line 278
    if-nez v13, :cond_9

    .line 279
    .line 280
    :goto_6
    move v7, v3

    .line 281
    goto/16 :goto_7

    .line 282
    .line 283
    :cond_9
    iget-object v1, v11, Lcom/android/server/power/PowerManagerService;->mPermissionCheckerWrapper:Lcom/android/server/power/PowerManagerService$Injector$$ExternalSyntheticLambda0;

    .line 284
    .line 285
    iget-object v4, v11, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 286
    .line 287
    new-instance v8, Landroid/content/AttributionSource;

    .line 288
    .line 289
    const/4 v9, 0x0

    .line 290
    invoke-direct {v8, v14, v13, v9}, Landroid/content/AttributionSource;-><init>(ILjava/lang/String;Ljava/lang/String;)V

    .line 291
    .line 292
    .line 293
    const-string v9, "ACQUIRE_CAUSES_WAKEUP for "

    .line 294
    .line 295
    invoke-virtual {v9, v13}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 296
    .line 297
    .line 298
    move-result-object v9

    .line 299
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 300
    .line 301
    .line 302
    const-string v1, "android.permission.TURN_SCREEN_ON"

    .line 303
    .line 304
    invoke-static {v4, v1, v5, v8, v9}, Landroid/content/PermissionChecker;->checkPermissionForDataDelivery(Landroid/content/Context;Ljava/lang/String;ILandroid/content/AttributionSource;Ljava/lang/String;)I

    .line 305
    .line 306
    .line 307
    move-result v1

    .line 308
    if-nez v1, :cond_a

    .line 309
    .line 310
    const-string v1, "Allowing device wake-up from app "

    .line 311
    .line 312
    invoke-virtual {v1, v13}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 313
    .line 314
    .line 315
    move-result-object v1

    .line 316
    invoke-static {v6, v1}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 317
    .line 318
    .line 319
    goto :goto_7

    .line 320
    :cond_a
    const-wide/32 v4, 0xce1a479

    .line 321
    .line 322
    .line 323
    invoke-static {v4, v5, v14}, Landroid/app/compat/CompatChanges;->isChangeEnabled(JI)Z

    .line 324
    .line 325
    .line 326
    move-result v1

    .line 327
    iget-object v4, v11, Lcom/android/server/power/PowerManagerService;->mPowerPropertiesWrapper:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 328
    .line 329
    if-nez v1, :cond_b

    .line 330
    .line 331
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 332
    .line 333
    .line 334
    invoke-static {}, Landroid/sysprop/PowerProperties;->waive_target_sdk_check_for_turn_screen_on()Ljava/util/Optional;

    .line 335
    .line 336
    .line 337
    move-result-object v1

    .line 338
    sget-object v5, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 339
    .line 340
    invoke-virtual {v1, v5}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    .line 341
    .line 342
    .line 343
    move-result-object v1

    .line 344
    check-cast v1, Ljava/lang/Boolean;

    .line 345
    .line 346
    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    .line 347
    .line 348
    .line 349
    move-result v1

    .line 350
    if-nez v1, :cond_b

    .line 351
    .line 352
    const-string v1, "Allowing device wake-up without android.permission.TURN_SCREEN_ON for "

    .line 353
    .line 354
    invoke-virtual {v1, v13}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 355
    .line 356
    .line 357
    move-result-object v1

    .line 358
    invoke-static {v6, v1}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 359
    .line 360
    .line 361
    goto :goto_7

    .line 362
    :cond_b
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 363
    .line 364
    .line 365
    invoke-static {}, Landroid/sysprop/PowerProperties;->permissionless_turn_screen_on()Ljava/util/Optional;

    .line 366
    .line 367
    .line 368
    move-result-object v1

    .line 369
    sget-object v4, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;

    .line 370
    .line 371
    invoke-virtual {v1, v4}, Ljava/util/Optional;->orElse(Ljava/lang/Object;)Ljava/lang/Object;

    .line 372
    .line 373
    .line 374
    move-result-object v1

    .line 375
    check-cast v1, Ljava/lang/Boolean;

    .line 376
    .line 377
    invoke-virtual {v1}, Ljava/lang/Boolean;->booleanValue()Z

    .line 378
    .line 379
    .line 380
    move-result v1

    .line 381
    if-eqz v1, :cond_c

    .line 382
    .line 383
    const-string v1, "Device wake-up allowed by debug.power.permissionless_turn_screen_on"

    .line 384
    .line 385
    invoke-static {v6, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 386
    .line 387
    .line 388
    goto :goto_7

    .line 389
    :cond_c
    const-string v1, "Not allowing device wake-up for "

    .line 390
    .line 391
    invoke-virtual {v1, v13}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 392
    .line 393
    .line 394
    move-result-object v1

    .line 395
    invoke-static {v6, v1}, Lcom/android/server/power/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 396
    .line 397
    .line 398
    goto :goto_6

    .line 399
    :goto_7
    if-eqz v7, :cond_f

    .line 400
    .line 401
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    .line 402
    .line 403
    .line 404
    move-result v1

    .line 405
    iget-object v15, v11, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 406
    .line 407
    if-ne v1, v2, :cond_e

    .line 408
    .line 409
    move v0, v3

    .line 410
    :goto_8
    iget-object v1, v11, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 411
    .line 412
    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    .line 413
    .line 414
    .line 415
    move-result v1

    .line 416
    if-ge v0, v1, :cond_d

    .line 417
    .line 418
    iget-object v1, v11, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 419
    .line 420
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 421
    .line 422
    .line 423
    move-result-object v1

    .line 424
    move-object v2, v1

    .line 425
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 426
    .line 427
    invoke-virtual {v15}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 428
    .line 429
    .line 430
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 431
    .line 432
    .line 433
    move-result-wide v3

    .line 434
    iget-object v6, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 435
    .line 436
    const/4 v10, 0x1

    .line 437
    const/4 v5, 0x2

    .line 438
    move-object/from16 v1, p0

    .line 439
    .line 440
    move v7, v14

    .line 441
    move-object v8, v13

    .line 442
    move v9, v14

    .line 443
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/PowerManagerService;->wakePowerGroupLocked(Lcom/android/server/power/PowerGroup;JILjava/lang/String;ILjava/lang/String;IZ)V

    .line 444
    .line 445
    .line 446
    add-int/lit8 v0, v0, 0x1

    .line 447
    .line 448
    goto :goto_8

    .line 449
    :cond_d
    return-void

    .line 450
    :cond_e
    iget-object v1, v11, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 451
    .line 452
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    .line 453
    .line 454
    .line 455
    move-result v2

    .line 456
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->contains(I)Z

    .line 457
    .line 458
    .line 459
    move-result v1

    .line 460
    if-eqz v1, :cond_f

    .line 461
    .line 462
    iget-object v1, v11, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 463
    .line 464
    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I

    .line 465
    .line 466
    .line 467
    move-result v0

    .line 468
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 469
    .line 470
    .line 471
    move-result-object v0

    .line 472
    move-object v2, v0

    .line 473
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 474
    .line 475
    invoke-virtual {v15}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 476
    .line 477
    .line 478
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 479
    .line 480
    .line 481
    move-result-wide v3

    .line 482
    iget-object v6, v12, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 483
    .line 484
    const/4 v10, 0x1

    .line 485
    const/4 v5, 0x2

    .line 486
    move-object/from16 v1, p0

    .line 487
    .line 488
    move v7, v14

    .line 489
    move-object v8, v13

    .line 490
    move v9, v14

    .line 491
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/PowerManagerService;->wakePowerGroupLocked(Lcom/android/server/power/PowerGroup;JILjava/lang/String;ILjava/lang/String;IZ)V

    .line 492
    .line 493
    .line 494
    goto :goto_9

    .line 495
    :catchall_0
    move-exception v0

    .line 496
    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 497
    throw v0

    .line 498
    :cond_f
    :goto_9
    return-void
.end method

.method public final areAllPowerGroupsReadyLocked()Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    move v2, v1

    .line 9
    :goto_0
    if-ge v2, v0, :cond_1

    .line 10
    .line 11
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 12
    .line 13
    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 14
    .line 15
    .line 16
    move-result-object v3

    .line 17
    check-cast v3, Lcom/android/server/power/PowerGroup;

    .line 18
    .line 19
    iget-boolean v3, v3, Lcom/android/server/power/PowerGroup;->mReady:Z

    .line 20
    .line 21
    if-nez v3, :cond_0

    .line 22
    .line 23
    return v1

    .line 24
    :cond_0
    add-int/lit8 v2, v2, 0x1

    .line 25
    .line 26
    goto :goto_0

    .line 27
    :cond_1
    const/4 p0, 0x1

    .line 28
    return p0
.end method

.method public final calculateHdrBrightnessLimitLocked(II)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->stream()Ljava/util/stream/Stream;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    new-instance v1, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda9;

    .line 8
    .line 9
    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 10
    .line 11
    .line 12
    invoke-static {v1}, Ljava/util/Comparator;->comparingInt(Ljava/util/function/ToIntFunction;)Ljava/util/Comparator;

    .line 13
    .line 14
    .line 15
    move-result-object v1

    .line 16
    invoke-interface {v0, v1}, Ljava/util/stream/Stream;->min(Ljava/util/Comparator;)Ljava/util/Optional;

    .line 17
    .line 18
    .line 19
    move-result-object v0

    .line 20
    new-instance v1, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda10;

    .line 21
    .line 22
    const/4 v2, 0x0

    .line 23
    invoke-direct {v1, v2, p0}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda10;-><init>(ILjava/lang/Object;)V

    .line 24
    .line 25
    .line 26
    new-instance v2, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda11;

    .line 27
    .line 28
    invoke-direct {v2, p0, p1, p2}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda11;-><init>(Lcom/android/server/power/PowerManagerService;II)V

    .line 29
    .line 30
    .line 31
    invoke-virtual {v0, v1, v2}, Ljava/util/Optional;->ifPresentOrElse(Ljava/util/function/Consumer;Ljava/lang/Runnable;)V

    .line 32
    .line 33
    .line 34
    return-void
.end method

.method public final canDreamLocked(Lcom/android/server/power/PowerGroup;)Z
    .locals 5

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDreamsDisabledByAmbientModeSuppressionConfig:Z

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    const/4 v2, 0x0

    .line 5
    if-eqz v0, :cond_0

    .line 6
    .line 7
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mAmbientDisplaySuppressionController:Lcom/android/server/power/AmbientDisplaySuppressionController;

    .line 8
    .line 9
    invoke-virtual {v0}, Lcom/android/server/power/AmbientDisplaySuppressionController;->isSuppressed()Z

    .line 10
    .line 11
    .line 12
    move-result v0

    .line 13
    if-eqz v0, :cond_0

    .line 14
    .line 15
    move v0, v1

    .line 16
    goto :goto_0

    .line 17
    :cond_0
    move v0, v2

    .line 18
    :goto_0
    iget-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 19
    .line 20
    if-eqz v3, :cond_8

    .line 21
    .line 22
    if-nez v0, :cond_8

    .line 23
    .line 24
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 25
    .line 26
    .line 27
    move-result v0

    .line 28
    const/4 v3, 0x2

    .line 29
    if-ne v0, v3, :cond_8

    .line 30
    .line 31
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDreamsSupportedConfig:Z

    .line 32
    .line 33
    if-eqz v0, :cond_8

    .line 34
    .line 35
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledSetting:Z

    .line 36
    .line 37
    if-eqz v0, :cond_8

    .line 38
    .line 39
    iget-object v0, p1, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 40
    .line 41
    invoke-virtual {v0}, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isBrightOrDim()Z

    .line 42
    .line 43
    .line 44
    move-result v0

    .line 45
    if-eqz v0, :cond_8

    .line 46
    .line 47
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 48
    .line 49
    const/4 v4, -0x1

    .line 50
    if-eq v0, v4, :cond_1

    .line 51
    .line 52
    if-eq v0, v3, :cond_1

    .line 53
    .line 54
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 55
    .line 56
    goto :goto_1

    .line 57
    :cond_1
    move v0, v2

    .line 58
    :goto_1
    if-nez v0, :cond_8

    .line 59
    .line 60
    sget-boolean v0, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_FLIP_COVER_DISPLAY:Z

    .line 61
    .line 62
    if-eqz v0, :cond_2

    .line 63
    .line 64
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 65
    .line 66
    if-eq v0, v1, :cond_8

    .line 67
    .line 68
    :cond_2
    iget v0, p1, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 69
    .line 70
    and-int/lit8 v0, v0, 0x7

    .line 71
    .line 72
    if-nez v0, :cond_3

    .line 73
    .line 74
    goto :goto_3

    .line 75
    :cond_3
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->isBeingKeptAwakeLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 76
    .line 77
    .line 78
    move-result p1

    .line 79
    if-nez p1, :cond_7

    .line 80
    .line 81
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 82
    .line 83
    if-nez p1, :cond_4

    .line 84
    .line 85
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledOnBatteryConfig:Z

    .line 86
    .line 87
    if-nez v0, :cond_4

    .line 88
    .line 89
    return v2

    .line 90
    :cond_4
    if-nez p1, :cond_5

    .line 91
    .line 92
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenNotPoweredConfig:I

    .line 93
    .line 94
    if-ltz v0, :cond_5

    .line 95
    .line 96
    iget v3, p0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 97
    .line 98
    if-ge v3, v0, :cond_5

    .line 99
    .line 100
    return v2

    .line 101
    :cond_5
    if-eqz p1, :cond_7

    .line 102
    .line 103
    iget p1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenPoweredConfig:I

    .line 104
    .line 105
    if-ltz p1, :cond_7

    .line 106
    .line 107
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 108
    .line 109
    if-lt p0, p1, :cond_6

    .line 110
    .line 111
    goto :goto_2

    .line 112
    :cond_6
    move v1, v2

    .line 113
    :cond_7
    :goto_2
    return v1

    .line 114
    :cond_8
    :goto_3
    return v2
.end method

.method public final doesIdleStateBlockWakeLocksLocked()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleMode:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    iget-boolean p0, p0, Lcom/android/server/power/PowerManagerService;->mLightDeviceIdleMode:Z

    .line 6
    .line 7
    if-eqz p0, :cond_0

    .line 8
    .line 9
    invoke-static {}, Lcom/android/server/deviceidle/Flags;->disableWakelocksInLightIdle()Z

    .line 10
    .line 11
    .line 12
    :cond_0
    const/4 p0, 0x0

    .line 13
    goto :goto_0

    .line 14
    :cond_1
    const/4 p0, 0x1

    .line 15
    :goto_0
    return p0
.end method

.method public final dozePowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z
    .locals 14

    .line 1
    move-object v0, p0

    .line 2
    move-object v1, p1

    .line 3
    move/from16 v2, p4

    .line 4
    .line 5
    move/from16 v4, p5

    .line 6
    .line 7
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 8
    .line 9
    const/4 v5, 0x0

    .line 10
    if-eqz v3, :cond_9

    .line 11
    .line 12
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 13
    .line 14
    if-nez v3, :cond_0

    .line 15
    .line 16
    goto/16 :goto_0

    .line 17
    .line 18
    :cond_0
    iget-wide v6, v1, Lcom/android/server/power/PowerGroup;->mLastWakeTime:J

    .line 19
    .line 20
    cmp-long v3, p2, v6

    .line 21
    .line 22
    if-ltz v3, :cond_9

    .line 23
    .line 24
    iget v3, v1, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 25
    .line 26
    invoke-static {v3}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 27
    .line 28
    .line 29
    move-result v3

    .line 30
    if-nez v3, :cond_1

    .line 31
    .line 32
    goto/16 :goto_0

    .line 33
    .line 34
    :cond_1
    const-string v3, "PowerManagerService"

    .line 35
    .line 36
    iget v6, v1, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 37
    .line 38
    if-nez v6, :cond_2

    .line 39
    .line 40
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mGoToSleepPreventionEnabled:Z

    .line 41
    .line 42
    if-eqz v7, :cond_2

    .line 43
    .line 44
    const-string v0, "goToSleepNoUpdateLocked: GoToSleep prevention is enabled"

    .line 45
    .line 46
    invoke-static {v3, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 47
    .line 48
    .line 49
    return v5

    .line 50
    :cond_2
    iget-wide v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromSQD:J

    .line 51
    .line 52
    const-wide/16 v9, -0x1

    .line 53
    .line 54
    cmp-long v7, v7, v9

    .line 55
    .line 56
    if-eqz v7, :cond_3

    .line 57
    .line 58
    iput-wide v9, v0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromSQD:J

    .line 59
    .line 60
    :cond_3
    const/4 v7, 0x2

    .line 61
    const/4 v9, 0x1

    .line 62
    if-ne v6, v7, :cond_4

    .line 63
    .line 64
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 65
    .line 66
    invoke-virtual {v7, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 67
    .line 68
    .line 69
    move-result-object v7

    .line 70
    check-cast v7, Lcom/android/server/power/PowerGroup;

    .line 71
    .line 72
    iget v7, v7, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 73
    .line 74
    if-ne v7, v9, :cond_4

    .line 75
    .line 76
    return v5

    .line 77
    :cond_4
    sget-boolean v7, Lcom/samsung/android/rune/CoreRune;->CARLIFE_DISPLAY_GROUP:Z

    .line 78
    .line 79
    if-eqz v7, :cond_5

    .line 80
    .line 81
    const/4 v7, 0x4

    .line 82
    if-ne v6, v7, :cond_5

    .line 83
    .line 84
    return v5

    .line 85
    :cond_5
    new-instance v7, Ljava/lang/StringBuilder;

    .line 86
    .line 87
    const-string v8, "Screen__Off(d) - "

    .line 88
    .line 89
    invoke-direct {v7, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 90
    .line 91
    .line 92
    iget v8, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 93
    .line 94
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 95
    .line 96
    .line 97
    const-string v8, " : "

    .line 98
    .line 99
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 100
    .line 101
    .line 102
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 103
    .line 104
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 105
    .line 106
    .line 107
    const-string v8, " ("

    .line 108
    .line 109
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 110
    .line 111
    .line 112
    invoke-static/range {p4 .. p4}, Landroid/os/PowerManager;->sleepReasonToString(I)Ljava/lang/String;

    .line 113
    .line 114
    .line 115
    move-result-object v8

    .line 116
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 117
    .line 118
    .line 119
    const-string v8, ") groupId="

    .line 120
    .line 121
    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 122
    .line 123
    .line 124
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 125
    .line 126
    .line 127
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 128
    .line 129
    .line 130
    move-result-object v7

    .line 131
    invoke-static {v3, v7}, Lcom/android/server/power/Slog;->wk(Ljava/lang/String;Ljava/lang/String;)V

    .line 132
    .line 133
    .line 134
    const-string v7, ""

    .line 135
    .line 136
    iput-object v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 137
    .line 138
    iput-object v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 139
    .line 140
    sget-object v7, Lcom/android/server/power/PowerManagerUtil;->sCurrentScreenOffProfiler:Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;

    .line 141
    .line 142
    iget-wide v10, v7, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->mGoToSleepStartTime:J

    .line 143
    .line 144
    const-wide/16 v12, 0x0

    .line 145
    .line 146
    cmp-long v8, v10, v12

    .line 147
    .line 148
    if-eqz v8, :cond_6

    .line 149
    .line 150
    iget-boolean v8, v7, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->mSaved:Z

    .line 151
    .line 152
    if-nez v8, :cond_6

    .line 153
    .line 154
    new-instance v8, Ljava/lang/StringBuilder;

    .line 155
    .line 156
    const-string/jumbo v10, "need to skip , ignore "

    .line 157
    .line 158
    .line 159
    invoke-direct {v8, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 160
    .line 161
    .line 162
    iget v10, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 163
    .line 164
    sub-int/2addr v10, v9

    .line 165
    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 166
    .line 167
    .line 168
    const-string v10, " th OFF profiler "

    .line 169
    .line 170
    invoke-virtual {v8, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 171
    .line 172
    .line 173
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 174
    .line 175
    .line 176
    move-result-object v8

    .line 177
    invoke-static {v3, v8}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 178
    .line 179
    .line 180
    :cond_6
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 181
    .line 182
    invoke-virtual {v8}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 183
    .line 184
    .line 185
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 186
    .line 187
    .line 188
    move-result-wide v10

    .line 189
    sub-long v10, v10, p2

    .line 190
    .line 191
    long-to-int v8, v10

    .line 192
    invoke-virtual {v7}, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->clearAll()V

    .line 193
    .line 194
    .line 195
    iput v8, v7, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->mGoToSleepDiff:I

    .line 196
    .line 197
    iget v8, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 198
    .line 199
    iput v8, v7, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->mOrder:I

    .line 200
    .line 201
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 202
    .line 203
    .line 204
    move-result-wide v10

    .line 205
    iput-wide v10, v7, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->mGoToSleepStartTime:J

    .line 206
    .line 207
    invoke-static {}, Lcom/android/server/power/PowerManagerUtil;->getCurrentTimeAsString()Ljava/lang/String;

    .line 208
    .line 209
    .line 210
    move-result-object v8

    .line 211
    iput-object v8, v7, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->mGoToSleepTimeStr:Ljava/lang/String;

    .line 212
    .line 213
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitRunning:Z

    .line 214
    .line 215
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 216
    .line 217
    if-eqz v7, :cond_7

    .line 218
    .line 219
    iput-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitRunning:Z

    .line 220
    .line 221
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 222
    .line 223
    invoke-virtual {v8, v7}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 224
    .line 225
    .line 226
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForLimit:I

    .line 227
    .line 228
    iput v7, v0, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfBrightness:I

    .line 229
    .line 230
    const/4 v10, -0x1

    .line 231
    iput v10, v0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLowerLimit:I

    .line 232
    .line 233
    iput v7, v0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessUpperLimit:I

    .line 234
    .line 235
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 236
    .line 237
    or-int/lit8 v7, v7, 0x20

    .line 238
    .line 239
    iput v7, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 240
    .line 241
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 242
    .line 243
    .line 244
    const-string v7, "[api] BrightnessLimitRunnable done (complete immediately)"

    .line 245
    .line 246
    invoke-static {v3, v7}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 247
    .line 248
    .line 249
    :cond_7
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunning:Z

    .line 250
    .line 251
    if-eqz v7, :cond_8

    .line 252
    .line 253
    iput-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunning:Z

    .line 254
    .line 255
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 256
    .line 257
    invoke-virtual {v8, v7}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 258
    .line 259
    .line 260
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForHdrLimit:I

    .line 261
    .line 262
    iput v7, v0, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfHdrBrightness:I

    .line 263
    .line 264
    iput v7, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessUpperLimit:I

    .line 265
    .line 266
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 267
    .line 268
    or-int/lit8 v7, v7, 0x20

    .line 269
    .line 270
    iput v7, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 271
    .line 272
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 273
    .line 274
    .line 275
    const-string v7, "[api] HdrBrightnessLimitRunnable done (complete immediately)"

    .line 276
    .line 277
    invoke-static {v3, v7}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 278
    .line 279
    .line 280
    :cond_8
    iput v2, v1, Lcom/android/server/power/PowerGroup;->mLastGoToSleepReason:I

    .line 281
    .line 282
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 283
    .line 284
    new-instance v7, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda0;

    .line 285
    .line 286
    invoke-direct {v7, p0, v4, p1, v2}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/PowerManagerService;ILcom/android/server/power/PowerGroup;I)V

    .line 287
    .line 288
    .line 289
    invoke-virtual {v3, v7}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 290
    .line 291
    .line 292
    const-string v0, "Powering off display group due to "

    .line 293
    .line 294
    const-string/jumbo v3, "powerOffDisplay"

    .line 295
    .line 296
    .line 297
    const-wide/32 v10, 0x20000

    .line 298
    .line 299
    .line 300
    invoke-static {v10, v11, v3}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 301
    .line 302
    .line 303
    :try_start_0
    invoke-static {v2, v5}, Ljava/lang/Math;->max(II)I

    .line 304
    .line 305
    .line 306
    move-result v2

    .line 307
    const/16 v3, 0x1a

    .line 308
    .line 309
    invoke-static {v3, v2}, Ljava/lang/Math;->min(II)I

    .line 310
    .line 311
    .line 312
    move-result v5

    .line 313
    iget-wide v2, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTimeNoChangeLights:J

    .line 314
    .line 315
    iget-wide v7, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 316
    .line 317
    invoke-static {v2, v3, v7, v8}, Ljava/lang/Math;->max(JJ)J

    .line 318
    .line 319
    .line 320
    move-result-wide v2

    .line 321
    sub-long v2, p2, v2

    .line 322
    .line 323
    const-string v7, "PowerGroup"

    .line 324
    .line 325
    new-instance v8, Ljava/lang/StringBuilder;

    .line 326
    .line 327
    invoke-direct {v8, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 328
    .line 329
    .line 330
    invoke-static {v5}, Landroid/os/PowerManager;->sleepReasonToString(I)Ljava/lang/String;

    .line 331
    .line 332
    .line 333
    move-result-object v0

    .line 334
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 335
    .line 336
    .line 337
    const-string v0, " (groupId= "

    .line 338
    .line 339
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 340
    .line 341
    .line 342
    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 343
    .line 344
    .line 345
    const-string v0, ", uid= "

    .line 346
    .line 347
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 348
    .line 349
    .line 350
    invoke-virtual {v8, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 351
    .line 352
    .line 353
    const-string v0, ", millisSinceLastUserActivity="

    .line 354
    .line 355
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 356
    .line 357
    .line 358
    invoke-virtual {v8, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 359
    .line 360
    .line 361
    const-string v0, ", lastUserActivityEvent="

    .line 362
    .line 363
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 364
    .line 365
    .line 366
    iget v0, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityEvent:I

    .line 367
    .line 368
    invoke-static {v0}, Landroid/os/PowerManager;->userActivityEventToString(I)Ljava/lang/String;

    .line 369
    .line 370
    .line 371
    move-result-object v0

    .line 372
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 373
    .line 374
    .line 375
    const-string v0, ")..."

    .line 376
    .line 377
    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 378
    .line 379
    .line 380
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 381
    .line 382
    .line 383
    move-result-object v0

    .line 384
    invoke-static {v7, v0}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 385
    .line 386
    .line 387
    iput-boolean v9, v1, Lcom/android/server/power/PowerGroup;->mIsSandmanSummoned:Z

    .line 388
    .line 389
    const/4 v7, 0x0

    .line 390
    const/4 v8, 0x0

    .line 391
    const/4 v2, 0x3

    .line 392
    const/4 v6, 0x0

    .line 393
    move-object v0, p1

    .line 394
    move v1, v2

    .line 395
    move-wide/from16 v2, p2

    .line 396
    .line 397
    move/from16 v4, p5

    .line 398
    .line 399
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/PowerGroup;->setWakefulnessLocked(IJIIILjava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 400
    .line 401
    .line 402
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 403
    .line 404
    .line 405
    return v9

    .line 406
    :catchall_0
    move-exception v0

    .line 407
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 408
    .line 409
    .line 410
    throw v0

    .line 411
    :cond_9
    :goto_0
    return v5
.end method

.method public final dreamPowerGroupLocked(Lcom/android/server/power/PowerGroup;JIZ)Z
    .locals 13

    .line 1
    move-object v0, p0

    .line 2
    move-object v1, p1

    .line 3
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 4
    .line 5
    const/4 v3, 0x0

    .line 6
    if-eqz v2, :cond_2

    .line 7
    .line 8
    iget-boolean v0, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 9
    .line 10
    if-nez v0, :cond_0

    .line 11
    .line 12
    goto :goto_0

    .line 13
    :cond_0
    const-string v0, "Napping power group (groupId="

    .line 14
    .line 15
    iget-wide v4, v1, Lcom/android/server/power/PowerGroup;->mLastWakeTime:J

    .line 16
    .line 17
    cmp-long v2, p2, v4

    .line 18
    .line 19
    if-ltz v2, :cond_2

    .line 20
    .line 21
    const/4 v9, 0x1

    .line 22
    if-nez p5, :cond_1

    .line 23
    .line 24
    iget v2, v1, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 25
    .line 26
    if-eq v2, v9, :cond_1

    .line 27
    .line 28
    goto :goto_0

    .line 29
    :cond_1
    new-instance v2, Ljava/lang/StringBuilder;

    .line 30
    .line 31
    const-string v3, "dreamPowerGroup"

    .line 32
    .line 33
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 34
    .line 35
    .line 36
    iget v3, v1, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 37
    .line 38
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 39
    .line 40
    .line 41
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 42
    .line 43
    .line 44
    move-result-object v2

    .line 45
    const-wide/32 v10, 0x20000

    .line 46
    .line 47
    .line 48
    invoke-static {v10, v11, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 49
    .line 50
    .line 51
    :try_start_0
    const-string v2, "PowerGroup"

    .line 52
    .line 53
    new-instance v4, Ljava/lang/StringBuilder;

    .line 54
    .line 55
    invoke-direct {v4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 56
    .line 57
    .line 58
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 59
    .line 60
    .line 61
    const-string v0, ", uid="

    .line 62
    .line 63
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 64
    .line 65
    .line 66
    move/from16 v5, p4

    .line 67
    .line 68
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 69
    .line 70
    .line 71
    const-string v0, ")..."

    .line 72
    .line 73
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 74
    .line 75
    .line 76
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 77
    .line 78
    .line 79
    move-result-object v0

    .line 80
    invoke-static {v2, v0}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 81
    .line 82
    .line 83
    iput-boolean v9, v1, Lcom/android/server/power/PowerGroup;->mIsSandmanSummoned:Z

    .line 84
    .line 85
    const/4 v8, 0x0

    .line 86
    const/4 v2, 0x2

    .line 87
    const/4 v6, 0x0

    .line 88
    const/4 v7, 0x0

    .line 89
    const/4 v12, 0x0

    .line 90
    move-object v0, p1

    .line 91
    move v1, v2

    .line 92
    move-wide v2, p2

    .line 93
    move/from16 v4, p4

    .line 94
    .line 95
    move v5, v6

    .line 96
    move v6, v7

    .line 97
    move-object v7, v12

    .line 98
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/PowerGroup;->setWakefulnessLocked(IJIIILjava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 99
    .line 100
    .line 101
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 102
    .line 103
    .line 104
    move v3, v9

    .line 105
    goto :goto_0

    .line 106
    :catchall_0
    move-exception v0

    .line 107
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 108
    .line 109
    .line 110
    throw v0

    .line 111
    :cond_2
    :goto_0
    return v3
.end method

.method public final dumpInternal(Ljava/io/PrintWriter;Z)V
    .locals 116
    .annotation build Ldalvik/annotation/optimization/NeverCompile;
    .end annotation

    .line 1
    move-object/from16 v1, p0

    .line 2
    .line 3
    move-object/from16 v2, p1

    .line 4
    .line 5
    const-string v3, "Wakelock Blacklist App id: size="

    .line 6
    .line 7
    const-string v4, "  mSmartStayEnabledSetting: "

    .line 8
    .line 9
    const-string v5, "Screen off timeout for DeX: "

    .line 10
    .line 11
    const-string v6, "SQD Screen dim duration override: "

    .line 12
    .line 13
    const-string v7, "Screen dim duration override: "

    .line 14
    .line 15
    const-string v8, "Screen dim duration: "

    .line 16
    .line 17
    const-string v9, "Screen off timeout: "

    .line 18
    .line 19
    const-string v10, "Sleep timeout: "

    .line 20
    .line 21
    const-string v11, "Attentive timeout: "

    .line 22
    .line 23
    const-string v12, "  SEC_FEATURE_ENSURE_TRANSITION_TO_DOZING: "

    .line 24
    .line 25
    const-string v13, "  SEC_FEATURE_DUAL_DISPLAY: "

    .line 26
    .line 27
    const-string v14, "  SEC_FEATURE_FLIP_LARGE_COVER_DISPLAY: "

    .line 28
    .line 29
    const-string v15, "  SEC_FEATURE_FLIP_COVER_DISPLAY: "

    .line 30
    .line 31
    move-object/from16 v16, v3

    .line 32
    .line 33
    const-string v3, "  SEC_FEATURE_FOLD_COVER_DISPLAY: "

    .line 34
    .line 35
    move-object/from16 v17, v4

    .line 36
    .line 37
    const-string v4, "  SEC_FEATURE_DEX_DUAL_VIEW: "

    .line 38
    .line 39
    move-object/from16 v18, v5

    .line 40
    .line 41
    const-string v5, "  mShouldWaitForTransitionToAodUi: "

    .line 42
    .line 43
    move-object/from16 v19, v6

    .line 44
    .line 45
    const-string v6, "  mAodMode: "

    .line 46
    .line 47
    move-object/from16 v20, v7

    .line 48
    .line 49
    const-string v7, "  SEC_FEATURE_AOD_LOOK_CHARGING_UI: "

    .line 50
    .line 51
    move-object/from16 v21, v8

    .line 52
    .line 53
    const-string v8, "  SEC_FEATURE_WAKEUP_WHEN_PLUG_CHANGED: "

    .line 54
    .line 55
    move-object/from16 v22, v9

    .line 56
    .line 57
    const-string v9, "  SEC_FEATURE_WA_WAITING_AOD_WHEN_WAKINGUP_FROM_DOZE: "

    .line 58
    .line 59
    move-object/from16 v23, v10

    .line 60
    .line 61
    const-string v10, "  SEC_FEATURE_SEAMLESS_AOD: "

    .line 62
    .line 63
    move-object/from16 v24, v11

    .line 64
    .line 65
    const-string v11, "  SEC_FEATURE_USE_GED_DOZE: "

    .line 66
    .line 67
    move-object/from16 v25, v12

    .line 68
    .line 69
    const-string v12, "  mAutoBrightnessLimitLastCaller="

    .line 70
    .line 71
    move-object/from16 v26, v13

    .line 72
    .line 73
    const-string v13, "  mLastAutoBrightnessLimitTime="

    .line 74
    .line 75
    move-object/from16 v27, v14

    .line 76
    .line 77
    const-string v14, "  mAutoBrightnessUpperLimit="

    .line 78
    .line 79
    move-object/from16 v28, v15

    .line 80
    .line 81
    const-string v15, "  mAutoBrightnessLowerLimit="

    .line 82
    .line 83
    move-object/from16 v29, v3

    .line 84
    .line 85
    const-string v3, "  mOutdoorModeSetting: "

    .line 86
    .line 87
    move-object/from16 v30, v4

    .line 88
    .line 89
    const-string v4, "  mLastWakeUpReason: "

    .line 90
    .line 91
    move-object/from16 v31, v5

    .line 92
    .line 93
    const-string v5, "  mUserId="

    .line 94
    .line 95
    move-object/from16 v32, v6

    .line 96
    .line 97
    const-string v6, "  mForegroundProfile="

    .line 98
    .line 99
    move-object/from16 v33, v7

    .line 100
    .line 101
    const-string v7, "  mDoubleTapWakeEnabled="

    .line 102
    .line 103
    move-object/from16 v34, v8

    .line 104
    .line 105
    const-string v8, "  mScreenBrightnessDefault="

    .line 106
    .line 107
    move-object/from16 v35, v9

    .line 108
    .line 109
    const-string v9, "  mScreenBrightnessMaximum="

    .line 110
    .line 111
    move-object/from16 v36, v10

    .line 112
    .line 113
    const-string v10, "  mScreenBrightnessMinimum="

    .line 114
    .line 115
    move-object/from16 v37, v11

    .line 116
    .line 117
    const-string v11, "  mDozeScreenBrightnessOverrideFromDreamManager="

    .line 118
    .line 119
    move-object/from16 v38, v12

    .line 120
    .line 121
    const-string v12, "  mDrawWakeLockOverrideFromSidekick="

    .line 122
    .line 123
    move-object/from16 v39, v13

    .line 124
    .line 125
    const-string v13, "  mDozeScreenStateOverrideFromDreamManager="

    .line 126
    .line 127
    move-object/from16 v40, v14

    .line 128
    .line 129
    const-string v14, "  mUserInactiveOverrideFromWindowManager="

    .line 130
    .line 131
    move-object/from16 v41, v15

    .line 132
    .line 133
    const-string v15, "  mUserActivityTimeoutForDexOverrideFromWindowManager="

    .line 134
    .line 135
    move-object/from16 v42, v3

    .line 136
    .line 137
    const-string v3, "  mUserActivityTimeoutOverrideFromWindowManager="

    .line 138
    .line 139
    move-object/from16 v43, v4

    .line 140
    .line 141
    const-string v4, "  mScreenBrightnessOverrideFromWindowManager="

    .line 142
    .line 143
    move-object/from16 v44, v5

    .line 144
    .line 145
    const-string v5, "  mStayOnWhilePluggedInSetting="

    .line 146
    .line 147
    move-object/from16 v45, v6

    .line 148
    .line 149
    const-string v6, "  mMaximumScreenOffTimeoutFromDeviceAdmin="

    .line 150
    .line 151
    move-object/from16 v46, v7

    .line 152
    .line 153
    const-string v7, "  mSleepTimeoutSetting="

    .line 154
    .line 155
    move-object/from16 v47, v8

    .line 156
    .line 157
    const-string v8, "  mScreenOffTimeoutSetting="

    .line 158
    .line 159
    move-object/from16 v48, v9

    .line 160
    .line 161
    const-string v9, "  mAttentiveWarningDurationConfig="

    .line 162
    .line 163
    move-object/from16 v49, v10

    .line 164
    .line 165
    const-string v10, "  mAttentiveTimeoutSetting="

    .line 166
    .line 167
    move-object/from16 v50, v11

    .line 168
    .line 169
    const-string v11, "  mAttentiveTimeoutConfig="

    .line 170
    .line 171
    move-object/from16 v51, v12

    .line 172
    .line 173
    const-string v12, "  mMaximumScreenDimRatioConfig="

    .line 174
    .line 175
    move-object/from16 v52, v13

    .line 176
    .line 177
    const-string v13, "  mMaximumScreenDimDurationConfig="

    .line 178
    .line 179
    move-object/from16 v53, v14

    .line 180
    .line 181
    const-string v14, "  mMinimumScreenOffTimeoutConfig="

    .line 182
    .line 183
    move-object/from16 v54, v15

    .line 184
    .line 185
    const-string v15, "  mBrightWhenDozingConfig="

    .line 186
    .line 187
    move-object/from16 v55, v3

    .line 188
    .line 189
    const-string v3, "  mDozeAfterScreenOff="

    .line 190
    .line 191
    move-object/from16 v56, v4

    .line 192
    .line 193
    const-string v4, "  mDreamsActivateOnDockSetting="

    .line 194
    .line 195
    move-object/from16 v57, v5

    .line 196
    .line 197
    const-string v5, "  mDreamsActivateOnSleepSetting="

    .line 198
    .line 199
    move-object/from16 v58, v6

    .line 200
    .line 201
    const-string v6, "  mDreamsEnabledSetting="

    .line 202
    .line 203
    move-object/from16 v59, v7

    .line 204
    .line 205
    const-string v7, "  mDreamsBatteryLevelDrainCutoffConfig="

    .line 206
    .line 207
    move-object/from16 v60, v8

    .line 208
    .line 209
    const-string v8, "  mDreamsBatteryLevelMinimumWhenNotPoweredConfig="

    .line 210
    .line 211
    move-object/from16 v61, v9

    .line 212
    .line 213
    const-string v9, "  mDreamsBatteryLevelMinimumWhenPoweredConfig="

    .line 214
    .line 215
    move-object/from16 v62, v10

    .line 216
    .line 217
    const-string v10, "  mDreamsEnabledOnBatteryConfig="

    .line 218
    .line 219
    move-object/from16 v63, v11

    .line 220
    .line 221
    const-string v11, "  mDreamsActivatedOnDockByDefaultConfig="

    .line 222
    .line 223
    move-object/from16 v64, v12

    .line 224
    .line 225
    const-string v12, "  mDreamsActivatedOnSleepByDefaultConfig="

    .line 226
    .line 227
    move-object/from16 v65, v13

    .line 228
    .line 229
    const-string v13, "  mDreamsEnabledByDefaultConfig="

    .line 230
    .line 231
    move-object/from16 v66, v14

    .line 232
    .line 233
    const-string v14, "  mDreamsSupportedConfig="

    .line 234
    .line 235
    move-object/from16 v67, v15

    .line 236
    .line 237
    const-string v15, "  mSuspendWhenScreenOffDueToProximityConfig="

    .line 238
    .line 239
    move-object/from16 v68, v3

    .line 240
    .line 241
    const-string v3, "  mKeepDreamingWhenUnplugging="

    .line 242
    .line 243
    move-object/from16 v69, v4

    .line 244
    .line 245
    const-string v4, "  mTheaterModeEnabled="

    .line 246
    .line 247
    move-object/from16 v70, v5

    .line 248
    .line 249
    const-string v5, "  mWakeUpWhenPluggedOrUnpluggedInTheaterModeConfig="

    .line 250
    .line 251
    move-object/from16 v71, v6

    .line 252
    .line 253
    const-string v6, "  mWakeUpWhenPluggedOrUnpluggedConfig="

    .line 254
    .line 255
    move-object/from16 v72, v7

    .line 256
    .line 257
    const-string v7, "  mDecoupleHalInteractiveModeFromDisplayConfig="

    .line 258
    .line 259
    move-object/from16 v73, v8

    .line 260
    .line 261
    const-string v8, "  mDecoupleHalAutoSuspendModeFromDisplayConfig="

    .line 262
    .line 263
    move-object/from16 v74, v9

    .line 264
    .line 265
    const-string v9, "  mHoldingDisplaySuspendBlocker="

    .line 266
    .line 267
    move-object/from16 v75, v10

    .line 268
    .line 269
    const-string v10, "  mHoldingWakeLockSuspendBlocker="

    .line 270
    .line 271
    move-object/from16 v76, v11

    .line 272
    .line 273
    const-string v11, "  mDefaultDisplayReadyByProximity="

    .line 274
    .line 275
    move-object/from16 v77, v12

    .line 276
    .line 277
    const-string v12, "  mScreenBrightnessBoostInProgress="

    .line 278
    .line 279
    move-object/from16 v78, v13

    .line 280
    .line 281
    const-string v13, "  mLastScreenBrightnessBoostTime="

    .line 282
    .line 283
    move-object/from16 v79, v14

    .line 284
    .line 285
    const-string v14, "  mLastInteractivePowerHintTime="

    .line 286
    .line 287
    move-object/from16 v80, v15

    .line 288
    .line 289
    const-string v15, "  mLastGlobalSleepTimeRealtime="

    .line 290
    .line 291
    move-object/from16 v81, v3

    .line 292
    .line 293
    const-string v3, "  mLastGlobalWakeTimeRealtime="

    .line 294
    .line 295
    move-object/from16 v82, v4

    .line 296
    .line 297
    const-string v4, "  mLastSleepReason="

    .line 298
    .line 299
    move-object/from16 v83, v5

    .line 300
    .line 301
    const-string v5, "  mLastSleepTime="

    .line 302
    .line 303
    move-object/from16 v84, v6

    .line 304
    .line 305
    const-string v6, "  mLastWakeTime="

    .line 306
    .line 307
    move-object/from16 v85, v7

    .line 308
    .line 309
    const-string v7, "  mLowPowerStandbyActive="

    .line 310
    .line 311
    move-object/from16 v86, v8

    .line 312
    .line 313
    const-string v8, "  mDeviceIdleTempWhitelist="

    .line 314
    .line 315
    move-object/from16 v87, v9

    .line 316
    .line 317
    const-string v9, "  mDeviceIdleWhitelist="

    .line 318
    .line 319
    move-object/from16 v88, v10

    .line 320
    .line 321
    const-string v10, "  mDeviceIdleMode="

    .line 322
    .line 323
    move-object/from16 v89, v11

    .line 324
    .line 325
    const-string v11, "  mLightDeviceIdleMode="

    .line 326
    .line 327
    move-object/from16 v90, v12

    .line 328
    .line 329
    const-string v12, "  mBatteryLevelLow="

    .line 330
    .line 331
    move-object/from16 v91, v13

    .line 332
    .line 333
    const-string v13, "  mSandmanScheduled="

    .line 334
    .line 335
    move-object/from16 v92, v14

    .line 336
    .line 337
    const-string v14, "  mInterceptedKeyForProximity="

    .line 338
    .line 339
    move-object/from16 v93, v15

    .line 340
    .line 341
    const-string v15, "  mInterceptedPowerKeyForProximity="

    .line 342
    .line 343
    move-object/from16 v94, v3

    .line 344
    .line 345
    const-string v3, "  mRequestWaitForNegativeProximity="

    .line 346
    .line 347
    move-object/from16 v95, v4

    .line 348
    .line 349
    const-string v4, "  mWakeLockSummary=0x"

    .line 350
    .line 351
    move-object/from16 v96, v5

    .line 352
    .line 353
    const-string v5, "  mHalInteractiveModeEnabled="

    .line 354
    .line 355
    move-object/from16 v97, v6

    .line 356
    .line 357
    const-string v6, "  mHalAutoSuspendModeEnabled="

    .line 358
    .line 359
    move-object/from16 v98, v7

    .line 360
    .line 361
    const-string v7, "  mUseAutoSuspend="

    .line 362
    .line 363
    move-object/from16 v99, v8

    .line 364
    .line 365
    const-string v8, "  mEnhancedDischargePredictionIsPersonalized="

    .line 366
    .line 367
    move-object/from16 v100, v9

    .line 368
    .line 369
    const-string v9, "  mLastEnhancedDischargeTimeUpdatedElapsed="

    .line 370
    .line 371
    move-object/from16 v101, v10

    .line 372
    .line 373
    const-string v10, "  mEnhancedDischargeTimeElapsed="

    .line 374
    .line 375
    move-object/from16 v102, v11

    .line 376
    .line 377
    const-string v11, "  mSystemReady="

    .line 378
    .line 379
    move-object/from16 v103, v12

    .line 380
    .line 381
    const-string v12, "  mBootCompleted="

    .line 382
    .line 383
    move-object/from16 v104, v13

    .line 384
    .line 385
    const-string v13, "  mProximityPositive="

    .line 386
    .line 387
    move-object/from16 v105, v14

    .line 388
    .line 389
    const-string v14, "  mStayOn="

    .line 390
    .line 391
    move-object/from16 v106, v15

    .line 392
    .line 393
    const-string v15, "  mDockState="

    .line 394
    .line 395
    move-object/from16 v107, v3

    .line 396
    .line 397
    const-string v3, "  mDreamsBatteryLevelDrain="

    .line 398
    .line 399
    move-object/from16 v108, v4

    .line 400
    .line 401
    const-string v4, "  mBatteryLevel="

    .line 402
    .line 403
    move-object/from16 v109, v5

    .line 404
    .line 405
    const-string v5, "  mPlugType="

    .line 406
    .line 407
    move-object/from16 v110, v6

    .line 408
    .line 409
    const-string v6, "  mIsPowered="

    .line 410
    .line 411
    move-object/from16 v111, v7

    .line 412
    .line 413
    const-string v7, "  mWakefulnessChanging="

    .line 414
    .line 415
    move-object/from16 v112, v8

    .line 416
    .line 417
    const-string v8, "  mWakefulness="

    .line 418
    .line 419
    move-object/from16 v113, v9

    .line 420
    .line 421
    const-string v9, "  mDirty=0x"

    .line 422
    .line 423
    move-object/from16 v114, v10

    .line 424
    .line 425
    const-string v10, "POWER MANAGER (dumpsys power)\n"

    .line 426
    .line 427
    invoke-virtual {v2, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 428
    .line 429
    .line 430
    iget-object v10, v1, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 431
    .line 432
    monitor-enter v10

    .line 433
    move-object/from16 v115, v11

    .line 434
    .line 435
    :try_start_0
    const-string v11, "Power Manager State:"

    .line 436
    .line 437
    invoke-virtual {v2, v11}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 438
    .line 439
    .line 440
    iget-object v11, v1, Lcom/android/server/power/PowerManagerService;->mConstants:Lcom/android/server/power/PowerManagerService$Constants;

    .line 441
    .line 442
    invoke-virtual {v11, v2}, Lcom/android/server/power/PowerManagerService$Constants;->dump(Ljava/io/PrintWriter;)V

    .line 443
    .line 444
    .line 445
    new-instance v11, Ljava/lang/StringBuilder;

    .line 446
    .line 447
    invoke-direct {v11, v9}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 448
    .line 449
    .line 450
    iget v9, v1, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 451
    .line 452
    invoke-static {v9}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 453
    .line 454
    .line 455
    move-result-object v9

    .line 456
    invoke-virtual {v11, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 457
    .line 458
    .line 459
    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 460
    .line 461
    .line 462
    move-result-object v9

    .line 463
    invoke-virtual {v2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 464
    .line 465
    .line 466
    new-instance v9, Ljava/lang/StringBuilder;

    .line 467
    .line 468
    invoke-direct {v9, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 469
    .line 470
    .line 471
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 472
    .line 473
    .line 474
    move-result v8

    .line 475
    invoke-static {v8}, Landroid/os/PowerManagerInternal;->wakefulnessToString(I)Ljava/lang/String;

    .line 476
    .line 477
    .line 478
    move-result-object v8

    .line 479
    invoke-virtual {v9, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 480
    .line 481
    .line 482
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 483
    .line 484
    .line 485
    move-result-object v8

    .line 486
    invoke-virtual {v2, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 487
    .line 488
    .line 489
    new-instance v8, Ljava/lang/StringBuilder;

    .line 490
    .line 491
    invoke-direct {v8, v7}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 492
    .line 493
    .line 494
    iget-boolean v7, v1, Lcom/android/server/power/PowerManagerService;->mWakefulnessChanging:Z

    .line 495
    .line 496
    invoke-virtual {v8, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 497
    .line 498
    .line 499
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 500
    .line 501
    .line 502
    move-result-object v7

    .line 503
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 504
    .line 505
    .line 506
    new-instance v7, Ljava/lang/StringBuilder;

    .line 507
    .line 508
    invoke-direct {v7, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 509
    .line 510
    .line 511
    iget-boolean v6, v1, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 512
    .line 513
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 514
    .line 515
    .line 516
    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 517
    .line 518
    .line 519
    move-result-object v6

    .line 520
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 521
    .line 522
    .line 523
    new-instance v6, Ljava/lang/StringBuilder;

    .line 524
    .line 525
    invoke-direct {v6, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 526
    .line 527
    .line 528
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 529
    .line 530
    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 531
    .line 532
    .line 533
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 534
    .line 535
    .line 536
    move-result-object v5

    .line 537
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 538
    .line 539
    .line 540
    new-instance v5, Ljava/lang/StringBuilder;

    .line 541
    .line 542
    invoke-direct {v5, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 543
    .line 544
    .line 545
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 546
    .line 547
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 548
    .line 549
    .line 550
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 551
    .line 552
    .line 553
    move-result-object v4

    .line 554
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 555
    .line 556
    .line 557
    new-instance v4, Ljava/lang/StringBuilder;

    .line 558
    .line 559
    invoke-direct {v4, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 560
    .line 561
    .line 562
    iget v3, v1, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 563
    .line 564
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 565
    .line 566
    .line 567
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 568
    .line 569
    .line 570
    move-result-object v3

    .line 571
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 572
    .line 573
    .line 574
    new-instance v3, Ljava/lang/StringBuilder;

    .line 575
    .line 576
    invoke-direct {v3, v15}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 577
    .line 578
    .line 579
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mDockState:I

    .line 580
    .line 581
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 582
    .line 583
    .line 584
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 585
    .line 586
    .line 587
    move-result-object v3

    .line 588
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 589
    .line 590
    .line 591
    new-instance v3, Ljava/lang/StringBuilder;

    .line 592
    .line 593
    invoke-direct {v3, v14}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 594
    .line 595
    .line 596
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 597
    .line 598
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 599
    .line 600
    .line 601
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 602
    .line 603
    .line 604
    move-result-object v3

    .line 605
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 606
    .line 607
    .line 608
    new-instance v3, Ljava/lang/StringBuilder;

    .line 609
    .line 610
    invoke-direct {v3, v13}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 611
    .line 612
    .line 613
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 614
    .line 615
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 616
    .line 617
    .line 618
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 619
    .line 620
    .line 621
    move-result-object v3

    .line 622
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 623
    .line 624
    .line 625
    new-instance v3, Ljava/lang/StringBuilder;

    .line 626
    .line 627
    invoke-direct {v3, v12}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 628
    .line 629
    .line 630
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 631
    .line 632
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 633
    .line 634
    .line 635
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 636
    .line 637
    .line 638
    move-result-object v3

    .line 639
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 640
    .line 641
    .line 642
    new-instance v3, Ljava/lang/StringBuilder;

    .line 643
    .line 644
    move-object/from16 v4, v115

    .line 645
    .line 646
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 647
    .line 648
    .line 649
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 650
    .line 651
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 652
    .line 653
    .line 654
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 655
    .line 656
    .line 657
    move-result-object v3

    .line 658
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 659
    .line 660
    .line 661
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mEnhancedDischargeTimeLock:Ljava/lang/Object;

    .line 662
    .line 663
    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 664
    :try_start_1
    new-instance v4, Ljava/lang/StringBuilder;

    .line 665
    .line 666
    move-object/from16 v5, v114

    .line 667
    .line 668
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 669
    .line 670
    .line 671
    iget-wide v5, v1, Lcom/android/server/power/PowerManagerService;->mEnhancedDischargeTimeElapsed:J

    .line 672
    .line 673
    invoke-virtual {v4, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 674
    .line 675
    .line 676
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 677
    .line 678
    .line 679
    move-result-object v4

    .line 680
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 681
    .line 682
    .line 683
    new-instance v4, Ljava/lang/StringBuilder;

    .line 684
    .line 685
    move-object/from16 v5, v113

    .line 686
    .line 687
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 688
    .line 689
    .line 690
    iget-wide v5, v1, Lcom/android/server/power/PowerManagerService;->mLastEnhancedDischargeTimeUpdatedElapsed:J

    .line 691
    .line 692
    invoke-virtual {v4, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 693
    .line 694
    .line 695
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 696
    .line 697
    .line 698
    move-result-object v4

    .line 699
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 700
    .line 701
    .line 702
    new-instance v4, Ljava/lang/StringBuilder;

    .line 703
    .line 704
    move-object/from16 v5, v112

    .line 705
    .line 706
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 707
    .line 708
    .line 709
    iget-boolean v5, v1, Lcom/android/server/power/PowerManagerService;->mEnhancedDischargePredictionIsPersonalized:Z

    .line 710
    .line 711
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 712
    .line 713
    .line 714
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 715
    .line 716
    .line 717
    move-result-object v4

    .line 718
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 719
    .line 720
    .line 721
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_2

    .line 722
    :try_start_2
    new-instance v3, Ljava/lang/StringBuilder;

    .line 723
    .line 724
    move-object/from16 v4, v111

    .line 725
    .line 726
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 727
    .line 728
    .line 729
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mUseAutoSuspend:Z

    .line 730
    .line 731
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 732
    .line 733
    .line 734
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 735
    .line 736
    .line 737
    move-result-object v3

    .line 738
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 739
    .line 740
    .line 741
    new-instance v3, Ljava/lang/StringBuilder;

    .line 742
    .line 743
    move-object/from16 v4, v110

    .line 744
    .line 745
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 746
    .line 747
    .line 748
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mHalAutoSuspendModeEnabled:Z

    .line 749
    .line 750
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 751
    .line 752
    .line 753
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 754
    .line 755
    .line 756
    move-result-object v3

    .line 757
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 758
    .line 759
    .line 760
    new-instance v3, Ljava/lang/StringBuilder;

    .line 761
    .line 762
    move-object/from16 v4, v109

    .line 763
    .line 764
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 765
    .line 766
    .line 767
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mHalInteractiveModeEnabled:Z

    .line 768
    .line 769
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 770
    .line 771
    .line 772
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 773
    .line 774
    .line 775
    move-result-object v3

    .line 776
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 777
    .line 778
    .line 779
    new-instance v3, Ljava/lang/StringBuilder;

    .line 780
    .line 781
    move-object/from16 v4, v108

    .line 782
    .line 783
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 784
    .line 785
    .line 786
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 787
    .line 788
    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 789
    .line 790
    .line 791
    move-result-object v4

    .line 792
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 793
    .line 794
    .line 795
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 796
    .line 797
    .line 798
    move-result-object v3

    .line 799
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 800
    .line 801
    .line 802
    const-string v3, "  mNotifyLongScheduled="

    .line 803
    .line 804
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 805
    .line 806
    .line 807
    iget-wide v3, v1, Lcom/android/server/power/PowerManagerService;->mNotifyLongScheduled:J

    .line 808
    .line 809
    const-wide/16 v5, 0x0

    .line 810
    .line 811
    cmp-long v7, v3, v5

    .line 812
    .line 813
    if-nez v7, :cond_0

    .line 814
    .line 815
    const-string v3, "(none)"

    .line 816
    .line 817
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 818
    .line 819
    .line 820
    goto :goto_0

    .line 821
    :catchall_0
    move-exception v0

    .line 822
    move-object v1, v0

    .line 823
    goto/16 :goto_11

    .line 824
    .line 825
    :cond_0
    iget-object v7, v1, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 826
    .line 827
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 828
    .line 829
    .line 830
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 831
    .line 832
    .line 833
    move-result-wide v7

    .line 834
    invoke-static {v3, v4, v7, v8, v2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 835
    .line 836
    .line 837
    :goto_0
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 838
    .line 839
    .line 840
    const-string v3, "  mNotifyLongDispatched="

    .line 841
    .line 842
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 843
    .line 844
    .line 845
    iget-wide v3, v1, Lcom/android/server/power/PowerManagerService;->mNotifyLongDispatched:J

    .line 846
    .line 847
    cmp-long v7, v3, v5

    .line 848
    .line 849
    if-nez v7, :cond_1

    .line 850
    .line 851
    const-string v3, "(none)"

    .line 852
    .line 853
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 854
    .line 855
    .line 856
    goto :goto_1

    .line 857
    :cond_1
    iget-object v7, v1, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 858
    .line 859
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 860
    .line 861
    .line 862
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 863
    .line 864
    .line 865
    move-result-wide v7

    .line 866
    invoke-static {v3, v4, v7, v8, v2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 867
    .line 868
    .line 869
    :goto_1
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 870
    .line 871
    .line 872
    const-string v3, "  mNotifyLongNextCheck="

    .line 873
    .line 874
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 875
    .line 876
    .line 877
    iget-wide v3, v1, Lcom/android/server/power/PowerManagerService;->mNotifyLongNextCheck:J

    .line 878
    .line 879
    cmp-long v5, v3, v5

    .line 880
    .line 881
    if-nez v5, :cond_2

    .line 882
    .line 883
    const-string v3, "(none)"

    .line 884
    .line 885
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 886
    .line 887
    .line 888
    goto :goto_2

    .line 889
    :cond_2
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 890
    .line 891
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 892
    .line 893
    .line 894
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 895
    .line 896
    .line 897
    move-result-wide v5

    .line 898
    invoke-static {v3, v4, v5, v6, v2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 899
    .line 900
    .line 901
    :goto_2
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 902
    .line 903
    .line 904
    new-instance v3, Ljava/lang/StringBuilder;

    .line 905
    .line 906
    move-object/from16 v4, v107

    .line 907
    .line 908
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 909
    .line 910
    .line 911
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mRequestWaitForNegativeProximity:Z

    .line 912
    .line 913
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 914
    .line 915
    .line 916
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 917
    .line 918
    .line 919
    move-result-object v3

    .line 920
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 921
    .line 922
    .line 923
    new-instance v3, Ljava/lang/StringBuilder;

    .line 924
    .line 925
    move-object/from16 v4, v106

    .line 926
    .line 927
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 928
    .line 929
    .line 930
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mInterceptedPowerKeyForProximity:Z

    .line 931
    .line 932
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 933
    .line 934
    .line 935
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 936
    .line 937
    .line 938
    move-result-object v3

    .line 939
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 940
    .line 941
    .line 942
    new-instance v3, Ljava/lang/StringBuilder;

    .line 943
    .line 944
    move-object/from16 v4, v105

    .line 945
    .line 946
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 947
    .line 948
    .line 949
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mInterceptedKeyForProximity:Z

    .line 950
    .line 951
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 952
    .line 953
    .line 954
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 955
    .line 956
    .line 957
    move-result-object v3

    .line 958
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 959
    .line 960
    .line 961
    new-instance v3, Ljava/lang/StringBuilder;

    .line 962
    .line 963
    move-object/from16 v4, v104

    .line 964
    .line 965
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 966
    .line 967
    .line 968
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mSandmanScheduled:Z

    .line 969
    .line 970
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 971
    .line 972
    .line 973
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 974
    .line 975
    .line 976
    move-result-object v3

    .line 977
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 978
    .line 979
    .line 980
    new-instance v3, Ljava/lang/StringBuilder;

    .line 981
    .line 982
    move-object/from16 v4, v103

    .line 983
    .line 984
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 985
    .line 986
    .line 987
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mBatteryLevelLow:Z

    .line 988
    .line 989
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 990
    .line 991
    .line 992
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 993
    .line 994
    .line 995
    move-result-object v3

    .line 996
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 997
    .line 998
    .line 999
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1000
    .line 1001
    move-object/from16 v4, v102

    .line 1002
    .line 1003
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1004
    .line 1005
    .line 1006
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mLightDeviceIdleMode:Z

    .line 1007
    .line 1008
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1009
    .line 1010
    .line 1011
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1012
    .line 1013
    .line 1014
    move-result-object v3

    .line 1015
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1016
    .line 1017
    .line 1018
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1019
    .line 1020
    move-object/from16 v4, v101

    .line 1021
    .line 1022
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1023
    .line 1024
    .line 1025
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDeviceIdleMode:Z

    .line 1026
    .line 1027
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1028
    .line 1029
    .line 1030
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1031
    .line 1032
    .line 1033
    move-result-object v3

    .line 1034
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1035
    .line 1036
    .line 1037
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1038
    .line 1039
    move-object/from16 v4, v100

    .line 1040
    .line 1041
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1042
    .line 1043
    .line 1044
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mDeviceIdleWhitelist:[I

    .line 1045
    .line 1046
    invoke-static {v4}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    .line 1047
    .line 1048
    .line 1049
    move-result-object v4

    .line 1050
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1051
    .line 1052
    .line 1053
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1054
    .line 1055
    .line 1056
    move-result-object v3

    .line 1057
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1058
    .line 1059
    .line 1060
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1061
    .line 1062
    move-object/from16 v4, v99

    .line 1063
    .line 1064
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1065
    .line 1066
    .line 1067
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mDeviceIdleTempWhitelist:[I

    .line 1068
    .line 1069
    invoke-static {v4}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    .line 1070
    .line 1071
    .line 1072
    move-result-object v4

    .line 1073
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1074
    .line 1075
    .line 1076
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1077
    .line 1078
    .line 1079
    move-result-object v3

    .line 1080
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1081
    .line 1082
    .line 1083
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1084
    .line 1085
    move-object/from16 v4, v98

    .line 1086
    .line 1087
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1088
    .line 1089
    .line 1090
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyActive:Z

    .line 1091
    .line 1092
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1093
    .line 1094
    .line 1095
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1096
    .line 1097
    .line 1098
    move-result-object v3

    .line 1099
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1100
    .line 1101
    .line 1102
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1103
    .line 1104
    move-object/from16 v4, v97

    .line 1105
    .line 1106
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1107
    .line 1108
    .line 1109
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mLastGlobalWakeTime:J

    .line 1110
    .line 1111
    invoke-static {v4, v5}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 1112
    .line 1113
    .line 1114
    move-result-object v4

    .line 1115
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1116
    .line 1117
    .line 1118
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1119
    .line 1120
    .line 1121
    move-result-object v3

    .line 1122
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1123
    .line 1124
    .line 1125
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1126
    .line 1127
    move-object/from16 v4, v96

    .line 1128
    .line 1129
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1130
    .line 1131
    .line 1132
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepTime:J

    .line 1133
    .line 1134
    invoke-static {v4, v5}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 1135
    .line 1136
    .line 1137
    move-result-object v4

    .line 1138
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1139
    .line 1140
    .line 1141
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1142
    .line 1143
    .line 1144
    move-result-object v3

    .line 1145
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1146
    .line 1147
    .line 1148
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1149
    .line 1150
    move-object/from16 v4, v95

    .line 1151
    .line 1152
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1153
    .line 1154
    .line 1155
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepReason:I

    .line 1156
    .line 1157
    invoke-static {v4}, Landroid/os/PowerManager;->sleepReasonToString(I)Ljava/lang/String;

    .line 1158
    .line 1159
    .line 1160
    move-result-object v4

    .line 1161
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1162
    .line 1163
    .line 1164
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1165
    .line 1166
    .line 1167
    move-result-object v3

    .line 1168
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1169
    .line 1170
    .line 1171
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1172
    .line 1173
    move-object/from16 v4, v94

    .line 1174
    .line 1175
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1176
    .line 1177
    .line 1178
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mLastGlobalWakeTimeRealtime:J

    .line 1179
    .line 1180
    invoke-static {v4, v5}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 1181
    .line 1182
    .line 1183
    move-result-object v4

    .line 1184
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1185
    .line 1186
    .line 1187
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1188
    .line 1189
    .line 1190
    move-result-object v3

    .line 1191
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1192
    .line 1193
    .line 1194
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1195
    .line 1196
    move-object/from16 v4, v93

    .line 1197
    .line 1198
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1199
    .line 1200
    .line 1201
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepTimeRealtime:J

    .line 1202
    .line 1203
    invoke-static {v4, v5}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 1204
    .line 1205
    .line 1206
    move-result-object v4

    .line 1207
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1208
    .line 1209
    .line 1210
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1211
    .line 1212
    .line 1213
    move-result-object v3

    .line 1214
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1215
    .line 1216
    .line 1217
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1218
    .line 1219
    move-object/from16 v4, v92

    .line 1220
    .line 1221
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1222
    .line 1223
    .line 1224
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mLastInteractivePowerHintTime:J

    .line 1225
    .line 1226
    invoke-static {v4, v5}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 1227
    .line 1228
    .line 1229
    move-result-object v4

    .line 1230
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1231
    .line 1232
    .line 1233
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1234
    .line 1235
    .line 1236
    move-result-object v3

    .line 1237
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1238
    .line 1239
    .line 1240
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1241
    .line 1242
    move-object/from16 v4, v91

    .line 1243
    .line 1244
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1245
    .line 1246
    .line 1247
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mLastScreenBrightnessBoostTime:J

    .line 1248
    .line 1249
    invoke-static {v4, v5}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 1250
    .line 1251
    .line 1252
    move-result-object v4

    .line 1253
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1254
    .line 1255
    .line 1256
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1257
    .line 1258
    .line 1259
    move-result-object v3

    .line 1260
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1261
    .line 1262
    .line 1263
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1264
    .line 1265
    move-object/from16 v4, v90

    .line 1266
    .line 1267
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1268
    .line 1269
    .line 1270
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 1271
    .line 1272
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1273
    .line 1274
    .line 1275
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1276
    .line 1277
    .line 1278
    move-result-object v3

    .line 1279
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1280
    .line 1281
    .line 1282
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1283
    .line 1284
    move-object/from16 v4, v89

    .line 1285
    .line 1286
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1287
    .line 1288
    .line 1289
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDefaultDisplayReadyByProximity:Z

    .line 1290
    .line 1291
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1292
    .line 1293
    .line 1294
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1295
    .line 1296
    .line 1297
    move-result-object v3

    .line 1298
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1299
    .line 1300
    .line 1301
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1302
    .line 1303
    move-object/from16 v4, v88

    .line 1304
    .line 1305
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1306
    .line 1307
    .line 1308
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mHoldingWakeLockSuspendBlocker:Z

    .line 1309
    .line 1310
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1311
    .line 1312
    .line 1313
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1314
    .line 1315
    .line 1316
    move-result-object v3

    .line 1317
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1318
    .line 1319
    .line 1320
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1321
    .line 1322
    move-object/from16 v4, v87

    .line 1323
    .line 1324
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1325
    .line 1326
    .line 1327
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mHoldingDisplaySuspendBlocker:Z

    .line 1328
    .line 1329
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1330
    .line 1331
    .line 1332
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1333
    .line 1334
    .line 1335
    move-result-object v3

    .line 1336
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1337
    .line 1338
    .line 1339
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 1340
    .line 1341
    .line 1342
    const-string v3, "Settings and Configuration:"

    .line 1343
    .line 1344
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1345
    .line 1346
    .line 1347
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1348
    .line 1349
    move-object/from16 v4, v86

    .line 1350
    .line 1351
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1352
    .line 1353
    .line 1354
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDecoupleHalAutoSuspendModeFromDisplayConfig:Z

    .line 1355
    .line 1356
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1357
    .line 1358
    .line 1359
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1360
    .line 1361
    .line 1362
    move-result-object v3

    .line 1363
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1364
    .line 1365
    .line 1366
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1367
    .line 1368
    move-object/from16 v4, v85

    .line 1369
    .line 1370
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1371
    .line 1372
    .line 1373
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDecoupleHalInteractiveModeFromDisplayConfig:Z

    .line 1374
    .line 1375
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1376
    .line 1377
    .line 1378
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1379
    .line 1380
    .line 1381
    move-result-object v3

    .line 1382
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1383
    .line 1384
    .line 1385
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1386
    .line 1387
    move-object/from16 v4, v84

    .line 1388
    .line 1389
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1390
    .line 1391
    .line 1392
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedConfig:Z

    .line 1393
    .line 1394
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1395
    .line 1396
    .line 1397
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1398
    .line 1399
    .line 1400
    move-result-object v3

    .line 1401
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1402
    .line 1403
    .line 1404
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1405
    .line 1406
    move-object/from16 v4, v83

    .line 1407
    .line 1408
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1409
    .line 1410
    .line 1411
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedInTheaterModeConfig:Z

    .line 1412
    .line 1413
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1414
    .line 1415
    .line 1416
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1417
    .line 1418
    .line 1419
    move-result-object v3

    .line 1420
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1421
    .line 1422
    .line 1423
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1424
    .line 1425
    move-object/from16 v4, v82

    .line 1426
    .line 1427
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1428
    .line 1429
    .line 1430
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mTheaterModeEnabled:Z

    .line 1431
    .line 1432
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1433
    .line 1434
    .line 1435
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1436
    .line 1437
    .line 1438
    move-result-object v3

    .line 1439
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1440
    .line 1441
    .line 1442
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1443
    .line 1444
    move-object/from16 v4, v81

    .line 1445
    .line 1446
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1447
    .line 1448
    .line 1449
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mKeepDreamingWhenUnplugging:Z

    .line 1450
    .line 1451
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1452
    .line 1453
    .line 1454
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1455
    .line 1456
    .line 1457
    move-result-object v3

    .line 1458
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1459
    .line 1460
    .line 1461
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1462
    .line 1463
    move-object/from16 v4, v80

    .line 1464
    .line 1465
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1466
    .line 1467
    .line 1468
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mSuspendWhenScreenOffDueToProximityConfig:Z

    .line 1469
    .line 1470
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1471
    .line 1472
    .line 1473
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1474
    .line 1475
    .line 1476
    move-result-object v3

    .line 1477
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1478
    .line 1479
    .line 1480
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1481
    .line 1482
    move-object/from16 v4, v79

    .line 1483
    .line 1484
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1485
    .line 1486
    .line 1487
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsSupportedConfig:Z

    .line 1488
    .line 1489
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1490
    .line 1491
    .line 1492
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1493
    .line 1494
    .line 1495
    move-result-object v3

    .line 1496
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1497
    .line 1498
    .line 1499
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1500
    .line 1501
    move-object/from16 v4, v78

    .line 1502
    .line 1503
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1504
    .line 1505
    .line 1506
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledByDefaultConfig:Z

    .line 1507
    .line 1508
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1509
    .line 1510
    .line 1511
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1512
    .line 1513
    .line 1514
    move-result-object v3

    .line 1515
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1516
    .line 1517
    .line 1518
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1519
    .line 1520
    move-object/from16 v4, v77

    .line 1521
    .line 1522
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1523
    .line 1524
    .line 1525
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnSleepByDefaultConfig:Z

    .line 1526
    .line 1527
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1528
    .line 1529
    .line 1530
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1531
    .line 1532
    .line 1533
    move-result-object v3

    .line 1534
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1535
    .line 1536
    .line 1537
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1538
    .line 1539
    move-object/from16 v4, v76

    .line 1540
    .line 1541
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1542
    .line 1543
    .line 1544
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnDockByDefaultConfig:Z

    .line 1545
    .line 1546
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1547
    .line 1548
    .line 1549
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1550
    .line 1551
    .line 1552
    move-result-object v3

    .line 1553
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1554
    .line 1555
    .line 1556
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1557
    .line 1558
    move-object/from16 v4, v75

    .line 1559
    .line 1560
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1561
    .line 1562
    .line 1563
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledOnBatteryConfig:Z

    .line 1564
    .line 1565
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1566
    .line 1567
    .line 1568
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1569
    .line 1570
    .line 1571
    move-result-object v3

    .line 1572
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1573
    .line 1574
    .line 1575
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1576
    .line 1577
    move-object/from16 v4, v74

    .line 1578
    .line 1579
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1580
    .line 1581
    .line 1582
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenPoweredConfig:I

    .line 1583
    .line 1584
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1585
    .line 1586
    .line 1587
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1588
    .line 1589
    .line 1590
    move-result-object v3

    .line 1591
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1592
    .line 1593
    .line 1594
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1595
    .line 1596
    move-object/from16 v4, v73

    .line 1597
    .line 1598
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1599
    .line 1600
    .line 1601
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenNotPoweredConfig:I

    .line 1602
    .line 1603
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1604
    .line 1605
    .line 1606
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1607
    .line 1608
    .line 1609
    move-result-object v3

    .line 1610
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1611
    .line 1612
    .line 1613
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1614
    .line 1615
    move-object/from16 v4, v72

    .line 1616
    .line 1617
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1618
    .line 1619
    .line 1620
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrainCutoffConfig:I

    .line 1621
    .line 1622
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1623
    .line 1624
    .line 1625
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1626
    .line 1627
    .line 1628
    move-result-object v3

    .line 1629
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1630
    .line 1631
    .line 1632
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1633
    .line 1634
    move-object/from16 v4, v71

    .line 1635
    .line 1636
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1637
    .line 1638
    .line 1639
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledSetting:Z

    .line 1640
    .line 1641
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1642
    .line 1643
    .line 1644
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1645
    .line 1646
    .line 1647
    move-result-object v3

    .line 1648
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1649
    .line 1650
    .line 1651
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1652
    .line 1653
    move-object/from16 v4, v70

    .line 1654
    .line 1655
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1656
    .line 1657
    .line 1658
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnSleepSetting:Z

    .line 1659
    .line 1660
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1661
    .line 1662
    .line 1663
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1664
    .line 1665
    .line 1666
    move-result-object v3

    .line 1667
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1668
    .line 1669
    .line 1670
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1671
    .line 1672
    move-object/from16 v4, v69

    .line 1673
    .line 1674
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1675
    .line 1676
    .line 1677
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnDockSetting:Z

    .line 1678
    .line 1679
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1680
    .line 1681
    .line 1682
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1683
    .line 1684
    .line 1685
    move-result-object v3

    .line 1686
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1687
    .line 1688
    .line 1689
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1690
    .line 1691
    move-object/from16 v4, v68

    .line 1692
    .line 1693
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1694
    .line 1695
    .line 1696
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDozeAfterScreenOff:Z

    .line 1697
    .line 1698
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1699
    .line 1700
    .line 1701
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1702
    .line 1703
    .line 1704
    move-result-object v3

    .line 1705
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1706
    .line 1707
    .line 1708
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1709
    .line 1710
    move-object/from16 v4, v67

    .line 1711
    .line 1712
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1713
    .line 1714
    .line 1715
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mBrightWhenDozingConfig:Z

    .line 1716
    .line 1717
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1718
    .line 1719
    .line 1720
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1721
    .line 1722
    .line 1723
    move-result-object v3

    .line 1724
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1725
    .line 1726
    .line 1727
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1728
    .line 1729
    move-object/from16 v4, v66

    .line 1730
    .line 1731
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1732
    .line 1733
    .line 1734
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mMinimumScreenOffTimeoutConfig:J

    .line 1735
    .line 1736
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1737
    .line 1738
    .line 1739
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1740
    .line 1741
    .line 1742
    move-result-object v3

    .line 1743
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1744
    .line 1745
    .line 1746
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1747
    .line 1748
    move-object/from16 v4, v65

    .line 1749
    .line 1750
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1751
    .line 1752
    .line 1753
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimDurationConfig:J

    .line 1754
    .line 1755
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1756
    .line 1757
    .line 1758
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1759
    .line 1760
    .line 1761
    move-result-object v3

    .line 1762
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1763
    .line 1764
    .line 1765
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1766
    .line 1767
    move-object/from16 v4, v64

    .line 1768
    .line 1769
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1770
    .line 1771
    .line 1772
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimRatioConfig:F

    .line 1773
    .line 1774
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 1775
    .line 1776
    .line 1777
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1778
    .line 1779
    .line 1780
    move-result-object v3

    .line 1781
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1782
    .line 1783
    .line 1784
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1785
    .line 1786
    move-object/from16 v4, v63

    .line 1787
    .line 1788
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1789
    .line 1790
    .line 1791
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutConfig:I

    .line 1792
    .line 1793
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1794
    .line 1795
    .line 1796
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1797
    .line 1798
    .line 1799
    move-result-object v3

    .line 1800
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1801
    .line 1802
    .line 1803
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1804
    .line 1805
    move-object/from16 v4, v62

    .line 1806
    .line 1807
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1808
    .line 1809
    .line 1810
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutSetting:J

    .line 1811
    .line 1812
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1813
    .line 1814
    .line 1815
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1816
    .line 1817
    .line 1818
    move-result-object v3

    .line 1819
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1820
    .line 1821
    .line 1822
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1823
    .line 1824
    move-object/from16 v4, v61

    .line 1825
    .line 1826
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1827
    .line 1828
    .line 1829
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mAttentiveWarningDurationConfig:J

    .line 1830
    .line 1831
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1832
    .line 1833
    .line 1834
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1835
    .line 1836
    .line 1837
    move-result-object v3

    .line 1838
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1839
    .line 1840
    .line 1841
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1842
    .line 1843
    move-object/from16 v4, v60

    .line 1844
    .line 1845
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1846
    .line 1847
    .line 1848
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 1849
    .line 1850
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1851
    .line 1852
    .line 1853
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1854
    .line 1855
    .line 1856
    move-result-object v3

    .line 1857
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1858
    .line 1859
    .line 1860
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1861
    .line 1862
    move-object/from16 v4, v59

    .line 1863
    .line 1864
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1865
    .line 1866
    .line 1867
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mSleepTimeoutSetting:J

    .line 1868
    .line 1869
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1870
    .line 1871
    .line 1872
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1873
    .line 1874
    .line 1875
    move-result-object v3

    .line 1876
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1877
    .line 1878
    .line 1879
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1880
    .line 1881
    move-object/from16 v4, v58

    .line 1882
    .line 1883
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1884
    .line 1885
    .line 1886
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mMaximumScreenOffTimeoutFromDeviceAdmin:J

    .line 1887
    .line 1888
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1889
    .line 1890
    .line 1891
    const-string v4, " (enforced="

    .line 1892
    .line 1893
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1894
    .line 1895
    .line 1896
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()Z

    .line 1897
    .line 1898
    .line 1899
    move-result v4

    .line 1900
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 1901
    .line 1902
    .line 1903
    const-string v4, ")"

    .line 1904
    .line 1905
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 1906
    .line 1907
    .line 1908
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1909
    .line 1910
    .line 1911
    move-result-object v3

    .line 1912
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1913
    .line 1914
    .line 1915
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1916
    .line 1917
    move-object/from16 v4, v57

    .line 1918
    .line 1919
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1920
    .line 1921
    .line 1922
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 1923
    .line 1924
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 1925
    .line 1926
    .line 1927
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1928
    .line 1929
    .line 1930
    move-result-object v3

    .line 1931
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1932
    .line 1933
    .line 1934
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1935
    .line 1936
    move-object/from16 v4, v56

    .line 1937
    .line 1938
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1939
    .line 1940
    .line 1941
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessOverrideFromWindowManager:F

    .line 1942
    .line 1943
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 1944
    .line 1945
    .line 1946
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1947
    .line 1948
    .line 1949
    move-result-object v3

    .line 1950
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1951
    .line 1952
    .line 1953
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1954
    .line 1955
    move-object/from16 v4, v55

    .line 1956
    .line 1957
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1958
    .line 1959
    .line 1960
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutOverrideFromWindowManager:J

    .line 1961
    .line 1962
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1963
    .line 1964
    .line 1965
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1966
    .line 1967
    .line 1968
    move-result-object v3

    .line 1969
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1970
    .line 1971
    .line 1972
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1973
    .line 1974
    move-object/from16 v4, v54

    .line 1975
    .line 1976
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1977
    .line 1978
    .line 1979
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutForDexOverrideFromWindowManager:J

    .line 1980
    .line 1981
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 1982
    .line 1983
    .line 1984
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 1985
    .line 1986
    .line 1987
    move-result-object v3

    .line 1988
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 1989
    .line 1990
    .line 1991
    new-instance v3, Ljava/lang/StringBuilder;

    .line 1992
    .line 1993
    move-object/from16 v4, v53

    .line 1994
    .line 1995
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 1996
    .line 1997
    .line 1998
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mUserInactiveOverrideFromWindowManager:Z

    .line 1999
    .line 2000
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2001
    .line 2002
    .line 2003
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2004
    .line 2005
    .line 2006
    move-result-object v3

    .line 2007
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2008
    .line 2009
    .line 2010
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2011
    .line 2012
    move-object/from16 v4, v52

    .line 2013
    .line 2014
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2015
    .line 2016
    .line 2017
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideFromDreamManager:I

    .line 2018
    .line 2019
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2020
    .line 2021
    .line 2022
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2023
    .line 2024
    .line 2025
    move-result-object v3

    .line 2026
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2027
    .line 2028
    .line 2029
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2030
    .line 2031
    move-object/from16 v4, v51

    .line 2032
    .line 2033
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2034
    .line 2035
    .line 2036
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDrawWakeLockOverrideFromSidekick:Z

    .line 2037
    .line 2038
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2039
    .line 2040
    .line 2041
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2042
    .line 2043
    .line 2044
    move-result-object v3

    .line 2045
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2046
    .line 2047
    .line 2048
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2049
    .line 2050
    move-object/from16 v4, v50

    .line 2051
    .line 2052
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2053
    .line 2054
    .line 2055
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManager:I

    .line 2056
    .line 2057
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2058
    .line 2059
    .line 2060
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2061
    .line 2062
    .line 2063
    move-result-object v3

    .line 2064
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2065
    .line 2066
    .line 2067
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2068
    .line 2069
    move-object/from16 v4, v49

    .line 2070
    .line 2071
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2072
    .line 2073
    .line 2074
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMinimum:F

    .line 2075
    .line 2076
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2077
    .line 2078
    .line 2079
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2080
    .line 2081
    .line 2082
    move-result-object v3

    .line 2083
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2084
    .line 2085
    .line 2086
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2087
    .line 2088
    move-object/from16 v4, v48

    .line 2089
    .line 2090
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2091
    .line 2092
    .line 2093
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessMaximum:F

    .line 2094
    .line 2095
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2096
    .line 2097
    .line 2098
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2099
    .line 2100
    .line 2101
    move-result-object v3

    .line 2102
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2103
    .line 2104
    .line 2105
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2106
    .line 2107
    move-object/from16 v4, v47

    .line 2108
    .line 2109
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2110
    .line 2111
    .line 2112
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDefault:F

    .line 2113
    .line 2114
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 2115
    .line 2116
    .line 2117
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2118
    .line 2119
    .line 2120
    move-result-object v3

    .line 2121
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2122
    .line 2123
    .line 2124
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2125
    .line 2126
    move-object/from16 v4, v46

    .line 2127
    .line 2128
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2129
    .line 2130
    .line 2131
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mDoubleTapWakeEnabled:Z

    .line 2132
    .line 2133
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2134
    .line 2135
    .line 2136
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2137
    .line 2138
    .line 2139
    move-result-object v3

    .line 2140
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2141
    .line 2142
    .line 2143
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2144
    .line 2145
    move-object/from16 v4, v45

    .line 2146
    .line 2147
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2148
    .line 2149
    .line 2150
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mForegroundProfile:I

    .line 2151
    .line 2152
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2153
    .line 2154
    .line 2155
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2156
    .line 2157
    .line 2158
    move-result-object v3

    .line 2159
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2160
    .line 2161
    .line 2162
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2163
    .line 2164
    move-object/from16 v4, v44

    .line 2165
    .line 2166
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2167
    .line 2168
    .line 2169
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mUserId:I

    .line 2170
    .line 2171
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2172
    .line 2173
    .line 2174
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2175
    .line 2176
    .line 2177
    move-result-object v3

    .line 2178
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2179
    .line 2180
    .line 2181
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2182
    .line 2183
    move-object/from16 v4, v43

    .line 2184
    .line 2185
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2186
    .line 2187
    .line 2188
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 2189
    .line 2190
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2191
    .line 2192
    .line 2193
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2194
    .line 2195
    .line 2196
    move-result-object v3

    .line 2197
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2198
    .line 2199
    .line 2200
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2201
    .line 2202
    move-object/from16 v4, v42

    .line 2203
    .line 2204
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2205
    .line 2206
    .line 2207
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mOutdoorModeSetting:Z

    .line 2208
    .line 2209
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2210
    .line 2211
    .line 2212
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2213
    .line 2214
    .line 2215
    move-result-object v3

    .line 2216
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2217
    .line 2218
    .line 2219
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2220
    .line 2221
    move-object/from16 v4, v41

    .line 2222
    .line 2223
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2224
    .line 2225
    .line 2226
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessLowerLimit:I

    .line 2227
    .line 2228
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2229
    .line 2230
    .line 2231
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2232
    .line 2233
    .line 2234
    move-result-object v3

    .line 2235
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2236
    .line 2237
    .line 2238
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2239
    .line 2240
    move-object/from16 v4, v40

    .line 2241
    .line 2242
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2243
    .line 2244
    .line 2245
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessUpperLimit:I

    .line 2246
    .line 2247
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2248
    .line 2249
    .line 2250
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2251
    .line 2252
    .line 2253
    move-result-object v3

    .line 2254
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2255
    .line 2256
    .line 2257
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2258
    .line 2259
    move-object/from16 v4, v39

    .line 2260
    .line 2261
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2262
    .line 2263
    .line 2264
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mLastAutoBrightnessLimitTime:J

    .line 2265
    .line 2266
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 2267
    .line 2268
    .line 2269
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2270
    .line 2271
    .line 2272
    move-result-object v3

    .line 2273
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2274
    .line 2275
    .line 2276
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2277
    .line 2278
    move-object/from16 v4, v38

    .line 2279
    .line 2280
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2281
    .line 2282
    .line 2283
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessLimitLastCaller:Ljava/lang/String;

    .line 2284
    .line 2285
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2286
    .line 2287
    .line 2288
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2289
    .line 2290
    .line 2291
    move-result-object v3

    .line 2292
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2293
    .line 2294
    .line 2295
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2296
    .line 2297
    move-object/from16 v4, v37

    .line 2298
    .line 2299
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2300
    .line 2301
    .line 2302
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_USE_GED_DOZE:Z

    .line 2303
    .line 2304
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2305
    .line 2306
    .line 2307
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2308
    .line 2309
    .line 2310
    move-result-object v3

    .line 2311
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2312
    .line 2313
    .line 2314
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2315
    .line 2316
    move-object/from16 v4, v36

    .line 2317
    .line 2318
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2319
    .line 2320
    .line 2321
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_SEAMLESS_AOD:Z

    .line 2322
    .line 2323
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2324
    .line 2325
    .line 2326
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2327
    .line 2328
    .line 2329
    move-result-object v3

    .line 2330
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2331
    .line 2332
    .line 2333
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2334
    .line 2335
    move-object/from16 v4, v35

    .line 2336
    .line 2337
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2338
    .line 2339
    .line 2340
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_WA_WAITING_AOD_WHEN_WAKINGUP_FROM_DOZE:Z

    .line 2341
    .line 2342
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2343
    .line 2344
    .line 2345
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2346
    .line 2347
    .line 2348
    move-result-object v3

    .line 2349
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2350
    .line 2351
    .line 2352
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2353
    .line 2354
    move-object/from16 v4, v34

    .line 2355
    .line 2356
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2357
    .line 2358
    .line 2359
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_WAKEUP_WHEN_PLUG_CHANGED:Z

    .line 2360
    .line 2361
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2362
    .line 2363
    .line 2364
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2365
    .line 2366
    .line 2367
    move-result-object v3

    .line 2368
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2369
    .line 2370
    .line 2371
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2372
    .line 2373
    move-object/from16 v4, v33

    .line 2374
    .line 2375
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2376
    .line 2377
    .line 2378
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_AOD_LOOK_CHARGING_UI:Z

    .line 2379
    .line 2380
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2381
    .line 2382
    .line 2383
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2384
    .line 2385
    .line 2386
    move-result-object v3

    .line 2387
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2388
    .line 2389
    .line 2390
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2391
    .line 2392
    move-object/from16 v4, v32

    .line 2393
    .line 2394
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2395
    .line 2396
    .line 2397
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mAodMode:Z

    .line 2398
    .line 2399
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2400
    .line 2401
    .line 2402
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2403
    .line 2404
    .line 2405
    move-result-object v3

    .line 2406
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2407
    .line 2408
    .line 2409
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2410
    .line 2411
    move-object/from16 v4, v31

    .line 2412
    .line 2413
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2414
    .line 2415
    .line 2416
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mShouldWaitForTransitionToAodUi:Z

    .line 2417
    .line 2418
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2419
    .line 2420
    .line 2421
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2422
    .line 2423
    .line 2424
    move-result-object v3

    .line 2425
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2426
    .line 2427
    .line 2428
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2429
    .line 2430
    move-object/from16 v4, v30

    .line 2431
    .line 2432
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2433
    .line 2434
    .line 2435
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_DEX_DUAL_VIEW:Z

    .line 2436
    .line 2437
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2438
    .line 2439
    .line 2440
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2441
    .line 2442
    .line 2443
    move-result-object v3

    .line 2444
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2445
    .line 2446
    .line 2447
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2448
    .line 2449
    move-object/from16 v4, v29

    .line 2450
    .line 2451
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2452
    .line 2453
    .line 2454
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_FOLD_COVER_DISPLAY:Z

    .line 2455
    .line 2456
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2457
    .line 2458
    .line 2459
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2460
    .line 2461
    .line 2462
    move-result-object v3

    .line 2463
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2464
    .line 2465
    .line 2466
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2467
    .line 2468
    move-object/from16 v4, v28

    .line 2469
    .line 2470
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2471
    .line 2472
    .line 2473
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_FLIP_COVER_DISPLAY:Z

    .line 2474
    .line 2475
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2476
    .line 2477
    .line 2478
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2479
    .line 2480
    .line 2481
    move-result-object v3

    .line 2482
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2483
    .line 2484
    .line 2485
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2486
    .line 2487
    move-object/from16 v4, v27

    .line 2488
    .line 2489
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2490
    .line 2491
    .line 2492
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_FLIP_LARGE_COVER_DISPLAY:Z

    .line 2493
    .line 2494
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2495
    .line 2496
    .line 2497
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2498
    .line 2499
    .line 2500
    move-result-object v3

    .line 2501
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2502
    .line 2503
    .line 2504
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2505
    .line 2506
    move-object/from16 v4, v26

    .line 2507
    .line 2508
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2509
    .line 2510
    .line 2511
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_DUAL_DISPLAY:Z

    .line 2512
    .line 2513
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2514
    .line 2515
    .line 2516
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2517
    .line 2518
    .line 2519
    move-result-object v3

    .line 2520
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2521
    .line 2522
    .line 2523
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2524
    .line 2525
    move-object/from16 v4, v25

    .line 2526
    .line 2527
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2528
    .line 2529
    .line 2530
    sget-boolean v4, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_ENSURE_TRANSITION_TO_DOZING:Z

    .line 2531
    .line 2532
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2533
    .line 2534
    .line 2535
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2536
    .line 2537
    .line 2538
    move-result-object v3

    .line 2539
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2540
    .line 2541
    .line 2542
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getAttentiveTimeoutLocked()J

    .line 2543
    .line 2544
    .line 2545
    move-result-wide v3

    .line 2546
    invoke-virtual {v1, v3, v4}, Lcom/android/server/power/PowerManagerService;->getSleepTimeoutLocked(J)J

    .line 2547
    .line 2548
    .line 2549
    move-result-wide v5

    .line 2550
    invoke-virtual {v1, v5, v6, v3, v4}, Lcom/android/server/power/PowerManagerService;->getScreenOffTimeoutLocked(JJ)J

    .line 2551
    .line 2552
    .line 2553
    move-result-wide v7

    .line 2554
    invoke-virtual {v1, v7, v8}, Lcom/android/server/power/PowerManagerService;->getScreenDimDurationLocked(J)J

    .line 2555
    .line 2556
    .line 2557
    move-result-wide v11

    .line 2558
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 2559
    .line 2560
    .line 2561
    new-instance v9, Ljava/lang/StringBuilder;

    .line 2562
    .line 2563
    move-object/from16 v13, v24

    .line 2564
    .line 2565
    invoke-direct {v9, v13}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2566
    .line 2567
    .line 2568
    invoke-virtual {v9, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 2569
    .line 2570
    .line 2571
    const-string v3, " ms"

    .line 2572
    .line 2573
    invoke-virtual {v9, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2574
    .line 2575
    .line 2576
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2577
    .line 2578
    .line 2579
    move-result-object v3

    .line 2580
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2581
    .line 2582
    .line 2583
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2584
    .line 2585
    move-object/from16 v4, v23

    .line 2586
    .line 2587
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2588
    .line 2589
    .line 2590
    invoke-virtual {v3, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 2591
    .line 2592
    .line 2593
    const-string v4, " ms"

    .line 2594
    .line 2595
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2596
    .line 2597
    .line 2598
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2599
    .line 2600
    .line 2601
    move-result-object v3

    .line 2602
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2603
    .line 2604
    .line 2605
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2606
    .line 2607
    move-object/from16 v4, v22

    .line 2608
    .line 2609
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2610
    .line 2611
    .line 2612
    invoke-virtual {v3, v7, v8}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 2613
    .line 2614
    .line 2615
    const-string v4, " ms"

    .line 2616
    .line 2617
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2618
    .line 2619
    .line 2620
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2621
    .line 2622
    .line 2623
    move-result-object v3

    .line 2624
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2625
    .line 2626
    .line 2627
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2628
    .line 2629
    move-object/from16 v4, v21

    .line 2630
    .line 2631
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2632
    .line 2633
    .line 2634
    invoke-virtual {v3, v11, v12}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 2635
    .line 2636
    .line 2637
    const-string v4, " ms"

    .line 2638
    .line 2639
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2640
    .line 2641
    .line 2642
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2643
    .line 2644
    .line 2645
    move-result-object v3

    .line 2646
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2647
    .line 2648
    .line 2649
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2650
    .line 2651
    move-object/from16 v4, v20

    .line 2652
    .line 2653
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2654
    .line 2655
    .line 2656
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromWindowManager:J

    .line 2657
    .line 2658
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 2659
    .line 2660
    .line 2661
    const-string v4, " ms"

    .line 2662
    .line 2663
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2664
    .line 2665
    .line 2666
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2667
    .line 2668
    .line 2669
    move-result-object v3

    .line 2670
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2671
    .line 2672
    .line 2673
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2674
    .line 2675
    move-object/from16 v4, v19

    .line 2676
    .line 2677
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2678
    .line 2679
    .line 2680
    iget-wide v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromSQD:J

    .line 2681
    .line 2682
    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 2683
    .line 2684
    .line 2685
    const-string v4, " ms"

    .line 2686
    .line 2687
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2688
    .line 2689
    .line 2690
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2691
    .line 2692
    .line 2693
    move-result-object v3

    .line 2694
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2695
    .line 2696
    .line 2697
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2698
    .line 2699
    move-object/from16 v4, v18

    .line 2700
    .line 2701
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2702
    .line 2703
    .line 2704
    iget v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 2705
    .line 2706
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2707
    .line 2708
    .line 2709
    const-string v4, " ms"

    .line 2710
    .line 2711
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2712
    .line 2713
    .line 2714
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2715
    .line 2716
    .line 2717
    move-result-object v3

    .line 2718
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2719
    .line 2720
    .line 2721
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 2722
    .line 2723
    .line 2724
    const-string v3, "Smart Stay:"

    .line 2725
    .line 2726
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2727
    .line 2728
    .line 2729
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2730
    .line 2731
    move-object/from16 v4, v17

    .line 2732
    .line 2733
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2734
    .line 2735
    .line 2736
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mSmartStayEnabledSetting:Z

    .line 2737
    .line 2738
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2739
    .line 2740
    .line 2741
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2742
    .line 2743
    .line 2744
    move-result-object v3

    .line 2745
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2746
    .line 2747
    .line 2748
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mSmartStayController:Lcom/android/server/power/SmartStayController;

    .line 2749
    .line 2750
    invoke-virtual {v3, v2}, Lcom/android/server/power/SmartStayController;->dumpInternal(Ljava/io/PrintWriter;)V

    .line 2751
    .line 2752
    .line 2753
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 2754
    .line 2755
    .line 2756
    new-instance v3, Ljava/lang/StringBuilder;

    .line 2757
    .line 2758
    move-object/from16 v4, v16

    .line 2759
    .line 2760
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 2761
    .line 2762
    .line 2763
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mWakelockBlacklistAppid:Ljava/util/ArrayList;

    .line 2764
    .line 2765
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    .line 2766
    .line 2767
    .line 2768
    move-result v4

    .line 2769
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2770
    .line 2771
    .line 2772
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2773
    .line 2774
    .line 2775
    move-result-object v3

    .line 2776
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2777
    .line 2778
    .line 2779
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mWakelockBlacklistAppid:Ljava/util/ArrayList;

    .line 2780
    .line 2781
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 2782
    .line 2783
    .line 2784
    move-result-object v3

    .line 2785
    :goto_3
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    .line 2786
    .line 2787
    .line 2788
    move-result v4

    .line 2789
    if-eqz v4, :cond_3

    .line 2790
    .line 2791
    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 2792
    .line 2793
    .line 2794
    move-result-object v4

    .line 2795
    check-cast v4, Ljava/lang/Integer;

    .line 2796
    .line 2797
    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    .line 2798
    .line 2799
    .line 2800
    move-result v4

    .line 2801
    new-instance v5, Ljava/lang/StringBuilder;

    .line 2802
    .line 2803
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 2804
    .line 2805
    .line 2806
    const-string v6, "  "

    .line 2807
    .line 2808
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2809
    .line 2810
    .line 2811
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 2812
    .line 2813
    .line 2814
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2815
    .line 2816
    .line 2817
    move-result-object v4

    .line 2818
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2819
    .line 2820
    .line 2821
    goto :goto_3

    .line 2822
    :cond_3
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 2823
    .line 2824
    .line 2825
    const-string v3, "UID states (changing="

    .line 2826
    .line 2827
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2828
    .line 2829
    .line 2830
    iget-boolean v3, v1, Lcom/android/server/power/PowerManagerService;->mUidsChanging:Z

    .line 2831
    .line 2832
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Z)V

    .line 2833
    .line 2834
    .line 2835
    const-string v3, " changed="

    .line 2836
    .line 2837
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2838
    .line 2839
    .line 2840
    iget-boolean v3, v1, Lcom/android/server/power/PowerManagerService;->mUidsChanged:Z

    .line 2841
    .line 2842
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->print(Z)V

    .line 2843
    .line 2844
    .line 2845
    const-string v3, "):"

    .line 2846
    .line 2847
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2848
    .line 2849
    .line 2850
    const/4 v3, 0x0

    .line 2851
    move v4, v3

    .line 2852
    :goto_4
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 2853
    .line 2854
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    .line 2855
    .line 2856
    .line 2857
    move-result v5

    .line 2858
    if-ge v4, v5, :cond_5

    .line 2859
    .line 2860
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 2861
    .line 2862
    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 2863
    .line 2864
    .line 2865
    move-result-object v5

    .line 2866
    check-cast v5, Lcom/android/server/power/PowerManagerService$UidState;

    .line 2867
    .line 2868
    const-string v6, "  UID "

    .line 2869
    .line 2870
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2871
    .line 2872
    .line 2873
    iget-object v6, v1, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 2874
    .line 2875
    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->keyAt(I)I

    .line 2876
    .line 2877
    .line 2878
    move-result v6

    .line 2879
    invoke-static {v2, v6}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 2880
    .line 2881
    .line 2882
    const-string v6, ": "

    .line 2883
    .line 2884
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2885
    .line 2886
    .line 2887
    iget-boolean v6, v5, Lcom/android/server/power/PowerManagerService$UidState;->mActive:Z

    .line 2888
    .line 2889
    if-eqz v6, :cond_4

    .line 2890
    .line 2891
    const-string v6, "  ACTIVE "

    .line 2892
    .line 2893
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2894
    .line 2895
    .line 2896
    goto :goto_5

    .line 2897
    :cond_4
    const-string v6, "INACTIVE "

    .line 2898
    .line 2899
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2900
    .line 2901
    .line 2902
    :goto_5
    const-string v6, " count="

    .line 2903
    .line 2904
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2905
    .line 2906
    .line 2907
    iget v6, v5, Lcom/android/server/power/PowerManagerService$UidState;->mNumWakeLocks:I

    .line 2908
    .line 2909
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 2910
    .line 2911
    .line 2912
    const-string v6, " state="

    .line 2913
    .line 2914
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 2915
    .line 2916
    .line 2917
    iget v5, v5, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 2918
    .line 2919
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(I)V

    .line 2920
    .line 2921
    .line 2922
    add-int/lit8 v4, v4, 0x1

    .line 2923
    .line 2924
    goto :goto_4

    .line 2925
    :cond_5
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 2926
    .line 2927
    .line 2928
    const-string v4, "Looper state:"

    .line 2929
    .line 2930
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2931
    .line 2932
    .line 2933
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 2934
    .line 2935
    invoke-virtual {v4}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    .line 2936
    .line 2937
    .line 2938
    move-result-object v4

    .line 2939
    new-instance v5, Landroid/util/PrintWriterPrinter;

    .line 2940
    .line 2941
    invoke-direct {v5, v2}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    .line 2942
    .line 2943
    .line 2944
    const-string v6, "  "

    .line 2945
    .line 2946
    invoke-virtual {v4, v5, v6}, Landroid/os/Looper;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    .line 2947
    .line 2948
    .line 2949
    const-string v4, "Clear Cover:"

    .line 2950
    .line 2951
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2952
    .line 2953
    .line 2954
    new-instance v4, Ljava/lang/StringBuilder;

    .line 2955
    .line 2956
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 2957
    .line 2958
    .line 2959
    const-string v5, "  mIsCoverClosed: "

    .line 2960
    .line 2961
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2962
    .line 2963
    .line 2964
    iget-boolean v5, v1, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 2965
    .line 2966
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 2967
    .line 2968
    .line 2969
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2970
    .line 2971
    .line 2972
    move-result-object v4

    .line 2973
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2974
    .line 2975
    .line 2976
    new-instance v4, Ljava/lang/StringBuilder;

    .line 2977
    .line 2978
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 2979
    .line 2980
    .line 2981
    const-string v5, "  mlastUpdateCoverStateReason: "

    .line 2982
    .line 2983
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2984
    .line 2985
    .line 2986
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mlastUpdateCoverStateReason:Ljava/lang/String;

    .line 2987
    .line 2988
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 2989
    .line 2990
    .line 2991
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 2992
    .line 2993
    .line 2994
    move-result-object v4

    .line 2995
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 2996
    .line 2997
    .line 2998
    new-instance v4, Ljava/lang/StringBuilder;

    .line 2999
    .line 3000
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3001
    .line 3002
    .line 3003
    const-string v5, "  mlastUpdateCoverStateTime: = "

    .line 3004
    .line 3005
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3006
    .line 3007
    .line 3008
    iget-wide v5, v1, Lcom/android/server/power/PowerManagerService;->mlastUpdateCoverStateTime:J

    .line 3009
    .line 3010
    invoke-static {v5, v6}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 3011
    .line 3012
    .line 3013
    move-result-object v5

    .line 3014
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3015
    .line 3016
    .line 3017
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3018
    .line 3019
    .line 3020
    move-result-object v4

    .line 3021
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3022
    .line 3023
    .line 3024
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3025
    .line 3026
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3027
    .line 3028
    .line 3029
    const-string v5, "  mFeatureCoverSysfs: "

    .line 3030
    .line 3031
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3032
    .line 3033
    .line 3034
    iget-boolean v5, v1, Lcom/android/server/power/PowerManagerService;->mFeatureCoverSysfs:Z

    .line 3035
    .line 3036
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 3037
    .line 3038
    .line 3039
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3040
    .line 3041
    .line 3042
    move-result-object v4

    .line 3043
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3044
    .line 3045
    .line 3046
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3047
    .line 3048
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3049
    .line 3050
    .line 3051
    const-string v5, "  mCoverType: "

    .line 3052
    .line 3053
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3054
    .line 3055
    .line 3056
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 3057
    .line 3058
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3059
    .line 3060
    .line 3061
    const-string v5, " at "

    .line 3062
    .line 3063
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3064
    .line 3065
    .line 3066
    iget-wide v5, v1, Lcom/android/server/power/PowerManagerService;->mlastSetCoverTypeTime:J

    .line 3067
    .line 3068
    invoke-static {v5, v6}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 3069
    .line 3070
    .line 3071
    move-result-object v5

    .line 3072
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3073
    .line 3074
    .line 3075
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3076
    .line 3077
    .line 3078
    move-result-object v4

    .line 3079
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3080
    .line 3081
    .line 3082
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3083
    .line 3084
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3085
    .line 3086
    .line 3087
    const-string v5, "  mlastUpdateCoverTypeReason: "

    .line 3088
    .line 3089
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3090
    .line 3091
    .line 3092
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mlastUpdateCoverTypeReason:Ljava/lang/String;

    .line 3093
    .line 3094
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3095
    .line 3096
    .line 3097
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3098
    .line 3099
    .line 3100
    move-result-object v4

    .line 3101
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3102
    .line 3103
    .line 3104
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3105
    .line 3106
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3107
    .line 3108
    .line 3109
    const-string v5, "  mScreenBrightnessForClearCoverConfig="

    .line 3110
    .line 3111
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3112
    .line 3113
    .line 3114
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessForClearCoverConfig:F

    .line 3115
    .line 3116
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 3117
    .line 3118
    .line 3119
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3120
    .line 3121
    .line 3122
    move-result-object v4

    .line 3123
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3124
    .line 3125
    .line 3126
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3127
    .line 3128
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3129
    .line 3130
    .line 3131
    const-string v5, "  mBrightnessLimitByCoverConfig: "

    .line 3132
    .line 3133
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3134
    .line 3135
    .line 3136
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mBrightnessLimitByCoverConfig:I

    .line 3137
    .line 3138
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3139
    .line 3140
    .line 3141
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3142
    .line 3143
    .line 3144
    move-result-object v4

    .line 3145
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3146
    .line 3147
    .line 3148
    const-string v4, "Master Brightness Limit:"

    .line 3149
    .line 3150
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3151
    .line 3152
    .line 3153
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3154
    .line 3155
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3156
    .line 3157
    .line 3158
    const-string v5, "  mMasterBrightnessLowerLimit: "

    .line 3159
    .line 3160
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3161
    .line 3162
    .line 3163
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLowerLimit:I

    .line 3164
    .line 3165
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3166
    .line 3167
    .line 3168
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3169
    .line 3170
    .line 3171
    move-result-object v4

    .line 3172
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3173
    .line 3174
    .line 3175
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3176
    .line 3177
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3178
    .line 3179
    .line 3180
    const-string v5, "  mMasterBrightnessUpperLimit: "

    .line 3181
    .line 3182
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3183
    .line 3184
    .line 3185
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessUpperLimit:I

    .line 3186
    .line 3187
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3188
    .line 3189
    .line 3190
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3191
    .line 3192
    .line 3193
    move-result-object v4

    .line 3194
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3195
    .line 3196
    .line 3197
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3198
    .line 3199
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3200
    .line 3201
    .line 3202
    const-string v5, "  mMasterBrightnessLimitLastCaller: "

    .line 3203
    .line 3204
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3205
    .line 3206
    .line 3207
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitLastCaller:Ljava/lang/String;

    .line 3208
    .line 3209
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3210
    .line 3211
    .line 3212
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3213
    .line 3214
    .line 3215
    move-result-object v4

    .line 3216
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3217
    .line 3218
    .line 3219
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3220
    .line 3221
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3222
    .line 3223
    .line 3224
    const-string v5, "  mMasterBrightnessLimitPeriod: "

    .line 3225
    .line 3226
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3227
    .line 3228
    .line 3229
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitPeriod:I

    .line 3230
    .line 3231
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3232
    .line 3233
    .line 3234
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3235
    .line 3236
    .line 3237
    move-result-object v4

    .line 3238
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3239
    .line 3240
    .line 3241
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3242
    .line 3243
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3244
    .line 3245
    .line 3246
    const-string v5, "  mMasterBrightnessLimitRunning: "

    .line 3247
    .line 3248
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3249
    .line 3250
    .line 3251
    iget-boolean v5, v1, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLimitRunning:Z

    .line 3252
    .line 3253
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 3254
    .line 3255
    .line 3256
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3257
    .line 3258
    .line 3259
    move-result-object v4

    .line 3260
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3261
    .line 3262
    .line 3263
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3264
    .line 3265
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3266
    .line 3267
    .line 3268
    const-string v5, "  mLastRequestedLimitationOfBrightness: "

    .line 3269
    .line 3270
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3271
    .line 3272
    .line 3273
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfBrightness:I

    .line 3274
    .line 3275
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3276
    .line 3277
    .line 3278
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3279
    .line 3280
    .line 3281
    move-result-object v4

    .line 3282
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3283
    .line 3284
    .line 3285
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3286
    .line 3287
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3288
    .line 3289
    .line 3290
    const-string v5, "  mTargetBrightnessForLimit : "

    .line 3291
    .line 3292
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3293
    .line 3294
    .line 3295
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForLimit:I

    .line 3296
    .line 3297
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3298
    .line 3299
    .line 3300
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3301
    .line 3302
    .line 3303
    move-result-object v4

    .line 3304
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3305
    .line 3306
    .line 3307
    const-string v4, "HDR Brightness Limit"

    .line 3308
    .line 3309
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3310
    .line 3311
    .line 3312
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3313
    .line 3314
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3315
    .line 3316
    .line 3317
    const-string v5, "  mHdrBrightnessUpperLimit: "

    .line 3318
    .line 3319
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3320
    .line 3321
    .line 3322
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessUpperLimit:I

    .line 3323
    .line 3324
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3325
    .line 3326
    .line 3327
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3328
    .line 3329
    .line 3330
    move-result-object v4

    .line 3331
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3332
    .line 3333
    .line 3334
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3335
    .line 3336
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3337
    .line 3338
    .line 3339
    const-string v5, "  mLastRequestedLimitationOfHdrBrightness: "

    .line 3340
    .line 3341
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3342
    .line 3343
    .line 3344
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mLastRequestedLimitationOfHdrBrightness:I

    .line 3345
    .line 3346
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3347
    .line 3348
    .line 3349
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3350
    .line 3351
    .line 3352
    move-result-object v4

    .line 3353
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3354
    .line 3355
    .line 3356
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3357
    .line 3358
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3359
    .line 3360
    .line 3361
    const-string v5, "  mTargetBrightnessForHdrLimit: "

    .line 3362
    .line 3363
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3364
    .line 3365
    .line 3366
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mTargetBrightnessForHdrLimit:I

    .line 3367
    .line 3368
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3369
    .line 3370
    .line 3371
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3372
    .line 3373
    .line 3374
    move-result-object v4

    .line 3375
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3376
    .line 3377
    .line 3378
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3379
    .line 3380
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3381
    .line 3382
    .line 3383
    const-string v5, "  mHdrBrightnessLimitRunning: "

    .line 3384
    .line 3385
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3386
    .line 3387
    .line 3388
    iget-boolean v5, v1, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitRunning:Z

    .line 3389
    .line 3390
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 3391
    .line 3392
    .line 3393
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3394
    .line 3395
    .line 3396
    move-result-object v4

    .line 3397
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3398
    .line 3399
    .line 3400
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3401
    .line 3402
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3403
    .line 3404
    .line 3405
    const-string v5, "  mHdrBrightnessLimitPeriod: "

    .line 3406
    .line 3407
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3408
    .line 3409
    .line 3410
    iget v5, v1, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitPeriod:I

    .line 3411
    .line 3412
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3413
    .line 3414
    .line 3415
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3416
    .line 3417
    .line 3418
    move-result-object v4

    .line 3419
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3420
    .line 3421
    .line 3422
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3423
    .line 3424
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3425
    .line 3426
    .line 3427
    const-string v5, "HDR Brightness Limit Locks: size="

    .line 3428
    .line 3429
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3430
    .line 3431
    .line 3432
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 3433
    .line 3434
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 3435
    .line 3436
    .line 3437
    move-result v5

    .line 3438
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3439
    .line 3440
    .line 3441
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3442
    .line 3443
    .line 3444
    move-result-object v4

    .line 3445
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3446
    .line 3447
    .line 3448
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessLimitLocks:Ljava/util/ArrayList;

    .line 3449
    .line 3450
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 3451
    .line 3452
    .line 3453
    move-result-object v4

    .line 3454
    :goto_6
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    .line 3455
    .line 3456
    .line 3457
    move-result v5

    .line 3458
    if-eqz v5, :cond_6

    .line 3459
    .line 3460
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 3461
    .line 3462
    .line 3463
    move-result-object v5

    .line 3464
    check-cast v5, Lcom/android/server/power/PowerManagerService$HdrBrightnessLimitLock;

    .line 3465
    .line 3466
    new-instance v6, Ljava/lang/StringBuilder;

    .line 3467
    .line 3468
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 3469
    .line 3470
    .line 3471
    const-string v7, " "

    .line 3472
    .line 3473
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3474
    .line 3475
    .line 3476
    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 3477
    .line 3478
    .line 3479
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3480
    .line 3481
    .line 3482
    move-result-object v5

    .line 3483
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3484
    .line 3485
    .line 3486
    goto :goto_6

    .line 3487
    :cond_6
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3488
    .line 3489
    .line 3490
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3491
    .line 3492
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3493
    .line 3494
    .line 3495
    const-string v5, "SEC_USE_FACTORY_BINARY: "

    .line 3496
    .line 3497
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3498
    .line 3499
    .line 3500
    sget-boolean v5, Lcom/android/server/power/PowerManagerService;->SEC_USE_FACTORY_BINARY:Z

    .line 3501
    .line 3502
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 3503
    .line 3504
    .line 3505
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3506
    .line 3507
    .line 3508
    move-result-object v4

    .line 3509
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3510
    .line 3511
    .line 3512
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3513
    .line 3514
    .line 3515
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3516
    .line 3517
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3518
    .line 3519
    .line 3520
    const-string v5, "Wake Locks: size="

    .line 3521
    .line 3522
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3523
    .line 3524
    .line 3525
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 3526
    .line 3527
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 3528
    .line 3529
    .line 3530
    move-result v5

    .line 3531
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3532
    .line 3533
    .line 3534
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3535
    .line 3536
    .line 3537
    move-result-object v4

    .line 3538
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3539
    .line 3540
    .line 3541
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 3542
    .line 3543
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 3544
    .line 3545
    .line 3546
    move-result-object v4

    .line 3547
    :goto_7
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    .line 3548
    .line 3549
    .line 3550
    move-result v5

    .line 3551
    if-eqz v5, :cond_7

    .line 3552
    .line 3553
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 3554
    .line 3555
    .line 3556
    move-result-object v5

    .line 3557
    check-cast v5, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 3558
    .line 3559
    new-instance v6, Ljava/lang/StringBuilder;

    .line 3560
    .line 3561
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 3562
    .line 3563
    .line 3564
    const-string v7, "  "

    .line 3565
    .line 3566
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3567
    .line 3568
    .line 3569
    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 3570
    .line 3571
    .line 3572
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3573
    .line 3574
    .line 3575
    move-result-object v5

    .line 3576
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3577
    .line 3578
    .line 3579
    goto :goto_7

    .line 3580
    :cond_7
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3581
    .line 3582
    .line 3583
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3584
    .line 3585
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3586
    .line 3587
    .line 3588
    const-string v5, "Suspend Blockers: size="

    .line 3589
    .line 3590
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3591
    .line 3592
    .line 3593
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mSuspendBlockers:Ljava/util/ArrayList;

    .line 3594
    .line 3595
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    .line 3596
    .line 3597
    .line 3598
    move-result v5

    .line 3599
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3600
    .line 3601
    .line 3602
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3603
    .line 3604
    .line 3605
    move-result-object v4

    .line 3606
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3607
    .line 3608
    .line 3609
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mSuspendBlockers:Ljava/util/ArrayList;

    .line 3610
    .line 3611
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    .line 3612
    .line 3613
    .line 3614
    move-result-object v4

    .line 3615
    :goto_8
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    .line 3616
    .line 3617
    .line 3618
    move-result v5

    .line 3619
    if-eqz v5, :cond_8

    .line 3620
    .line 3621
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    .line 3622
    .line 3623
    .line 3624
    move-result-object v5

    .line 3625
    check-cast v5, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 3626
    .line 3627
    new-instance v6, Ljava/lang/StringBuilder;

    .line 3628
    .line 3629
    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    .line 3630
    .line 3631
    .line 3632
    const-string v7, "  "

    .line 3633
    .line 3634
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3635
    .line 3636
    .line 3637
    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 3638
    .line 3639
    .line 3640
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3641
    .line 3642
    .line 3643
    move-result-object v5

    .line 3644
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3645
    .line 3646
    .line 3647
    goto :goto_8

    .line 3648
    :cond_8
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3649
    .line 3650
    .line 3651
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3652
    .line 3653
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3654
    .line 3655
    .line 3656
    const-string v5, "Display Power: "

    .line 3657
    .line 3658
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3659
    .line 3660
    .line 3661
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mDisplayPowerCallbacks:Lcom/android/server/power/PowerManagerService$3;

    .line 3662
    .line 3663
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 3664
    .line 3665
    .line 3666
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3667
    .line 3668
    .line 3669
    move-result-object v4

    .line 3670
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3671
    .line 3672
    .line 3673
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3674
    .line 3675
    .line 3676
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3677
    .line 3678
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3679
    .line 3680
    .line 3681
    const-string/jumbo v5, "mFreezingScreenBrightness: "

    .line 3682
    .line 3683
    .line 3684
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3685
    .line 3686
    .line 3687
    iget-boolean v5, v1, Lcom/android/server/power/PowerManagerService;->mFreezingScreenBrightness:Z

    .line 3688
    .line 3689
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 3690
    .line 3691
    .line 3692
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3693
    .line 3694
    .line 3695
    move-result-object v4

    .line 3696
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3697
    .line 3698
    .line 3699
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mPowerHistorian:Lcom/android/server/power/PowerHistorian;

    .line 3700
    .line 3701
    invoke-virtual {v4, v2}, Lcom/android/server/power/PowerHistorian;->dump(Ljava/io/PrintWriter;)V

    .line 3702
    .line 3703
    .line 3704
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3705
    .line 3706
    .line 3707
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3708
    .line 3709
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3710
    .line 3711
    .line 3712
    const-string/jumbo v5, "screen on profiler V2: "

    .line 3713
    .line 3714
    .line 3715
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3716
    .line 3717
    .line 3718
    sget-object v5, Lcom/android/server/power/PowerManagerUtil;->sScreenOnProfilers:Lcom/android/internal/util/RingBuffer;

    .line 3719
    .line 3720
    invoke-virtual {v5}, Lcom/android/internal/util/RingBuffer;->size()I

    .line 3721
    .line 3722
    .line 3723
    move-result v6

    .line 3724
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3725
    .line 3726
    .line 3727
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3728
    .line 3729
    .line 3730
    move-result-object v4

    .line 3731
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3732
    .line 3733
    .line 3734
    invoke-virtual {v5}, Lcom/android/internal/util/RingBuffer;->toArray()[Ljava/lang/Object;

    .line 3735
    .line 3736
    .line 3737
    move-result-object v4

    .line 3738
    check-cast v4, [Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;

    .line 3739
    .line 3740
    move v5, v3

    .line 3741
    :goto_9
    array-length v6, v4

    .line 3742
    const/4 v7, 0x1

    .line 3743
    if-ge v5, v6, :cond_9

    .line 3744
    .line 3745
    aget-object v6, v4, v5

    .line 3746
    .line 3747
    invoke-virtual {v6, v7}, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->toString(Z)Ljava/lang/String;

    .line 3748
    .line 3749
    .line 3750
    move-result-object v6

    .line 3751
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3752
    .line 3753
    .line 3754
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3755
    .line 3756
    .line 3757
    add-int/lit8 v5, v5, 0x1

    .line 3758
    .line 3759
    goto :goto_9

    .line 3760
    :cond_9
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3761
    .line 3762
    .line 3763
    new-instance v4, Ljava/lang/StringBuilder;

    .line 3764
    .line 3765
    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    .line 3766
    .line 3767
    .line 3768
    const-string/jumbo v5, "screen off profiler V2: "

    .line 3769
    .line 3770
    .line 3771
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3772
    .line 3773
    .line 3774
    sget-object v5, Lcom/android/server/power/PowerManagerUtil;->sScreenOffProfilers:Lcom/android/internal/util/RingBuffer;

    .line 3775
    .line 3776
    invoke-virtual {v5}, Lcom/android/internal/util/RingBuffer;->size()I

    .line 3777
    .line 3778
    .line 3779
    move-result v6

    .line 3780
    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3781
    .line 3782
    .line 3783
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3784
    .line 3785
    .line 3786
    move-result-object v4

    .line 3787
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3788
    .line 3789
    .line 3790
    invoke-virtual {v5}, Lcom/android/internal/util/RingBuffer;->toArray()[Ljava/lang/Object;

    .line 3791
    .line 3792
    .line 3793
    move-result-object v4

    .line 3794
    check-cast v4, [Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;

    .line 3795
    .line 3796
    move v5, v3

    .line 3797
    :goto_a
    array-length v6, v4

    .line 3798
    if-ge v5, v6, :cond_a

    .line 3799
    .line 3800
    aget-object v6, v4, v5

    .line 3801
    .line 3802
    invoke-virtual {v6, v7}, Lcom/android/server/power/PowerManagerUtil$ScreenOffProfiler;->toString(Z)Ljava/lang/String;

    .line 3803
    .line 3804
    .line 3805
    move-result-object v6

    .line 3806
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3807
    .line 3808
    .line 3809
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3810
    .line 3811
    .line 3812
    add-int/lit8 v5, v5, 0x1

    .line 3813
    .line 3814
    goto :goto_a

    .line 3815
    :cond_a
    iget-boolean v4, v1, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 3816
    .line 3817
    if-eqz v4, :cond_b

    .line 3818
    .line 3819
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 3820
    .line 3821
    iget-object v4, v4, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mBatterySaverController:Lcom/android/server/power/batterysaver/BatterySaverController;

    .line 3822
    .line 3823
    iget-object v4, v4, Lcom/android/server/power/batterysaver/BatterySaverController;->mBatterySaverPolicy:Lcom/android/server/power/batterysaver/BatterySaverPolicy;

    .line 3824
    .line 3825
    invoke-virtual {v4, v2}, Lcom/android/server/power/batterysaver/BatterySaverPolicy;->dump(Ljava/io/PrintWriter;)V

    .line 3826
    .line 3827
    .line 3828
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 3829
    .line 3830
    invoke-virtual {v4, v2}, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->dump(Ljava/io/PrintWriter;)V

    .line 3831
    .line 3832
    .line 3833
    goto :goto_b

    .line 3834
    :cond_b
    const-string v4, "Battery Saver: DISABLED"

    .line 3835
    .line 3836
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3837
    .line 3838
    .line 3839
    :goto_b
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mAttentionDetector:Lcom/android/server/power/AttentionDetector;

    .line 3840
    .line 3841
    invoke-virtual {v4, v2}, Lcom/android/server/power/AttentionDetector;->dump(Ljava/io/PrintWriter;)V

    .line 3842
    .line 3843
    .line 3844
    invoke-virtual/range {p1 .. p1}, Ljava/io/PrintWriter;->println()V

    .line 3845
    .line 3846
    .line 3847
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 3848
    .line 3849
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    .line 3850
    .line 3851
    .line 3852
    move-result v4

    .line 3853
    new-instance v5, Ljava/lang/StringBuilder;

    .line 3854
    .line 3855
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 3856
    .line 3857
    .line 3858
    const-string v6, "Profile power states: size="

    .line 3859
    .line 3860
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3861
    .line 3862
    .line 3863
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3864
    .line 3865
    .line 3866
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 3867
    .line 3868
    .line 3869
    move-result-object v5

    .line 3870
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3871
    .line 3872
    .line 3873
    move v5, v3

    .line 3874
    :goto_c
    if-ge v5, v4, :cond_c

    .line 3875
    .line 3876
    iget-object v6, v1, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 3877
    .line 3878
    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 3879
    .line 3880
    .line 3881
    move-result-object v6

    .line 3882
    check-cast v6, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 3883
    .line 3884
    const-string v7, "  mUserId="

    .line 3885
    .line 3886
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3887
    .line 3888
    .line 3889
    iget v7, v6, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mUserId:I

    .line 3890
    .line 3891
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(I)V

    .line 3892
    .line 3893
    .line 3894
    const-string v7, " mScreenOffTimeout="

    .line 3895
    .line 3896
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3897
    .line 3898
    .line 3899
    iget-wide v7, v6, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeout:J

    .line 3900
    .line 3901
    invoke-virtual {v2, v7, v8}, Ljava/io/PrintWriter;->print(J)V

    .line 3902
    .line 3903
    .line 3904
    const-string v7, " mScreenOffTimeoutForUser="

    .line 3905
    .line 3906
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3907
    .line 3908
    .line 3909
    iget-wide v7, v6, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeoutForUser:J

    .line 3910
    .line 3911
    invoke-virtual {v2, v7, v8}, Ljava/io/PrintWriter;->print(J)V

    .line 3912
    .line 3913
    .line 3914
    const-string v7, " mWakeLockSummary="

    .line 3915
    .line 3916
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3917
    .line 3918
    .line 3919
    iget v7, v6, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mWakeLockSummary:I

    .line 3920
    .line 3921
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(I)V

    .line 3922
    .line 3923
    .line 3924
    const-string v7, " mLastUserActivityTime="

    .line 3925
    .line 3926
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3927
    .line 3928
    .line 3929
    iget-wide v7, v6, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLastUserActivityTime:J

    .line 3930
    .line 3931
    invoke-virtual {v2, v7, v8}, Ljava/io/PrintWriter;->print(J)V

    .line 3932
    .line 3933
    .line 3934
    const-string v7, " mLockingNotified="

    .line 3935
    .line 3936
    invoke-virtual {v2, v7}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 3937
    .line 3938
    .line 3939
    iget-boolean v6, v6, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLockingNotified:Z

    .line 3940
    .line 3941
    invoke-virtual {v2, v6}, Ljava/io/PrintWriter;->println(Z)V

    .line 3942
    .line 3943
    .line 3944
    add-int/lit8 v5, v5, 0x1

    .line 3945
    .line 3946
    goto :goto_c

    .line 3947
    :cond_c
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mSuspendBlockerMonitor:Lcom/android/server/power/SuspendBlockerMonitor;

    .line 3948
    .line 3949
    invoke-virtual {v4, v2}, Lcom/android/server/power/SuspendBlockerMonitor;->dump(Ljava/io/PrintWriter;)V

    .line 3950
    .line 3951
    .line 3952
    move v4, v3

    .line 3953
    :goto_d
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 3954
    .line 3955
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    .line 3956
    .line 3957
    .line 3958
    move-result v5

    .line 3959
    if-ge v4, v5, :cond_d

    .line 3960
    .line 3961
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 3962
    .line 3963
    invoke-virtual {v5, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 3964
    .line 3965
    .line 3966
    move-result-object v5

    .line 3967
    check-cast v5, Lcom/android/server/power/PowerGroup;

    .line 3968
    .line 3969
    invoke-virtual {v5}, Lcom/android/server/power/PowerGroup;->getSuspendBlockerMonitorInfo()Ljava/lang/String;

    .line 3970
    .line 3971
    .line 3972
    move-result-object v5

    .line 3973
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3974
    .line 3975
    .line 3976
    add-int/lit8 v4, v4, 0x1

    .line 3977
    .line 3978
    goto :goto_d

    .line 3979
    :cond_d
    const-string v4, "Display Group User Activity:"

    .line 3980
    .line 3981
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 3982
    .line 3983
    .line 3984
    :goto_e
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 3985
    .line 3986
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    .line 3987
    .line 3988
    .line 3989
    move-result v4

    .line 3990
    if-ge v3, v4, :cond_e

    .line 3991
    .line 3992
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 3993
    .line 3994
    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 3995
    .line 3996
    .line 3997
    move-result-object v4

    .line 3998
    check-cast v4, Lcom/android/server/power/PowerGroup;

    .line 3999
    .line 4000
    new-instance v5, Ljava/lang/StringBuilder;

    .line 4001
    .line 4002
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 4003
    .line 4004
    .line 4005
    const-string v6, "  displayGroupId="

    .line 4006
    .line 4007
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4008
    .line 4009
    .line 4010
    iget v6, v4, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 4011
    .line 4012
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 4013
    .line 4014
    .line 4015
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 4016
    .line 4017
    .line 4018
    move-result-object v5

    .line 4019
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4020
    .line 4021
    .line 4022
    new-instance v5, Ljava/lang/StringBuilder;

    .line 4023
    .line 4024
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 4025
    .line 4026
    .line 4027
    const-string v6, "  userActivitySummary=0x"

    .line 4028
    .line 4029
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4030
    .line 4031
    .line 4032
    iget v6, v4, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 4033
    .line 4034
    invoke-static {v6}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 4035
    .line 4036
    .line 4037
    move-result-object v6

    .line 4038
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4039
    .line 4040
    .line 4041
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 4042
    .line 4043
    .line 4044
    move-result-object v5

    .line 4045
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4046
    .line 4047
    .line 4048
    new-instance v5, Ljava/lang/StringBuilder;

    .line 4049
    .line 4050
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 4051
    .line 4052
    .line 4053
    const-string v6, "  lastUserActivityTime="

    .line 4054
    .line 4055
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4056
    .line 4057
    .line 4058
    iget-wide v6, v4, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 4059
    .line 4060
    invoke-static {v6, v7}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 4061
    .line 4062
    .line 4063
    move-result-object v6

    .line 4064
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4065
    .line 4066
    .line 4067
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 4068
    .line 4069
    .line 4070
    move-result-object v5

    .line 4071
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4072
    .line 4073
    .line 4074
    new-instance v5, Ljava/lang/StringBuilder;

    .line 4075
    .line 4076
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 4077
    .line 4078
    .line 4079
    const-string v6, "  lastUserActivityTimeNoChangeLights="

    .line 4080
    .line 4081
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4082
    .line 4083
    .line 4084
    iget-wide v6, v4, Lcom/android/server/power/PowerGroup;->mLastUserActivityTimeNoChangeLights:J

    .line 4085
    .line 4086
    invoke-static {v6, v7}, Landroid/util/TimeUtils;->formatUptime(J)Ljava/lang/String;

    .line 4087
    .line 4088
    .line 4089
    move-result-object v6

    .line 4090
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4091
    .line 4092
    .line 4093
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 4094
    .line 4095
    .line 4096
    move-result-object v5

    .line 4097
    invoke-virtual {v2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4098
    .line 4099
    .line 4100
    new-instance v5, Ljava/lang/StringBuilder;

    .line 4101
    .line 4102
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 4103
    .line 4104
    .line 4105
    const-string v6, "  mWakeLockSummary=0x"

    .line 4106
    .line 4107
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4108
    .line 4109
    .line 4110
    iget v4, v4, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 4111
    .line 4112
    invoke-static {v4}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    .line 4113
    .line 4114
    .line 4115
    move-result-object v4

    .line 4116
    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 4117
    .line 4118
    .line 4119
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 4120
    .line 4121
    .line 4122
    move-result-object v4

    .line 4123
    invoke-virtual {v2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4124
    .line 4125
    .line 4126
    add-int/lit8 v3, v3, 0x1

    .line 4127
    .line 4128
    goto/16 :goto_e

    .line 4129
    .line 4130
    :cond_e
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mWirelessChargerDetector:Lcom/android/server/power/WirelessChargerDetector;

    .line 4131
    .line 4132
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenOnKeeper:Lcom/android/server/power/ScreenOnKeeper;

    .line 4133
    .line 4134
    if-eqz v4, :cond_f

    .line 4135
    .line 4136
    invoke-virtual {v4, v2}, Lcom/android/server/power/ScreenOnKeeper;->dump(Ljava/io/PrintWriter;)V

    .line 4137
    .line 4138
    .line 4139
    :cond_f
    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 4140
    if-eqz v3, :cond_10

    .line 4141
    .line 4142
    invoke-virtual {v3, v2}, Lcom/android/server/power/WirelessChargerDetector;->dump(Ljava/io/PrintWriter;)V

    .line 4143
    .line 4144
    .line 4145
    :cond_10
    if-nez p2, :cond_11

    .line 4146
    .line 4147
    const-string v3, "\n\n ====================== beginning of PMS  log ======================"

    .line 4148
    .line 4149
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4150
    .line 4151
    .line 4152
    const-string v3, "  Day        Time    Tid Debug      TAG          INFO"

    .line 4153
    .line 4154
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4155
    .line 4156
    .line 4157
    const-string v3, " ==================================================================="

    .line 4158
    .line 4159
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4160
    .line 4161
    .line 4162
    invoke-static/range {p1 .. p1}, Lcom/android/server/power/Slog;->dump(Ljava/io/PrintWriter;)V

    .line 4163
    .line 4164
    .line 4165
    const-string v3, " ======================= end of PMS log ========================"

    .line 4166
    .line 4167
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4168
    .line 4169
    .line 4170
    const-string v3, " PMSLog Done !!! \n\n"

    .line 4171
    .line 4172
    invoke-virtual {v2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 4173
    .line 4174
    .line 4175
    :cond_11
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 4176
    .line 4177
    if-eqz v3, :cond_12

    .line 4178
    .line 4179
    invoke-virtual {v3, v2}, Lcom/android/server/power/Notifier;->dump(Ljava/io/PrintWriter;)V

    .line 4180
    .line 4181
    .line 4182
    :cond_12
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mAmbientDisplaySuppressionController:Lcom/android/server/power/AmbientDisplaySuppressionController;

    .line 4183
    .line 4184
    invoke-virtual {v3, v2}, Lcom/android/server/power/AmbientDisplaySuppressionController;->dump(Ljava/io/PrintWriter;)V

    .line 4185
    .line 4186
    .line 4187
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyController:Lcom/android/server/power/LowPowerStandbyController;

    .line 4188
    .line 4189
    invoke-virtual {v3, v2}, Lcom/android/server/power/LowPowerStandbyController;->dump(Ljava/io/PrintWriter;)V

    .line 4190
    .line 4191
    .line 4192
    iget-object v3, v1, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 4193
    .line 4194
    monitor-enter v3

    .line 4195
    :try_start_3
    iget-object v4, v1, Lcom/android/server/power/PowerManagerService;->mScreenTimeoutOverridePolicy:Lcom/android/server/power/ScreenTimeoutOverridePolicy;

    .line 4196
    .line 4197
    if-eqz v4, :cond_13

    .line 4198
    .line 4199
    invoke-virtual {v4, v2}, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->dump(Ljava/io/PrintWriter;)V

    .line 4200
    .line 4201
    .line 4202
    goto :goto_f

    .line 4203
    :catchall_1
    move-exception v0

    .line 4204
    move-object v1, v0

    .line 4205
    goto :goto_10

    .line 4206
    :cond_13
    :goto_f
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 4207
    iget-object v1, v1, Lcom/android/server/power/PowerManagerService;->mFeatureFlags:Lcom/android/server/power/feature/PowerManagerFlags;

    .line 4208
    .line 4209
    invoke-virtual {v1, v2}, Lcom/android/server/power/feature/PowerManagerFlags;->dump(Ljava/io/PrintWriter;)V

    .line 4210
    .line 4211
    .line 4212
    return-void

    .line 4213
    :goto_10
    :try_start_4
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4214
    throw v1

    .line 4215
    :catchall_2
    move-exception v0

    .line 4216
    move-object v1, v0

    .line 4217
    :try_start_5
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 4218
    :try_start_6
    throw v1

    .line 4219
    :goto_11
    monitor-exit v10
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 4220
    throw v1
.end method

.method public final findForegroundPackageName()Ljava/lang/String;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 2
    .line 3
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 4
    .line 5
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 6
    .line 7
    .line 8
    const-string p0, "activity"

    .line 9
    .line 10
    invoke-virtual {v0, p0}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 11
    .line 12
    .line 13
    move-result-object p0

    .line 14
    check-cast p0, Landroid/app/ActivityManager;

    .line 15
    .line 16
    const/4 v0, 0x1

    .line 17
    invoke-virtual {p0, v0}, Landroid/app/ActivityManager;->getRunningTasks(I)Ljava/util/List;

    .line 18
    .line 19
    .line 20
    move-result-object p0

    .line 21
    invoke-interface {p0}, Ljava/util/List;->isEmpty()Z

    .line 22
    .line 23
    .line 24
    move-result v0

    .line 25
    if-eqz v0, :cond_0

    .line 26
    .line 27
    const-string p0, ""

    .line 28
    .line 29
    goto :goto_0

    .line 30
    :cond_0
    const/4 v0, 0x0

    .line 31
    invoke-interface {p0, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    .line 32
    .line 33
    .line 34
    move-result-object p0

    .line 35
    check-cast p0, Landroid/app/ActivityManager$RunningTaskInfo;

    .line 36
    .line 37
    iget-object p0, p0, Landroid/app/ActivityManager$RunningTaskInfo;->topActivity:Landroid/content/ComponentName;

    .line 38
    .line 39
    invoke-virtual {p0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    .line 40
    .line 41
    .line 42
    move-result-object p0

    .line 43
    :goto_0
    return-object p0
.end method

.method public final findWakeLockIndexLocked(Landroid/os/IBinder;)I
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    :goto_0
    if-ge v1, v0, :cond_1

    .line 9
    .line 10
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 11
    .line 12
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 13
    .line 14
    .line 15
    move-result-object v2

    .line 16
    check-cast v2, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 17
    .line 18
    iget-object v2, v2, Lcom/android/server/power/PowerManagerService$WakeLock;->mLock:Landroid/os/IBinder;

    .line 19
    .line 20
    if-ne v2, p1, :cond_0

    .line 21
    .line 22
    return v1

    .line 23
    :cond_0
    add-int/lit8 v1, v1, 0x1

    .line 24
    .line 25
    goto :goto_0

    .line 26
    :cond_1
    const/4 p0, -0x1

    .line 27
    return p0
.end method

.method public findWakeLockLocked(Landroid/os/IBinder;)Lcom/android/server/power/PowerManagerService$WakeLock;
    .locals 1

    .line 1
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->findWakeLockIndexLocked(Landroid/os/IBinder;)I

    .line 2
    .line 3
    .line 4
    move-result p1

    .line 5
    const/4 v0, -0x1

    .line 6
    if-ne p1, v0, :cond_0

    .line 7
    .line 8
    const/4 p0, 0x0

    .line 9
    return-object p0

    .line 10
    :cond_0
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 11
    .line 12
    invoke-virtual {p0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 13
    .line 14
    .line 15
    move-result-object p0

    .line 16
    check-cast p0, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 17
    .line 18
    return-object p0
.end method

.method public final finishWakefulnessChangeIfNeededLocked()V
    .locals 5

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mWakefulnessChanging:Z

    .line 2
    .line 3
    if-eqz v0, :cond_8

    .line 4
    .line 5
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->areAllPowerGroupsReadyLocked()Z

    .line 6
    .line 7
    .line 8
    move-result v0

    .line 9
    if-eqz v0, :cond_8

    .line 10
    .line 11
    const/4 v0, 0x0

    .line 12
    move v1, v0

    .line 13
    :goto_0
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 14
    .line 15
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 16
    .line 17
    .line 18
    move-result v2

    .line 19
    const/4 v3, 0x3

    .line 20
    if-ge v1, v2, :cond_2

    .line 21
    .line 22
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 23
    .line 24
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 25
    .line 26
    .line 27
    move-result-object v2

    .line 28
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 29
    .line 30
    iget-boolean v4, v2, Lcom/android/server/power/PowerGroup;->mSupportsSandman:Z

    .line 31
    .line 32
    if-eqz v4, :cond_1

    .line 33
    .line 34
    iget v2, v2, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 35
    .line 36
    if-ne v2, v3, :cond_1

    .line 37
    .line 38
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 39
    .line 40
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 41
    .line 42
    .line 43
    move-result-object v2

    .line 44
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 45
    .line 46
    iget v2, v2, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 47
    .line 48
    and-int/lit8 v2, v2, 0x40

    .line 49
    .line 50
    if-nez v2, :cond_1

    .line 51
    .line 52
    sget-boolean v0, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_ENSURE_TRANSITION_TO_DOZING:Z

    .line 53
    .line 54
    if-eqz v0, :cond_0

    .line 55
    .line 56
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDozeStartInProgress:Z

    .line 57
    .line 58
    if-eqz v0, :cond_0

    .line 59
    .line 60
    const/4 v0, 0x1

    .line 61
    invoke-virtual {p0, v0}, Lcom/android/server/power/PowerManagerService;->setEnsureTransitionToDozingReleaserLocked(Z)V

    .line 62
    .line 63
    .line 64
    :cond_0
    return-void

    .line 65
    :cond_1
    add-int/lit8 v1, v1, 0x1

    .line 66
    .line 67
    goto :goto_0

    .line 68
    :cond_2
    iput-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDozeStartInProgress:Z

    .line 69
    .line 70
    sget-boolean v1, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_ENSURE_TRANSITION_TO_DOZING:Z

    .line 71
    .line 72
    if-eqz v1, :cond_3

    .line 73
    .line 74
    invoke-virtual {p0, v0}, Lcom/android/server/power/PowerManagerService;->setEnsureTransitionToDozingReleaserLocked(Z)V

    .line 75
    .line 76
    .line 77
    :cond_3
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 78
    .line 79
    .line 80
    move-result v1

    .line 81
    if-eq v1, v3, :cond_4

    .line 82
    .line 83
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 84
    .line 85
    .line 86
    move-result v1

    .line 87
    if-nez v1, :cond_5

    .line 88
    .line 89
    :cond_4
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 90
    .line 91
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 92
    .line 93
    .line 94
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 95
    .line 96
    .line 97
    move-result-wide v1

    .line 98
    iget-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mOverriddenTimeout:J

    .line 99
    .line 100
    sub-long/2addr v3, v1

    .line 101
    const-wide/16 v1, 0x0

    .line 102
    .line 103
    cmp-long v1, v3, v1

    .line 104
    .line 105
    if-ltz v1, :cond_5

    .line 106
    .line 107
    const/16 v1, 0xaab

    .line 108
    .line 109
    invoke-static {v1, v3, v4}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 110
    .line 111
    .line 112
    const-wide/16 v1, -0x1

    .line 113
    .line 114
    iput-wide v1, p0, Lcom/android/server/power/PowerManagerService;->mOverriddenTimeout:J

    .line 115
    .line 116
    :cond_5
    iput-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mWakefulnessChanging:Z

    .line 117
    .line 118
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 119
    .line 120
    move v1, v0

    .line 121
    :goto_1
    iget-object v2, p0, Lcom/android/server/power/Notifier;->mInteractivityByGroupId:Landroid/util/SparseArray;

    .line 122
    .line 123
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 124
    .line 125
    .line 126
    move-result v2

    .line 127
    if-ge v1, v2, :cond_7

    .line 128
    .line 129
    iget-object v2, p0, Lcom/android/server/power/Notifier;->mInteractivityByGroupId:Landroid/util/SparseArray;

    .line 130
    .line 131
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->keyAt(I)I

    .line 132
    .line 133
    .line 134
    move-result v2

    .line 135
    iget-object v3, p0, Lcom/android/server/power/Notifier;->mInteractivityByGroupId:Landroid/util/SparseArray;

    .line 136
    .line 137
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 138
    .line 139
    .line 140
    move-result-object v3

    .line 141
    check-cast v3, Lcom/android/server/power/Notifier$Interactivity;

    .line 142
    .line 143
    iget-boolean v4, v3, Lcom/android/server/power/Notifier$Interactivity;->isChanging:Z

    .line 144
    .line 145
    if-eqz v4, :cond_6

    .line 146
    .line 147
    iput-boolean v0, v3, Lcom/android/server/power/Notifier$Interactivity;->isChanging:Z

    .line 148
    .line 149
    invoke-virtual {p0, v2}, Lcom/android/server/power/Notifier;->handleLateInteractiveChange(I)V

    .line 150
    .line 151
    .line 152
    :cond_6
    add-int/lit8 v1, v1, 0x1

    .line 153
    .line 154
    goto :goto_1

    .line 155
    :cond_7
    iget-object v1, p0, Lcom/android/server/power/Notifier;->mGlobalInteractivity:Lcom/android/server/power/Notifier$Interactivity;

    .line 156
    .line 157
    iget-boolean v2, v1, Lcom/android/server/power/Notifier$Interactivity;->isChanging:Z

    .line 158
    .line 159
    if-eqz v2, :cond_8

    .line 160
    .line 161
    iput-boolean v0, v1, Lcom/android/server/power/Notifier$Interactivity;->isChanging:Z

    .line 162
    .line 163
    invoke-virtual {p0}, Lcom/android/server/power/Notifier;->handleLateGlobalInteractiveChange()V

    .line 164
    .line 165
    .line 166
    :cond_8
    return-void
.end method

.method public final getAttentiveTimeoutLocked()J
    .locals 4

    .line 1
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutSetting:J

    .line 2
    .line 3
    const-wide/16 v2, 0x0

    .line 4
    .line 5
    cmp-long v2, v0, v2

    .line 6
    .line 7
    if-gtz v2, :cond_0

    .line 8
    .line 9
    const-wide/16 v0, -0x1

    .line 10
    .line 11
    return-wide v0

    .line 12
    :cond_0
    iget-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mMinimumScreenOffTimeoutConfig:J

    .line 13
    .line 14
    invoke-static {v0, v1, v2, v3}, Ljava/lang/Math;->max(JJ)J

    .line 15
    .line 16
    .line 17
    move-result-wide v0

    .line 18
    return-wide v0
.end method

.method public getBinderServiceInstance()Lcom/android/server/power/PowerManagerService$BinderService;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mBinderService:Lcom/android/server/power/PowerManagerService$BinderService;

    .line 2
    .line 3
    return-object p0
.end method

.method public getDesiredScreenPolicyLocked(I)I
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 4
    .line 5
    .line 6
    move-result-object p1

    .line 7
    move-object v0, p1

    .line 8
    check-cast v0, Lcom/android/server/power/PowerGroup;

    .line 9
    .line 10
    sget-boolean v1, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 11
    .line 12
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mDozeAfterScreenOff:Z

    .line 13
    .line 14
    iget-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 15
    .line 16
    iget-boolean v4, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 17
    .line 18
    iget-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mBrightWhenDozingConfig:Z

    .line 19
    .line 20
    iget-wide v6, p0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromWindowManager:J

    .line 21
    .line 22
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/power/PowerGroup;->getDesiredScreenPolicyLocked(ZZZZZJ)I

    .line 23
    .line 24
    .line 25
    move-result p0

    .line 26
    return p0
.end method

.method public getDreamsBatteryLevelDrain()I
    .locals 0

    .line 1
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 2
    .line 3
    return p0
.end method

.method public getGlobalWakefulnessLocked()I
    .locals 0

    .line 1
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mWakefulnessRaw:I

    .line 2
    .line 3
    return p0
.end method

.method public getLastShutdownReasonInternal()I
    .locals 9

    .line 1
    const/4 v0, 0x6

    .line 2
    const/4 v1, 0x5

    .line 3
    const/4 v2, 0x4

    .line 4
    const/4 v3, 0x3

    .line 5
    const/4 v4, 0x2

    .line 6
    const/4 v5, 0x1

    .line 7
    const/4 v6, 0x0

    .line 8
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mSystemProperties:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 9
    .line 10
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 11
    .line 12
    .line 13
    const-string/jumbo p0, "sys.boot.reason"

    .line 14
    .line 15
    .line 16
    const/4 v7, 0x0

    .line 17
    invoke-static {p0, v7}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 18
    .line 19
    .line 20
    move-result-object p0

    .line 21
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 22
    .line 23
    .line 24
    const/4 v7, -0x1

    .line 25
    invoke-virtual {p0}, Ljava/lang/String;->hashCode()I

    .line 26
    .line 27
    .line 28
    move-result v8

    .line 29
    sparse-switch v8, :sswitch_data_0

    .line 30
    .line 31
    .line 32
    goto :goto_0

    .line 33
    :sswitch_0
    const-string/jumbo v8, "shutdown,thermal,battery"

    .line 34
    .line 35
    .line 36
    invoke-virtual {p0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 37
    .line 38
    .line 39
    move-result p0

    .line 40
    if-nez p0, :cond_0

    .line 41
    .line 42
    goto :goto_0

    .line 43
    :cond_0
    move v7, v0

    .line 44
    goto :goto_0

    .line 45
    :sswitch_1
    const-string/jumbo v8, "reboot,userrequested"

    .line 46
    .line 47
    .line 48
    invoke-virtual {p0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 49
    .line 50
    .line 51
    move-result p0

    .line 52
    if-nez p0, :cond_1

    .line 53
    .line 54
    goto :goto_0

    .line 55
    :cond_1
    move v7, v1

    .line 56
    goto :goto_0

    .line 57
    :sswitch_2
    const-string/jumbo v8, "shutdown"

    .line 58
    .line 59
    .line 60
    invoke-virtual {p0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 61
    .line 62
    .line 63
    move-result p0

    .line 64
    if-nez p0, :cond_2

    .line 65
    .line 66
    goto :goto_0

    .line 67
    :cond_2
    move v7, v2

    .line 68
    goto :goto_0

    .line 69
    :sswitch_3
    const-string/jumbo v8, "shutdown,userrequested"

    .line 70
    .line 71
    .line 72
    invoke-virtual {p0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 73
    .line 74
    .line 75
    move-result p0

    .line 76
    if-nez p0, :cond_3

    .line 77
    .line 78
    goto :goto_0

    .line 79
    :cond_3
    move v7, v3

    .line 80
    goto :goto_0

    .line 81
    :sswitch_4
    const-string/jumbo v8, "reboot"

    .line 82
    .line 83
    .line 84
    invoke-virtual {p0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 85
    .line 86
    .line 87
    move-result p0

    .line 88
    if-nez p0, :cond_4

    .line 89
    .line 90
    goto :goto_0

    .line 91
    :cond_4
    move v7, v4

    .line 92
    goto :goto_0

    .line 93
    :sswitch_5
    const-string/jumbo v8, "shutdown,battery"

    .line 94
    .line 95
    .line 96
    invoke-virtual {p0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 97
    .line 98
    .line 99
    move-result p0

    .line 100
    if-nez p0, :cond_5

    .line 101
    .line 102
    goto :goto_0

    .line 103
    :cond_5
    move v7, v5

    .line 104
    goto :goto_0

    .line 105
    :sswitch_6
    const-string/jumbo v8, "shutdown,thermal"

    .line 106
    .line 107
    .line 108
    invoke-virtual {p0, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 109
    .line 110
    .line 111
    move-result p0

    .line 112
    if-nez p0, :cond_6

    .line 113
    .line 114
    goto :goto_0

    .line 115
    :cond_6
    move v7, v6

    .line 116
    :goto_0
    packed-switch v7, :pswitch_data_0

    .line 117
    .line 118
    .line 119
    return v6

    .line 120
    :pswitch_0
    return v0

    .line 121
    :pswitch_1
    return v5

    .line 122
    :pswitch_2
    return v3

    .line 123
    :pswitch_3
    return v4

    .line 124
    :pswitch_4
    return v1

    .line 125
    :pswitch_5
    return v2

    .line 126
    nop

    .line 127
    :sswitch_data_0
    .sparse-switch
        -0x7e3d61bf -> :sswitch_6
        -0x418b4b49 -> :sswitch_5
        -0x37ba085b -> :sswitch_4
        -0x32cb60d3 -> :sswitch_3
        -0xa17f9aa -> :sswitch_2
        0x28e9a3c -> :sswitch_1
        0x489a31a2 -> :sswitch_0
    .end sparse-switch

    .line 128
    .line 129
    .line 130
    .line 131
    .line 132
    .line 133
    .line 134
    .line 135
    .line 136
    .line 137
    .line 138
    .line 139
    .line 140
    .line 141
    .line 142
    .line 143
    .line 144
    .line 145
    .line 146
    .line 147
    .line 148
    .line 149
    .line 150
    .line 151
    .line 152
    .line 153
    .line 154
    .line 155
    .line 156
    .line 157
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_3
        :pswitch_0
    .end packed-switch
.end method

.method public getLocalServiceInstance()Lcom/android/server/power/PowerManagerService$LocalService;
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mLocalService:Lcom/android/server/power/PowerManagerService$LocalService;

    .line 2
    .line 3
    return-object p0
.end method

.method public getPowerGroupSize()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 5
    .line 6
    invoke-virtual {p0}, Landroid/util/SparseArray;->size()I

    .line 7
    .line 8
    .line 9
    move-result p0

    .line 10
    monitor-exit v0

    .line 11
    return p0

    .line 12
    :catchall_0
    move-exception p0

    .line 13
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14
    throw p0
.end method

.method public final getScreenDimDurationLocked(J)J
    .locals 6

    .line 1
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromWindowManager:J

    .line 2
    .line 3
    const-wide/16 v2, -0x1

    .line 4
    .line 5
    cmp-long v4, v0, v2

    .line 6
    .line 7
    if-eqz v4, :cond_0

    .line 8
    .line 9
    cmp-long v4, v0, p1

    .line 10
    .line 11
    if-ltz v4, :cond_1

    .line 12
    .line 13
    :cond_0
    iget-wide v4, p0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromSQD:J

    .line 14
    .line 15
    cmp-long v2, v4, v2

    .line 16
    .line 17
    if-eqz v2, :cond_3

    .line 18
    .line 19
    :cond_1
    cmp-long p1, v0, p1

    .line 20
    .line 21
    if-gez p1, :cond_2

    .line 22
    .line 23
    iget-wide p0, p0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromSQD:J

    .line 24
    .line 25
    invoke-static {v0, v1, p0, p1}, Ljava/lang/Math;->max(JJ)J

    .line 26
    .line 27
    .line 28
    move-result-wide p0

    .line 29
    goto :goto_0

    .line 30
    :cond_2
    iget-wide p0, p0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromSQD:J

    .line 31
    .line 32
    :goto_0
    return-wide p0

    .line 33
    :cond_3
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimDurationConfig:J

    .line 34
    .line 35
    long-to-float p1, p1

    .line 36
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimRatioConfig:F

    .line 37
    .line 38
    mul-float/2addr p1, p0

    .line 39
    float-to-long p0, p1

    .line 40
    invoke-static {v0, v1, p0, p1}, Ljava/lang/Math;->min(JJ)J

    .line 41
    .line 42
    .line 43
    move-result-wide p0

    .line 44
    return-wide p0
.end method

.method public final getScreenOffTimeoutLocked(JJ)J
    .locals 7

    .line 1
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 2
    .line 3
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()Z

    .line 4
    .line 5
    .line 6
    move-result v2

    .line 7
    if-eqz v2, :cond_0

    .line 8
    .line 9
    iget-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenOffTimeoutFromDeviceAdmin:J

    .line 10
    .line 11
    invoke-static {v0, v1, v2, v3}, Ljava/lang/Math;->min(JJ)J

    .line 12
    .line 13
    .line 14
    move-result-wide v0

    .line 15
    :cond_0
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mAdaptiveScreenOffTimeoutController:Lcom/android/server/power/AdaptiveScreenOffTimeoutController;

    .line 16
    .line 17
    const-wide/16 v3, 0x0

    .line 18
    .line 19
    if-eqz v2, :cond_1

    .line 20
    .line 21
    iget-wide v5, v2, Lcom/android/server/power/AdaptiveScreenOffTimeoutController;->mAdaptiveScreenOffTimeout:J

    .line 22
    .line 23
    cmp-long v2, v5, v3

    .line 24
    .line 25
    if-ltz v2, :cond_1

    .line 26
    .line 27
    move-wide v0, v5

    .line 28
    :cond_1
    iget-wide v5, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutOverrideFromWindowManager:J

    .line 29
    .line 30
    cmp-long v2, v5, v3

    .line 31
    .line 32
    if-ltz v2, :cond_2

    .line 33
    .line 34
    invoke-static {v0, v1, v5, v6}, Ljava/lang/Math;->min(JJ)J

    .line 35
    .line 36
    .line 37
    move-result-wide v0

    .line 38
    :cond_2
    cmp-long v2, p1, v3

    .line 39
    .line 40
    if-ltz v2, :cond_3

    .line 41
    .line 42
    invoke-static {v0, v1, p1, p2}, Ljava/lang/Math;->min(JJ)J

    .line 43
    .line 44
    .line 45
    move-result-wide v0

    .line 46
    :cond_3
    cmp-long p1, p3, v3

    .line 47
    .line 48
    if-ltz p1, :cond_4

    .line 49
    .line 50
    invoke-static {v0, v1, p3, p4}, Ljava/lang/Math;->min(JJ)J

    .line 51
    .line 52
    .line 53
    move-result-wide v0

    .line 54
    :cond_4
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mIsDualViewMode:Z

    .line 55
    .line 56
    if-eqz p1, :cond_6

    .line 57
    .line 58
    iget p1, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 59
    .line 60
    int-to-long p1, p1

    .line 61
    iget-wide p3, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutForDexOverrideFromWindowManager:J

    .line 62
    .line 63
    cmp-long v2, p3, v3

    .line 64
    .line 65
    if-ltz v2, :cond_5

    .line 66
    .line 67
    invoke-static {p1, p2, p3, p4}, Ljava/lang/Math;->min(JJ)J

    .line 68
    .line 69
    .line 70
    move-result-wide p1

    .line 71
    :cond_5
    invoke-static {v0, v1, p1, p2}, Ljava/lang/Math;->min(JJ)J

    .line 72
    .line 73
    .line 74
    move-result-wide v0

    .line 75
    :cond_6
    iget p1, p0, Lcom/android/server/power/PowerManagerService;->mLastScreenTimeout:I

    .line 76
    .line 77
    int-to-long p1, p1

    .line 78
    cmp-long p1, v0, p1

    .line 79
    .line 80
    if-eqz p1, :cond_7

    .line 81
    .line 82
    new-instance p1, Ljava/lang/StringBuilder;

    .line 83
    .line 84
    const-string p2, "getScreenOffTimeoutLocked: "

    .line 85
    .line 86
    invoke-direct {p1, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 87
    .line 88
    .line 89
    iget p2, p0, Lcom/android/server/power/PowerManagerService;->mLastScreenTimeout:I

    .line 90
    .line 91
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 92
    .line 93
    .line 94
    const-string p2, " -> "

    .line 95
    .line 96
    invoke-virtual {p1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 97
    .line 98
    .line 99
    invoke-virtual {p1, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 100
    .line 101
    .line 102
    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 103
    .line 104
    .line 105
    move-result-object p1

    .line 106
    const-string p2, "PowerManagerService"

    .line 107
    .line 108
    invoke-static {p2, p1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 109
    .line 110
    .line 111
    long-to-int p1, v0

    .line 112
    iput p1, p0, Lcom/android/server/power/PowerManagerService;->mLastScreenTimeout:I

    .line 113
    .line 114
    :cond_7
    iget-wide p0, p0, Lcom/android/server/power/PowerManagerService;->mMinimumScreenOffTimeoutConfig:J

    .line 115
    .line 116
    invoke-static {v0, v1, p0, p1}, Ljava/lang/Math;->max(JJ)J

    .line 117
    .line 118
    .line 119
    move-result-wide p0

    .line 120
    return-wide p0
.end method

.method public getScreenOffTimeoutOverrideLocked(JJ)J
    .locals 2

    .line 1
    iget-object p3, p0, Lcom/android/server/power/PowerManagerService;->mScreenTimeoutOverridePolicy:Lcom/android/server/power/ScreenTimeoutOverridePolicy;

    .line 2
    .line 3
    if-eqz p3, :cond_1

    .line 4
    .line 5
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 6
    .line 7
    and-int/lit16 p0, p0, 0x100

    .line 8
    .line 9
    if-eqz p0, :cond_1

    .line 10
    .line 11
    iget-wide p3, p3, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->mScreenTimeoutOverrideConfig:J

    .line 12
    .line 13
    const-wide/16 v0, 0x0

    .line 14
    .line 15
    cmp-long p0, p3, v0

    .line 16
    .line 17
    if-gez p0, :cond_0

    .line 18
    .line 19
    goto :goto_0

    .line 20
    :cond_0
    invoke-static {p3, p4, p1, p2}, Ljava/lang/Math;->min(JJ)J

    .line 21
    .line 22
    .line 23
    move-result-wide p1

    .line 24
    :cond_1
    :goto_0
    return-wide p1
.end method

.method public final getSleepTimeoutLocked(J)J
    .locals 5

    .line 1
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mSleepTimeoutSetting:J

    .line 2
    .line 3
    const-wide/16 v2, 0x0

    .line 4
    .line 5
    cmp-long v4, v0, v2

    .line 6
    .line 7
    if-gtz v4, :cond_0

    .line 8
    .line 9
    const-wide/16 p0, -0x1

    .line 10
    .line 11
    return-wide p0

    .line 12
    :cond_0
    cmp-long v2, p1, v2

    .line 13
    .line 14
    if-ltz v2, :cond_1

    .line 15
    .line 16
    invoke-static {v0, v1, p1, p2}, Ljava/lang/Math;->min(JJ)J

    .line 17
    .line 18
    .line 19
    move-result-wide v0

    .line 20
    :cond_1
    iget-wide p0, p0, Lcom/android/server/power/PowerManagerService;->mMinimumScreenOffTimeoutConfig:J

    .line 21
    .line 22
    invoke-static {v0, v1, p0, p1}, Ljava/lang/Math;->max(JJ)J

    .line 23
    .line 24
    .line 25
    move-result-wide p0

    .line 26
    return-wide p0
.end method

.method public final getStartingLimitationOfBrightness(II)I
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 2
    .line 3
    const-string v1, "display"

    .line 4
    .line 5
    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 6
    .line 7
    .line 8
    move-result-object v0

    .line 9
    check-cast v0, Landroid/hardware/display/DisplayManager;

    .line 10
    .line 11
    sget-boolean v1, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_FLIP_COVER_DISPLAY:Z

    .line 12
    .line 13
    if-eqz v1, :cond_0

    .line 14
    .line 15
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 16
    .line 17
    const/4 v1, 0x1

    .line 18
    if-ne p0, v1, :cond_0

    .line 19
    .line 20
    goto :goto_0

    .line 21
    :cond_0
    const/4 v1, 0x0

    .line 22
    :goto_0
    invoke-virtual {v0, v1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    .line 23
    .line 24
    .line 25
    move-result-object p0

    .line 26
    invoke-virtual {p0}, Landroid/view/Display;->getBrightnessInfo()Landroid/hardware/display/BrightnessInfo;

    .line 27
    .line 28
    .line 29
    move-result-object p0

    .line 30
    if-eqz p0, :cond_1

    .line 31
    .line 32
    iget p0, p0, Landroid/hardware/display/BrightnessInfo;->adjustedBrightness:F

    .line 33
    .line 34
    invoke-static {p0}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessFloatToInt(F)I

    .line 35
    .line 36
    .line 37
    move-result p0

    .line 38
    goto :goto_1

    .line 39
    :cond_1
    const/4 p0, -0x1

    .line 40
    :goto_1
    if-ge p1, p2, :cond_2

    .line 41
    .line 42
    if-ltz p0, :cond_2

    .line 43
    .line 44
    invoke-static {p1, p0}, Ljava/lang/Math;->max(II)I

    .line 45
    .line 46
    .line 47
    move-result p0

    .line 48
    return p0

    .line 49
    :cond_2
    return p2
.end method

.method public getWakefulnessLocked(I)I
    .locals 0

    .line 1
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {p0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 4
    .line 5
    .line 6
    move-result-object p0

    .line 7
    check-cast p0, Lcom/android/server/power/PowerGroup;

    .line 8
    .line 9
    iget p0, p0, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 10
    .line 11
    return p0
.end method

.method public final handleDexScreenOffTimeoutChange()V
    .locals 7

    .line 1
    const-string/jumbo v0, "timeout for dex is "

    .line 2
    .line 3
    .line 4
    const-string v1, "Dex screen off timeout : "

    .line 5
    .line 6
    :try_start_0
    new-instance v2, Landroid/os/Bundle;

    .line 7
    .line 8
    invoke-direct {v2}, Landroid/os/Bundle;-><init>()V

    .line 9
    .line 10
    .line 11
    const-string v3, "key"

    .line 12
    .line 13
    const-string/jumbo v4, "timeout_dex"

    .line 14
    .line 15
    .line 16
    invoke-virtual {v2, v3, v4}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 17
    .line 18
    .line 19
    const-string v3, "def"

    .line 20
    .line 21
    const-string v4, "600000"

    .line 22
    .line 23
    invoke-virtual {v2, v3, v4}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 24
    .line 25
    .line 26
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 27
    .line 28
    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 29
    .line 30
    .line 31
    move-result-object v3

    .line 32
    sget-object v4, Lcom/android/server/power/PowerManagerService;->DEX_SETTINGS_URI:Landroid/net/Uri;

    .line 33
    .line 34
    const-string v5, "getSettings"

    .line 35
    .line 36
    const/4 v6, 0x0

    .line 37
    invoke-virtual {v3, v4, v5, v6, v2}, Landroid/content/ContentResolver;->call(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;

    .line 38
    .line 39
    .line 40
    move-result-object v2

    .line 41
    if-eqz v2, :cond_1

    .line 42
    .line 43
    const-string/jumbo v3, "timeout_dex"

    .line 44
    .line 45
    .line 46
    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    .line 47
    .line 48
    .line 49
    move-result-object v2

    .line 50
    invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    .line 51
    .line 52
    .line 53
    move-result v3

    .line 54
    iget-object v4, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 55
    .line 56
    monitor-enter v4
    :try_end_0
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 57
    :try_start_1
    iget v5, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 58
    .line 59
    if-eq v3, v5, :cond_0

    .line 60
    .line 61
    const-string v5, "PowerManagerService"

    .line 62
    .line 63
    new-instance v6, Ljava/lang/StringBuilder;

    .line 64
    .line 65
    invoke-direct {v6, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 66
    .line 67
    .line 68
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 69
    .line 70
    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 71
    .line 72
    .line 73
    const-string v1, " -> "

    .line 74
    .line 75
    invoke-virtual {v6, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 76
    .line 77
    .line 78
    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 79
    .line 80
    .line 81
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 82
    .line 83
    .line 84
    move-result-object v1

    .line 85
    invoke-static {v5, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 86
    .line 87
    .line 88
    iput v3, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 89
    .line 90
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 91
    .line 92
    or-int/lit8 v1, v1, 0x4

    .line 93
    .line 94
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 95
    .line 96
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 97
    .line 98
    .line 99
    goto :goto_0

    .line 100
    :catchall_0
    move-exception p0

    .line 101
    goto :goto_1

    .line 102
    :cond_0
    :goto_0
    monitor-exit v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 103
    :try_start_2
    const-string v1, "PowerManagerService"

    .line 104
    .line 105
    new-instance v3, Ljava/lang/StringBuilder;

    .line 106
    .line 107
    invoke-direct {v3, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 108
    .line 109
    .line 110
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 111
    .line 112
    .line 113
    const-string v0, " = "

    .line 114
    .line 115
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 116
    .line 117
    .line 118
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 119
    .line 120
    invoke-virtual {v3, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 121
    .line 122
    .line 123
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 124
    .line 125
    .line 126
    move-result-object p0

    .line 127
    invoke-static {v1, p0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_2 .. :try_end_2} :catch_0

    .line 128
    .line 129
    .line 130
    goto :goto_2

    .line 131
    :goto_1
    :try_start_3
    monitor-exit v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 132
    :try_start_4
    throw p0
    :try_end_4
    .catch Ljava/lang/IllegalArgumentException; {:try_start_4 .. :try_end_4} :catch_0

    .line 133
    :catch_0
    const-string p0, "PowerManagerService"

    .line 134
    .line 135
    const-string v0, "IllegalArgumentException :: getDeXSettings timeout_dex"

    .line 136
    .line 137
    invoke-static {p0, v0}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 138
    .line 139
    .line 140
    :cond_1
    :goto_2
    return-void
.end method

.method public handleSettingsChangedLocked()V
    .locals 0

    .line 1
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updateSettingsLocked$1()V

    .line 2
    .line 3
    .line 4
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 5
    .line 6
    .line 7
    return-void
.end method

.method public final handleUidStateChangeLocked()V
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mUidsChanging:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    const/4 v0, 0x1

    .line 6
    iput-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mUidsChanged:Z

    .line 7
    .line 8
    goto :goto_0

    .line 9
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updateWakeLockDisabledStatesLocked()V

    .line 10
    .line 11
    .line 12
    :goto_0
    return-void
.end method

.method public final isAttentiveTimeoutExpired(Lcom/android/server/power/PowerGroup;J)Z
    .locals 4

    .line 1
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getAttentiveTimeoutLocked()J

    .line 2
    .line 3
    .line 4
    move-result-wide v0

    .line 5
    iget p0, p1, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 6
    .line 7
    if-nez p0, :cond_0

    .line 8
    .line 9
    const-wide/16 v2, 0x0

    .line 10
    .line 11
    cmp-long p0, v0, v2

    .line 12
    .line 13
    if-ltz p0, :cond_0

    .line 14
    .line 15
    iget-wide p0, p1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 16
    .line 17
    add-long/2addr p0, v0

    .line 18
    cmp-long p0, p2, p0

    .line 19
    .line 20
    if-ltz p0, :cond_0

    .line 21
    .line 22
    const/4 p0, 0x1

    .line 23
    goto :goto_0

    .line 24
    :cond_0
    const/4 p0, 0x0

    .line 25
    :goto_0
    return p0
.end method

.method public final isBeingKeptAwakeLocked(Lcom/android/server/power/PowerGroup;)Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 6
    .line 7
    if-nez v0, :cond_1

    .line 8
    .line 9
    iget v0, p1, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 10
    .line 11
    and-int/lit8 v0, v0, 0x20

    .line 12
    .line 13
    if-nez v0, :cond_1

    .line 14
    .line 15
    iget p1, p1, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 16
    .line 17
    and-int/lit8 p1, p1, 0x3

    .line 18
    .line 19
    if-nez p1, :cond_1

    .line 20
    .line 21
    iget-boolean p0, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 22
    .line 23
    if-eqz p0, :cond_0

    .line 24
    .line 25
    goto :goto_0

    .line 26
    :cond_0
    const/4 p0, 0x0

    .line 27
    goto :goto_1

    .line 28
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 29
    :goto_1
    return p0
.end method

.method public final isBeingKeptFromInattentiveSleepLocked()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 6
    .line 7
    if-nez v0, :cond_1

    .line 8
    .line 9
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 10
    .line 11
    if-nez v0, :cond_1

    .line 12
    .line 13
    iget-boolean p0, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 14
    .line 15
    if-nez p0, :cond_0

    .line 16
    .line 17
    goto :goto_0

    .line 18
    :cond_0
    const/4 p0, 0x0

    .line 19
    goto :goto_1

    .line 20
    :cond_1
    :goto_0
    const/4 p0, 0x1

    .line 21
    :goto_1
    return p0
.end method

.method public final isItBedTimeYetLocked(Lcom/android/server/power/PowerGroup;)Z
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    const/4 p0, 0x0

    .line 6
    return p0

    .line 7
    :cond_0
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 8
    .line 9
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    .line 11
    .line 12
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 13
    .line 14
    .line 15
    move-result-wide v0

    .line 16
    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/power/PowerManagerService;->isAttentiveTimeoutExpired(Lcom/android/server/power/PowerGroup;J)Z

    .line 17
    .line 18
    .line 19
    move-result v0

    .line 20
    if-eqz v0, :cond_1

    .line 21
    .line 22
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->isBeingKeptFromInattentiveSleepLocked()Z

    .line 23
    .line 24
    .line 25
    move-result p0

    .line 26
    xor-int/lit8 p0, p0, 0x1

    .line 27
    .line 28
    return p0

    .line 29
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->isBeingKeptAwakeLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 30
    .line 31
    .line 32
    move-result p0

    .line 33
    xor-int/lit8 p0, p0, 0x1

    .line 34
    .line 35
    return p0
.end method

.method public final isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()Z
    .locals 4

    .line 1
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenOffTimeoutFromDeviceAdmin:J

    .line 2
    .line 3
    const-wide/16 v2, 0x0

    .line 4
    .line 5
    cmp-long p0, v0, v2

    .line 6
    .line 7
    if-ltz p0, :cond_0

    .line 8
    .line 9
    const-wide v2, 0x7fffffffffffffffL

    .line 10
    .line 11
    .line 12
    .line 13
    .line 14
    cmp-long p0, v0, v2

    .line 15
    .line 16
    if-gez p0, :cond_0

    .line 17
    .line 18
    const/4 p0, 0x1

    .line 19
    goto :goto_0

    .line 20
    :cond_0
    const/4 p0, 0x0

    .line 21
    :goto_0
    return p0
.end method

.method public final isWakeUpPreventionNeededLocked()Z
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpPreventionLocks:Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->isEmpty()Z

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x1

    .line 8
    if-nez v0, :cond_0

    .line 9
    .line 10
    const-string p0, "Screen__On : Cancel (wakeUpPreventionEnabled)"

    .line 11
    .line 12
    invoke-static {p0}, Lcom/android/server/power/Slog;->dk(Ljava/lang/String;)V

    .line 13
    .line 14
    .line 15
    return v1

    .line 16
    :cond_0
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 17
    .line 18
    const/16 v2, 0x70

    .line 19
    .line 20
    const/4 v3, 0x0

    .line 21
    if-ne v0, v2, :cond_1

    .line 22
    .line 23
    return v3

    .line 24
    :cond_1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 25
    .line 26
    if-eqz v0, :cond_2

    .line 27
    .line 28
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mInterceptedPowerKeyForProximity:Z

    .line 29
    .line 30
    if-nez v0, :cond_2

    .line 31
    .line 32
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mInterceptedKeyForProximity:Z

    .line 33
    .line 34
    if-nez v0, :cond_2

    .line 35
    .line 36
    const-string v0, "Screen__On : Cancel (proximity)"

    .line 37
    .line 38
    invoke-static {v0}, Lcom/android/server/power/Slog;->dk(Ljava/lang/String;)V

    .line 39
    .line 40
    .line 41
    move v0, v1

    .line 42
    goto :goto_0

    .line 43
    :cond_2
    move v0, v3

    .line 44
    :goto_0
    iget v2, p0, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 45
    .line 46
    if-eqz v2, :cond_4

    .line 47
    .line 48
    iget v2, p0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 49
    .line 50
    if-eqz v2, :cond_3

    .line 51
    .line 52
    const/4 v4, 0x7

    .line 53
    if-eq v2, v4, :cond_3

    .line 54
    .line 55
    const/16 v4, 0x64

    .line 56
    .line 57
    if-eq v2, v4, :cond_3

    .line 58
    .line 59
    goto :goto_1

    .line 60
    :cond_3
    iget-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 61
    .line 62
    :goto_1
    if-eqz v3, :cond_4

    .line 63
    .line 64
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mIsDualViewMode:Z

    .line 65
    .line 66
    if-nez v2, :cond_4

    .line 67
    .line 68
    new-instance v0, Ljava/lang/StringBuilder;

    .line 69
    .line 70
    const-string v2, "Screen__On : Cancel (coverType: "

    .line 71
    .line 72
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 73
    .line 74
    .line 75
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 76
    .line 77
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 78
    .line 79
    .line 80
    const-string p0, ")"

    .line 81
    .line 82
    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 83
    .line 84
    .line 85
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 86
    .line 87
    .line 88
    move-result-object p0

    .line 89
    invoke-static {p0}, Lcom/android/server/power/Slog;->dk(Ljava/lang/String;)V

    .line 90
    .line 91
    .line 92
    goto :goto_2

    .line 93
    :cond_4
    move v1, v0

    .line 94
    :goto_2
    return v1
.end method

.method public final maybeUpdateForegroundProfileLastActivityLocked(J)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 2
    .line 3
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mForegroundProfile:I

    .line 4
    .line 5
    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 6
    .line 7
    .line 8
    move-result-object v0

    .line 9
    check-cast v0, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 10
    .line 11
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mForegroundProfile:I

    .line 12
    .line 13
    if-eqz v1, :cond_0

    .line 14
    .line 15
    if-nez v0, :cond_0

    .line 16
    .line 17
    invoke-static {v1}, Lcom/samsung/android/knox/SemPersonaManager;->isKnoxId(I)Z

    .line 18
    .line 19
    .line 20
    move-result v1

    .line 21
    if-eqz v1, :cond_0

    .line 22
    .line 23
    iget p1, p0, Lcom/android/server/power/PowerManagerService;->mForegroundProfile:I

    .line 24
    .line 25
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->updateKnoxTimeoutValue(I)V

    .line 26
    .line 27
    .line 28
    const-string p0, "PowerManagerService"

    .line 29
    .line 30
    const-string p1, "create ProfilePowerState for Workspace"

    .line 31
    .line 32
    invoke-static {p0, p1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 33
    .line 34
    .line 35
    return-void

    .line 36
    :cond_0
    if-eqz v0, :cond_1

    .line 37
    .line 38
    iget-wide v1, v0, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLastUserActivityTime:J

    .line 39
    .line 40
    cmp-long p0, p1, v1

    .line 41
    .line 42
    if-lez p0, :cond_1

    .line 43
    .line 44
    iput-wide p1, v0, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLastUserActivityTime:J

    .line 45
    .line 46
    :cond_1
    return-void
.end method

.method public final monitor()V
    .locals 1

    .line 1
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter p0

    .line 4
    :try_start_0
    monitor-exit p0

    .line 5
    return-void

    .line 6
    :catchall_0
    move-exception v0

    .line 7
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8
    throw v0
.end method

.method public final napInternal(IJZ)V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 5
    .line 6
    const/4 v2, 0x0

    .line 7
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 8
    .line 9
    .line 10
    move-result-object v1

    .line 11
    move-object v3, v1

    .line 12
    check-cast v3, Lcom/android/server/power/PowerGroup;

    .line 13
    .line 14
    move-object v2, p0

    .line 15
    move-wide v4, p2

    .line 16
    move v6, p1

    .line 17
    move v7, p4

    .line 18
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/power/PowerManagerService;->dreamPowerGroupLocked(Lcom/android/server/power/PowerGroup;JIZ)Z

    .line 19
    .line 20
    .line 21
    monitor-exit v0

    .line 22
    return-void

    .line 23
    :catchall_0
    move-exception p0

    .line 24
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 25
    throw p0
.end method

.method public final notifyWakeLockAcquiredLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V
    .locals 10

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 2
    .line 3
    if-eqz v0, :cond_0

    .line 4
    .line 5
    iget-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 6
    .line 7
    if-nez v0, :cond_0

    .line 8
    .line 9
    const/4 v0, 0x1

    .line 10
    iput-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedAcquired:Z

    .line 11
    .line 12
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 13
    .line 14
    iget v2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 15
    .line 16
    iget-object v7, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 17
    .line 18
    iget-object v8, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 19
    .line 20
    iget v3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 21
    .line 22
    iget v4, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerPid:I

    .line 23
    .line 24
    iget-object v6, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 25
    .line 26
    iget-object v9, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mHistoryTag:Ljava/lang/String;

    .line 27
    .line 28
    iget-object v5, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mCallback:Landroid/os/IWakeLockCallback;

    .line 29
    .line 30
    invoke-virtual/range {v1 .. v9}, Lcom/android/server/power/Notifier;->onWakeLockAcquired(IIILandroid/os/IWakeLockCallback;Landroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 31
    .line 32
    .line 33
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->restartNofifyLongTimerLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V

    .line 34
    .line 35
    .line 36
    :cond_0
    return-void
.end method

.method public final notifyWakeLockChangingLocked(Lcom/android/server/power/PowerManagerService$WakeLock;ILjava/lang/String;Ljava/lang/String;IILandroid/os/WorkSource;Ljava/lang/String;Landroid/os/IWakeLockCallback;)V
    .locals 21

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v1, p1

    .line 4
    .line 5
    move/from16 v3, p2

    .line 6
    .line 7
    move-object/from16 v6, p9

    .line 8
    .line 9
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 10
    .line 11
    if-eqz v2, :cond_6

    .line 12
    .line 13
    iget-boolean v2, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedAcquired:Z

    .line 14
    .line 15
    if-eqz v2, :cond_6

    .line 16
    .line 17
    iget v2, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 18
    .line 19
    and-int/lit16 v4, v2, 0x81

    .line 20
    .line 21
    if-eqz v4, :cond_1

    .line 22
    .line 23
    const/16 v4, 0x80

    .line 24
    .line 25
    if-ne v2, v4, :cond_0

    .line 26
    .line 27
    const-string v2, "(draw)"

    .line 28
    .line 29
    goto :goto_0

    .line 30
    :cond_0
    const-string v2, ""

    .line 31
    .line 32
    :goto_0
    const-string v4, "CHG"

    .line 33
    .line 34
    invoke-virtual {v4, v2}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 35
    .line 36
    .line 37
    move-result-object v2

    .line 38
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 39
    .line 40
    .line 41
    move-result-wide v4

    .line 42
    iget-wide v7, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mAcquireTime:J

    .line 43
    .line 44
    sub-long/2addr v4, v7

    .line 45
    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 46
    .line 47
    .line 48
    move-result-object v4

    .line 49
    new-instance v5, Ljava/lang/StringBuilder;

    .line 50
    .line 51
    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    .line 52
    .line 53
    .line 54
    iget-object v7, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 55
    .line 56
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 57
    .line 58
    .line 59
    const-string v7, ":"

    .line 60
    .line 61
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 62
    .line 63
    .line 64
    iget-object v7, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 65
    .line 66
    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 67
    .line 68
    .line 69
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 70
    .line 71
    .line 72
    move-result-object v5

    .line 73
    filled-new-array {v2, v4, v5}, [Ljava/lang/Object;

    .line 74
    .line 75
    .line 76
    move-result-object v2

    .line 77
    const/16 v4, 0xaa9

    .line 78
    .line 79
    invoke-static {v4, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 80
    .line 81
    .line 82
    :cond_1
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 83
    .line 84
    iget v8, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 85
    .line 86
    iget-object v12, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 87
    .line 88
    iget-object v10, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 89
    .line 90
    iget v11, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 91
    .line 92
    iget v4, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerPid:I

    .line 93
    .line 94
    iget-object v5, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 95
    .line 96
    iget-object v14, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mHistoryTag:Ljava/lang/String;

    .line 97
    .line 98
    iget-object v15, v1, Lcom/android/server/power/PowerManagerService$WakeLock;->mCallback:Landroid/os/IWakeLockCallback;

    .line 99
    .line 100
    invoke-virtual {v2, v8}, Lcom/android/server/power/Notifier;->getBatteryStatsWakeLockMonitorType(I)I

    .line 101
    .line 102
    .line 103
    move-result v7

    .line 104
    invoke-virtual {v2, v3}, Lcom/android/server/power/Notifier;->getBatteryStatsWakeLockMonitorType(I)I

    .line 105
    .line 106
    .line 107
    move-result v19

    .line 108
    if-eqz v5, :cond_3

    .line 109
    .line 110
    if-eqz p7, :cond_3

    .line 111
    .line 112
    if-ltz v7, :cond_3

    .line 113
    .line 114
    if-ltz v19, :cond_3

    .line 115
    .line 116
    const/16 v6, 0x3e8

    .line 117
    .line 118
    move/from16 v13, p5

    .line 119
    .line 120
    if-ne v13, v6, :cond_2

    .line 121
    .line 122
    const/high16 v6, 0x40000000    # 2.0f

    .line 123
    .line 124
    and-int/2addr v3, v6

    .line 125
    if-eqz v3, :cond_2

    .line 126
    .line 127
    const/4 v3, 0x1

    .line 128
    :goto_1
    move/from16 v20, v3

    .line 129
    .line 130
    goto :goto_2

    .line 131
    :cond_2
    const/4 v3, 0x0

    .line 132
    goto :goto_1

    .line 133
    :goto_2
    :try_start_0
    iget-object v9, v2, Lcom/android/server/power/Notifier;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 134
    .line 135
    move-object v10, v5

    .line 136
    move v11, v4

    .line 137
    move-object v13, v14

    .line 138
    move v14, v7

    .line 139
    move-object/from16 v15, p7

    .line 140
    .line 141
    move/from16 v16, p6

    .line 142
    .line 143
    move-object/from16 v17, p3

    .line 144
    .line 145
    move-object/from16 v18, p8

    .line 146
    .line 147
    invoke-interface/range {v9 .. v20}, Lcom/android/internal/app/IBatteryStats;->noteChangeWakelockFromSource(Landroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;ILandroid/os/WorkSource;ILjava/lang/String;Ljava/lang/String;IZ)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 148
    .line 149
    .line 150
    goto :goto_4

    .line 151
    :cond_3
    move/from16 v13, p5

    .line 152
    .line 153
    if-ne v15, v6, :cond_4

    .line 154
    .line 155
    goto :goto_3

    .line 156
    :cond_4
    if-eqz v15, :cond_5

    .line 157
    .line 158
    if-eqz v6, :cond_5

    .line 159
    .line 160
    invoke-interface {v15}, Landroid/os/IWakeLockCallback;->asBinder()Landroid/os/IBinder;

    .line 161
    .line 162
    .line 163
    move-result-object v7

    .line 164
    invoke-interface/range {p9 .. p9}, Landroid/os/IWakeLockCallback;->asBinder()Landroid/os/IBinder;

    .line 165
    .line 166
    .line 167
    move-result-object v9

    .line 168
    if-ne v7, v9, :cond_5

    .line 169
    .line 170
    :goto_3
    const/16 v16, -0x1

    .line 171
    .line 172
    move-object v7, v2

    .line 173
    move-object v9, v12

    .line 174
    move v12, v4

    .line 175
    move-object v13, v5

    .line 176
    invoke-virtual/range {v7 .. v16}, Lcom/android/server/power/Notifier;->onWakeLockReleased(ILjava/lang/String;Ljava/lang/String;IILandroid/os/WorkSource;Ljava/lang/String;Landroid/os/IWakeLockCallback;I)V

    .line 177
    .line 178
    .line 179
    move/from16 v3, p2

    .line 180
    .line 181
    move/from16 v4, p5

    .line 182
    .line 183
    move/from16 v5, p6

    .line 184
    .line 185
    move-object/from16 v6, p9

    .line 186
    .line 187
    move-object/from16 v7, p7

    .line 188
    .line 189
    move-object/from16 v8, p3

    .line 190
    .line 191
    move-object/from16 v9, p4

    .line 192
    .line 193
    move-object/from16 v10, p8

    .line 194
    .line 195
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/power/Notifier;->onWakeLockAcquired(IIILandroid/os/IWakeLockCallback;Landroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 196
    .line 197
    .line 198
    goto :goto_4

    .line 199
    :cond_5
    const/16 v16, -0x1

    .line 200
    .line 201
    const/4 v15, 0x0

    .line 202
    move-object v7, v2

    .line 203
    move-object v9, v12

    .line 204
    move v12, v4

    .line 205
    move-object v13, v5

    .line 206
    invoke-virtual/range {v7 .. v16}, Lcom/android/server/power/Notifier;->onWakeLockReleased(ILjava/lang/String;Ljava/lang/String;IILandroid/os/WorkSource;Ljava/lang/String;Landroid/os/IWakeLockCallback;I)V

    .line 207
    .line 208
    .line 209
    move/from16 v3, p2

    .line 210
    .line 211
    move/from16 v4, p5

    .line 212
    .line 213
    move/from16 v5, p6

    .line 214
    .line 215
    move-object/from16 v6, p9

    .line 216
    .line 217
    move-object/from16 v7, p7

    .line 218
    .line 219
    move-object/from16 v8, p3

    .line 220
    .line 221
    move-object/from16 v9, p4

    .line 222
    .line 223
    move-object/from16 v10, p8

    .line 224
    .line 225
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/power/Notifier;->onWakeLockAcquired(IIILandroid/os/IWakeLockCallback;Landroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 226
    .line 227
    .line 228
    :catch_0
    :goto_4
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockLongFinishedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V

    .line 229
    .line 230
    .line 231
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/power/PowerManagerService;->restartNofifyLongTimerLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V

    .line 232
    .line 233
    .line 234
    :cond_6
    return-void
.end method

.method public final notifyWakeLockLongFinishedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V
    .locals 7

    .line 1
    iget-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedLong:Z

    .line 2
    .line 3
    if-eqz v0, :cond_1

    .line 4
    .line 5
    const/4 v0, 0x0

    .line 6
    iput-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedLong:Z

    .line 7
    .line 8
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 9
    .line 10
    iget-object v4, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 11
    .line 12
    iget v2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 13
    .line 14
    iget-object v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 15
    .line 16
    iget-object v5, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mHistoryTag:Ljava/lang/String;

    .line 17
    .line 18
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 19
    .line 20
    .line 21
    if-eqz v1, :cond_0

    .line 22
    .line 23
    :try_start_0
    iget-object p0, p0, Lcom/android/server/power/Notifier;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 24
    .line 25
    invoke-interface {p0, v4, v5, v1}, Lcom/android/internal/app/IBatteryStats;->noteLongPartialWakelockFinishFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V

    .line 26
    .line 27
    .line 28
    const/16 p0, 0xb

    .line 29
    .line 30
    invoke-static {p0, v1, v4, v5, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write(ILandroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;I)V

    .line 31
    .line 32
    .line 33
    goto :goto_0

    .line 34
    :cond_0
    iget-object p0, p0, Lcom/android/server/power/Notifier;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 35
    .line 36
    invoke-interface {p0, v4, v5, v2}, Lcom/android/internal/app/IBatteryStats;->noteLongPartialWakelockFinish(Ljava/lang/String;Ljava/lang/String;I)V

    .line 37
    .line 38
    .line 39
    const/4 v6, 0x0

    .line 40
    const/16 v1, 0xb

    .line 41
    .line 42
    const/4 v3, 0x0

    .line 43
    invoke-static/range {v1 .. v6}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 44
    .line 45
    .line 46
    :catch_0
    :cond_1
    :goto_0
    return-void
.end method

.method public final notifyWakeLockLongStartedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V
    .locals 7

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 2
    .line 3
    if-eqz v0, :cond_1

    .line 4
    .line 5
    iget-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 6
    .line 7
    if-nez v0, :cond_1

    .line 8
    .line 9
    const/4 v0, 0x1

    .line 10
    iput-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedLong:Z

    .line 11
    .line 12
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 13
    .line 14
    iget-object v4, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 15
    .line 16
    iget v2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 17
    .line 18
    iget-object v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 19
    .line 20
    iget-object v5, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mHistoryTag:Ljava/lang/String;

    .line 21
    .line 22
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 23
    .line 24
    .line 25
    if-eqz v1, :cond_0

    .line 26
    .line 27
    :try_start_0
    iget-object p0, p0, Lcom/android/server/power/Notifier;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 28
    .line 29
    invoke-interface {p0, v4, v5, v1}, Lcom/android/internal/app/IBatteryStats;->noteLongPartialWakelockStartFromSource(Ljava/lang/String;Ljava/lang/String;Landroid/os/WorkSource;)V

    .line 30
    .line 31
    .line 32
    const/16 p0, 0xb

    .line 33
    .line 34
    invoke-static {p0, v1, v4, v5, v0}, Lcom/android/internal/util/FrameworkStatsLog;->write(ILandroid/os/WorkSource;Ljava/lang/String;Ljava/lang/String;I)V

    .line 35
    .line 36
    .line 37
    goto :goto_0

    .line 38
    :cond_0
    iget-object p0, p0, Lcom/android/server/power/Notifier;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 39
    .line 40
    invoke-interface {p0, v4, v5, v2}, Lcom/android/internal/app/IBatteryStats;->noteLongPartialWakelockStart(Ljava/lang/String;Ljava/lang/String;I)V

    .line 41
    .line 42
    .line 43
    const/16 v1, 0xb

    .line 44
    .line 45
    const/4 v3, 0x0

    .line 46
    const/4 v6, 0x1

    .line 47
    invoke-static/range {v1 .. v6}, Lcom/android/internal/util/FrameworkStatsLog;->write_non_chained(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 48
    .line 49
    .line 50
    :catch_0
    :cond_1
    :goto_0
    return-void
.end method

.method public final notifyWakeLockReleasedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;I)V
    .locals 12

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 2
    .line 3
    if-eqz v0, :cond_2

    .line 4
    .line 5
    iget-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedAcquired:Z

    .line 6
    .line 7
    if-eqz v0, :cond_2

    .line 8
    .line 9
    iget v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 10
    .line 11
    and-int/lit16 v1, v0, 0x81

    .line 12
    .line 13
    if-eqz v1, :cond_1

    .line 14
    .line 15
    const/16 v1, 0x80

    .line 16
    .line 17
    if-ne v0, v1, :cond_0

    .line 18
    .line 19
    const-string v0, "(draw)"

    .line 20
    .line 21
    goto :goto_0

    .line 22
    :cond_0
    const-string v0, ""

    .line 23
    .line 24
    :goto_0
    const-string v1, "REL"

    .line 25
    .line 26
    invoke-virtual {v1, v0}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;

    .line 27
    .line 28
    .line 29
    move-result-object v0

    .line 30
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 31
    .line 32
    .line 33
    move-result-wide v1

    .line 34
    iget-wide v3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mAcquireTime:J

    .line 35
    .line 36
    sub-long/2addr v1, v3

    .line 37
    invoke-static {v1, v2}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 38
    .line 39
    .line 40
    move-result-object v1

    .line 41
    new-instance v2, Ljava/lang/StringBuilder;

    .line 42
    .line 43
    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    .line 44
    .line 45
    .line 46
    iget-object v3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 47
    .line 48
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 49
    .line 50
    .line 51
    const-string v3, ":"

    .line 52
    .line 53
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 54
    .line 55
    .line 56
    iget-object v3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 57
    .line 58
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 59
    .line 60
    .line 61
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 62
    .line 63
    .line 64
    move-result-object v2

    .line 65
    filled-new-array {v0, v1, v2}, [Ljava/lang/Object;

    .line 66
    .line 67
    .line 68
    move-result-object v0

    .line 69
    const/16 v1, 0xaa9

    .line 70
    .line 71
    invoke-static {v1, v0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 72
    .line 73
    .line 74
    :cond_1
    const/4 v0, 0x0

    .line 75
    iput-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedAcquired:Z

    .line 76
    .line 77
    const-wide/16 v0, 0x0

    .line 78
    .line 79
    iput-wide v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mAcquireTime:J

    .line 80
    .line 81
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 82
    .line 83
    iget v3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 84
    .line 85
    iget-object v4, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 86
    .line 87
    iget-object v5, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 88
    .line 89
    iget v6, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 90
    .line 91
    iget v7, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerPid:I

    .line 92
    .line 93
    iget-object v8, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 94
    .line 95
    iget-object v9, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mHistoryTag:Ljava/lang/String;

    .line 96
    .line 97
    iget-object v10, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mCallback:Landroid/os/IWakeLockCallback;

    .line 98
    .line 99
    move v11, p2

    .line 100
    invoke-virtual/range {v2 .. v11}, Lcom/android/server/power/Notifier;->onWakeLockReleased(ILjava/lang/String;Ljava/lang/String;IILandroid/os/WorkSource;Ljava/lang/String;Landroid/os/IWakeLockCallback;I)V

    .line 101
    .line 102
    .line 103
    invoke-virtual {p0, p1}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockLongFinishedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V

    .line 104
    .line 105
    .line 106
    :cond_2
    return-void
.end method

.method public final onBootPhase(I)V
    .locals 22

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move/from16 v1, p1

    .line 4
    .line 5
    const/16 v2, 0x1f4

    .line 6
    .line 7
    const/16 v3, 0x3e8

    .line 8
    .line 9
    const/4 v7, 0x0

    .line 10
    const/4 v4, 0x1

    .line 11
    if-ne v1, v2, :cond_8

    .line 12
    .line 13
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 14
    .line 15
    monitor-enter v2

    .line 16
    :try_start_0
    iput-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 17
    .line 18
    const-class v1, Landroid/service/dreams/DreamManagerInternal;

    .line 19
    .line 20
    invoke-virtual {v0, v1}, Lcom/android/server/SystemService;->getLocalService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 21
    .line 22
    .line 23
    move-result-object v1

    .line 24
    check-cast v1, Landroid/service/dreams/DreamManagerInternal;

    .line 25
    .line 26
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mDreamManager:Landroid/service/dreams/DreamManagerInternal;

    .line 27
    .line 28
    const-class v1, Landroid/hardware/display/DisplayManagerInternal;

    .line 29
    .line 30
    invoke-virtual {v0, v1}, Lcom/android/server/SystemService;->getLocalService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 31
    .line 32
    .line 33
    move-result-object v1

    .line 34
    check-cast v1, Landroid/hardware/display/DisplayManagerInternal;

    .line 35
    .line 36
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 37
    .line 38
    const-class v1, Lcom/android/server/policy/WindowManagerPolicy;

    .line 39
    .line 40
    invoke-virtual {v0, v1}, Lcom/android/server/SystemService;->getLocalService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 41
    .line 42
    .line 43
    move-result-object v1

    .line 44
    check-cast v1, Lcom/android/server/policy/WindowManagerPolicy;

    .line 45
    .line 46
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    .line 47
    .line 48
    const-class v1, Landroid/os/BatteryManagerInternal;

    .line 49
    .line 50
    invoke-virtual {v0, v1}, Lcom/android/server/SystemService;->getLocalService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 51
    .line 52
    .line 53
    move-result-object v1

    .line 54
    check-cast v1, Landroid/os/BatteryManagerInternal;

    .line 55
    .line 56
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 57
    .line 58
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mAttentionDetector:Lcom/android/server/power/AttentionDetector;

    .line 59
    .line 60
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 61
    .line 62
    invoke-virtual {v1, v5}, Lcom/android/server/power/AttentionDetector;->systemReady(Landroid/content/Context;)V

    .line 63
    .line 64
    .line 65
    new-instance v1, Landroid/hardware/SystemSensorManager;

    .line 66
    .line 67
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 68
    .line 69
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 70
    .line 71
    invoke-virtual {v6}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    .line 72
    .line 73
    .line 74
    move-result-object v6

    .line 75
    invoke-direct {v1, v5, v6}, Landroid/hardware/SystemSensorManager;-><init>(Landroid/content/Context;Landroid/os/Looper;)V

    .line 76
    .line 77
    .line 78
    invoke-static {}, Lcom/android/server/am/BatteryStatsService;->getService()Lcom/android/internal/app/IBatteryStats;

    .line 79
    .line 80
    .line 81
    move-result-object v5

    .line 82
    iput-object v5, v0, Lcom/android/server/power/PowerManagerService;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 83
    .line 84
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 85
    .line 86
    invoke-static {}, Landroid/os/Looper;->getMainLooper()Landroid/os/Looper;

    .line 87
    .line 88
    .line 89
    move-result-object v9

    .line 90
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 91
    .line 92
    iget-object v11, v0, Lcom/android/server/power/PowerManagerService;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 93
    .line 94
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 95
    .line 96
    const-string v8, "PowerManagerService.Broadcasts"

    .line 97
    .line 98
    invoke-virtual {v6}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 99
    .line 100
    .line 101
    invoke-static {v0, v8}, Lcom/android/server/power/PowerManagerService$Injector;->createSuspendBlocker(Lcom/android/server/power/PowerManagerService;Ljava/lang/String;)Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 102
    .line 103
    .line 104
    move-result-object v12

    .line 105
    iget-object v13, v0, Lcom/android/server/power/PowerManagerService;->mPolicy:Lcom/android/server/policy/WindowManagerPolicy;

    .line 106
    .line 107
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getExecutor()Ljava/util/concurrent/Executor;

    .line 108
    .line 109
    .line 110
    move-result-object v14

    .line 111
    iget-object v15, v0, Lcom/android/server/power/PowerManagerService;->mFeatureFlags:Lcom/android/server/power/feature/PowerManagerFlags;

    .line 112
    .line 113
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 114
    .line 115
    .line 116
    new-instance v5, Lcom/android/server/power/Notifier;

    .line 117
    .line 118
    move-object v8, v5

    .line 119
    invoke-direct/range {v8 .. v15}, Lcom/android/server/power/Notifier;-><init>(Landroid/os/Looper;Landroid/content/Context;Lcom/android/internal/app/IBatteryStats;Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;Lcom/android/server/policy/WindowManagerPolicy;Ljava/util/concurrent/Executor;Lcom/android/server/power/feature/PowerManagerFlags;)V

    .line 120
    .line 121
    .line 122
    iput-object v5, v0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 123
    .line 124
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 125
    .line 126
    new-instance v8, Lcom/android/server/power/PowerGroup;

    .line 127
    .line 128
    iget-object v9, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroupWakefulnessChangeListener:Lcom/android/server/power/PowerManagerService$1;

    .line 129
    .line 130
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 131
    .line 132
    iget-object v11, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 133
    .line 134
    invoke-virtual {v11}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 135
    .line 136
    .line 137
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 138
    .line 139
    .line 140
    move-result-wide v20

    .line 141
    move-object/from16 v16, v8

    .line 142
    .line 143
    move-object/from16 v17, v9

    .line 144
    .line 145
    move-object/from16 v18, v5

    .line 146
    .line 147
    move-object/from16 v19, v10

    .line 148
    .line 149
    invoke-direct/range {v16 .. v21}, Lcom/android/server/power/PowerGroup;-><init>(Lcom/android/server/power/PowerManagerService$1;Lcom/android/server/power/Notifier;Landroid/hardware/display/DisplayManagerInternal;J)V

    .line 150
    .line 151
    .line 152
    invoke-virtual {v6, v7, v8}, Landroid/util/SparseArray;->append(ILjava/lang/Object;)V

    .line 153
    .line 154
    .line 155
    new-instance v5, Lcom/android/server/power/PowerManagerService$DisplayGroupPowerChangeListener;

    .line 156
    .line 157
    invoke-direct {v5, v0}, Lcom/android/server/power/PowerManagerService$DisplayGroupPowerChangeListener;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 158
    .line 159
    .line 160
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 161
    .line 162
    invoke-virtual {v6, v5}, Landroid/hardware/display/DisplayManagerInternal;->registerDisplayGroupListener(Landroid/hardware/display/DisplayManagerInternal$DisplayGroupListener;)V

    .line 163
    .line 164
    .line 165
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mDreamManager:Landroid/service/dreams/DreamManagerInternal;

    .line 166
    .line 167
    new-instance v6, Lcom/android/server/power/PowerManagerService$DreamManagerStateListener;

    .line 168
    .line 169
    invoke-direct {v6, v0}, Lcom/android/server/power/PowerManagerService$DreamManagerStateListener;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 170
    .line 171
    .line 172
    invoke-virtual {v5, v6}, Landroid/service/dreams/DreamManagerInternal;->registerDreamManagerStateListener(Landroid/service/dreams/DreamManagerInternal$DreamManagerStateListener;)V

    .line 173
    .line 174
    .line 175
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 176
    .line 177
    const-string v6, "PowerManagerService.WirelessChargerDetector"

    .line 178
    .line 179
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 180
    .line 181
    .line 182
    invoke-static {v0, v6}, Lcom/android/server/power/PowerManagerService$Injector;->createSuspendBlocker(Lcom/android/server/power/PowerManagerService;Ljava/lang/String;)Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 183
    .line 184
    .line 185
    move-result-object v5

    .line 186
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 187
    .line 188
    new-instance v8, Lcom/android/server/power/WirelessChargerDetector;

    .line 189
    .line 190
    invoke-direct {v8, v1, v5, v6}, Lcom/android/server/power/WirelessChargerDetector;-><init>(Landroid/hardware/SensorManager;Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;Landroid/os/Handler;)V

    .line 191
    .line 192
    .line 193
    iput-object v8, v0, Lcom/android/server/power/PowerManagerService;->mWirelessChargerDetector:Lcom/android/server/power/WirelessChargerDetector;

    .line 194
    .line 195
    new-instance v5, Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 196
    .line 197
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 198
    .line 199
    const/4 v8, 0x0

    .line 200
    invoke-direct {v5, v0, v6, v8}, Lcom/android/server/power/PowerManagerService$SettingsObserver;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/os/Handler;I)V

    .line 201
    .line 202
    .line 203
    iput-object v5, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 204
    .line 205
    const-class v5, Lcom/android/server/lights/LightsManager;

    .line 206
    .line 207
    invoke-virtual {v0, v5}, Lcom/android/server/SystemService;->getLocalService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 208
    .line 209
    .line 210
    move-result-object v5

    .line 211
    check-cast v5, Lcom/android/server/lights/LightsManager;

    .line 212
    .line 213
    const/4 v6, 0x5

    .line 214
    invoke-virtual {v5, v6}, Lcom/android/server/lights/LightsManager;->getLight(I)Lcom/android/server/lights/LightsService$LightImpl;

    .line 215
    .line 216
    .line 217
    move-result-object v5

    .line 218
    iput-object v5, v0, Lcom/android/server/power/PowerManagerService;->mAttentionLight:Lcom/android/server/lights/LightsService$LightImpl;

    .line 219
    .line 220
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mDeviceConfigProvider:Lcom/android/server/display/feature/DeviceConfigParameterProvider;

    .line 221
    .line 222
    iget-object v5, v5, Lcom/android/server/display/feature/DeviceConfigParameterProvider;->mDeviceConfig:Landroid/provider/DeviceConfigInterface;

    .line 223
    .line 224
    const-string v6, "display_manager"

    .line 225
    .line 226
    const-string v8, "disable_screen_wake_locks_while_cached"

    .line 227
    .line 228
    invoke-interface {v5, v6, v8, v4}, Landroid/provider/DeviceConfigInterface;->getBoolean(Ljava/lang/String;Ljava/lang/String;Z)Z

    .line 229
    .line 230
    .line 231
    move-result v5

    .line 232
    iput-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mDisableScreenWakeLocksWhileCached:Z

    .line 233
    .line 234
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mDeviceConfigProvider:Lcom/android/server/display/feature/DeviceConfigParameterProvider;

    .line 235
    .line 236
    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getExecutor()Ljava/util/concurrent/Executor;

    .line 237
    .line 238
    .line 239
    move-result-object v6

    .line 240
    new-instance v8, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda12;

    .line 241
    .line 242
    invoke-direct {v8, v0}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda12;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 243
    .line 244
    .line 245
    iget-object v5, v5, Lcom/android/server/display/feature/DeviceConfigParameterProvider;->mDeviceConfig:Landroid/provider/DeviceConfigInterface;

    .line 246
    .line 247
    const-string v9, "display_manager"

    .line 248
    .line 249
    invoke-interface {v5, v9, v6, v8}, Landroid/provider/DeviceConfigInterface;->addOnPropertiesChangedListener(Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/provider/DeviceConfig$OnPropertiesChangedListener;)V

    .line 250
    .line 251
    .line 252
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 253
    .line 254
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mDisplayPowerCallbacks:Lcom/android/server/power/PowerManagerService$3;

    .line 255
    .line 256
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 257
    .line 258
    invoke-virtual {v5, v6, v8, v1}, Landroid/hardware/display/DisplayManagerInternal;->initPowerManagement(Landroid/hardware/display/DisplayManagerInternal$DisplayPowerCallbacks;Landroid/os/Handler;Landroid/hardware/SensorManager;)V

    .line 259
    .line 260
    .line 261
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->addPowerGroupsForNonDefaultDisplayGroupLocked()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 262
    .line 263
    .line 264
    :try_start_1
    new-instance v1, Lcom/android/server/power/PowerManagerService$ForegroundProfileObserver;

    .line 265
    .line 266
    invoke-direct {v1, v0}, Lcom/android/server/power/PowerManagerService$ForegroundProfileObserver;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 267
    .line 268
    .line 269
    invoke-static {}, Landroid/app/ActivityManager;->getService()Landroid/app/IActivityManager;

    .line 270
    .line 271
    .line 272
    move-result-object v5

    .line 273
    const-string v6, "PowerManagerService"

    .line 274
    .line 275
    invoke-interface {v5, v1, v6}, Landroid/app/IActivityManager;->registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 276
    .line 277
    .line 278
    goto :goto_0

    .line 279
    :catchall_0
    move-exception v0

    .line 280
    goto/16 :goto_1

    .line 281
    .line 282
    :catch_0
    :goto_0
    :try_start_2
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mFeatureCoverSysfs:Z

    .line 283
    .line 284
    if-eqz v1, :cond_0

    .line 285
    .line 286
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 287
    .line 288
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 289
    .line 290
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 291
    .line 292
    .line 293
    new-instance v1, Lcom/samsung/android/cover/CoverManager;

    .line 294
    .line 295
    invoke-direct {v1, v5}, Lcom/samsung/android/cover/CoverManager;-><init>(Landroid/content/Context;)V

    .line 296
    .line 297
    .line 298
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mCoverManager:Lcom/samsung/android/cover/CoverManager;

    .line 299
    .line 300
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mCoverStateListener:Lcom/android/server/power/PowerManagerService$10;

    .line 301
    .line 302
    invoke-virtual {v1, v5}, Lcom/samsung/android/cover/CoverManager;->registerListener(Lcom/samsung/android/cover/CoverManager$CoverStateListener;)V

    .line 303
    .line 304
    .line 305
    :cond_0
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 306
    .line 307
    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 308
    .line 309
    .line 310
    move-result-object v1

    .line 311
    const-string v5, "com.sec.feature.sensorhub"

    .line 312
    .line 313
    invoke-virtual {v1, v5}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    .line 314
    .line 315
    .line 316
    move-result v1

    .line 317
    if-eqz v1, :cond_1

    .line 318
    .line 319
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 320
    .line 321
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 322
    .line 323
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 324
    .line 325
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 326
    .line 327
    new-instance v9, Lcom/android/server/power/PowerManagerService$1;

    .line 328
    .line 329
    invoke-direct {v9, v0}, Lcom/android/server/power/PowerManagerService$1;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 330
    .line 331
    .line 332
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 333
    .line 334
    .line 335
    new-instance v1, Lcom/android/server/power/WirelessChargerMotionDetector;

    .line 336
    .line 337
    invoke-direct {v1, v5, v6, v8, v9}, Lcom/android/server/power/WirelessChargerMotionDetector;-><init>(Ljava/lang/Object;Landroid/content/Context;Landroid/os/BatteryManagerInternal;Lcom/android/server/power/PowerManagerService$1;)V

    .line 338
    .line 339
    .line 340
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mWirelessChargerMotionDetector:Lcom/android/server/power/WirelessChargerMotionDetector;

    .line 341
    .line 342
    :cond_1
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 343
    .line 344
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 345
    .line 346
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 347
    .line 348
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mAbuseWakeLockDetectorCallback:Lcom/android/server/power/PowerManagerService$1;

    .line 349
    .line 350
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 351
    .line 352
    .line 353
    const-string/jumbo v1, "window"

    .line 354
    .line 355
    .line 356
    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    .line 357
    .line 358
    .line 359
    move-result-object v1

    .line 360
    invoke-static {v1}, Landroid/view/IWindowManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/view/IWindowManager;

    .line 361
    .line 362
    .line 363
    move-result-object v1

    .line 364
    check-cast v1, Lcom/android/server/wm/WindowManagerService;

    .line 365
    .line 366
    new-instance v9, Lcom/android/server/power/AbuseWakeLockDetector;

    .line 367
    .line 368
    invoke-direct {v9, v5, v6, v8, v1}, Lcom/android/server/power/AbuseWakeLockDetector;-><init>(Ljava/lang/Object;Landroid/content/Context;Lcom/android/server/power/PowerManagerService$1;Lcom/android/server/wm/WindowManagerService;)V

    .line 369
    .line 370
    .line 371
    iput-object v9, v0, Lcom/android/server/power/PowerManagerService;->mAbuseWakeLockDetector:Lcom/android/server/power/AbuseWakeLockDetector;

    .line 372
    .line 373
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 374
    .line 375
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 376
    .line 377
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 378
    .line 379
    new-instance v8, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;

    .line 380
    .line 381
    const/4 v9, 0x1

    .line 382
    invoke-direct {v8, v0, v9}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    .line 383
    .line 384
    .line 385
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 386
    .line 387
    .line 388
    new-instance v1, Lcom/android/server/power/SmartStayController;

    .line 389
    .line 390
    new-instance v9, Lcom/android/server/power/SmartStayController$Injector;

    .line 391
    .line 392
    invoke-direct {v9}, Ljava/lang/Object;-><init>()V

    .line 393
    .line 394
    .line 395
    invoke-direct {v1, v5, v6, v8, v9}, Lcom/android/server/power/SmartStayController;-><init>(Ljava/lang/Object;Landroid/content/Context;Ljava/lang/Runnable;Lcom/android/server/power/SmartStayController$Injector;)V

    .line 396
    .line 397
    .line 398
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mSmartStayController:Lcom/android/server/power/SmartStayController;

    .line 399
    .line 400
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyController:Lcom/android/server/power/LowPowerStandbyController;

    .line 401
    .line 402
    invoke-virtual {v1}, Lcom/android/server/power/LowPowerStandbyController;->systemReady()V

    .line 403
    .line 404
    .line 405
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 406
    .line 407
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 408
    .line 409
    invoke-virtual {v5}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    .line 410
    .line 411
    .line 412
    move-result-object v5

    .line 413
    new-instance v6, Lcom/android/server/power/HqmDataDispatcher;

    .line 414
    .line 415
    invoke-direct {v6, v1, v5}, Lcom/android/server/power/HqmDataDispatcher;-><init>(Landroid/content/Context;Landroid/os/Looper;)V

    .line 416
    .line 417
    .line 418
    sput-object v6, Lcom/android/server/power/HqmDataDispatcher$HqmDataDispatcherHolder;->INSTANCE:Lcom/android/server/power/HqmDataDispatcher;

    .line 419
    .line 420
    new-instance v1, Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 421
    .line 422
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 423
    .line 424
    const/4 v6, 0x2

    .line 425
    invoke-direct {v1, v0, v5, v6}, Lcom/android/server/power/PowerManagerService$SettingsObserver;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/os/Handler;I)V

    .line 426
    .line 427
    .line 428
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mQuickTilesSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 429
    .line 430
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 431
    .line 432
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 433
    .line 434
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 435
    .line 436
    .line 437
    const-string v1, "activity"

    .line 438
    .line 439
    invoke-virtual {v5, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 440
    .line 441
    .line 442
    move-result-object v1

    .line 443
    check-cast v1, Landroid/app/ActivityManager;

    .line 444
    .line 445
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    .line 446
    .line 447
    .line 448
    move-result-object v5

    .line 449
    new-instance v6, Lcom/android/server/power/ForegroundPackageObserver;

    .line 450
    .line 451
    invoke-direct {v6, v1, v5}, Lcom/android/server/power/ForegroundPackageObserver;-><init>(Landroid/app/ActivityManager;Landroid/app/IActivityManager;)V

    .line 452
    .line 453
    .line 454
    iput-object v6, v0, Lcom/android/server/power/PowerManagerService;->mForegroundPackageObserver:Lcom/android/server/power/ForegroundPackageObserver;

    .line 455
    .line 456
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 457
    .line 458
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 459
    .line 460
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 461
    .line 462
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 463
    .line 464
    invoke-virtual {v8}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    .line 465
    .line 466
    .line 467
    move-result-object v8

    .line 468
    const-string v9, "SemInputDeviceManagerService"

    .line 469
    .line 470
    invoke-static {v9}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    .line 471
    .line 472
    .line 473
    move-result-object v9

    .line 474
    invoke-static {v9}, Lcom/samsung/android/hardware/secinputdev/ISemInputDeviceManager$Stub;->asInterface(Landroid/os/IBinder;)Lcom/samsung/android/hardware/secinputdev/ISemInputDeviceManager;

    .line 475
    .line 476
    .line 477
    move-result-object v9

    .line 478
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 479
    .line 480
    .line 481
    new-instance v1, Lcom/android/server/power/ScreenCurtainController;

    .line 482
    .line 483
    invoke-direct {v1, v5, v6, v8, v9}, Lcom/android/server/power/ScreenCurtainController;-><init>(Landroid/content/Context;Ljava/lang/Object;Landroid/os/Looper;Lcom/samsung/android/hardware/secinputdev/ISemInputDeviceManager;)V

    .line 484
    .line 485
    .line 486
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

    .line 487
    .line 488
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 489
    .line 490
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mAdaptiveScreenOffTimeoutCallbacks:Lcom/android/server/power/PowerManagerService$1;

    .line 491
    .line 492
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 493
    .line 494
    .line 495
    new-instance v1, Lcom/android/server/power/AdaptiveScreenOffTimeoutController;

    .line 496
    .line 497
    invoke-direct {v1, v5}, Lcom/android/server/power/AdaptiveScreenOffTimeoutController;-><init>(Lcom/android/server/power/PowerManagerService$1;)V

    .line 498
    .line 499
    .line 500
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mAdaptiveScreenOffTimeoutController:Lcom/android/server/power/AdaptiveScreenOffTimeoutController;

    .line 501
    .line 502
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->updateQuickTilesSettingsLocked()V

    .line 503
    .line 504
    .line 505
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->readConfigurationLocked()V

    .line 506
    .line 507
    .line 508
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->updateSettingsLocked$1()V

    .line 509
    .line 510
    .line 511
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mFeatureFlags:Lcom/android/server/power/feature/PowerManagerFlags;

    .line 512
    .line 513
    iget-object v1, v1, Lcom/android/server/power/feature/PowerManagerFlags;->mEarlyScreenTimeoutDetectorFlagState:Lcom/android/server/power/feature/PowerManagerFlags$FlagState;

    .line 514
    .line 515
    invoke-virtual {v1}, Lcom/android/server/power/feature/PowerManagerFlags$FlagState;->isEnabled()Z

    .line 516
    .line 517
    .line 518
    move-result v1

    .line 519
    const/4 v5, -0x1

    .line 520
    if-eqz v1, :cond_3

    .line 521
    .line 522
    new-instance v1, Lcom/android/server/power/ScreenTimeoutOverridePolicy;

    .line 523
    .line 524
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 525
    .line 526
    iget-wide v8, v0, Lcom/android/server/power/PowerManagerService;->mMinimumScreenOffTimeoutConfig:J

    .line 527
    .line 528
    new-instance v10, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda14;

    .line 529
    .line 530
    invoke-direct {v10, v0}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda14;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 531
    .line 532
    .line 533
    invoke-direct {v1}, Ljava/lang/Object;-><init>()V

    .line 534
    .line 535
    .line 536
    iput v5, v1, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->mLastAutoReleaseReason:I

    .line 537
    .line 538
    invoke-virtual {v6}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 539
    .line 540
    .line 541
    move-result-object v6

    .line 542
    const v11, 0x10e013d

    .line 543
    .line 544
    .line 545
    invoke-virtual {v6, v11}, Landroid/content/res/Resources;->getInteger(I)I

    .line 546
    .line 547
    .line 548
    move-result v6

    .line 549
    int-to-long v11, v6

    .line 550
    iput-wide v11, v1, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->mScreenTimeoutOverrideConfig:J

    .line 551
    .line 552
    cmp-long v6, v11, v8

    .line 553
    .line 554
    if-gez v6, :cond_2

    .line 555
    .line 556
    new-instance v6, Ljava/lang/StringBuilder;

    .line 557
    .line 558
    const-string v8, "Screen timeout override is smaller than the minimum timeout : "

    .line 559
    .line 560
    invoke-direct {v6, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 561
    .line 562
    .line 563
    invoke-virtual {v6, v11, v12}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 564
    .line 565
    .line 566
    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 567
    .line 568
    .line 569
    move-result-object v6

    .line 570
    const-string v8, "ScreenTimeoutOverridePolicy"

    .line 571
    .line 572
    invoke-static {v8, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 573
    .line 574
    .line 575
    const-wide/16 v8, -0x1

    .line 576
    .line 577
    iput-wide v8, v1, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->mScreenTimeoutOverrideConfig:J

    .line 578
    .line 579
    :cond_2
    iput-object v10, v1, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->mPolicyCallback:Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda14;

    .line 580
    .line 581
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenTimeoutOverridePolicy:Lcom/android/server/power/ScreenTimeoutOverridePolicy;

    .line 582
    .line 583
    :cond_3
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 584
    .line 585
    or-int/lit16 v1, v1, 0x100

    .line 586
    .line 587
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 588
    .line 589
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 590
    .line 591
    .line 592
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 593
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 594
    .line 595
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 596
    .line 597
    .line 598
    move-result-object v1

    .line 599
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mConstants:Lcom/android/server/power/PowerManagerService$Constants;

    .line 600
    .line 601
    iput-object v1, v2, Lcom/android/server/power/PowerManagerService$Constants;->mResolver:Landroid/content/ContentResolver;

    .line 602
    .line 603
    const-string/jumbo v6, "power_manager_constants"

    .line 604
    .line 605
    .line 606
    invoke-static {v6}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 607
    .line 608
    .line 609
    move-result-object v6

    .line 610
    invoke-virtual {v1, v6, v7, v2}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V

    .line 611
    .line 612
    .line 613
    invoke-virtual {v2}, Lcom/android/server/power/PowerManagerService$Constants;->updateConstants()V

    .line 614
    .line 615
    .line 616
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 617
    .line 618
    if-eqz v2, :cond_4

    .line 619
    .line 620
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 621
    .line 622
    invoke-virtual {v2}, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->systemReady()V

    .line 623
    .line 624
    .line 625
    :cond_4
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mScreenUndimDetector:Lcom/android/server/power/ScreenUndimDetector;

    .line 626
    .line 627
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 628
    .line 629
    invoke-virtual {v2}, Lcom/android/server/power/ScreenUndimDetector;->readValuesFromDeviceConfig()V

    .line 630
    .line 631
    .line 632
    invoke-virtual {v6}, Landroid/content/Context;->getMainExecutor()Ljava/util/concurrent/Executor;

    .line 633
    .line 634
    .line 635
    move-result-object v8

    .line 636
    new-instance v9, Lcom/android/server/power/ScreenUndimDetector$$ExternalSyntheticLambda0;

    .line 637
    .line 638
    invoke-direct {v9, v2}, Lcom/android/server/power/ScreenUndimDetector$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/ScreenUndimDetector;)V

    .line 639
    .line 640
    .line 641
    const-string v10, "attention_manager_service"

    .line 642
    .line 643
    invoke-static {v10, v8, v9}, Landroid/provider/DeviceConfig;->addOnPropertiesChangedListener(Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/provider/DeviceConfig$OnPropertiesChangedListener;)V

    .line 644
    .line 645
    .line 646
    const-class v8, Landroid/os/PowerManager;

    .line 647
    .line 648
    invoke-virtual {v6, v8}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 649
    .line 650
    .line 651
    move-result-object v6

    .line 652
    check-cast v6, Landroid/os/PowerManager;

    .line 653
    .line 654
    const v8, 0x2000000a

    .line 655
    .line 656
    .line 657
    const-string v9, "UndimDetectorWakeLock"

    .line 658
    .line 659
    invoke-virtual {v6, v8, v9}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    .line 660
    .line 661
    .line 662
    move-result-object v6

    .line 663
    iput-object v6, v2, Lcom/android/server/power/ScreenUndimDetector;->mWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 664
    .line 665
    const-string/jumbo v2, "sysui_qs_tiles"

    .line 666
    .line 667
    .line 668
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 669
    .line 670
    .line 671
    move-result-object v2

    .line 672
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mQuickTilesSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 673
    .line 674
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 675
    .line 676
    .line 677
    const-string/jumbo v2, "sysui_quick_qs_tiles"

    .line 678
    .line 679
    .line 680
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 681
    .line 682
    .line 683
    move-result-object v2

    .line 684
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mQuickTilesSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 685
    .line 686
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 687
    .line 688
    .line 689
    const-string/jumbo v2, "screensaver_enabled"

    .line 690
    .line 691
    .line 692
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 693
    .line 694
    .line 695
    move-result-object v2

    .line 696
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 697
    .line 698
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 699
    .line 700
    .line 701
    const-string/jumbo v2, "screensaver_activate_on_sleep"

    .line 702
    .line 703
    .line 704
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 705
    .line 706
    .line 707
    move-result-object v2

    .line 708
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 709
    .line 710
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 711
    .line 712
    .line 713
    const-string/jumbo v2, "screensaver_activate_on_dock"

    .line 714
    .line 715
    .line 716
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 717
    .line 718
    .line 719
    move-result-object v2

    .line 720
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 721
    .line 722
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 723
    .line 724
    .line 725
    const-string/jumbo v2, "screen_off_timeout"

    .line 726
    .line 727
    .line 728
    invoke-static {v2}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 729
    .line 730
    .line 731
    move-result-object v2

    .line 732
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 733
    .line 734
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 735
    .line 736
    .line 737
    const-string/jumbo v2, "sleep_timeout"

    .line 738
    .line 739
    .line 740
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 741
    .line 742
    .line 743
    move-result-object v2

    .line 744
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 745
    .line 746
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 747
    .line 748
    .line 749
    const-string v2, "attentive_timeout"

    .line 750
    .line 751
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 752
    .line 753
    .line 754
    move-result-object v2

    .line 755
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 756
    .line 757
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 758
    .line 759
    .line 760
    const-string/jumbo v2, "stay_on_while_plugged_in"

    .line 761
    .line 762
    .line 763
    invoke-static {v2}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 764
    .line 765
    .line 766
    move-result-object v2

    .line 767
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 768
    .line 769
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 770
    .line 771
    .line 772
    const-string/jumbo v2, "screen_brightness_mode"

    .line 773
    .line 774
    .line 775
    invoke-static {v2}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 776
    .line 777
    .line 778
    move-result-object v2

    .line 779
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 780
    .line 781
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 782
    .line 783
    .line 784
    const-string/jumbo v2, "screen_auto_brightness_adj"

    .line 785
    .line 786
    .line 787
    invoke-static {v2}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 788
    .line 789
    .line 790
    move-result-object v2

    .line 791
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 792
    .line 793
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 794
    .line 795
    .line 796
    const-string/jumbo v2, "theater_mode_on"

    .line 797
    .line 798
    .line 799
    invoke-static {v2}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 800
    .line 801
    .line 802
    move-result-object v2

    .line 803
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 804
    .line 805
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 806
    .line 807
    .line 808
    const-string v2, "doze_always_on"

    .line 809
    .line 810
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 811
    .line 812
    .line 813
    move-result-object v2

    .line 814
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 815
    .line 816
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 817
    .line 818
    .line 819
    const-string v2, "double_tap_to_wake"

    .line 820
    .line 821
    invoke-static {v2}, Landroid/provider/Settings$Secure;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 822
    .line 823
    .line 824
    move-result-object v2

    .line 825
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 826
    .line 827
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 828
    .line 829
    .line 830
    const-string v2, "device_demo_mode"

    .line 831
    .line 832
    invoke-static {v2}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 833
    .line 834
    .line 835
    move-result-object v2

    .line 836
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 837
    .line 838
    invoke-virtual {v1, v2, v7, v6, v7}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 839
    .line 840
    .line 841
    const-string/jumbo v2, "user_activity_timeout"

    .line 842
    .line 843
    .line 844
    invoke-static {v2}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 845
    .line 846
    .line 847
    move-result-object v2

    .line 848
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 849
    .line 850
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 851
    .line 852
    .line 853
    const-string v2, "intelligent_sleep_mode"

    .line 854
    .line 855
    invoke-static {v2}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 856
    .line 857
    .line 858
    move-result-object v2

    .line 859
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 860
    .line 861
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 862
    .line 863
    .line 864
    const-string v2, "display_outdoor_mode"

    .line 865
    .line 866
    invoke-static {v2}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 867
    .line 868
    .line 869
    move-result-object v2

    .line 870
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 871
    .line 872
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 873
    .line 874
    .line 875
    invoke-virtual {v0, v7}, Lcom/android/server/power/PowerManagerService;->setQuickPanelBrightnessBarDisabled(Z)V

    .line 876
    .line 877
    .line 878
    sget-boolean v2, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_WAKEUP_WHEN_PLUG_CHANGED:Z

    .line 879
    .line 880
    if-eqz v2, :cond_5

    .line 881
    .line 882
    const-string v2, "aod_mode"

    .line 883
    .line 884
    invoke-static {v2}, Landroid/provider/Settings$System;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 885
    .line 886
    .line 887
    move-result-object v2

    .line 888
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 889
    .line 890
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 891
    .line 892
    .line 893
    :cond_5
    const-string/jumbo v2, "sem_power_saving_adjust_brightness_factor"

    .line 894
    .line 895
    .line 896
    invoke-static {v2}, Landroid/provider/Settings$Global;->getUriFor(Ljava/lang/String;)Landroid/net/Uri;

    .line 897
    .line 898
    .line 899
    move-result-object v2

    .line 900
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mSettingsObserver:Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 901
    .line 902
    invoke-virtual {v1, v2, v7, v6, v5}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;I)V

    .line 903
    .line 904
    .line 905
    new-instance v2, Landroid/content/IntentFilter;

    .line 906
    .line 907
    invoke-direct {v2}, Landroid/content/IntentFilter;-><init>()V

    .line 908
    .line 909
    .line 910
    const-string v5, "android.intent.action.BATTERY_CHANGED"

    .line 911
    .line 912
    invoke-virtual {v2, v5}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 913
    .line 914
    .line 915
    invoke-virtual {v2, v3}, Landroid/content/IntentFilter;->setPriority(I)V

    .line 916
    .line 917
    .line 918
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 919
    .line 920
    new-instance v5, Lcom/android/server/power/PowerManagerService$BatteryReceiver;

    .line 921
    .line 922
    invoke-direct {v5, v0}, Lcom/android/server/power/PowerManagerService$BatteryReceiver;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 923
    .line 924
    .line 925
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 926
    .line 927
    const/4 v8, 0x0

    .line 928
    invoke-virtual {v3, v5, v2, v8, v6}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 929
    .line 930
    .line 931
    new-instance v2, Landroid/content/IntentFilter;

    .line 932
    .line 933
    invoke-direct {v2}, Landroid/content/IntentFilter;-><init>()V

    .line 934
    .line 935
    .line 936
    const-string v3, "android.intent.action.DREAMING_STARTED"

    .line 937
    .line 938
    invoke-virtual {v2, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 939
    .line 940
    .line 941
    const-string v3, "android.intent.action.DREAMING_STOPPED"

    .line 942
    .line 943
    invoke-virtual {v2, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 944
    .line 945
    .line 946
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 947
    .line 948
    new-instance v5, Lcom/android/server/power/PowerManagerService$DockReceiver;

    .line 949
    .line 950
    const/4 v6, 0x1

    .line 951
    invoke-direct {v5, v0, v6}, Lcom/android/server/power/PowerManagerService$DockReceiver;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    .line 952
    .line 953
    .line 954
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 955
    .line 956
    invoke-virtual {v3, v5, v2, v8, v6}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 957
    .line 958
    .line 959
    new-instance v2, Landroid/content/IntentFilter;

    .line 960
    .line 961
    invoke-direct {v2}, Landroid/content/IntentFilter;-><init>()V

    .line 962
    .line 963
    .line 964
    const-string v3, "android.intent.action.USER_SWITCHED"

    .line 965
    .line 966
    invoke-virtual {v2, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 967
    .line 968
    .line 969
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 970
    .line 971
    new-instance v5, Lcom/android/server/power/PowerManagerService$UserSwitchedReceiver;

    .line 972
    .line 973
    invoke-direct {v5, v0}, Lcom/android/server/power/PowerManagerService$UserSwitchedReceiver;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 974
    .line 975
    .line 976
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 977
    .line 978
    invoke-virtual {v3, v5, v2, v8, v6}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 979
    .line 980
    .line 981
    new-instance v2, Landroid/content/Intent;

    .line 982
    .line 983
    const-string v3, "com.samsung.android.knox.intent.action.NO_USER_ACTIVITY"

    .line 984
    .line 985
    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 986
    .line 987
    .line 988
    iput-object v2, v0, Lcom/android/server/power/PowerManagerService;->mNoUserActivityIntent:Landroid/content/Intent;

    .line 989
    .line 990
    new-instance v2, Landroid/content/Intent;

    .line 991
    .line 992
    const-string v3, "com.samsung.android.knox.intent.action.USER_ACTIVITY"

    .line 993
    .line 994
    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 995
    .line 996
    .line 997
    iput-object v2, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityIntent:Landroid/content/Intent;

    .line 998
    .line 999
    iput-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mNoUserActivitySent:Z

    .line 1000
    .line 1001
    sget-boolean v2, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_DEX_DUAL_VIEW:Z

    .line 1002
    .line 1003
    if-eqz v2, :cond_7

    .line 1004
    .line 1005
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 1006
    .line 1007
    const-string v3, "desktopmode"

    .line 1008
    .line 1009
    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 1010
    .line 1011
    .line 1012
    move-result-object v2

    .line 1013
    check-cast v2, Lcom/samsung/android/desktopmode/SemDesktopModeManager;

    .line 1014
    .line 1015
    if-eqz v2, :cond_6

    .line 1016
    .line 1017
    new-instance v3, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda15;

    .line 1018
    .line 1019
    invoke-direct {v3, v0}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda15;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 1020
    .line 1021
    .line 1022
    invoke-virtual {v2, v3}, Lcom/samsung/android/desktopmode/SemDesktopModeManager;->registerListener(Lcom/samsung/android/desktopmode/SemDesktopModeManager$DesktopModeListener;)V

    .line 1023
    .line 1024
    .line 1025
    :cond_6
    new-instance v2, Lcom/android/server/power/PowerManagerService$SettingsObserver;

    .line 1026
    .line 1027
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 1028
    .line 1029
    const/4 v5, 0x1

    .line 1030
    invoke-direct {v2, v0, v3, v5}, Lcom/android/server/power/PowerManagerService$SettingsObserver;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/os/Handler;I)V

    .line 1031
    .line 1032
    .line 1033
    sget-object v3, Lcom/android/server/power/PowerManagerService;->DEX_SETTINGS_URI:Landroid/net/Uri;

    .line 1034
    .line 1035
    const-string/jumbo v5, "timeout_dex"

    .line 1036
    .line 1037
    .line 1038
    invoke-static {v3, v5}, Landroid/net/Uri;->withAppendedPath(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;

    .line 1039
    .line 1040
    .line 1041
    move-result-object v3

    .line 1042
    invoke-virtual {v1, v3, v4, v2}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V

    .line 1043
    .line 1044
    .line 1045
    new-instance v1, Landroid/content/Intent;

    .line 1046
    .line 1047
    const-string v2, "com.samsung.android.server.power.ACTION_INTERNAL_DISPLAY_OFF_BY_POWERKEY"

    .line 1048
    .line 1049
    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1050
    .line 1051
    .line 1052
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mInternalDisplayOffByPowerKeyIntent:Landroid/content/Intent;

    .line 1053
    .line 1054
    const/high16 v2, 0x50000000

    .line 1055
    .line 1056
    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 1057
    .line 1058
    .line 1059
    :cond_7
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 1060
    .line 1061
    const-string v2, "SemInputDeviceManagerService"

    .line 1062
    .line 1063
    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    .line 1064
    .line 1065
    .line 1066
    move-result-object v1

    .line 1067
    check-cast v1, Lcom/samsung/android/hardware/secinputdev/SemInputDeviceManager;

    .line 1068
    .line 1069
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mSemInputDeviceManager:Lcom/samsung/android/hardware/secinputdev/SemInputDeviceManager;

    .line 1070
    .line 1071
    const-string v1, "android.intent.action.DOCK_EVENT"

    .line 1072
    .line 1073
    invoke-static {v1}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/String;)Landroid/content/IntentFilter;

    .line 1074
    .line 1075
    .line 1076
    move-result-object v1

    .line 1077
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 1078
    .line 1079
    new-instance v3, Lcom/android/server/power/PowerManagerService$DockReceiver;

    .line 1080
    .line 1081
    const/4 v4, 0x0

    .line 1082
    invoke-direct {v3, v0, v4}, Lcom/android/server/power/PowerManagerService$DockReceiver;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    .line 1083
    .line 1084
    .line 1085
    iget-object v0, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 1086
    .line 1087
    invoke-virtual {v2, v3, v1, v8, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 1088
    .line 1089
    .line 1090
    const-string v0, "/sys/class/lcd/panel/display_on"

    .line 1091
    .line 1092
    invoke-static {v0}, Lcom/android/server/power/PowerManagerUtil;->fileExist(Ljava/lang/String;)Z

    .line 1093
    .line 1094
    .line 1095
    move-result v0

    .line 1096
    if-nez v0, :cond_f

    .line 1097
    .line 1098
    sget-object v0, Lcom/android/server/power/PowerManagerUtil;->sCurrentScreenOnProfiler:Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;

    .line 1099
    .line 1100
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1101
    .line 1102
    .line 1103
    sput-boolean v7, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->CHECK_FRAME:Z

    .line 1104
    .line 1105
    const-string v0, "PowerManagerUtil"

    .line 1106
    .line 1107
    const-string v1, "disable FrameCheck"

    .line 1108
    .line 1109
    invoke-static {v0, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 1110
    .line 1111
    .line 1112
    goto/16 :goto_6

    .line 1113
    .line 1114
    :goto_1
    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 1115
    throw v0

    .line 1116
    :cond_8
    const/16 v2, 0x208

    .line 1117
    .line 1118
    if-ne v1, v2, :cond_9

    .line 1119
    .line 1120
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/SystemService;->isSafeMode()Z

    .line 1121
    .line 1122
    .line 1123
    move-result v1

    .line 1124
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 1125
    .line 1126
    monitor-enter v2

    .line 1127
    :try_start_4
    iput-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mSafeMode:Z

    .line 1128
    .line 1129
    monitor-exit v2

    .line 1130
    goto/16 :goto_6

    .line 1131
    .line 1132
    :catchall_1
    move-exception v0

    .line 1133
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 1134
    throw v0

    .line 1135
    :cond_9
    const/16 v2, 0x258

    .line 1136
    .line 1137
    if-ne v1, v2, :cond_a

    .line 1138
    .line 1139
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 1140
    .line 1141
    monitor-enter v2

    .line 1142
    :try_start_5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/SystemService;->getContext()Landroid/content/Context;

    .line 1143
    .line 1144
    .line 1145
    move-result-object v1

    .line 1146
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 1147
    .line 1148
    .line 1149
    move-result-object v1

    .line 1150
    const-string v3, "boot_count"

    .line 1151
    .line 1152
    invoke-static {v1, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;)I

    .line 1153
    .line 1154
    .line 1155
    move-result v7
    :try_end_5
    .catch Landroid/provider/Settings$SettingNotFoundException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 1156
    goto :goto_2

    .line 1157
    :catchall_2
    move-exception v0

    .line 1158
    goto :goto_3

    .line 1159
    :catch_1
    :goto_2
    :try_start_6
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/SystemService;->getContext()Landroid/content/Context;

    .line 1160
    .line 1161
    .line 1162
    move-result-object v0

    .line 1163
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 1164
    .line 1165
    .line 1166
    move-result-object v0

    .line 1167
    const-string v1, "boot_count"

    .line 1168
    .line 1169
    add-int/2addr v7, v4

    .line 1170
    invoke-static {v0, v1, v7}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .line 1171
    .line 1172
    .line 1173
    monitor-exit v2

    .line 1174
    goto/16 :goto_6

    .line 1175
    .line 1176
    :goto_3
    monitor-exit v2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 1177
    throw v0

    .line 1178
    :cond_a
    if-ne v1, v3, :cond_f

    .line 1179
    .line 1180
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 1181
    .line 1182
    monitor-enter v8

    .line 1183
    :try_start_7
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 1184
    .line 1185
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1186
    .line 1187
    .line 1188
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 1189
    .line 1190
    .line 1191
    move-result-wide v5

    .line 1192
    iput-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 1193
    .line 1194
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 1195
    .line 1196
    or-int/lit8 v1, v1, 0x10

    .line 1197
    .line 1198
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 1199
    .line 1200
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 1201
    .line 1202
    if-eqz v1, :cond_b

    .line 1203
    .line 1204
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 1205
    .line 1206
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1207
    .line 1208
    .line 1209
    new-instance v2, Lcom/android/server/power/batterysaver/BatterySaverStateMachine$$ExternalSyntheticLambda0;

    .line 1210
    .line 1211
    const/4 v3, 0x4

    .line 1212
    invoke-direct {v2, v1, v3}, Lcom/android/server/power/batterysaver/BatterySaverStateMachine$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/batterysaver/BatterySaverStateMachine;I)V

    .line 1213
    .line 1214
    .line 1215
    invoke-virtual {v1, v2}, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->runOnBgThread(Ljava/lang/Runnable;)V

    .line 1216
    .line 1217
    .line 1218
    goto :goto_4

    .line 1219
    :catchall_3
    move-exception v0

    .line 1220
    goto :goto_5

    .line 1221
    :cond_b
    :goto_4
    const/16 v4, 0x3e8

    .line 1222
    .line 1223
    const/4 v2, 0x0

    .line 1224
    const/4 v3, 0x0

    .line 1225
    move-object/from16 v1, p0

    .line 1226
    .line 1227
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(IIIJ)Z

    .line 1228
    .line 1229
    .line 1230
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 1231
    .line 1232
    .line 1233
    sget-boolean v1, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 1234
    .line 1235
    if-eqz v1, :cond_c

    .line 1236
    .line 1237
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 1238
    .line 1239
    invoke-virtual {v1, v7}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 1240
    .line 1241
    .line 1242
    move-result-object v1

    .line 1243
    move-object v2, v1

    .line 1244
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 1245
    .line 1246
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 1247
    .line 1248
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 1249
    .line 1250
    .line 1251
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 1252
    .line 1253
    .line 1254
    move-result-wide v3

    .line 1255
    const/16 v5, 0xa

    .line 1256
    .line 1257
    const/16 v6, 0x3e8

    .line 1258
    .line 1259
    move-object/from16 v1, p0

    .line 1260
    .line 1261
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->sleepPowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 1262
    .line 1263
    .line 1264
    :cond_c
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 1265
    .line 1266
    const-class v2, Landroid/hardware/devicestate/DeviceStateManager;

    .line 1267
    .line 1268
    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/Class;)Ljava/lang/Object;

    .line 1269
    .line 1270
    .line 1271
    move-result-object v1

    .line 1272
    check-cast v1, Landroid/hardware/devicestate/DeviceStateManager;

    .line 1273
    .line 1274
    new-instance v2, Landroid/os/HandlerExecutor;

    .line 1275
    .line 1276
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 1277
    .line 1278
    invoke-direct {v2, v3}, Landroid/os/HandlerExecutor;-><init>(Landroid/os/Handler;)V

    .line 1279
    .line 1280
    .line 1281
    new-instance v3, Lcom/android/server/power/PowerManagerService$DeviceStateListener;

    .line 1282
    .line 1283
    invoke-direct {v3, v0}, Lcom/android/server/power/PowerManagerService$DeviceStateListener;-><init>(Lcom/android/server/power/PowerManagerService;)V

    .line 1284
    .line 1285
    .line 1286
    invoke-virtual {v1, v2, v3}, Landroid/hardware/devicestate/DeviceStateManager;->registerCallback(Ljava/util/concurrent/Executor;Landroid/hardware/devicestate/DeviceStateManager$DeviceStateCallback;)V

    .line 1287
    .line 1288
    .line 1289
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 1290
    .line 1291
    iget-object v2, v0, Lcom/android/server/power/PowerManagerService;->mCoverAuthReadyRunnable:Ljava/lang/Runnable;

    .line 1292
    .line 1293
    const-wide/16 v3, 0x3a98

    .line 1294
    .line 1295
    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 1296
    .line 1297
    .line 1298
    sget-boolean v1, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_DEX_DUAL_VIEW:Z

    .line 1299
    .line 1300
    if-eqz v1, :cond_d

    .line 1301
    .line 1302
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 1303
    .line 1304
    new-instance v2, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;

    .line 1305
    .line 1306
    const/4 v3, 0x3

    .line 1307
    invoke-direct {v2, v0, v3}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    .line 1308
    .line 1309
    .line 1310
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 1311
    .line 1312
    .line 1313
    :cond_d
    iget-object v0, v0, Lcom/android/server/power/PowerManagerService;->mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

    .line 1314
    .line 1315
    if-eqz v0, :cond_e

    .line 1316
    .line 1317
    iget-object v1, v0, Lcom/android/server/power/ScreenCurtainController;->mHandler:Lcom/android/server/power/ScreenCurtainController$DisplayAssistantHandler;

    .line 1318
    .line 1319
    new-instance v2, Lcom/android/server/power/ScreenCurtainController$$ExternalSyntheticLambda0;

    .line 1320
    .line 1321
    const/4 v3, 0x0

    .line 1322
    invoke-direct {v2, v0, v3}, Lcom/android/server/power/ScreenCurtainController$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/ScreenCurtainController;I)V

    .line 1323
    .line 1324
    .line 1325
    invoke-virtual {v1, v2}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 1326
    .line 1327
    .line 1328
    :cond_e
    monitor-exit v8

    .line 1329
    goto :goto_6

    .line 1330
    :goto_5
    monitor-exit v8
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    .line 1331
    throw v0

    .line 1332
    :cond_f
    :goto_6
    return-void
.end method

.method public final onPowerGroupEventLocked(ILcom/android/server/power/PowerGroup;)V
    .locals 15

    .line 1
    move-object v8, p0

    .line 2
    move/from16 v7, p1

    .line 3
    .line 4
    move-object/from16 v9, p2

    .line 5
    .line 6
    const/4 v10, 0x1

    .line 7
    iput-boolean v10, v8, Lcom/android/server/power/PowerManagerService;->mWakefulnessChanging:Z

    .line 8
    .line 9
    iget v0, v8, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 10
    .line 11
    or-int/lit8 v0, v0, 0x2

    .line 12
    .line 13
    iput v0, v8, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 14
    .line 15
    iget v11, v9, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 16
    .line 17
    if-ne v7, v10, :cond_0

    .line 18
    .line 19
    iget-object v0, v8, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 20
    .line 21
    invoke-virtual {v0, v11}, Landroid/util/SparseArray;->delete(I)V

    .line 22
    .line 23
    .line 24
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 25
    .line 26
    .line 27
    move-result v12

    .line 28
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->recalculateGlobalWakefulnessLocked()I

    .line 29
    .line 30
    .line 31
    move-result v13

    .line 32
    iget-object v14, v8, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 33
    .line 34
    if-nez v7, :cond_1

    .line 35
    .line 36
    if-ne v13, v10, :cond_1

    .line 37
    .line 38
    invoke-virtual {v14}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 39
    .line 40
    .line 41
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 42
    .line 43
    .line 44
    move-result-wide v2

    .line 45
    const/16 v6, 0x3e8

    .line 46
    .line 47
    const/4 v4, 0x0

    .line 48
    const/4 v5, 0x0

    .line 49
    move-object v0, p0

    .line 50
    move-object/from16 v1, p2

    .line 51
    .line 52
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(Lcom/android/server/power/PowerGroup;JIII)Z

    .line 53
    .line 54
    .line 55
    iget-object v1, v8, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 56
    .line 57
    iget v3, v9, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 58
    .line 59
    invoke-virtual {v14}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 60
    .line 61
    .line 62
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 63
    .line 64
    .line 65
    move-result-wide v5

    .line 66
    const/16 v4, 0xa

    .line 67
    .line 68
    move v2, v11

    .line 69
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/Notifier;->onGroupWakefulnessChangeStarted(IIIJ)V

    .line 70
    .line 71
    .line 72
    goto :goto_0

    .line 73
    :cond_1
    if-ne v7, v10, :cond_2

    .line 74
    .line 75
    iget-object v0, v8, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 76
    .line 77
    iget-object v1, v0, Lcom/android/server/power/Notifier;->mInteractivityByGroupId:Landroid/util/SparseArray;

    .line 78
    .line 79
    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->remove(I)V

    .line 80
    .line 81
    .line 82
    iget-object v0, v0, Lcom/android/server/power/Notifier;->mWakefulnessSessionObserver:Lcom/android/server/power/WakefulnessSessionObserver;

    .line 83
    .line 84
    iget-object v1, v0, Lcom/android/server/power/WakefulnessSessionObserver;->mPowerGroups:Landroid/util/SparseArray;

    .line 85
    .line 86
    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->contains(I)Z

    .line 87
    .line 88
    .line 89
    move-result v1

    .line 90
    if-eqz v1, :cond_2

    .line 91
    .line 92
    iget-object v0, v0, Lcom/android/server/power/WakefulnessSessionObserver;->mPowerGroups:Landroid/util/SparseArray;

    .line 93
    .line 94
    invoke-virtual {v0, v11}, Landroid/util/SparseArray;->delete(I)V

    .line 95
    .line 96
    .line 97
    :cond_2
    :goto_0
    if-eq v12, v13, :cond_7

    .line 98
    .line 99
    const/16 v0, 0xb

    .line 100
    .line 101
    if-eq v13, v10, :cond_6

    .line 102
    .line 103
    const/4 v1, 0x3

    .line 104
    if-eq v13, v1, :cond_4

    .line 105
    .line 106
    const/4 v0, 0x0

    .line 107
    :cond_3
    :goto_1
    move v1, v0

    .line 108
    goto :goto_2

    .line 109
    :cond_4
    if-ne v7, v10, :cond_5

    .line 110
    .line 111
    goto :goto_1

    .line 112
    :cond_5
    const/16 v0, 0xc

    .line 113
    .line 114
    goto :goto_1

    .line 115
    :cond_6
    if-nez v7, :cond_3

    .line 116
    .line 117
    const/16 v0, 0xa

    .line 118
    .line 119
    goto :goto_1

    .line 120
    :goto_2
    invoke-virtual {v14}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 121
    .line 122
    .line 123
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 124
    .line 125
    .line 126
    move-result-wide v6

    .line 127
    iget-object v0, v8, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 128
    .line 129
    invoke-virtual {v0}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    .line 130
    .line 131
    .line 132
    move-result-object v3

    .line 133
    const-string v0, "groupId: "

    .line 134
    .line 135
    invoke-static {v11, v0}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 136
    .line 137
    .line 138
    move-result-object v4

    .line 139
    const/16 v2, 0x3e8

    .line 140
    .line 141
    const/16 v5, 0x3e8

    .line 142
    .line 143
    move-object v0, p0

    .line 144
    invoke-virtual/range {v0 .. v7}, Lcom/android/server/power/PowerManagerService;->updateGlobalWakefulnessLocked(IILjava/lang/String;Ljava/lang/String;IJ)V

    .line 145
    .line 146
    .line 147
    :cond_7
    iget v0, v8, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 148
    .line 149
    const/high16 v1, 0x10000

    .line 150
    .line 151
    or-int/2addr v0, v1

    .line 152
    iput v0, v8, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 153
    .line 154
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 155
    .line 156
    .line 157
    return-void
.end method

.method public final onStart()V
    .locals 4

    .line 1
    const/4 v0, 0x0

    .line 2
    const/4 v1, 0x1

    .line 3
    const-string/jumbo v2, "power"

    .line 4
    .line 5
    .line 6
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mBinderService:Lcom/android/server/power/PowerManagerService$BinderService;

    .line 7
    .line 8
    invoke-virtual {p0, v2, v3, v0, v1}, Lcom/android/server/SystemService;->publishBinderService(Ljava/lang/String;Landroid/os/IBinder;ZI)V

    .line 9
    .line 10
    .line 11
    const-class v0, Landroid/os/PowerManagerInternal;

    .line 12
    .line 13
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLocalService:Lcom/android/server/power/PowerManagerService$LocalService;

    .line 14
    .line 15
    invoke-virtual {p0, v0, v1}, Lcom/android/server/SystemService;->publishLocalService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 16
    .line 17
    .line 18
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    .line 19
    .line 20
    .line 21
    move-result-object v0

    .line 22
    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 23
    .line 24
    .line 25
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    .line 26
    .line 27
    .line 28
    move-result-object v0

    .line 29
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 30
    .line 31
    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    .line 32
    .line 33
    .line 34
    return-void
.end method

.method public onUserActivity()V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 5
    .line 6
    const/4 v2, 0x0

    .line 7
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 8
    .line 9
    .line 10
    move-result-object v1

    .line 11
    check-cast v1, Lcom/android/server/power/PowerGroup;

    .line 12
    .line 13
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 14
    .line 15
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 16
    .line 17
    .line 18
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 19
    .line 20
    .line 21
    move-result-wide v3

    .line 22
    iput-wide v3, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 23
    .line 24
    iput v2, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityEvent:I

    .line 25
    .line 26
    monitor-exit v0

    .line 27
    return-void

    .line 28
    :catchall_0
    move-exception p0

    .line 29
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 30
    throw p0
.end method

.method public readConfigurationLocked()V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    const/4 v1, 0x1

    .line 8
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDecoupleHalAutoSuspendModeFromDisplayConfig:Z

    .line 9
    .line 10
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDecoupleHalInteractiveModeFromDisplayConfig:Z

    .line 11
    .line 12
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedConfig:Z

    .line 13
    .line 14
    const v2, 0x111002d

    .line 15
    .line 16
    .line 17
    invoke-virtual {v0, v2}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 18
    .line 19
    .line 20
    move-result v2

    .line 21
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedInTheaterModeConfig:Z

    .line 22
    .line 23
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mSuspendWhenScreenOffDueToProximityConfig:Z

    .line 24
    .line 25
    const v1, 0x10e002e

    .line 26
    .line 27
    .line 28
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 29
    .line 30
    .line 31
    move-result v1

    .line 32
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutConfig:I

    .line 33
    .line 34
    const v1, 0x10e002f

    .line 35
    .line 36
    .line 37
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 38
    .line 39
    .line 40
    move-result v1

    .line 41
    int-to-long v1, v1

    .line 42
    iput-wide v1, p0, Lcom/android/server/power/PowerManagerService;->mAttentiveWarningDurationConfig:J

    .line 43
    .line 44
    const v1, 0x111015a

    .line 45
    .line 46
    .line 47
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 48
    .line 49
    .line 50
    move-result v1

    .line 51
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsSupportedConfig:Z

    .line 52
    .line 53
    const v1, 0x1110157

    .line 54
    .line 55
    .line 56
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 57
    .line 58
    .line 59
    move-result v1

    .line 60
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledByDefaultConfig:Z

    .line 61
    .line 62
    const v1, 0x1110155

    .line 63
    .line 64
    .line 65
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 66
    .line 67
    .line 68
    move-result v1

    .line 69
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnSleepByDefaultConfig:Z

    .line 70
    .line 71
    const v1, 0x1110154

    .line 72
    .line 73
    .line 74
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 75
    .line 76
    .line 77
    move-result v1

    .line 78
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnDockByDefaultConfig:Z

    .line 79
    .line 80
    const v1, 0x1110158

    .line 81
    .line 82
    .line 83
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 84
    .line 85
    .line 86
    move-result v1

    .line 87
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledOnBatteryConfig:Z

    .line 88
    .line 89
    const v1, 0x10e00a7

    .line 90
    .line 91
    .line 92
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 93
    .line 94
    .line 95
    move-result v1

    .line 96
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenPoweredConfig:I

    .line 97
    .line 98
    const v1, 0x10e00a6

    .line 99
    .line 100
    .line 101
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 102
    .line 103
    .line 104
    move-result v1

    .line 105
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelMinimumWhenNotPoweredConfig:I

    .line 106
    .line 107
    const v1, 0x10e00a5

    .line 108
    .line 109
    .line 110
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 111
    .line 112
    .line 113
    move-result v1

    .line 114
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrainCutoffConfig:I

    .line 115
    .line 116
    const v1, 0x1110156

    .line 117
    .line 118
    .line 119
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 120
    .line 121
    .line 122
    move-result v1

    .line 123
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsDisabledByAmbientModeSuppressionConfig:Z

    .line 124
    .line 125
    const v1, 0x111014d

    .line 126
    .line 127
    .line 128
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 129
    .line 130
    .line 131
    move-result v1

    .line 132
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDozeAfterScreenOff:Z

    .line 133
    .line 134
    const v1, 0x1110065

    .line 135
    .line 136
    .line 137
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 138
    .line 139
    .line 140
    move-result v1

    .line 141
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mBrightWhenDozingConfig:Z

    .line 142
    .line 143
    const v1, 0x10e00e7

    .line 144
    .line 145
    .line 146
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 147
    .line 148
    .line 149
    move-result v1

    .line 150
    int-to-long v1, v1

    .line 151
    iput-wide v1, p0, Lcom/android/server/power/PowerManagerService;->mMinimumScreenOffTimeoutConfig:J

    .line 152
    .line 153
    const-wide/16 v1, 0x4e20

    .line 154
    .line 155
    iput-wide v1, p0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimDurationConfig:J

    .line 156
    .line 157
    const v1, 0x3eaa7efa    # 0.333f

    .line 158
    .line 159
    .line 160
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimRatioConfig:F

    .line 161
    .line 162
    const v1, 0x1110244

    .line 163
    .line 164
    .line 165
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    .line 166
    .line 167
    .line 168
    move-result v1

    .line 169
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mSupportsDoubleTapWakeConfig:Z

    .line 170
    .line 171
    const v1, 0x10e0137

    .line 172
    .line 173
    .line 174
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 175
    .line 176
    .line 177
    move-result v1

    .line 178
    invoke-static {v1}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    .line 179
    .line 180
    .line 181
    move-result v1

    .line 182
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessForClearCoverConfig:F

    .line 183
    .line 184
    const v1, 0x10e004c

    .line 185
    .line 186
    .line 187
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    .line 188
    .line 189
    .line 190
    move-result v0

    .line 191
    iput v0, p0, Lcom/android/server/power/PowerManagerService;->mBrightnessLimitByCoverConfig:I

    .line 192
    .line 193
    return-void
.end method

.method public final recalculateGlobalWakefulnessLocked()I
    .locals 5

    .line 1
    const/4 v0, 0x0

    .line 2
    move v1, v0

    .line 3
    :goto_0
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 4
    .line 5
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 6
    .line 7
    .line 8
    move-result v2

    .line 9
    if-ge v0, v2, :cond_4

    .line 10
    .line 11
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 12
    .line 13
    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 14
    .line 15
    .line 16
    move-result-object v2

    .line 17
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 18
    .line 19
    iget v2, v2, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 20
    .line 21
    const/4 v3, 0x1

    .line 22
    if-ne v2, v3, :cond_0

    .line 23
    .line 24
    return v3

    .line 25
    :cond_0
    const/4 v3, 0x2

    .line 26
    const/4 v4, 0x3

    .line 27
    if-ne v2, v3, :cond_2

    .line 28
    .line 29
    if-eqz v1, :cond_1

    .line 30
    .line 31
    if-ne v1, v4, :cond_2

    .line 32
    .line 33
    :cond_1
    move v1, v3

    .line 34
    goto :goto_1

    .line 35
    :cond_2
    if-ne v2, v4, :cond_3

    .line 36
    .line 37
    if-nez v1, :cond_3

    .line 38
    .line 39
    move v1, v4

    .line 40
    :cond_3
    :goto_1
    add-int/lit8 v0, v0, 0x1

    .line 41
    .line 42
    goto :goto_0

    .line 43
    :cond_4
    return v1
.end method

.method public final removeWakeLockNoUpdateLocked(Lcom/android/server/power/PowerManagerService$WakeLock;II)V
    .locals 7

    .line 1
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-virtual {v1, p2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 4
    .line 5
    .line 6
    iget-object v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mUidState:Lcom/android/server/power/PowerManagerService$UidState;

    .line 7
    .line 8
    iget v2, v1, Lcom/android/server/power/PowerManagerService$UidState;->mNumWakeLocks:I

    .line 9
    .line 10
    add-int/lit8 v2, v2, -0x1

    .line 11
    .line 12
    iput v2, v1, Lcom/android/server/power/PowerManagerService$UidState;->mNumWakeLocks:I

    .line 13
    .line 14
    if-gtz v2, :cond_0

    .line 15
    .line 16
    iget v2, v1, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 17
    .line 18
    const/16 v3, 0x14

    .line 19
    .line 20
    if-ne v2, v3, :cond_0

    .line 21
    .line 22
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mUidState:Landroid/util/SparseArray;

    .line 23
    .line 24
    iget v1, v1, Lcom/android/server/power/PowerManagerService$UidState;->mUid:I

    .line 25
    .line 26
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->remove(I)V

    .line 27
    .line 28
    .line 29
    :cond_0
    invoke-virtual {p0, p1, p3}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockReleasedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;I)V

    .line 30
    .line 31
    .line 32
    iget v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 33
    .line 34
    const/high16 v2, 0x20000000

    .line 35
    .line 36
    and-int/2addr v1, v2

    .line 37
    if-eqz v1, :cond_2

    .line 38
    .line 39
    invoke-static {p1}, Lcom/android/server/power/PowerManagerService;->isScreenLock(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 40
    .line 41
    .line 42
    move-result v1

    .line 43
    if-eqz v1, :cond_2

    .line 44
    .line 45
    new-instance v1, Ljava/lang/StringBuilder;

    .line 46
    .line 47
    const-string v2, "[api] applyWakeLockFlagsOnReleaseLocked : userActivityNoUpdateLocked is called : "

    .line 48
    .line 49
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 50
    .line 51
    .line 52
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 53
    .line 54
    .line 55
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 56
    .line 57
    .line 58
    move-result-object v1

    .line 59
    const-string v2, "PowerManagerService"

    .line 60
    .line 61
    invoke-static {v2, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 62
    .line 63
    .line 64
    invoke-virtual {p1}, Lcom/android/server/power/PowerManagerService$WakeLock;->getPowerGroupId()Ljava/lang/Integer;

    .line 65
    .line 66
    .line 67
    move-result-object v1

    .line 68
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 69
    .line 70
    if-eqz v1, :cond_1

    .line 71
    .line 72
    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    .line 73
    .line 74
    .line 75
    move-result v1

    .line 76
    const/4 v3, -0x1

    .line 77
    if-eq v1, v3, :cond_1

    .line 78
    .line 79
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 80
    .line 81
    invoke-virtual {p1}, Lcom/android/server/power/PowerManagerService$WakeLock;->getPowerGroupId()Ljava/lang/Integer;

    .line 82
    .line 83
    .line 84
    move-result-object v3

    .line 85
    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I

    .line 86
    .line 87
    .line 88
    move-result v3

    .line 89
    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 90
    .line 91
    .line 92
    move-result-object v1

    .line 93
    check-cast v1, Lcom/android/server/power/PowerGroup;

    .line 94
    .line 95
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 96
    .line 97
    .line 98
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 99
    .line 100
    .line 101
    move-result-wide v2

    .line 102
    iget v6, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 103
    .line 104
    const/4 v4, 0x0

    .line 105
    const/4 v5, 0x1

    .line 106
    move-object v0, p0

    .line 107
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(Lcom/android/server/power/PowerGroup;JIII)Z

    .line 108
    .line 109
    .line 110
    goto :goto_0

    .line 111
    :cond_1
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 112
    .line 113
    .line 114
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 115
    .line 116
    .line 117
    move-result-wide v4

    .line 118
    iget v3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 119
    .line 120
    const/4 v1, 0x0

    .line 121
    const/4 v2, 0x1

    .line 122
    move-object v0, p0

    .line 123
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(IIIJ)Z

    .line 124
    .line 125
    .line 126
    :cond_2
    :goto_0
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 127
    .line 128
    or-int/lit8 v0, v0, 0x1

    .line 129
    .line 130
    iput v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 131
    .line 132
    return-void
.end method

.method public final restartNofifyLongTimerLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 4
    .line 5
    .line 6
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 7
    .line 8
    .line 9
    move-result-wide v0

    .line 10
    iput-wide v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mAcquireTime:J

    .line 11
    .line 12
    iget p1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 13
    .line 14
    const v2, 0xffff

    .line 15
    .line 16
    .line 17
    and-int/2addr p1, v2

    .line 18
    const/4 v2, 0x1

    .line 19
    if-ne p1, v2, :cond_0

    .line 20
    .line 21
    iget-wide v3, p0, Lcom/android/server/power/PowerManagerService;->mNotifyLongScheduled:J

    .line 22
    .line 23
    const-wide/16 v5, 0x0

    .line 24
    .line 25
    cmp-long p1, v3, v5

    .line 26
    .line 27
    if-nez p1, :cond_0

    .line 28
    .line 29
    const-wide/32 v3, 0xea60

    .line 30
    .line 31
    .line 32
    add-long/2addr v0, v3

    .line 33
    iput-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mNotifyLongScheduled:J

    .line 34
    .line 35
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 36
    .line 37
    const/4 p1, 0x4

    .line 38
    invoke-virtual {p0, p1}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 39
    .line 40
    .line 41
    move-result-object p1

    .line 42
    invoke-virtual {p1, v2}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 43
    .line 44
    .line 45
    invoke-virtual {p0, p1, v0, v1}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 46
    .line 47
    .line 48
    :cond_0
    return-void
.end method

.method public final scheduleSandmanLocked()V
    .locals 7

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mSandmanScheduled:Z

    .line 2
    .line 3
    if-nez v0, :cond_1

    .line 4
    .line 5
    const/4 v0, 0x1

    .line 6
    iput-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mSandmanScheduled:Z

    .line 7
    .line 8
    const/4 v1, 0x0

    .line 9
    :goto_0
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 10
    .line 11
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 12
    .line 13
    .line 14
    move-result v2

    .line 15
    if-ge v1, v2, :cond_1

    .line 16
    .line 17
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 18
    .line 19
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 20
    .line 21
    .line 22
    move-result-object v2

    .line 23
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 24
    .line 25
    iget-boolean v3, v2, Lcom/android/server/power/PowerGroup;->mSupportsSandman:Z

    .line 26
    .line 27
    if-eqz v3, :cond_0

    .line 28
    .line 29
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 30
    .line 31
    const/4 v4, 0x2

    .line 32
    invoke-virtual {v3, v4}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 33
    .line 34
    .line 35
    move-result-object v4

    .line 36
    iget v2, v2, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 37
    .line 38
    iput v2, v4, Landroid/os/Message;->arg1:I

    .line 39
    .line 40
    invoke-virtual {v4, v0}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 41
    .line 42
    .line 43
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 44
    .line 45
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 46
    .line 47
    .line 48
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 49
    .line 50
    .line 51
    move-result-wide v5

    .line 52
    invoke-virtual {v3, v4, v5, v6}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 53
    .line 54
    .line 55
    :cond_0
    add-int/lit8 v1, v1, 0x1

    .line 56
    .line 57
    goto :goto_0

    .line 58
    :cond_1
    return-void
.end method

.method public final sensorBlockedByCoverLocked()Z
    .locals 2

    .line 1
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 2
    .line 3
    const/4 v1, -0x1

    .line 4
    if-eq v0, v1, :cond_0

    .line 5
    .line 6
    const/4 v1, 0x2

    .line 7
    if-eq v0, v1, :cond_0

    .line 8
    .line 9
    const/16 v1, 0x9

    .line 10
    .line 11
    if-eq v0, v1, :cond_1

    .line 12
    .line 13
    const/16 v1, 0xa

    .line 14
    .line 15
    if-eq v0, v1, :cond_1

    .line 16
    .line 17
    iget-boolean p0, p0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 18
    .line 19
    return p0

    .line 20
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mCoverAuthReady:Z

    .line 21
    .line 22
    if-nez v0, :cond_1

    .line 23
    .line 24
    iget-boolean p0, p0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 25
    .line 26
    return p0

    .line 27
    :cond_1
    const/4 p0, 0x0

    .line 28
    return p0
.end method

.method public final setEnsureTransitionToDozingReleaserLocked(Z)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 2
    .line 3
    if-eqz p1, :cond_0

    .line 4
    .line 5
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mEnsureTransitionToDozingReleaserRunning:Z

    .line 6
    .line 7
    if-nez p1, :cond_1

    .line 8
    .line 9
    const-string p1, "PowerManagerService"

    .line 10
    .line 11
    const-string/jumbo v1, "postDelayed mEnsureTransitionToDozingReleaserRunning"

    .line 12
    .line 13
    .line 14
    invoke-static {p1, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 15
    .line 16
    .line 17
    const/4 p1, 0x1

    .line 18
    iput-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mEnsureTransitionToDozingReleaserRunning:Z

    .line 19
    .line 20
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mEnsureTransitionToDozingReleaser:Lcom/android/server/power/PowerManagerService$6;

    .line 21
    .line 22
    const-wide/16 v1, 0x1388

    .line 23
    .line 24
    invoke-virtual {v0, p0, v1, v2}, Landroid/os/Handler;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 25
    .line 26
    .line 27
    goto :goto_0

    .line 28
    :cond_0
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mEnsureTransitionToDozingReleaserRunning:Z

    .line 29
    .line 30
    if-eqz p1, :cond_1

    .line 31
    .line 32
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mEnsureTransitionToDozingReleaser:Lcom/android/server/power/PowerManagerService$6;

    .line 33
    .line 34
    invoke-virtual {v0, p1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 35
    .line 36
    .line 37
    const/4 p1, 0x0

    .line 38
    iput-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mEnsureTransitionToDozingReleaserRunning:Z

    .line 39
    .line 40
    :cond_1
    :goto_0
    return-void
.end method

.method public final setHalAutoSuspendModeLocked(Z)V
    .locals 3

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mUseAutoSuspend:Z

    .line 2
    .line 3
    if-nez v0, :cond_0

    .line 4
    .line 5
    return-void

    .line 6
    :cond_0
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mHalAutoSuspendModeEnabled:Z

    .line 7
    .line 8
    if-eq p1, v0, :cond_1

    .line 9
    .line 10
    iput-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mHalAutoSuspendModeEnabled:Z

    .line 11
    .line 12
    new-instance v0, Ljava/lang/StringBuilder;

    .line 13
    .line 14
    const-string/jumbo v1, "setHalAutoSuspend("

    .line 15
    .line 16
    .line 17
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 18
    .line 19
    .line 20
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 21
    .line 22
    .line 23
    const-string v1, ")"

    .line 24
    .line 25
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 26
    .line 27
    .line 28
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 29
    .line 30
    .line 31
    move-result-object v0

    .line 32
    const-wide/32 v1, 0x20000

    .line 33
    .line 34
    .line 35
    invoke-static {v1, v2, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 36
    .line 37
    .line 38
    :try_start_0
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

    .line 39
    .line 40
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 41
    .line 42
    .line 43
    invoke-static {p1}, Lcom/android/server/power/PowerManagerService;->nativeSetAutoSuspend(Z)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 44
    .line 45
    .line 46
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 47
    .line 48
    .line 49
    goto :goto_0

    .line 50
    :catchall_0
    move-exception p0

    .line 51
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 52
    .line 53
    .line 54
    throw p0

    .line 55
    :cond_1
    :goto_0
    return-void
.end method

.method public final setHalInteractiveModeLocked(Z)V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

    .line 2
    .line 3
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mHalInteractiveModeEnabled:Z

    .line 4
    .line 5
    if-ne p1, v1, :cond_0

    .line 6
    .line 7
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mForceSetHalInteractiveMode:Z

    .line 8
    .line 9
    if-eqz v1, :cond_4

    .line 10
    .line 11
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    .line 12
    .line 13
    const-string v2, "Setting HAL interactive mode to "

    .line 14
    .line 15
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 16
    .line 17
    .line 18
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 19
    .line 20
    .line 21
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 22
    .line 23
    .line 24
    move-result-object v1

    .line 25
    const-string v2, "PowerManagerService"

    .line 26
    .line 27
    invoke-static {v2, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 28
    .line 29
    .line 30
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mForceSetHalInteractiveMode:Z

    .line 31
    .line 32
    if-eqz v1, :cond_1

    .line 33
    .line 34
    const-string/jumbo v1, "setHalInteractiveModeLocked called by dual screen policy change"

    .line 35
    .line 36
    .line 37
    invoke-static {v2, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 38
    .line 39
    .line 40
    const/4 v1, 0x0

    .line 41
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mForceSetHalInteractiveMode:Z

    .line 42
    .line 43
    :cond_1
    iput-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mHalInteractiveModeEnabled:Z

    .line 44
    .line 45
    new-instance v1, Ljava/lang/StringBuilder;

    .line 46
    .line 47
    const-string/jumbo v2, "setHalInteractive("

    .line 48
    .line 49
    .line 50
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 51
    .line 52
    .line 53
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 54
    .line 55
    .line 56
    const-string v2, ")"

    .line 57
    .line 58
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 59
    .line 60
    .line 61
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 62
    .line 63
    .line 64
    move-result-object v1

    .line 65
    const-wide/32 v2, 0x20000

    .line 66
    .line 67
    .line 68
    invoke-static {v2, v3, v1}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 69
    .line 70
    .line 71
    if-nez p1, :cond_3

    .line 72
    .line 73
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 74
    .line 75
    if-eqz v1, :cond_3

    .line 76
    .line 77
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mSemInputDeviceManager:Lcom/samsung/android/hardware/secinputdev/SemInputDeviceManager;

    .line 78
    .line 79
    if-eqz v1, :cond_3

    .line 80
    .line 81
    iget v4, p0, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 82
    .line 83
    const/4 v5, 0x1

    .line 84
    if-ne v4, v5, :cond_2

    .line 85
    .line 86
    const/4 v4, 0x2

    .line 87
    goto :goto_0

    .line 88
    :cond_2
    move v4, v5

    .line 89
    :goto_0
    invoke-virtual {v1, v4, v5}, Lcom/samsung/android/hardware/secinputdev/SemInputDeviceManager;->setProxPowerOff(II)I

    .line 90
    .line 91
    .line 92
    goto :goto_1

    .line 93
    :catchall_0
    move-exception p0

    .line 94
    goto :goto_2

    .line 95
    :cond_3
    :goto_1
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 96
    .line 97
    .line 98
    const/4 v1, 0x7

    .line 99
    invoke-static {v1, p1}, Lcom/android/server/power/PowerManagerService;->-$$Nest$smnativeSetPowerMode(IZ)Z

    .line 100
    .line 101
    .line 102
    iget p0, p0, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 103
    .line 104
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 105
    .line 106
    .line 107
    invoke-static {p0, p1}, Lcom/android/server/power/PowerManagerService;->-$$Nest$smnativeSetInteractiveAsync(IZ)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 108
    .line 109
    .line 110
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 111
    .line 112
    .line 113
    :cond_4
    return-void

    .line 114
    :goto_2
    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 115
    .line 116
    .line 117
    throw p0
.end method

.method public final setLCDFlashModeInternal(Landroid/os/IBinder;Z)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLCDFlashModeLock:Lcom/android/server/power/PowerManagerService$LCDFlashModeLock;

    .line 5
    .line 6
    if-nez v1, :cond_0

    .line 7
    .line 8
    new-instance v1, Lcom/android/server/power/PowerManagerService$LCDFlashModeLock;

    .line 9
    .line 10
    invoke-direct {v1, p0, p1}, Lcom/android/server/power/PowerManagerService$LCDFlashModeLock;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/os/IBinder;)V

    .line 11
    .line 12
    .line 13
    iput-object v1, p0, Lcom/android/server/power/PowerManagerService;->mLCDFlashModeLock:Lcom/android/server/power/PowerManagerService$LCDFlashModeLock;

    .line 14
    .line 15
    goto :goto_0

    .line 16
    :catchall_0
    move-exception p0

    .line 17
    goto :goto_1

    .line 18
    :cond_0
    :goto_0
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mLCDFlashMode:Z

    .line 19
    .line 20
    if-eq p1, p2, :cond_1

    .line 21
    .line 22
    iput-boolean p2, p0, Lcom/android/server/power/PowerManagerService;->mLCDFlashMode:Z

    .line 23
    .line 24
    iget p1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 25
    .line 26
    or-int/lit8 p1, p1, 0x20

    .line 27
    .line 28
    iput p1, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 29
    .line 30
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 31
    .line 32
    .line 33
    :cond_1
    monitor-exit v0

    .line 34
    return-void

    .line 35
    :goto_1
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 36
    throw p0
.end method

.method public final setPowerModeInternal(IZ)Z
    .locals 2

    .line 1
    const/4 v0, 0x5

    .line 2
    if-ne p1, v0, :cond_0

    .line 3
    .line 4
    if-eqz p2, :cond_0

    .line 5
    .line 6
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 7
    .line 8
    if-eqz v0, :cond_0

    .line 9
    .line 10
    iget-object v0, v0, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mBatterySaverController:Lcom/android/server/power/batterysaver/BatterySaverController;

    .line 11
    .line 12
    invoke-virtual {v0}, Lcom/android/server/power/batterysaver/BatterySaverController;->isPolicyEnabled()Z

    .line 13
    .line 14
    .line 15
    move-result v1

    .line 16
    if-eqz v1, :cond_0

    .line 17
    .line 18
    iget-object v0, v0, Lcom/android/server/power/batterysaver/BatterySaverController;->mBatterySaverPolicy:Lcom/android/server/power/batterysaver/BatterySaverPolicy;

    .line 19
    .line 20
    iget-object v1, v0, Lcom/android/server/power/batterysaver/BatterySaverPolicy;->mLock:Ljava/lang/Object;

    .line 21
    .line 22
    monitor-enter v1

    .line 23
    :try_start_0
    iget-object v0, v0, Lcom/android/server/power/batterysaver/BatterySaverPolicy;->mEffectivePolicyRaw:Lcom/android/server/power/batterysaver/BatterySaverPolicy$Policy;

    .line 24
    .line 25
    iget-boolean v0, v0, Lcom/android/server/power/batterysaver/BatterySaverPolicy$Policy;->disableLaunchBoost:Z

    .line 26
    .line 27
    monitor-exit v1

    .line 28
    if-eqz v0, :cond_0

    .line 29
    .line 30
    const/4 p0, 0x0

    .line 31
    return p0

    .line 32
    :catchall_0
    move-exception p0

    .line 33
    monitor-exit v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 34
    throw p0

    .line 35
    :cond_0
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

    .line 36
    .line 37
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 38
    .line 39
    .line 40
    invoke-static {p1, p2}, Lcom/android/server/power/PowerManagerService;->-$$Nest$smnativeSetPowerMode(IZ)Z

    .line 41
    .line 42
    .line 43
    move-result p0

    .line 44
    return p0
.end method

.method public final setQuickPanelBrightnessBarDisabled(Z)V
    .locals 2

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 2
    .line 3
    const-string v1, "Hide QuickPanel Brightness Bar: "

    .line 4
    .line 5
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 6
    .line 7
    .line 8
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 9
    .line 10
    .line 11
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 12
    .line 13
    .line 14
    move-result-object v0

    .line 15
    const-string v1, "PowerManagerService"

    .line 16
    .line 17
    invoke-static {v1, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 18
    .line 19
    .line 20
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 21
    .line 22
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 23
    .line 24
    .line 25
    move-result-object v0

    .line 26
    if-eqz p1, :cond_0

    .line 27
    .line 28
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessOverridePackageFromWindowManager:Ljava/lang/String;

    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_0
    const-string p0, ""

    .line 32
    .line 33
    :goto_0
    const/4 p1, -0x2

    .line 34
    const-string/jumbo v1, "pms_notification_panel_brightness_adjustment"

    .line 35
    .line 36
    .line 37
    invoke-static {v0, v1, p0, p1}, Landroid/provider/Settings$System;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z

    .line 38
    .line 39
    .line 40
    return-void
.end method

.method public final setUserActivityTimeoutLocked(J)V
    .locals 3

    .line 1
    new-instance v0, Ljava/lang/StringBuilder;

    .line 2
    .line 3
    const-string/jumbo v1, "setUserActivityTimeoutLocked SRUK : now="

    .line 4
    .line 5
    .line 6
    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 7
    .line 8
    .line 9
    invoke-virtual {v0, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 10
    .line 11
    .line 12
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 13
    .line 14
    .line 15
    move-result-object v0

    .line 16
    const-string v1, "PowerManagerService"

    .line 17
    .line 18
    invoke-static {v1, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 19
    .line 20
    .line 21
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 22
    .line 23
    if-eqz v0, :cond_1

    .line 24
    .line 25
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutSetting:I

    .line 26
    .line 27
    int-to-long v0, v0

    .line 28
    add-long/2addr p1, v0

    .line 29
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mNoUserActivitySent:Z

    .line 30
    .line 31
    const/4 v1, 0x1

    .line 32
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 33
    .line 34
    if-ne v0, v1, :cond_0

    .line 35
    .line 36
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTask:Lcom/android/server/power/PowerManagerService$6;

    .line 37
    .line 38
    invoke-virtual {v2, v0}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 39
    .line 40
    .line 41
    invoke-virtual {v2, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 42
    .line 43
    .line 44
    :cond_0
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutTask:Lcom/android/server/power/PowerManagerService$6;

    .line 45
    .line 46
    invoke-virtual {v2, p0}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 47
    .line 48
    .line 49
    invoke-virtual {v2, p0, p1, p2}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 50
    .line 51
    .line 52
    :cond_1
    return-void
.end method

.method public final setWakeLockDisabledStateLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)Z
    .locals 10

    .line 1
    iget v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 2
    .line 3
    const v1, 0xffff

    .line 4
    .line 5
    .line 6
    and-int/2addr v0, v1

    .line 7
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mConstants:Lcom/android/server/power/PowerManagerService$Constants;

    .line 8
    .line 9
    const/16 v3, 0x2710

    .line 10
    .line 11
    const/16 v4, 0x14

    .line 12
    .line 13
    const/4 v5, 0x0

    .line 14
    const/4 v6, 0x1

    .line 15
    if-ne v0, v6, :cond_d

    .line 16
    .line 17
    iget v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 18
    .line 19
    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I

    .line 20
    .line 21
    .line 22
    move-result v0

    .line 23
    if-lt v0, v3, :cond_7

    .line 24
    .line 25
    iget-boolean v2, v2, Lcom/android/server/power/PowerManagerService$Constants;->NO_CACHED_WAKE_LOCKS:Z

    .line 26
    .line 27
    if-eqz v2, :cond_3

    .line 28
    .line 29
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mForceSuspendActive:Z

    .line 30
    .line 31
    if-nez v2, :cond_1

    .line 32
    .line 33
    iget-object v2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mUidState:Lcom/android/server/power/PowerManagerService$UidState;

    .line 34
    .line 35
    iget-boolean v3, v2, Lcom/android/server/power/PowerManagerService$UidState;->mActive:Z

    .line 36
    .line 37
    if-nez v3, :cond_0

    .line 38
    .line 39
    iget v2, v2, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 40
    .line 41
    if-eq v2, v4, :cond_0

    .line 42
    .line 43
    const/16 v3, 0xb

    .line 44
    .line 45
    if-le v2, v3, :cond_0

    .line 46
    .line 47
    goto :goto_0

    .line 48
    :cond_0
    move v2, v5

    .line 49
    goto :goto_1

    .line 50
    :cond_1
    :goto_0
    move v2, v6

    .line 51
    :goto_1
    if-eqz v2, :cond_2

    .line 52
    .line 53
    move v3, v6

    .line 54
    goto :goto_2

    .line 55
    :cond_2
    move v3, v5

    .line 56
    goto :goto_2

    .line 57
    :cond_3
    move v2, v5

    .line 58
    move v3, v2

    .line 59
    :goto_2
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->doesIdleStateBlockWakeLocksLocked()Z

    .line 60
    .line 61
    .line 62
    move-result v7

    .line 63
    if-eqz v7, :cond_4

    .line 64
    .line 65
    iget-object v7, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mUidState:Lcom/android/server/power/PowerManagerService$UidState;

    .line 66
    .line 67
    iget-object v8, p0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleWhitelist:[I

    .line 68
    .line 69
    invoke-static {v8, v0}, Ljava/util/Arrays;->binarySearch([II)I

    .line 70
    .line 71
    .line 72
    move-result v8

    .line 73
    if-gez v8, :cond_4

    .line 74
    .line 75
    iget-object v8, p0, Lcom/android/server/power/PowerManagerService;->mDeviceIdleTempWhitelist:[I

    .line 76
    .line 77
    invoke-static {v8, v0}, Ljava/util/Arrays;->binarySearch([II)I

    .line 78
    .line 79
    .line 80
    move-result v8

    .line 81
    if-gez v8, :cond_4

    .line 82
    .line 83
    iget v7, v7, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 84
    .line 85
    if-eq v7, v4, :cond_4

    .line 86
    .line 87
    const/4 v8, 0x5

    .line 88
    if-le v7, v8, :cond_4

    .line 89
    .line 90
    or-int/lit8 v3, v3, 0x2

    .line 91
    .line 92
    move v2, v6

    .line 93
    :cond_4
    iget-boolean v7, p0, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyActive:Z

    .line 94
    .line 95
    if-eqz v7, :cond_5

    .line 96
    .line 97
    iget-object v7, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mUidState:Lcom/android/server/power/PowerManagerService$UidState;

    .line 98
    .line 99
    iget-object v8, p0, Lcom/android/server/power/PowerManagerService;->mLowPowerStandbyAllowlist:[I

    .line 100
    .line 101
    iget v9, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 102
    .line 103
    invoke-static {v8, v9}, Ljava/util/Arrays;->binarySearch([II)I

    .line 104
    .line 105
    .line 106
    move-result v8

    .line 107
    if-gez v8, :cond_5

    .line 108
    .line 109
    iget v7, v7, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 110
    .line 111
    if-eq v7, v4, :cond_5

    .line 112
    .line 113
    const/4 v4, 0x3

    .line 114
    if-le v7, v4, :cond_5

    .line 115
    .line 116
    or-int/lit8 v3, v3, 0x4

    .line 117
    .line 118
    move v2, v6

    .line 119
    :cond_5
    iget-boolean v4, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabledByFreecess:Z

    .line 120
    .line 121
    if-eqz v4, :cond_6

    .line 122
    .line 123
    or-int/lit8 v3, v3, 0x8

    .line 124
    .line 125
    move v2, v6

    .line 126
    :cond_6
    iget-object v4, p0, Lcom/android/server/power/PowerManagerService;->mWakelockBlacklistAppid:Ljava/util/ArrayList;

    .line 127
    .line 128
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    .line 129
    .line 130
    .line 131
    move-result-object v0

    .line 132
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    .line 133
    .line 134
    .line 135
    move-result v0

    .line 136
    if-eqz v0, :cond_8

    .line 137
    .line 138
    or-int/lit8 v3, v3, 0x10

    .line 139
    .line 140
    move v2, v6

    .line 141
    goto :goto_3

    .line 142
    :cond_7
    move v2, v5

    .line 143
    move v3, v2

    .line 144
    :cond_8
    :goto_3
    iget-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 145
    .line 146
    if-eq v0, v2, :cond_9

    .line 147
    .line 148
    iput-boolean v2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 149
    .line 150
    iput v3, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisableReason:I

    .line 151
    .line 152
    move v5, v6

    .line 153
    :cond_9
    if-eqz v5, :cond_c

    .line 154
    .line 155
    iget v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 156
    .line 157
    and-int/2addr v0, v1

    .line 158
    if-ne v0, v6, :cond_c

    .line 159
    .line 160
    iget-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mNotifiedAcquired:Z

    .line 161
    .line 162
    if-eqz v0, :cond_a

    .line 163
    .line 164
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 165
    .line 166
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 167
    .line 168
    .line 169
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 170
    .line 171
    .line 172
    move-result-wide v0

    .line 173
    iget-wide v2, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mAcquireTime:J

    .line 174
    .line 175
    sub-long/2addr v0, v2

    .line 176
    goto :goto_4

    .line 177
    :cond_a
    const-wide/16 v0, 0x0

    .line 178
    .line 179
    :goto_4
    invoke-static {v0, v1}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    .line 180
    .line 181
    .line 182
    move-result-object p0

    .line 183
    new-instance v0, Ljava/lang/StringBuilder;

    .line 184
    .line 185
    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    .line 186
    .line 187
    .line 188
    iget-object v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mTag:Ljava/lang/String;

    .line 189
    .line 190
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 191
    .line 192
    .line 193
    const-string v1, ":"

    .line 194
    .line 195
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 196
    .line 197
    .line 198
    iget-object v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mPackageName:Ljava/lang/String;

    .line 199
    .line 200
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 201
    .line 202
    .line 203
    iget-boolean v1, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 204
    .line 205
    if-eqz v1, :cond_b

    .line 206
    .line 207
    new-instance v1, Ljava/lang/StringBuilder;

    .line 208
    .line 209
    const-string v2, "(disabled:"

    .line 210
    .line 211
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 212
    .line 213
    .line 214
    invoke-static {p1}, Lcom/android/server/power/PowerManagerService$WakeLock;->-$$Nest$mgetDisableReasonString(Lcom/android/server/power/PowerManagerService$WakeLock;)Ljava/lang/String;

    .line 215
    .line 216
    .line 217
    move-result-object p1

    .line 218
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 219
    .line 220
    .line 221
    const-string p1, ")"

    .line 222
    .line 223
    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 224
    .line 225
    .line 226
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 227
    .line 228
    .line 229
    move-result-object p1

    .line 230
    goto :goto_5

    .line 231
    :cond_b
    const-string p1, "(enabled)"

    .line 232
    .line 233
    :goto_5
    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 234
    .line 235
    .line 236
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 237
    .line 238
    .line 239
    move-result-object p1

    .line 240
    const-string v0, "DIS"

    .line 241
    .line 242
    filled-new-array {v0, p0, p1}, [Ljava/lang/Object;

    .line 243
    .line 244
    .line 245
    move-result-object p0

    .line 246
    const/16 p1, 0xaa9

    .line 247
    .line 248
    invoke-static {p1, p0}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 249
    .line 250
    .line 251
    :cond_c
    return v5

    .line 252
    :cond_d
    iget-boolean p0, p0, Lcom/android/server/power/PowerManagerService;->mDisableScreenWakeLocksWhileCached:Z

    .line 253
    .line 254
    if-eqz p0, :cond_f

    .line 255
    .line 256
    invoke-static {p1}, Lcom/android/server/power/PowerManagerService;->isScreenLock(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 257
    .line 258
    .line 259
    move-result p0

    .line 260
    if-eqz p0, :cond_f

    .line 261
    .line 262
    iget p0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 263
    .line 264
    invoke-static {p0}, Landroid/os/UserHandle;->getAppId(I)I

    .line 265
    .line 266
    .line 267
    move-result p0

    .line 268
    iget-object v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mUidState:Lcom/android/server/power/PowerManagerService$UidState;

    .line 269
    .line 270
    iget-boolean v1, v2, Lcom/android/server/power/PowerManagerService$Constants;->NO_CACHED_WAKE_LOCKS:Z

    .line 271
    .line 272
    if-eqz v1, :cond_e

    .line 273
    .line 274
    if-lt p0, v3, :cond_e

    .line 275
    .line 276
    iget-boolean p0, v0, Lcom/android/server/power/PowerManagerService$UidState;->mActive:Z

    .line 277
    .line 278
    if-nez p0, :cond_e

    .line 279
    .line 280
    iget p0, v0, Lcom/android/server/power/PowerManagerService$UidState;->mProcState:I

    .line 281
    .line 282
    if-eq p0, v4, :cond_e

    .line 283
    .line 284
    const/16 v0, 0xc

    .line 285
    .line 286
    if-lt p0, v0, :cond_e

    .line 287
    .line 288
    move p0, v6

    .line 289
    goto :goto_6

    .line 290
    :cond_e
    move p0, v5

    .line 291
    :goto_6
    iget-boolean v0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 292
    .line 293
    if-eq v0, p0, :cond_f

    .line 294
    .line 295
    iput-boolean p0, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 296
    .line 297
    iput v5, p1, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisableReason:I

    .line 298
    .line 299
    move v5, v6

    .line 300
    :cond_f
    return v5
.end method

.method public setWakefulnessLocked(IIJIIILjava/lang/String;Ljava/lang/String;)V
    .locals 11

    .line 1
    move-object v0, p0

    .line 2
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 3
    .line 4
    move v2, p1

    .line 5
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 6
    .line 7
    .line 8
    move-result-object v1

    .line 9
    move-object v2, v1

    .line 10
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 11
    .line 12
    move v3, p2

    .line 13
    move-wide v4, p3

    .line 14
    move/from16 v6, p5

    .line 15
    .line 16
    move/from16 v7, p6

    .line 17
    .line 18
    move/from16 v8, p7

    .line 19
    .line 20
    move-object/from16 v9, p8

    .line 21
    .line 22
    move-object/from16 v10, p9

    .line 23
    .line 24
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/power/PowerGroup;->setWakefulnessLocked(IJIIILjava/lang/String;Ljava/lang/String;)V

    .line 25
    .line 26
    .line 27
    iget-object v0, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 28
    .line 29
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 30
    .line 31
    .line 32
    invoke-static {}, Landroid/os/PowerManager;->invalidateIsInteractiveCaches()V

    .line 33
    .line 34
    .line 35
    return-void
.end method

.method public final sleepPowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z
    .locals 12

    .line 1
    move-object v0, p0

    .line 2
    move-object v1, p1

    .line 3
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 4
    .line 5
    const/4 v3, 0x0

    .line 6
    if-eqz v2, :cond_2

    .line 7
    .line 8
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 9
    .line 10
    if-nez v2, :cond_0

    .line 11
    .line 12
    goto/16 :goto_0

    .line 13
    .line 14
    :cond_0
    iget-wide v4, v1, Lcom/android/server/power/PowerGroup;->mLastWakeTime:J

    .line 15
    .line 16
    cmp-long v2, p2, v4

    .line 17
    .line 18
    if-ltz v2, :cond_2

    .line 19
    .line 20
    iget v2, v1, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 21
    .line 22
    if-nez v2, :cond_1

    .line 23
    .line 24
    goto/16 :goto_0

    .line 25
    .line 26
    :cond_1
    new-instance v2, Ljava/lang/StringBuilder;

    .line 27
    .line 28
    const-string v3, "Screen__Off(s) - "

    .line 29
    .line 30
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 31
    .line 32
    .line 33
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 34
    .line 35
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 36
    .line 37
    .line 38
    const-string v3, " : "

    .line 39
    .line 40
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 41
    .line 42
    .line 43
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 44
    .line 45
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    .line 47
    .line 48
    const-string v3, " ("

    .line 49
    .line 50
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 51
    .line 52
    .line 53
    invoke-static/range {p4 .. p4}, Landroid/os/PowerManager;->sleepReasonToString(I)Ljava/lang/String;

    .line 54
    .line 55
    .line 56
    move-result-object v3

    .line 57
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 58
    .line 59
    .line 60
    const-string v3, ") groupId="

    .line 61
    .line 62
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 63
    .line 64
    .line 65
    iget v3, v1, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 66
    .line 67
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 68
    .line 69
    .line 70
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 71
    .line 72
    .line 73
    move-result-object v2

    .line 74
    sget v4, Lcom/android/server/power/Slog;->$r8$clinit:I

    .line 75
    .line 76
    new-instance v4, Ljava/lang/StringBuilder;

    .line 77
    .line 78
    const-string v5, "!@"

    .line 79
    .line 80
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 81
    .line 82
    .line 83
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 84
    .line 85
    .line 86
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 87
    .line 88
    .line 89
    move-result-object v2

    .line 90
    const-string v4, "PowerManagerService"

    .line 91
    .line 92
    invoke-static {v4, v2}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 93
    .line 94
    .line 95
    const-string v2, ""

    .line 96
    .line 97
    iput-object v2, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 98
    .line 99
    iput-object v2, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 100
    .line 101
    const-string v0, "Sleeping power group (groupId="

    .line 102
    .line 103
    const-string/jumbo v2, "sleepPowerGroup"

    .line 104
    .line 105
    .line 106
    const-wide/32 v9, 0x20000

    .line 107
    .line 108
    .line 109
    invoke-static {v9, v10, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 110
    .line 111
    .line 112
    :try_start_0
    const-string v2, "PowerGroup"

    .line 113
    .line 114
    new-instance v4, Ljava/lang/StringBuilder;

    .line 115
    .line 116
    invoke-direct {v4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 117
    .line 118
    .line 119
    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 120
    .line 121
    .line 122
    const-string v0, ", uid="

    .line 123
    .line 124
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 125
    .line 126
    .line 127
    move/from16 v5, p5

    .line 128
    .line 129
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 130
    .line 131
    .line 132
    const-string v0, ", reason="

    .line 133
    .line 134
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 135
    .line 136
    .line 137
    invoke-static/range {p4 .. p4}, Landroid/os/PowerManager;->sleepReasonToString(I)Ljava/lang/String;

    .line 138
    .line 139
    .line 140
    move-result-object v0

    .line 141
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 142
    .line 143
    .line 144
    const-string v0, ")..."

    .line 145
    .line 146
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 147
    .line 148
    .line 149
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 150
    .line 151
    .line 152
    move-result-object v0

    .line 153
    invoke-static {v2, v0}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 154
    .line 155
    .line 156
    const/4 v11, 0x1

    .line 157
    iput-boolean v11, v1, Lcom/android/server/power/PowerGroup;->mIsSandmanSummoned:Z

    .line 158
    .line 159
    const/4 v7, 0x0

    .line 160
    const/4 v8, 0x0

    .line 161
    const/4 v2, 0x0

    .line 162
    const/4 v6, 0x0

    .line 163
    move-object v0, p1

    .line 164
    move v1, v2

    .line 165
    move-wide v2, p2

    .line 166
    move/from16 v4, p5

    .line 167
    .line 168
    move/from16 v5, p4

    .line 169
    .line 170
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/PowerGroup;->setWakefulnessLocked(IJIIILjava/lang/String;Ljava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 171
    .line 172
    .line 173
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V

    .line 174
    .line 175
    .line 176
    return v11

    .line 177
    :catchall_0
    move-exception v0

    .line 178
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V

    .line 179
    .line 180
    .line 181
    throw v0

    .line 182
    :cond_2
    :goto_0
    return v3
.end method

.method public final updateAttentiveStateLocked(IJ)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getAttentiveTimeoutLocked()J

    .line 4
    .line 5
    .line 6
    move-result-wide v1

    .line 7
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 8
    .line 9
    const/4 v4, 0x0

    .line 10
    invoke-virtual {v3, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 11
    .line 12
    .line 13
    move-result-object v3

    .line 14
    check-cast v3, Lcom/android/server/power/PowerGroup;

    .line 15
    .line 16
    iget-wide v5, v3, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 17
    .line 18
    add-long/2addr v5, v1

    .line 19
    iget-wide v7, v0, Lcom/android/server/power/PowerManagerService;->mAttentiveWarningDurationConfig:J

    .line 20
    .line 21
    sub-long v7, v5, v7

    .line 22
    .line 23
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getAttentiveTimeoutLocked()J

    .line 24
    .line 25
    .line 26
    move-result-wide v9

    .line 27
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mInattentiveSleepWarningOverlayController:Lcom/android/server/power/InattentiveSleepWarningController;

    .line 28
    .line 29
    iget-boolean v11, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mIsShown:Z

    .line 30
    .line 31
    iget-object v12, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mHandler:Landroid/os/Handler;

    .line 32
    .line 33
    const-wide/16 v13, 0x0

    .line 34
    .line 35
    const/4 v15, 0x1

    .line 36
    if-nez v11, :cond_0

    .line 37
    .line 38
    goto :goto_1

    .line 39
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 40
    .line 41
    .line 42
    move-result v11

    .line 43
    if-nez v11, :cond_2

    .line 44
    .line 45
    iget-boolean v9, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mIsShown:Z

    .line 46
    .line 47
    if-nez v9, :cond_1

    .line 48
    .line 49
    goto :goto_0

    .line 50
    :cond_1
    new-instance v9, Lcom/android/server/power/InattentiveSleepWarningController$$ExternalSyntheticLambda0;

    .line 51
    .line 52
    invoke-direct {v9, v3, v4}, Lcom/android/server/power/InattentiveSleepWarningController$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/InattentiveSleepWarningController;Z)V

    .line 53
    .line 54
    .line 55
    invoke-virtual {v12, v9}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 56
    .line 57
    .line 58
    iput-boolean v4, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mIsShown:Z

    .line 59
    .line 60
    :goto_0
    move v4, v15

    .line 61
    goto :goto_1

    .line 62
    :cond_2
    cmp-long v9, v9, v13

    .line 63
    .line 64
    if-ltz v9, :cond_3

    .line 65
    .line 66
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->isBeingKeptFromInattentiveSleepLocked()Z

    .line 67
    .line 68
    .line 69
    move-result v9

    .line 70
    if-nez v9, :cond_3

    .line 71
    .line 72
    cmp-long v9, p2, v7

    .line 73
    .line 74
    if-gez v9, :cond_5

    .line 75
    .line 76
    :cond_3
    iget-boolean v9, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mIsShown:Z

    .line 77
    .line 78
    if-nez v9, :cond_4

    .line 79
    .line 80
    goto :goto_0

    .line 81
    :cond_4
    new-instance v9, Lcom/android/server/power/InattentiveSleepWarningController$$ExternalSyntheticLambda0;

    .line 82
    .line 83
    invoke-direct {v9, v3, v15}, Lcom/android/server/power/InattentiveSleepWarningController$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/InattentiveSleepWarningController;Z)V

    .line 84
    .line 85
    .line 86
    invoke-virtual {v12, v9}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 87
    .line 88
    .line 89
    iput-boolean v4, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mIsShown:Z

    .line 90
    .line 91
    goto :goto_0

    .line 92
    :cond_5
    :goto_1
    cmp-long v1, v1, v13

    .line 93
    .line 94
    if-ltz v1, :cond_b

    .line 95
    .line 96
    if-nez v4, :cond_6

    .line 97
    .line 98
    move/from16 v1, p1

    .line 99
    .line 100
    and-int/lit16 v1, v1, 0x4ab2

    .line 101
    .line 102
    if-eqz v1, :cond_b

    .line 103
    .line 104
    :cond_6
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 105
    .line 106
    const/4 v2, 0x5

    .line 107
    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeMessages(I)V

    .line 108
    .line 109
    .line 110
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 111
    .line 112
    .line 113
    move-result v4

    .line 114
    if-eqz v4, :cond_b

    .line 115
    .line 116
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->isBeingKeptFromInattentiveSleepLocked()Z

    .line 117
    .line 118
    .line 119
    move-result v0

    .line 120
    if-eqz v0, :cond_7

    .line 121
    .line 122
    goto :goto_3

    .line 123
    :cond_7
    cmp-long v0, p2, v7

    .line 124
    .line 125
    if-gez v0, :cond_8

    .line 126
    .line 127
    move-wide v5, v7

    .line 128
    goto :goto_2

    .line 129
    :cond_8
    cmp-long v0, p2, v5

    .line 130
    .line 131
    if-gez v0, :cond_a

    .line 132
    .line 133
    iget-boolean v0, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mIsShown:Z

    .line 134
    .line 135
    if-eqz v0, :cond_9

    .line 136
    .line 137
    goto :goto_2

    .line 138
    :cond_9
    new-instance v0, Lcom/android/server/power/InattentiveSleepWarningController$$ExternalSyntheticLambda1;

    .line 139
    .line 140
    invoke-direct {v0, v3}, Lcom/android/server/power/InattentiveSleepWarningController$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/InattentiveSleepWarningController;)V

    .line 141
    .line 142
    .line 143
    invoke-virtual {v12, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 144
    .line 145
    .line 146
    iput-boolean v15, v3, Lcom/android/server/power/InattentiveSleepWarningController;->mIsShown:Z

    .line 147
    .line 148
    goto :goto_2

    .line 149
    :cond_a
    const-wide/16 v5, -0x1

    .line 150
    .line 151
    :goto_2
    cmp-long v0, v5, v13

    .line 152
    .line 153
    if-ltz v0, :cond_b

    .line 154
    .line 155
    invoke-virtual {v1, v2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 156
    .line 157
    .line 158
    move-result-object v0

    .line 159
    invoke-virtual {v0, v15}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 160
    .line 161
    .line 162
    invoke-virtual {v1, v0, v5, v6}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 163
    .line 164
    .line 165
    nop

    .line 166
    :cond_b
    :goto_3
    return-void
.end method

.method public final updateGlobalWakefulnessLocked(IILjava/lang/String;Ljava/lang/String;IJ)V
    .locals 16

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move/from16 v1, p1

    .line 4
    .line 5
    move/from16 v2, p2

    .line 6
    .line 7
    move-object/from16 v3, p3

    .line 8
    .line 9
    move-object/from16 v4, p4

    .line 10
    .line 11
    move-wide/from16 v5, p6

    .line 12
    .line 13
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->recalculateGlobalWakefulnessLocked()I

    .line 14
    .line 15
    .line 16
    move-result v7

    .line 17
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 18
    .line 19
    .line 20
    move-result v8

    .line 21
    if-ne v8, v7, :cond_0

    .line 22
    .line 23
    return-void

    .line 24
    :cond_0
    const/4 v9, 0x1

    .line 25
    const/4 v10, 0x2

    .line 26
    const-string v11, ")..."

    .line 27
    .line 28
    const-string v12, "PowerManagerService"

    .line 29
    .line 30
    const/4 v13, 0x3

    .line 31
    if-eqz v7, :cond_4

    .line 32
    .line 33
    iget-object v14, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 34
    .line 35
    if-eq v7, v9, :cond_3

    .line 36
    .line 37
    if-eq v7, v10, :cond_2

    .line 38
    .line 39
    if-ne v7, v13, :cond_1

    .line 40
    .line 41
    new-instance v15, Ljava/lang/StringBuilder;

    .line 42
    .line 43
    const-string v10, "Going to sleep due to "

    .line 44
    .line 45
    invoke-direct {v15, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 46
    .line 47
    .line 48
    invoke-static/range {p1 .. p1}, Landroid/os/PowerManager;->sleepReasonToString(I)Ljava/lang/String;

    .line 49
    .line 50
    .line 51
    move-result-object v10

    .line 52
    invoke-virtual {v15, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 53
    .line 54
    .line 55
    const-string v10, " (uid "

    .line 56
    .line 57
    invoke-virtual {v15, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 58
    .line 59
    .line 60
    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 61
    .line 62
    .line 63
    const-string v10, ", screenOffTimeout="

    .line 64
    .line 65
    invoke-virtual {v15, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 66
    .line 67
    .line 68
    iget-wide v9, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 69
    .line 70
    invoke-virtual {v15, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 71
    .line 72
    .line 73
    const-string v9, ", activityTimeoutWM="

    .line 74
    .line 75
    invoke-virtual {v15, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 76
    .line 77
    .line 78
    iget-wide v9, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutOverrideFromWindowManager:J

    .line 79
    .line 80
    invoke-virtual {v15, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 81
    .line 82
    .line 83
    const-string v9, ", maxDimRatio="

    .line 84
    .line 85
    invoke-virtual {v15, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 86
    .line 87
    .line 88
    iget v9, v0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimRatioConfig:F

    .line 89
    .line 90
    invoke-virtual {v15, v9}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 91
    .line 92
    .line 93
    const-string v9, ", maxDimDur="

    .line 94
    .line 95
    invoke-virtual {v15, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 96
    .line 97
    .line 98
    iget-wide v9, v0, Lcom/android/server/power/PowerManagerService;->mMaximumScreenDimDurationConfig:J

    .line 99
    .line 100
    invoke-virtual {v15, v9, v10}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 101
    .line 102
    .line 103
    invoke-virtual {v15, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 104
    .line 105
    .line 106
    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 107
    .line 108
    .line 109
    move-result-object v9

    .line 110
    invoke-static {v12, v9}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 111
    .line 112
    .line 113
    iput-wide v5, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepTime:J

    .line 114
    .line 115
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepReason:I

    .line 116
    .line 117
    invoke-virtual {v14}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 118
    .line 119
    .line 120
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 121
    .line 122
    .line 123
    move-result-wide v9

    .line 124
    iput-wide v9, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepTimeRealtime:J

    .line 125
    .line 126
    const/4 v9, 0x1

    .line 127
    iput-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mDozeStartInProgress:Z

    .line 128
    .line 129
    const-string v9, "goToSleep"

    .line 130
    .line 131
    goto/16 :goto_0

    .line 132
    .line 133
    :cond_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 134
    .line 135
    const-string v1, "Unexpected wakefulness: "

    .line 136
    .line 137
    invoke-static {v7, v1}, Landroid/frameworks/vibrator/VibrationParam$1$$ExternalSyntheticOutline0;->m(ILjava/lang/String;)Ljava/lang/String;

    .line 138
    .line 139
    .line 140
    move-result-object v1

    .line 141
    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 142
    .line 143
    .line 144
    throw v0

    .line 145
    :cond_2
    new-instance v9, Ljava/lang/StringBuilder;

    .line 146
    .line 147
    const-string v10, "Nap time (uid "

    .line 148
    .line 149
    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 150
    .line 151
    .line 152
    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 153
    .line 154
    .line 155
    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 156
    .line 157
    .line 158
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 159
    .line 160
    .line 161
    move-result-object v9

    .line 162
    invoke-static {v12, v9}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 163
    .line 164
    .line 165
    const-string/jumbo v9, "nap"

    .line 166
    .line 167
    .line 168
    goto :goto_0

    .line 169
    :cond_3
    new-instance v9, Ljava/lang/StringBuilder;

    .line 170
    .line 171
    const-string v10, "Waking up from "

    .line 172
    .line 173
    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 174
    .line 175
    .line 176
    invoke-static {v8}, Landroid/os/PowerManagerInternal;->wakefulnessToString(I)Ljava/lang/String;

    .line 177
    .line 178
    .line 179
    move-result-object v10

    .line 180
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 181
    .line 182
    .line 183
    const-string v10, " (uid="

    .line 184
    .line 185
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 186
    .line 187
    .line 188
    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 189
    .line 190
    .line 191
    const-string v10, ", reason="

    .line 192
    .line 193
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 194
    .line 195
    .line 196
    invoke-static/range {p1 .. p1}, Landroid/os/PowerManager;->wakeReasonToString(I)Ljava/lang/String;

    .line 197
    .line 198
    .line 199
    move-result-object v10

    .line 200
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 201
    .line 202
    .line 203
    const-string v10, ", details="

    .line 204
    .line 205
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 206
    .line 207
    .line 208
    invoke-virtual {v9, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 209
    .line 210
    .line 211
    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 212
    .line 213
    .line 214
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 215
    .line 216
    .line 217
    move-result-object v9

    .line 218
    invoke-static {v12, v9}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 219
    .line 220
    .line 221
    iput-wide v5, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalWakeTime:J

    .line 222
    .line 223
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalWakeReason:I

    .line 224
    .line 225
    invoke-virtual {v14}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 226
    .line 227
    .line 228
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 229
    .line 230
    .line 231
    move-result-wide v9

    .line 232
    iput-wide v9, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalWakeTimeRealtime:J

    .line 233
    .line 234
    const-string/jumbo v9, "wakeUp"

    .line 235
    .line 236
    .line 237
    goto :goto_0

    .line 238
    :cond_4
    new-instance v9, Ljava/lang/StringBuilder;

    .line 239
    .line 240
    const-string v10, "Sleeping (uid "

    .line 241
    .line 242
    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 243
    .line 244
    .line 245
    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 246
    .line 247
    .line 248
    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 249
    .line 250
    .line 251
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 252
    .line 253
    .line 254
    move-result-object v9

    .line 255
    invoke-static {v12, v9}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 256
    .line 257
    .line 258
    if-eq v8, v13, :cond_5

    .line 259
    .line 260
    iput-wide v5, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepTime:J

    .line 261
    .line 262
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepReason:I

    .line 263
    .line 264
    :cond_5
    const-string/jumbo v9, "reallyGoToSleep"

    .line 265
    .line 266
    .line 267
    :goto_0
    const-wide/32 v10, 0x20000

    .line 268
    .line 269
    .line 270
    invoke-static {v10, v11, v9}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 271
    .line 272
    .line 273
    :try_start_0
    iget-object v9, v0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 274
    .line 275
    invoke-virtual {v9}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 276
    .line 277
    .line 278
    invoke-static {}, Landroid/os/PowerManager;->invalidateIsInteractiveCaches()V

    .line 279
    .line 280
    .line 281
    iput v7, v0, Lcom/android/server/power/PowerManagerService;->mWakefulnessRaw:I

    .line 282
    .line 283
    const/4 v9, 0x1

    .line 284
    iput-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mWakefulnessChanging:Z

    .line 285
    .line 286
    iget v9, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 287
    .line 288
    const/4 v12, 0x2

    .line 289
    or-int/2addr v9, v12

    .line 290
    iput v9, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 291
    .line 292
    iget-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mDozeStartInProgress:Z

    .line 293
    .line 294
    const/4 v12, 0x0

    .line 295
    if-ne v7, v13, :cond_6

    .line 296
    .line 297
    const/4 v14, 0x1

    .line 298
    goto :goto_1

    .line 299
    :cond_6
    move v14, v12

    .line 300
    :goto_1
    and-int/2addr v9, v14

    .line 301
    iput-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mDozeStartInProgress:Z

    .line 302
    .line 303
    iget-object v9, v0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 304
    .line 305
    if-eqz v9, :cond_7

    .line 306
    .line 307
    invoke-virtual {v9, v7, v1, v5, v6}, Lcom/android/server/power/Notifier;->onGlobalWakefulnessChangeStarted(IIJ)V

    .line 308
    .line 309
    .line 310
    goto :goto_2

    .line 311
    :catchall_0
    move-exception v0

    .line 312
    goto/16 :goto_6

    .line 313
    .line 314
    :cond_7
    :goto_2
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mAttentionDetector:Lcom/android/server/power/AttentionDetector;

    .line 315
    .line 316
    iput v7, v5, Lcom/android/server/power/AttentionDetector;->mWakefulness:I

    .line 317
    .line 318
    const/4 v6, 0x1

    .line 319
    if-eq v7, v6, :cond_9

    .line 320
    .line 321
    iget-object v6, v5, Lcom/android/server/power/AttentionDetector;->mRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 322
    .line 323
    invoke-virtual {v6}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 324
    .line 325
    .line 326
    move-result v6

    .line 327
    if-eqz v6, :cond_8

    .line 328
    .line 329
    iget-object v6, v5, Lcom/android/server/power/AttentionDetector;->mAttentionManager:Landroid/attention/AttentionManagerInternal;

    .line 330
    .line 331
    iget-object v9, v5, Lcom/android/server/power/AttentionDetector;->mCallback:Lcom/android/server/power/AttentionDetector$AttentionCallbackInternalImpl;

    .line 332
    .line 333
    invoke-virtual {v6, v9}, Landroid/attention/AttentionManagerInternal;->cancelAttentionCheck(Landroid/attention/AttentionManagerInternal$AttentionCallbackInternal;)V

    .line 334
    .line 335
    .line 336
    iget-object v6, v5, Lcom/android/server/power/AttentionDetector;->mRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 337
    .line 338
    invoke-virtual {v6, v12}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 339
    .line 340
    .line 341
    :cond_8
    invoke-virtual {v5}, Lcom/android/server/power/AttentionDetector;->resetConsecutiveExtensionCount()V

    .line 342
    .line 343
    .line 344
    :cond_9
    if-eqz v7, :cond_c

    .line 345
    .line 346
    const/4 v5, 0x1

    .line 347
    if-eq v7, v5, :cond_a

    .line 348
    .line 349
    if-eq v7, v13, :cond_c

    .line 350
    .line 351
    goto :goto_5

    .line 352
    :cond_a
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 353
    .line 354
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 355
    .line 356
    .line 357
    :try_start_1
    iget-object v6, v5, Lcom/android/server/power/Notifier;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 358
    .line 359
    invoke-interface {v6, v4, v2}, Lcom/android/internal/app/IBatteryStats;->noteWakeUp(Ljava/lang/String;I)V

    .line 360
    .line 361
    .line 362
    if-eqz v3, :cond_b

    .line 363
    .line 364
    iget-object v4, v5, Lcom/android/server/power/Notifier;->mAppOps:Landroid/app/AppOpsManager;

    .line 365
    .line 366
    const/16 v5, 0x3d

    .line 367
    .line 368
    move/from16 v6, p5

    .line 369
    .line 370
    invoke-virtual {v4, v5, v6, v3}, Landroid/app/AppOpsManager;->noteOpNoThrow(IILjava/lang/String;)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 371
    .line 372
    .line 373
    :catch_0
    :cond_b
    const/16 v3, 0x11a

    .line 374
    .line 375
    :try_start_2
    invoke-static {v3, v1, v2}, Lcom/android/internal/util/FrameworkStatsLog;->write(III)V

    .line 376
    .line 377
    .line 378
    sget-boolean v1, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 379
    .line 380
    if-eqz v1, :cond_10

    .line 381
    .line 382
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 383
    .line 384
    or-int/lit16 v1, v1, 0x1000

    .line 385
    .line 386
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 387
    .line 388
    goto :goto_5

    .line 389
    :cond_c
    invoke-static {v8}, Landroid/os/PowerManagerInternal;->isInteractive(I)Z

    .line 390
    .line 391
    .line 392
    move-result v1

    .line 393
    if-nez v1, :cond_d

    .line 394
    .line 395
    goto :goto_5

    .line 396
    :cond_d
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 397
    .line 398
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 399
    .line 400
    .line 401
    move-result v1

    .line 402
    move v2, v12

    .line 403
    :goto_3
    if-ge v12, v1, :cond_f

    .line 404
    .line 405
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 406
    .line 407
    invoke-virtual {v3, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 408
    .line 409
    .line 410
    move-result-object v3

    .line 411
    check-cast v3, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 412
    .line 413
    iget v3, v3, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 414
    .line 415
    const v4, 0xffff

    .line 416
    .line 417
    .line 418
    and-int/2addr v3, v4

    .line 419
    const/4 v4, 0x6

    .line 420
    if-eq v3, v4, :cond_e

    .line 421
    .line 422
    const/16 v4, 0xa

    .line 423
    .line 424
    if-eq v3, v4, :cond_e

    .line 425
    .line 426
    const/16 v4, 0x1a

    .line 427
    .line 428
    if-eq v3, v4, :cond_e

    .line 429
    .line 430
    goto :goto_4

    .line 431
    :cond_e
    add-int/lit8 v2, v2, 0x1

    .line 432
    .line 433
    :goto_4
    add-int/lit8 v12, v12, 0x1

    .line 434
    .line 435
    goto :goto_3

    .line 436
    :cond_f
    const/16 v0, 0xaa4

    .line 437
    .line 438
    invoke-static {v0, v2}, Landroid/util/EventLog;->writeEvent(II)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 439
    .line 440
    .line 441
    :cond_10
    :goto_5
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 442
    .line 443
    .line 444
    return-void

    .line 445
    :goto_6
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 446
    .line 447
    .line 448
    throw v0
.end method

.method public final updateIsPoweredLocked(I)V
    .locals 15

    .line 1
    move-object v0, p0

    .line 2
    move/from16 v1, p1

    .line 3
    .line 4
    and-int/lit16 v1, v1, 0x100

    .line 5
    .line 6
    if-eqz v1, :cond_1b

    .line 7
    .line 8
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 9
    .line 10
    iget v2, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 11
    .line 12
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 13
    .line 14
    const/16 v4, 0xf

    .line 15
    .line 16
    invoke-virtual {v3, v4}, Landroid/os/BatteryManagerInternal;->isPowered(I)Z

    .line 17
    .line 18
    .line 19
    move-result v3

    .line 20
    iput-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 21
    .line 22
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 23
    .line 24
    invoke-virtual {v3}, Landroid/os/BatteryManagerInternal;->getPlugType()I

    .line 25
    .line 26
    .line 27
    move-result v3

    .line 28
    iput v3, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 29
    .line 30
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 31
    .line 32
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 33
    .line 34
    invoke-virtual {v4}, Landroid/os/BatteryManagerInternal;->getBatteryLevel()I

    .line 35
    .line 36
    .line 37
    move-result v4

    .line 38
    iput v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 39
    .line 40
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 41
    .line 42
    invoke-virtual {v4}, Landroid/os/BatteryManagerInternal;->getBatteryLevelLow()Z

    .line 43
    .line 44
    .line 45
    move-result v4

    .line 46
    iput-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevelLow:Z

    .line 47
    .line 48
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 49
    .line 50
    invoke-virtual {v4}, Landroid/os/BatteryManagerInternal;->getBatteryLevelCritical()Z

    .line 51
    .line 52
    .line 53
    move-result v4

    .line 54
    iput-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevelCritical:Z

    .line 55
    .line 56
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 57
    .line 58
    invoke-virtual {v4}, Landroid/os/BatteryManagerInternal;->getBatteryOnline()I

    .line 59
    .line 60
    .line 61
    move-result v4

    .line 62
    iput v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryOnline:I

    .line 63
    .line 64
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 65
    .line 66
    invoke-virtual {v4}, Landroid/os/BatteryManagerInternal;->getBatteryHealth()I

    .line 67
    .line 68
    .line 69
    move-result v4

    .line 70
    const/4 v5, 0x3

    .line 71
    const/4 v6, 0x2

    .line 72
    if-ne v4, v5, :cond_0

    .line 73
    .line 74
    goto :goto_0

    .line 75
    :cond_0
    if-lez v3, :cond_1

    .line 76
    .line 77
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 78
    .line 79
    .line 80
    move-result v4

    .line 81
    if-ne v4, v6, :cond_1

    .line 82
    .line 83
    iget v4, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 84
    .line 85
    iget v5, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 86
    .line 87
    sub-int/2addr v3, v5

    .line 88
    add-int/2addr v3, v4

    .line 89
    iput v3, v0, Lcom/android/server/power/PowerManagerService;->mDreamsBatteryLevelDrain:I

    .line 90
    .line 91
    :cond_1
    :goto_0
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 92
    .line 93
    const/4 v11, 0x0

    .line 94
    const/4 v12, 0x1

    .line 95
    if-ne v1, v3, :cond_2

    .line 96
    .line 97
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 98
    .line 99
    if-eq v2, v3, :cond_15

    .line 100
    .line 101
    :cond_2
    const-string v3, "PowerManagerService"

    .line 102
    .line 103
    new-instance v4, Ljava/lang/StringBuilder;

    .line 104
    .line 105
    const-string v5, "[api] updateIsPoweredLocked : mIsPowered: "

    .line 106
    .line 107
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 108
    .line 109
    .line 110
    iget-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 111
    .line 112
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 113
    .line 114
    .line 115
    const-string v5, " mPlugType: "

    .line 116
    .line 117
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 118
    .line 119
    .line 120
    iget v5, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 121
    .line 122
    invoke-static {v4, v5, v3}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 123
    .line 124
    .line 125
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 126
    .line 127
    or-int/lit8 v3, v3, 0x40

    .line 128
    .line 129
    iput v3, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 130
    .line 131
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mWirelessChargerDetector:Lcom/android/server/power/WirelessChargerDetector;

    .line 132
    .line 133
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 134
    .line 135
    iget v5, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 136
    .line 137
    iget-object v7, v3, Lcom/android/server/power/WirelessChargerDetector;->mLock:Ljava/lang/Object;

    .line 138
    .line 139
    monitor-enter v7

    .line 140
    :try_start_0
    iget-boolean v8, v3, Lcom/android/server/power/WirelessChargerDetector;->mPoweredWirelessly:Z

    .line 141
    .line 142
    const/4 v9, 0x4

    .line 143
    if-eqz v4, :cond_3

    .line 144
    .line 145
    if-ne v5, v9, :cond_3

    .line 146
    .line 147
    iput-boolean v12, v3, Lcom/android/server/power/WirelessChargerDetector;->mPoweredWirelessly:Z

    .line 148
    .line 149
    iput-boolean v12, v3, Lcom/android/server/power/WirelessChargerDetector;->mMustUpdateRestPosition:Z

    .line 150
    .line 151
    invoke-virtual {v3}, Lcom/android/server/power/WirelessChargerDetector;->startDetectionLocked()V

    .line 152
    .line 153
    .line 154
    goto :goto_1

    .line 155
    :catchall_0
    move-exception v0

    .line 156
    goto/16 :goto_a

    .line 157
    .line 158
    :cond_3
    iput-boolean v11, v3, Lcom/android/server/power/WirelessChargerDetector;->mPoweredWirelessly:Z

    .line 159
    .line 160
    iget-boolean v4, v3, Lcom/android/server/power/WirelessChargerDetector;->mAtRest:Z

    .line 161
    .line 162
    if-eqz v4, :cond_5

    .line 163
    .line 164
    if-eqz v5, :cond_4

    .line 165
    .line 166
    if-eq v5, v9, :cond_4

    .line 167
    .line 168
    iput-boolean v11, v3, Lcom/android/server/power/WirelessChargerDetector;->mMustUpdateRestPosition:Z

    .line 169
    .line 170
    iput-boolean v11, v3, Lcom/android/server/power/WirelessChargerDetector;->mAtRest:Z

    .line 171
    .line 172
    const/4 v4, 0x0

    .line 173
    iput v4, v3, Lcom/android/server/power/WirelessChargerDetector;->mRestX:F

    .line 174
    .line 175
    iput v4, v3, Lcom/android/server/power/WirelessChargerDetector;->mRestY:F

    .line 176
    .line 177
    iput v4, v3, Lcom/android/server/power/WirelessChargerDetector;->mRestZ:F

    .line 178
    .line 179
    goto :goto_1

    .line 180
    :cond_4
    invoke-virtual {v3}, Lcom/android/server/power/WirelessChargerDetector;->startDetectionLocked()V

    .line 181
    .line 182
    .line 183
    :cond_5
    :goto_1
    iget-boolean v4, v3, Lcom/android/server/power/WirelessChargerDetector;->mPoweredWirelessly:Z

    .line 184
    .line 185
    if-eqz v4, :cond_6

    .line 186
    .line 187
    if-nez v8, :cond_6

    .line 188
    .line 189
    iget-boolean v3, v3, Lcom/android/server/power/WirelessChargerDetector;->mAtRest:Z

    .line 190
    .line 191
    :cond_6
    monitor-exit v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 192
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mWirelessChargerMotionDetector:Lcom/android/server/power/WirelessChargerMotionDetector;

    .line 193
    .line 194
    if-eqz v3, :cond_a

    .line 195
    .line 196
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 197
    .line 198
    iget v5, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 199
    .line 200
    const-string v7, "WirelessChargerMotionDetector"

    .line 201
    .line 202
    const/16 v8, 0x2e

    .line 203
    .line 204
    if-ne v5, v9, :cond_8

    .line 205
    .line 206
    iget-boolean v4, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mIsWirelessChargerSContextRegistered:Z

    .line 207
    .line 208
    if-nez v4, :cond_7

    .line 209
    .line 210
    iget-object v4, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mWirelessChargerSContextManager:Landroid/hardware/scontext/SContextManager;

    .line 211
    .line 212
    iget-object v5, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mWirelessChargerSContextListener:Lcom/android/server/power/WirelessChargerMotionDetector$1;

    .line 213
    .line 214
    invoke-virtual {v4, v5, v8}, Landroid/hardware/scontext/SContextManager;->registerListener(Landroid/hardware/scontext/SContextListener;I)Z

    .line 215
    .line 216
    .line 217
    iput-boolean v12, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mIsWirelessChargerSContextRegistered:Z

    .line 218
    .line 219
    goto :goto_3

    .line 220
    :cond_7
    iget-boolean v3, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mIsDeviceMoving:Z

    .line 221
    .line 222
    if-nez v3, :cond_a

    .line 223
    .line 224
    if-nez v1, :cond_a

    .line 225
    .line 226
    const-string v3, "Device is not moved, skip wakeup when connect charger"

    .line 227
    .line 228
    invoke-static {v7, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 229
    .line 230
    .line 231
    :goto_2
    move v3, v11

    .line 232
    goto :goto_4

    .line 233
    :cond_8
    if-ne v2, v9, :cond_a

    .line 234
    .line 235
    iget-boolean v5, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mIsDeviceMoving:Z

    .line 236
    .line 237
    if-eqz v5, :cond_9

    .line 238
    .line 239
    iget-boolean v4, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mIsWirelessChargerSContextRegistered:Z

    .line 240
    .line 241
    if-eqz v4, :cond_a

    .line 242
    .line 243
    if-eqz v4, :cond_a

    .line 244
    .line 245
    iget-object v4, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mWirelessChargerSContextManager:Landroid/hardware/scontext/SContextManager;

    .line 246
    .line 247
    iget-object v5, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mWirelessChargerSContextListener:Lcom/android/server/power/WirelessChargerMotionDetector$1;

    .line 248
    .line 249
    invoke-virtual {v4, v5, v8}, Landroid/hardware/scontext/SContextManager;->unregisterListener(Landroid/hardware/scontext/SContextListener;I)V

    .line 250
    .line 251
    .line 252
    iput-boolean v11, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mIsWirelessChargerSContextRegistered:Z

    .line 253
    .line 254
    goto :goto_3

    .line 255
    :cond_9
    if-nez v4, :cond_a

    .line 256
    .line 257
    const-string v4, "Device is not moved, skip wakeup when disconnect charger"

    .line 258
    .line 259
    invoke-static {v7, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 260
    .line 261
    .line 262
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 263
    .line 264
    .line 265
    move-result-wide v4

    .line 266
    iput-wide v4, v3, Lcom/android/server/power/WirelessChargerMotionDetector;->mPassedWakeupTime:J

    .line 267
    .line 268
    goto :goto_2

    .line 269
    :cond_a
    :goto_3
    move v3, v12

    .line 270
    :goto_4
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 271
    .line 272
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 273
    .line 274
    .line 275
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 276
    .line 277
    .line 278
    move-result-wide v13

    .line 279
    if-nez v1, :cond_b

    .line 280
    .line 281
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 282
    .line 283
    if-eqz v4, :cond_b

    .line 284
    .line 285
    goto/16 :goto_5

    .line 286
    .line 287
    :cond_b
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedConfig:Z

    .line 288
    .line 289
    if-nez v4, :cond_c

    .line 290
    .line 291
    goto/16 :goto_5

    .line 292
    .line 293
    :cond_c
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mKeepDreamingWhenUnplugging:Z

    .line 294
    .line 295
    if-eqz v4, :cond_d

    .line 296
    .line 297
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 298
    .line 299
    .line 300
    move-result v4

    .line 301
    if-ne v4, v6, :cond_d

    .line 302
    .line 303
    if-eqz v1, :cond_d

    .line 304
    .line 305
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 306
    .line 307
    if-nez v1, :cond_d

    .line 308
    .line 309
    goto :goto_5

    .line 310
    :cond_d
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 311
    .line 312
    if-eqz v1, :cond_e

    .line 313
    .line 314
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 315
    .line 316
    .line 317
    move-result v1

    .line 318
    if-ne v1, v6, :cond_e

    .line 319
    .line 320
    goto :goto_5

    .line 321
    :cond_e
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mTheaterModeEnabled:Z

    .line 322
    .line 323
    if-eqz v1, :cond_f

    .line 324
    .line 325
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mWakeUpWhenPluggedOrUnpluggedInTheaterModeConfig:Z

    .line 326
    .line 327
    if-nez v1, :cond_f

    .line 328
    .line 329
    goto :goto_5

    .line 330
    :cond_f
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mPlugType:I

    .line 331
    .line 332
    if-ne v1, v12, :cond_10

    .line 333
    .line 334
    if-eq v2, v6, :cond_11

    .line 335
    .line 336
    :cond_10
    if-ne v1, v6, :cond_12

    .line 337
    .line 338
    if-ne v2, v12, :cond_12

    .line 339
    .line 340
    :cond_11
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mBatteryOnline:I

    .line 341
    .line 342
    const/16 v2, 0x63

    .line 343
    .line 344
    if-ne v1, v2, :cond_12

    .line 345
    .line 346
    goto :goto_5

    .line 347
    :cond_12
    invoke-static {}, Lcom/samsung/android/knox/custom/SettingsManager;->getInstance()Lcom/samsung/android/knox/custom/SettingsManager;

    .line 348
    .line 349
    .line 350
    move-result-object v1

    .line 351
    if-eqz v1, :cond_13

    .line 352
    .line 353
    invoke-virtual {v1}, Lcom/samsung/android/knox/custom/SettingsManager;->getScreenWakeupOnPowerState()Z

    .line 354
    .line 355
    .line 356
    move-result v1

    .line 357
    if-nez v1, :cond_13

    .line 358
    .line 359
    goto :goto_5

    .line 360
    :cond_13
    if-eqz v3, :cond_14

    .line 361
    .line 362
    const-string v1, " powered change"

    .line 363
    .line 364
    iput-object v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 365
    .line 366
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 367
    .line 368
    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 369
    .line 370
    .line 371
    move-result-object v1

    .line 372
    move-object v2, v1

    .line 373
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 374
    .line 375
    new-instance v1, Ljava/lang/StringBuilder;

    .line 376
    .line 377
    const-string v3, "android.server.power:PLUGGED:"

    .line 378
    .line 379
    invoke-direct {v1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 380
    .line 381
    .line 382
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 383
    .line 384
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 385
    .line 386
    .line 387
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 388
    .line 389
    .line 390
    move-result-object v6

    .line 391
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 392
    .line 393
    invoke-virtual {v1}, Landroid/content/Context;->getOpPackageName()Ljava/lang/String;

    .line 394
    .line 395
    .line 396
    move-result-object v8

    .line 397
    const/16 v7, 0x3e8

    .line 398
    .line 399
    const/16 v9, 0x3e8

    .line 400
    .line 401
    const/4 v5, 0x3

    .line 402
    const/4 v10, 0x0

    .line 403
    move-object v1, p0

    .line 404
    move-wide v3, v13

    .line 405
    invoke-virtual/range {v1 .. v10}, Lcom/android/server/power/PowerManagerService;->wakePowerGroupLocked(Lcom/android/server/power/PowerGroup;JILjava/lang/String;ILjava/lang/String;IZ)V

    .line 406
    .line 407
    .line 408
    :cond_14
    :goto_5
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 409
    .line 410
    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 411
    .line 412
    .line 413
    move-result-object v1

    .line 414
    move-object v2, v1

    .line 415
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 416
    .line 417
    const/16 v7, 0x3e8

    .line 418
    .line 419
    const/4 v5, 0x0

    .line 420
    const/4 v6, 0x0

    .line 421
    move-object v1, p0

    .line 422
    move-wide v3, v13

    .line 423
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(Lcom/android/server/power/PowerGroup;JIII)Z

    .line 424
    .line 425
    .line 426
    :cond_15
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 427
    .line 428
    if-eqz v1, :cond_1a

    .line 429
    .line 430
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 431
    .line 432
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 433
    .line 434
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevel:I

    .line 435
    .line 436
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevelLow:Z

    .line 437
    .line 438
    iget-object v5, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mLock:Ljava/lang/Object;

    .line 439
    .line 440
    monitor-enter v5

    .line 441
    :try_start_1
    iput-boolean v12, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mBatteryStatusSet:Z

    .line 442
    .line 443
    iget-boolean v6, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mIsPowered:Z

    .line 444
    .line 445
    if-eq v6, v2, :cond_16

    .line 446
    .line 447
    move v6, v12

    .line 448
    goto :goto_6

    .line 449
    :cond_16
    move v6, v11

    .line 450
    :goto_6
    iget v7, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mBatteryLevel:I

    .line 451
    .line 452
    if-eq v7, v3, :cond_17

    .line 453
    .line 454
    move v7, v12

    .line 455
    goto :goto_7

    .line 456
    :cond_17
    move v7, v11

    .line 457
    :goto_7
    iget-boolean v8, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mIsBatteryLevelLow:Z

    .line 458
    .line 459
    if-eq v8, v4, :cond_18

    .line 460
    .line 461
    move v11, v12

    .line 462
    :cond_18
    if-nez v6, :cond_19

    .line 463
    .line 464
    if-nez v7, :cond_19

    .line 465
    .line 466
    if-nez v11, :cond_19

    .line 467
    .line 468
    monitor-exit v5

    .line 469
    goto :goto_9

    .line 470
    :catchall_1
    move-exception v0

    .line 471
    goto :goto_8

    .line 472
    :cond_19
    iput-boolean v2, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mIsPowered:Z

    .line 473
    .line 474
    iput v3, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mBatteryLevel:I

    .line 475
    .line 476
    iput-boolean v4, v1, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mIsBatteryLevelLow:Z

    .line 477
    .line 478
    monitor-exit v5

    .line 479
    goto :goto_9

    .line 480
    :goto_8
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 481
    throw v0

    .line 482
    :cond_1a
    :goto_9
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnKeeper:Lcom/android/server/power/ScreenOnKeeper;

    .line 483
    .line 484
    if-eqz v1, :cond_1b

    .line 485
    .line 486
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 487
    .line 488
    iget-boolean v0, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevelLow:Z

    .line 489
    .line 490
    new-instance v3, Ljava/lang/StringBuilder;

    .line 491
    .line 492
    const-string v4, "checkBatteryLevelLow: isPowered="

    .line 493
    .line 494
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 495
    .line 496
    .line 497
    invoke-virtual {v3, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 498
    .line 499
    .line 500
    const-string v4, ", batteryLevelLow="

    .line 501
    .line 502
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 503
    .line 504
    .line 505
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 506
    .line 507
    .line 508
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 509
    .line 510
    .line 511
    move-result-object v3

    .line 512
    const-string v4, "ScreenOnKeeper"

    .line 513
    .line 514
    invoke-static {v4, v3}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 515
    .line 516
    .line 517
    iget-boolean v3, v1, Lcom/android/server/power/ScreenOnKeeper;->mIsScreenOnKeeperEnabled:Z

    .line 518
    .line 519
    if-eqz v3, :cond_1b

    .line 520
    .line 521
    if-eqz v0, :cond_1b

    .line 522
    .line 523
    if-nez v2, :cond_1b

    .line 524
    .line 525
    invoke-virtual {v1}, Lcom/android/server/power/ScreenOnKeeper;->disableScreenOnKeeper()V

    .line 526
    .line 527
    .line 528
    invoke-virtual {v1, v12}, Lcom/android/server/power/ScreenOnKeeper;->notifyScreenOnKeeperDisabledLocked(I)V

    .line 529
    .line 530
    .line 531
    goto :goto_b

    .line 532
    :goto_a
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 533
    throw v0

    .line 534
    :cond_1b
    :goto_b
    return-void
.end method

.method public final updateKnoxTimeoutValue(I)V
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    invoke-static {p1}, Lcom/samsung/android/knox/SemPersonaManager;->isSecureFolderId(I)Z

    .line 8
    .line 9
    .line 10
    move-result v1

    .line 11
    const/4 v2, 0x0

    .line 12
    const-string v3, "knox_screen_off_timeout"

    .line 13
    .line 14
    if-eqz v1, :cond_0

    .line 15
    .line 16
    invoke-static {v0, v3, v2, p1}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 17
    .line 18
    .line 19
    move-result v0

    .line 20
    goto :goto_0

    .line 21
    :cond_0
    invoke-static {v0, v3, v2, p1}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 22
    .line 23
    .line 24
    move-result v0

    .line 25
    :goto_0
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 26
    .line 27
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 28
    .line 29
    .line 30
    move-result-object v1

    .line 31
    check-cast v1, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 32
    .line 33
    if-eqz v1, :cond_1

    .line 34
    .line 35
    int-to-long p0, v0

    .line 36
    iput-wide p0, v1, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeoutForUser:J

    .line 37
    .line 38
    goto :goto_1

    .line 39
    :cond_1
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 40
    .line 41
    new-instance v9, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 42
    .line 43
    int-to-long v5, v0

    .line 44
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 45
    .line 46
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 47
    .line 48
    .line 49
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 50
    .line 51
    .line 52
    move-result-wide v7

    .line 53
    const/4 v4, 0x0

    .line 54
    move-object v2, v9

    .line 55
    move v3, p1

    .line 56
    invoke-direct/range {v2 .. v8}, Lcom/android/server/power/PowerManagerService$ProfilePowerState;-><init>(IIJJ)V

    .line 57
    .line 58
    .line 59
    invoke-virtual {v1, p1, v9}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 60
    .line 61
    .line 62
    :goto_1
    return-void
.end method

.method public final updatePowerGroupsLocked(I)Z
    .locals 24

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move/from16 v1, p1

    .line 4
    .line 5
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->areAllPowerGroupsReadyLocked()Z

    .line 6
    .line 7
    .line 8
    move-result v2

    .line 9
    const v3, 0x1183f

    .line 10
    .line 11
    .line 12
    and-int/2addr v3, v1

    .line 13
    const/4 v4, 0x1

    .line 14
    const/4 v5, 0x0

    .line 15
    if-eqz v3, :cond_22

    .line 16
    .line 17
    and-int/lit16 v1, v1, 0x1000

    .line 18
    .line 19
    if-eqz v1, :cond_1

    .line 20
    .line 21
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->areAllPowerGroupsReadyLocked()Z

    .line 22
    .line 23
    .line 24
    move-result v1

    .line 25
    if-eqz v1, :cond_0

    .line 26
    .line 27
    sput-boolean v5, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 28
    .line 29
    goto :goto_0

    .line 30
    :cond_0
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 31
    .line 32
    or-int/lit16 v1, v1, 0x1000

    .line 33
    .line 34
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 35
    .line 36
    :cond_1
    :goto_0
    move v1, v5

    .line 37
    :goto_1
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 38
    .line 39
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    .line 40
    .line 41
    .line 42
    move-result v3

    .line 43
    if-ge v1, v3, :cond_21

    .line 44
    .line 45
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 46
    .line 47
    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 48
    .line 49
    .line 50
    move-result-object v3

    .line 51
    check-cast v3, Lcom/android/server/power/PowerGroup;

    .line 52
    .line 53
    iget v14, v3, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 54
    .line 55
    iget-object v6, v3, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 56
    .line 57
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 58
    .line 59
    const/high16 v8, 0x3f800000    # 1.0f

    .line 60
    .line 61
    if-nez v7, :cond_2

    .line 62
    .line 63
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessDefault:F

    .line 64
    .line 65
    move v9, v5

    .line 66
    goto :goto_2

    .line 67
    :cond_2
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessOverrideFromWindowManager:F

    .line 68
    .line 69
    const/4 v9, 0x0

    .line 70
    cmpl-float v9, v7, v9

    .line 71
    .line 72
    if-ltz v9, :cond_3

    .line 73
    .line 74
    cmpg-float v9, v7, v8

    .line 75
    .line 76
    if-gtz v9, :cond_3

    .line 77
    .line 78
    move v9, v4

    .line 79
    goto :goto_2

    .line 80
    :cond_3
    move v9, v5

    .line 81
    const/high16 v7, 0x7fc00000    # Float.NaN

    .line 82
    .line 83
    :goto_2
    iget-boolean v10, v0, Lcom/android/server/power/PowerManagerService;->mLastBrightnessOverrideState:Z

    .line 84
    .line 85
    if-eq v9, v10, :cond_4

    .line 86
    .line 87
    iput-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mLastBrightnessOverrideState:Z

    .line 88
    .line 89
    invoke-virtual {v0, v9}, Lcom/android/server/power/PowerManagerService;->setQuickPanelBrightnessBarDisabled(Z)V

    .line 90
    .line 91
    .line 92
    :cond_4
    iget-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mCoverAuthReady:Z

    .line 93
    .line 94
    if-nez v9, :cond_7

    .line 95
    .line 96
    iget-object v9, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 97
    .line 98
    invoke-virtual {v9}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 99
    .line 100
    .line 101
    move-result-object v9

    .line 102
    const-string v10, "com.sec.feature.cover.flip"

    .line 103
    .line 104
    invoke-virtual {v9, v10}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    .line 105
    .line 106
    .line 107
    move-result v9

    .line 108
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 109
    .line 110
    invoke-virtual {v10}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    .line 111
    .line 112
    .line 113
    move-result-object v10

    .line 114
    const-string v11, "com.sec.feature.cover.sview"

    .line 115
    .line 116
    invoke-virtual {v10, v11}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    .line 117
    .line 118
    .line 119
    move-result v10

    .line 120
    if-nez v9, :cond_6

    .line 121
    .line 122
    if-eqz v10, :cond_5

    .line 123
    .line 124
    goto :goto_3

    .line 125
    :cond_5
    move v9, v5

    .line 126
    goto :goto_4

    .line 127
    :cond_6
    :goto_3
    const-string v9, "/sys/class/sec/hall_ic/hall_detect"

    .line 128
    .line 129
    invoke-static {v9}, Lcom/android/server/power/PowerManagerUtil;->readFromFile(Ljava/lang/String;)Ljava/lang/String;

    .line 130
    .line 131
    .line 132
    move-result-object v9

    .line 133
    const-string v10, "CLOSE"

    .line 134
    .line 135
    invoke-virtual {v10, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 136
    .line 137
    .line 138
    move-result v9

    .line 139
    if-eqz v9, :cond_5

    .line 140
    .line 141
    move v9, v4

    .line 142
    :goto_4
    iput-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 143
    .line 144
    new-instance v9, Ljava/lang/StringBuilder;

    .line 145
    .line 146
    const-string v10, "isCoverClosedBySysfs called on closed = "

    .line 147
    .line 148
    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 149
    .line 150
    .line 151
    iget-boolean v10, v0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 152
    .line 153
    invoke-static {v10}, Ljava/lang/String;->valueOf(Z)Ljava/lang/String;

    .line 154
    .line 155
    .line 156
    move-result-object v10

    .line 157
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 158
    .line 159
    .line 160
    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 161
    .line 162
    .line 163
    move-result-object v9

    .line 164
    iput-object v9, v0, Lcom/android/server/power/PowerManagerService;->mlastUpdateCoverStateReason:Ljava/lang/String;

    .line 165
    .line 166
    :cond_7
    iget v9, v0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 167
    .line 168
    const/16 v10, 0x8

    .line 169
    .line 170
    if-ne v9, v10, :cond_a

    .line 171
    .line 172
    iget-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mIsCoverClosed:Z

    .line 173
    .line 174
    if-eqz v9, :cond_a

    .line 175
    .line 176
    iget-object v9, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 177
    .line 178
    iget-boolean v10, v9, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mEmergencyModeEnabled:Z

    .line 179
    .line 180
    if-nez v10, :cond_a

    .line 181
    .line 182
    iget-boolean v9, v9, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mUltraPowerSavingModeEnabled:Z

    .line 183
    .line 184
    if-eqz v9, :cond_8

    .line 185
    .line 186
    goto :goto_5

    .line 187
    :cond_8
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessForClearCoverConfig:F

    .line 188
    .line 189
    invoke-static {v7}, Ljava/lang/Float;->isNaN(F)Z

    .line 190
    .line 191
    .line 192
    move-result v7

    .line 193
    if-nez v7, :cond_9

    .line 194
    .line 195
    iget v8, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessForClearCoverConfig:F

    .line 196
    .line 197
    :cond_9
    move v12, v8

    .line 198
    goto :goto_6

    .line 199
    :cond_a
    :goto_5
    move v12, v7

    .line 200
    :goto_6
    if-nez v14, :cond_b

    .line 201
    .line 202
    iget-wide v7, v0, Lcom/android/server/power/PowerManagerService;->mLastAutoBrightnessLimitTime:J

    .line 203
    .line 204
    iget-object v9, v0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 205
    .line 206
    invoke-virtual {v9}, Landroid/hardware/display/DisplayManagerInternal;->getLastUserSetScreenBrightnessTime()J

    .line 207
    .line 208
    .line 209
    move-result-wide v9

    .line 210
    cmp-long v7, v7, v9

    .line 211
    .line 212
    if-lez v7, :cond_b

    .line 213
    .line 214
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessLowerLimit:I

    .line 215
    .line 216
    invoke-static {v7}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    .line 217
    .line 218
    .line 219
    move-result v7

    .line 220
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->autoBrightnessLowerLimit:F

    .line 221
    .line 222
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mAutoBrightnessUpperLimit:I

    .line 223
    .line 224
    invoke-static {v7}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    .line 225
    .line 226
    .line 227
    move-result v7

    .line 228
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->autoBrightnessUpperLimit:F

    .line 229
    .line 230
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mForceSlowChange:Z

    .line 231
    .line 232
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->forceSlowChange:Z

    .line 233
    .line 234
    iput-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mForceSlowChange:Z

    .line 235
    .line 236
    goto :goto_7

    .line 237
    :cond_b
    const/high16 v7, -0x40800000    # -1.0f

    .line 238
    .line 239
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->autoBrightnessLowerLimit:F

    .line 240
    .line 241
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->autoBrightnessUpperLimit:F

    .line 242
    .line 243
    :goto_7
    iget v7, v3, Lcom/android/server/power/PowerGroup;->mLastGoToSleepReason:I

    .line 244
    .line 245
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->lastGoToSleepReason:I

    .line 246
    .line 247
    iget-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->useProximitySensor:Z

    .line 248
    .line 249
    const/4 v8, -0x1

    .line 250
    if-eqz v7, :cond_10

    .line 251
    .line 252
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 253
    .line 254
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    .line 255
    .line 256
    .line 257
    move-result v7

    .line 258
    move v9, v5

    .line 259
    move v10, v8

    .line 260
    :goto_8
    const/16 v11, 0x20

    .line 261
    .line 262
    const v13, 0xffff

    .line 263
    .line 264
    .line 265
    if-ge v9, v7, :cond_d

    .line 266
    .line 267
    iget-object v15, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 268
    .line 269
    invoke-virtual {v15, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 270
    .line 271
    .line 272
    move-result-object v15

    .line 273
    check-cast v15, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 274
    .line 275
    iget v15, v15, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 276
    .line 277
    and-int/2addr v13, v15

    .line 278
    if-ne v13, v11, :cond_c

    .line 279
    .line 280
    iget-object v11, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 281
    .line 282
    invoke-virtual {v11, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 283
    .line 284
    .line 285
    move-result-object v11

    .line 286
    check-cast v11, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 287
    .line 288
    iget v11, v11, Lcom/android/server/power/PowerManagerService$WakeLock;->mProximityPositiveDebounce:I

    .line 289
    .line 290
    if-ge v10, v11, :cond_c

    .line 291
    .line 292
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 293
    .line 294
    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 295
    .line 296
    .line 297
    move-result-object v10

    .line 298
    check-cast v10, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 299
    .line 300
    iget v10, v10, Lcom/android/server/power/PowerManagerService$WakeLock;->mProximityPositiveDebounce:I

    .line 301
    .line 302
    :cond_c
    add-int/lit8 v9, v9, 0x1

    .line 303
    .line 304
    goto :goto_8

    .line 305
    :cond_d
    iput v10, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->proximityPositiveDebounce:I

    .line 306
    .line 307
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 308
    .line 309
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    .line 310
    .line 311
    .line 312
    move-result v7

    .line 313
    move v9, v5

    .line 314
    move v10, v8

    .line 315
    :goto_9
    if-ge v9, v7, :cond_f

    .line 316
    .line 317
    iget-object v15, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 318
    .line 319
    invoke-virtual {v15, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 320
    .line 321
    .line 322
    move-result-object v15

    .line 323
    check-cast v15, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 324
    .line 325
    iget v15, v15, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 326
    .line 327
    and-int/2addr v15, v13

    .line 328
    if-ne v15, v11, :cond_e

    .line 329
    .line 330
    iget-object v15, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 331
    .line 332
    invoke-virtual {v15, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 333
    .line 334
    .line 335
    move-result-object v15

    .line 336
    check-cast v15, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 337
    .line 338
    iget v15, v15, Lcom/android/server/power/PowerManagerService$WakeLock;->mProximityNegativeDebounce:I

    .line 339
    .line 340
    if-ge v10, v15, :cond_e

    .line 341
    .line 342
    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 343
    .line 344
    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 345
    .line 346
    .line 347
    move-result-object v10

    .line 348
    check-cast v10, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 349
    .line 350
    iget v10, v10, Lcom/android/server/power/PowerManagerService$WakeLock;->mProximityNegativeDebounce:I

    .line 351
    .line 352
    :cond_e
    add-int/lit8 v9, v9, 0x1

    .line 353
    .line 354
    goto :goto_9

    .line 355
    :cond_f
    iput v10, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->proximityNegativeDebounce:I

    .line 356
    .line 357
    goto :goto_a

    .line 358
    :cond_10
    iput v8, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->proximityPositiveDebounce:I

    .line 359
    .line 360
    iput v8, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->proximityNegativeDebounce:I

    .line 361
    .line 362
    :goto_a
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessScaleFactor:F

    .line 363
    .line 364
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->screenBrightnessScaleFactor:F

    .line 365
    .line 366
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mBatteryLevelCritical:Z

    .line 367
    .line 368
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->batteryLevelCritical:Z

    .line 369
    .line 370
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mIsPowered:Z

    .line 371
    .line 372
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isPowered:Z

    .line 373
    .line 374
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->sensorBlockedByCoverLocked()Z

    .line 375
    .line 376
    .line 377
    move-result v7

    .line 378
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->coverClosed:Z

    .line 379
    .line 380
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 381
    .line 382
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->coverType:I

    .line 383
    .line 384
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->sensorBlockedByCoverLocked()Z

    .line 385
    .line 386
    .line 387
    move-result v7

    .line 388
    if-eqz v7, :cond_11

    .line 389
    .line 390
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mCoverType:I

    .line 391
    .line 392
    packed-switch v7, :pswitch_data_0

    .line 393
    .line 394
    .line 395
    goto :goto_b

    .line 396
    :pswitch_0
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mBrightnessLimitByCoverConfig:I

    .line 397
    .line 398
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->brightnessLimitByCover:I

    .line 399
    .line 400
    goto :goto_c

    .line 401
    :cond_11
    :goto_b
    iput v8, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->brightnessLimitByCover:I

    .line 402
    .line 403
    :goto_c
    if-nez v14, :cond_12

    .line 404
    .line 405
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mOutdoorModeSetting:Z

    .line 406
    .line 407
    if-eqz v7, :cond_12

    .line 408
    .line 409
    move v7, v4

    .line 410
    goto :goto_d

    .line 411
    :cond_12
    move v7, v5

    .line 412
    :goto_d
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isOutdoorMode:Z

    .line 413
    .line 414
    if-eqz v7, :cond_14

    .line 415
    .line 416
    iget-boolean v7, v3, Lcom/android/server/power/PowerGroup;->mPoweringOn:Z

    .line 417
    .line 418
    if-eqz v7, :cond_14

    .line 419
    .line 420
    iget v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 421
    .line 422
    if-eqz v7, :cond_13

    .line 423
    .line 424
    if-ne v7, v4, :cond_14

    .line 425
    .line 426
    :cond_13
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 427
    .line 428
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 429
    .line 430
    .line 431
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 432
    .line 433
    .line 434
    move-result-wide v7

    .line 435
    iget-wide v9, v0, Lcom/android/server/power/PowerManagerService;->mLastOutdoorModeEnabledTime:J

    .line 436
    .line 437
    sub-long/2addr v7, v9

    .line 438
    const-wide/32 v9, 0xdbba0

    .line 439
    .line 440
    .line 441
    cmp-long v7, v7, v9

    .line 442
    .line 443
    if-lez v7, :cond_14

    .line 444
    .line 445
    iput-boolean v5, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isOutdoorMode:Z

    .line 446
    .line 447
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 448
    .line 449
    new-instance v8, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;

    .line 450
    .line 451
    const/4 v9, 0x4

    .line 452
    invoke-direct {v8, v0, v9}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    .line 453
    .line 454
    .line 455
    invoke-virtual {v7, v8}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 456
    .line 457
    .line 458
    :cond_14
    if-nez v14, :cond_15

    .line 459
    .line 460
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mEarlyWakeUp:Z

    .line 461
    .line 462
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->earlyWakeUp:Z

    .line 463
    .line 464
    iput-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mEarlyWakeUp:Z

    .line 465
    .line 466
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mDualScreenPolicy:I

    .line 467
    .line 468
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dualScreenPolicy:I

    .line 469
    .line 470
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 471
    .line 472
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->lastWakeUpReason:I

    .line 473
    .line 474
    :cond_15
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mLCDFlashMode:Z

    .line 475
    .line 476
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->lcdFlashMode:Z

    .line 477
    .line 478
    iget-boolean v7, v0, Lcom/android/server/power/PowerManagerService;->mHbmBlock:Z

    .line 479
    .line 480
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->hbmBlock:Z

    .line 481
    .line 482
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessLowerLimit:I

    .line 483
    .line 484
    invoke-static {v7}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    .line 485
    .line 486
    .line 487
    move-result v7

    .line 488
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->minBrightness:F

    .line 489
    .line 490
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mMasterBrightnessUpperLimit:I

    .line 491
    .line 492
    invoke-static {v7}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    .line 493
    .line 494
    .line 495
    move-result v7

    .line 496
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->maxBrightness:F

    .line 497
    .line 498
    iget v7, v0, Lcom/android/server/power/PowerManagerService;->mHdrBrightnessUpperLimit:I

    .line 499
    .line 500
    invoke-static {v7}, Lcom/android/internal/display/BrightnessSynchronizer;->brightnessIntToFloat(I)F

    .line 501
    .line 502
    .line 503
    move-result v7

    .line 504
    iput v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->hdrMaxBrightness:F

    .line 505
    .line 506
    sget-boolean v7, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_SUPPORT_AOD:Z

    .line 507
    .line 508
    if-nez v7, :cond_16

    .line 509
    .line 510
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

    .line 511
    .line 512
    if-eqz v7, :cond_16

    .line 513
    .line 514
    iget-boolean v7, v7, Lcom/android/server/power/ScreenCurtainController;->mScreenCurtainEnabled:Z

    .line 515
    .line 516
    iput-boolean v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->screenCurtainEnabled:Z

    .line 517
    .line 518
    :cond_16
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 519
    .line 520
    invoke-virtual {v6, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 521
    .line 522
    .line 523
    move-result-object v6

    .line 524
    check-cast v6, Lcom/android/server/power/PowerGroup;

    .line 525
    .line 526
    iget v6, v6, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 527
    .line 528
    and-int/lit8 v6, v6, 0x10

    .line 529
    .line 530
    if-eqz v6, :cond_17

    .line 531
    .line 532
    move v15, v4

    .line 533
    goto :goto_e

    .line 534
    :cond_17
    move v15, v5

    .line 535
    :goto_e
    iget-boolean v13, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 536
    .line 537
    iget v11, v0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideFromDreamManager:I

    .line 538
    .line 539
    iget v10, v0, Lcom/android/server/power/PowerManagerService;->mDozeScreenStateOverrideReasonFromDreamManager:I

    .line 540
    .line 541
    iget v9, v0, Lcom/android/server/power/PowerManagerService;->mDozeScreenBrightnessOverrideFromDreamManagerFloat:F

    .line 542
    .line 543
    iget-boolean v8, v0, Lcom/android/server/power/PowerManagerService;->mDrawWakeLockOverrideFromSidekick:Z

    .line 544
    .line 545
    iget-boolean v6, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverSupported:Z

    .line 546
    .line 547
    const/4 v7, 0x7

    .line 548
    if-eqz v6, :cond_18

    .line 549
    .line 550
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mBatterySaverStateMachine:Lcom/android/server/power/batterysaver/BatterySaverStateMachine;

    .line 551
    .line 552
    iget-object v6, v6, Lcom/android/server/power/batterysaver/BatterySaverStateMachine;->mBatterySaverController:Lcom/android/server/power/batterysaver/BatterySaverController;

    .line 553
    .line 554
    iget-object v6, v6, Lcom/android/server/power/batterysaver/BatterySaverController;->mBatterySaverPolicy:Lcom/android/server/power/batterysaver/BatterySaverPolicy;

    .line 555
    .line 556
    invoke-virtual {v6, v7}, Lcom/android/server/power/batterysaver/BatterySaverPolicy;->getBatterySaverPolicy(I)Landroid/os/PowerSaveState;

    .line 557
    .line 558
    .line 559
    move-result-object v6

    .line 560
    goto :goto_f

    .line 561
    :cond_18
    new-instance v6, Landroid/os/PowerSaveState$Builder;

    .line 562
    .line 563
    invoke-direct {v6}, Landroid/os/PowerSaveState$Builder;-><init>()V

    .line 564
    .line 565
    .line 566
    invoke-virtual {v6}, Landroid/os/PowerSaveState$Builder;->build()Landroid/os/PowerSaveState;

    .line 567
    .line 568
    .line 569
    move-result-object v6

    .line 570
    :goto_f
    sget-boolean v16, Lcom/android/server/power/PowerManagerService;->sQuiescent:Z

    .line 571
    .line 572
    iget-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mDozeAfterScreenOff:Z

    .line 573
    .line 574
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 575
    .line 576
    move/from16 v17, v10

    .line 577
    .line 578
    iget-boolean v10, v0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 579
    .line 580
    move/from16 v18, v2

    .line 581
    .line 582
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mRequestWaitForNegativeProximity:Z

    .line 583
    .line 584
    move/from16 v19, v11

    .line 585
    .line 586
    iget-boolean v11, v0, Lcom/android/server/power/PowerManagerService;->mBrightWhenDozingConfig:Z

    .line 587
    .line 588
    move/from16 v20, v12

    .line 589
    .line 590
    move/from16 v21, v13

    .line 591
    .line 592
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mScreenDimDurationOverrideFromWindowManager:J

    .line 593
    .line 594
    move/from16 v22, v1

    .line 595
    .line 596
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mBatterySavingAdjustBrightnessFactor:F

    .line 597
    .line 598
    iget-object v0, v3, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 599
    .line 600
    move/from16 v23, v14

    .line 601
    .line 602
    move-object v14, v6

    .line 603
    move-object v6, v3

    .line 604
    move/from16 v7, v16

    .line 605
    .line 606
    move/from16 v16, v8

    .line 607
    .line 608
    move v8, v5

    .line 609
    move v5, v9

    .line 610
    move v9, v4

    .line 611
    move/from16 v4, v17

    .line 612
    .line 613
    move/from16 v17, v2

    .line 614
    .line 615
    move/from16 v2, v19

    .line 616
    .line 617
    move/from16 v19, v1

    .line 618
    .line 619
    move/from16 v1, v20

    .line 620
    .line 621
    move-object/from16 v20, v14

    .line 622
    .line 623
    move/from16 v14, v21

    .line 624
    .line 625
    invoke-virtual/range {v6 .. v13}, Lcom/android/server/power/PowerGroup;->getDesiredScreenPolicyLocked(ZZZZZJ)I

    .line 626
    .line 627
    .line 628
    move-result v6

    .line 629
    iput v6, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 630
    .line 631
    iget-object v0, v3, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 632
    .line 633
    iput v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->screenBrightnessOverride:F

    .line 634
    .line 635
    iput-boolean v15, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->useProximitySensor:Z

    .line 636
    .line 637
    iput-boolean v14, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->boostScreenBrightness:Z

    .line 638
    .line 639
    iget v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 640
    .line 641
    const/4 v6, 0x1

    .line 642
    if-ne v1, v6, :cond_1b

    .line 643
    .line 644
    iput v2, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 645
    .line 646
    iput v4, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenStateReason:I

    .line 647
    .line 648
    iget v1, v3, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 649
    .line 650
    and-int/lit16 v1, v1, 0x80

    .line 651
    .line 652
    if-eqz v1, :cond_1a

    .line 653
    .line 654
    if-nez v16, :cond_1a

    .line 655
    .line 656
    const/4 v1, 0x4

    .line 657
    const/4 v4, 0x2

    .line 658
    if-ne v2, v1, :cond_19

    .line 659
    .line 660
    const/4 v1, 0x3

    .line 661
    iput v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 662
    .line 663
    iput v4, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenStateReason:I

    .line 664
    .line 665
    :cond_19
    iget v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 666
    .line 667
    const/4 v2, 0x6

    .line 668
    if-ne v1, v2, :cond_1a

    .line 669
    .line 670
    iput v4, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 671
    .line 672
    iput v4, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenStateReason:I

    .line 673
    .line 674
    :cond_1a
    iput v5, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenBrightness:F

    .line 675
    .line 676
    :goto_10
    move-object/from16 v6, v20

    .line 677
    .line 678
    goto :goto_11

    .line 679
    :cond_1b
    const/4 v1, 0x0

    .line 680
    iput v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 681
    .line 682
    const/high16 v1, 0x7fc00000    # Float.NaN

    .line 683
    .line 684
    iput v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenBrightness:F

    .line 685
    .line 686
    const/4 v1, 0x1

    .line 687
    iput v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenStateReason:I

    .line 688
    .line 689
    goto :goto_10

    .line 690
    :goto_11
    iget-boolean v1, v6, Landroid/os/PowerSaveState;->batterySaverEnabled:Z

    .line 691
    .line 692
    iput-boolean v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->lowPowerMode:Z

    .line 693
    .line 694
    move/from16 v1, v19

    .line 695
    .line 696
    iput v1, v0, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->screenLowPowerBrightnessFactor:F

    .line 697
    .line 698
    iget-object v1, v3, Lcom/android/server/power/PowerGroup;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 699
    .line 700
    iget v2, v3, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 701
    .line 702
    move/from16 v4, v17

    .line 703
    .line 704
    invoke-virtual {v1, v2, v0, v4}, Landroid/hardware/display/DisplayManagerInternal;->requestPowerState(ILandroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;Z)Z

    .line 705
    .line 706
    .line 707
    move-result v0

    .line 708
    iget-object v1, v3, Lcom/android/server/power/PowerGroup;->mNotifier:Lcom/android/server/power/Notifier;

    .line 709
    .line 710
    iget v2, v3, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 711
    .line 712
    iget-object v4, v3, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 713
    .line 714
    iget v4, v4, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 715
    .line 716
    iget-object v5, v1, Lcom/android/server/power/Notifier;->mLock:Ljava/lang/Object;

    .line 717
    .line 718
    monitor-enter v5

    .line 719
    :try_start_0
    iget-object v6, v1, Lcom/android/server/power/Notifier;->mHandler:Lcom/android/server/power/Notifier$NotifierHandler;

    .line 720
    .line 721
    const/4 v7, 0x7

    .line 722
    invoke-virtual {v6, v7}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 723
    .line 724
    .line 725
    move-result-object v6

    .line 726
    iput v2, v6, Landroid/os/Message;->arg1:I

    .line 727
    .line 728
    iput v4, v6, Landroid/os/Message;->arg2:I

    .line 729
    .line 730
    const/4 v2, 0x1

    .line 731
    invoke-virtual {v6, v2}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 732
    .line 733
    .line 734
    iget-object v1, v1, Lcom/android/server/power/Notifier;->mHandler:Lcom/android/server/power/Notifier$NotifierHandler;

    .line 735
    .line 736
    invoke-virtual {v1, v6}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 737
    .line 738
    .line 739
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 740
    iget v1, v3, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 741
    .line 742
    iget-boolean v2, v3, Lcom/android/server/power/PowerGroup;->mReady:Z

    .line 743
    .line 744
    if-eq v0, v2, :cond_1c

    .line 745
    .line 746
    const-string v2, "PowerManagerService"

    .line 747
    .line 748
    new-instance v4, Ljava/lang/StringBuilder;

    .line 749
    .line 750
    const-string v5, "displayReady: "

    .line 751
    .line 752
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 753
    .line 754
    .line 755
    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 756
    .line 757
    .line 758
    const-string v5, " groupId="

    .line 759
    .line 760
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 761
    .line 762
    .line 763
    move/from16 v5, v23

    .line 764
    .line 765
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 766
    .line 767
    .line 768
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 769
    .line 770
    .line 771
    move-result-object v4

    .line 772
    invoke-static {v2, v4}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 773
    .line 774
    .line 775
    goto :goto_12

    .line 776
    :cond_1c
    move/from16 v5, v23

    .line 777
    .line 778
    :goto_12
    iget-boolean v2, v3, Lcom/android/server/power/PowerGroup;->mReady:Z

    .line 779
    .line 780
    if-eq v2, v0, :cond_1d

    .line 781
    .line 782
    iput-boolean v0, v3, Lcom/android/server/power/PowerGroup;->mReady:Z

    .line 783
    .line 784
    const/4 v2, 0x1

    .line 785
    goto :goto_13

    .line 786
    :cond_1d
    const/4 v2, 0x0

    .line 787
    :goto_13
    iget-boolean v4, v3, Lcom/android/server/power/PowerGroup;->mPoweringOn:Z

    .line 788
    .line 789
    if-eqz v0, :cond_1f

    .line 790
    .line 791
    if-eqz v2, :cond_1f

    .line 792
    .line 793
    if-eqz v4, :cond_1f

    .line 794
    .line 795
    const/4 v0, 0x1

    .line 796
    if-ne v1, v0, :cond_1e

    .line 797
    .line 798
    const/4 v1, 0x0

    .line 799
    iput-boolean v1, v3, Lcom/android/server/power/PowerGroup;->mPoweringOn:Z

    .line 800
    .line 801
    move-object/from16 v1, p0

    .line 802
    .line 803
    iget-object v2, v1, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 804
    .line 805
    invoke-static {v2}, Lcom/android/internal/util/LatencyTracker;->getInstance(Landroid/content/Context;)Lcom/android/internal/util/LatencyTracker;

    .line 806
    .line 807
    .line 808
    move-result-object v2

    .line 809
    const/4 v4, 0x5

    .line 810
    invoke-virtual {v2, v4}, Lcom/android/internal/util/LatencyTracker;->onActionEnd(I)V

    .line 811
    .line 812
    .line 813
    const-wide/32 v6, 0x20000

    .line 814
    .line 815
    .line 816
    const-string v2, "Screen turning on"

    .line 817
    .line 818
    invoke-static {v6, v7, v2, v5}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 819
    .line 820
    .line 821
    iget-object v2, v1, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 822
    .line 823
    invoke-virtual {v2}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 824
    .line 825
    .line 826
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 827
    .line 828
    .line 829
    move-result-wide v4

    .line 830
    iget-wide v2, v3, Lcom/android/server/power/PowerGroup;->mLastPowerOnTime:J

    .line 831
    .line 832
    sub-long/2addr v4, v2

    .line 833
    long-to-int v2, v4

    .line 834
    const/16 v3, 0xc8

    .line 835
    .line 836
    if-lt v2, v3, :cond_20

    .line 837
    .line 838
    const-string v3, "PowerManagerService"

    .line 839
    .line 840
    new-instance v4, Ljava/lang/StringBuilder;

    .line 841
    .line 842
    const-string v5, "Screen on took "

    .line 843
    .line 844
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 845
    .line 846
    .line 847
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 848
    .line 849
    .line 850
    const-string v2, " ms"

    .line 851
    .line 852
    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 853
    .line 854
    .line 855
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 856
    .line 857
    .line 858
    move-result-object v2

    .line 859
    invoke-static {v3, v2}, Lcom/android/server/power/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 860
    .line 861
    .line 862
    goto :goto_14

    .line 863
    :cond_1e
    move-object/from16 v1, p0

    .line 864
    .line 865
    goto :goto_14

    .line 866
    :cond_1f
    move-object/from16 v1, p0

    .line 867
    .line 868
    const/4 v0, 0x1

    .line 869
    :cond_20
    :goto_14
    add-int/lit8 v2, v22, 0x1

    .line 870
    .line 871
    move v4, v0

    .line 872
    move-object v0, v1

    .line 873
    move v1, v2

    .line 874
    move/from16 v2, v18

    .line 875
    .line 876
    const/4 v5, 0x0

    .line 877
    goto/16 :goto_1

    .line 878
    .line 879
    :catchall_0
    move-exception v0

    .line 880
    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 881
    throw v0

    .line 882
    :cond_21
    move-object v1, v0

    .line 883
    move/from16 v18, v2

    .line 884
    .line 885
    move v0, v4

    .line 886
    move v2, v5

    .line 887
    iput-boolean v2, v1, Lcom/android/server/power/PowerManagerService;->mRequestWaitForNegativeProximity:Z

    .line 888
    .line 889
    goto :goto_15

    .line 890
    :cond_22
    move-object v1, v0

    .line 891
    move/from16 v18, v2

    .line 892
    .line 893
    move v0, v4

    .line 894
    move v2, v5

    .line 895
    :goto_15
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->areAllPowerGroupsReadyLocked()Z

    .line 896
    .line 897
    .line 898
    move-result v1

    .line 899
    if-eqz v1, :cond_23

    .line 900
    .line 901
    if-nez v18, :cond_23

    .line 902
    .line 903
    move v4, v0

    .line 904
    goto :goto_16

    .line 905
    :cond_23
    move v4, v2

    .line 906
    :goto_16
    return v4

    .line 907
    :pswitch_data_0
    .packed-switch 0xf
        :pswitch_0
        :pswitch_0
        :pswitch_0
    .end packed-switch
.end method

.method public final updatePowerStateLocked()V
    .locals 14

    .line 1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 2
    .line 3
    if-eqz v0, :cond_9

    .line 4
    .line 5
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 6
    .line 7
    if-eqz v0, :cond_9

    .line 8
    .line 9
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mUpdatePowerStateInProgress:Z

    .line 10
    .line 11
    if-eqz v0, :cond_0

    .line 12
    .line 13
    goto/16 :goto_2

    .line 14
    .line 15
    :cond_0
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 16
    .line 17
    invoke-static {v0}, Ljava/lang/Thread;->holdsLock(Ljava/lang/Object;)Z

    .line 18
    .line 19
    .line 20
    move-result v0

    .line 21
    if-nez v0, :cond_1

    .line 22
    .line 23
    sget v0, Lcom/android/server/power/Slog;->$r8$clinit:I

    .line 24
    .line 25
    const-string v0, "PowerManagerService"

    .line 26
    .line 27
    const-string v1, "Power manager lock was not held when calling updatePowerStateLocked"

    .line 28
    .line 29
    invoke-static {v0, v1}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 30
    .line 31
    .line 32
    :cond_1
    const-wide/32 v0, 0x20000

    .line 33
    .line 34
    .line 35
    const-string/jumbo v2, "updatePowerState"

    .line 36
    .line 37
    .line 38
    invoke-static {v0, v1, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 39
    .line 40
    .line 41
    const/4 v2, 0x1

    .line 42
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mUpdatePowerStateInProgress:Z

    .line 43
    .line 44
    const/4 v3, 0x0

    .line 45
    :try_start_0
    iget v4, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 46
    .line 47
    invoke-virtual {p0, v4}, Lcom/android/server/power/PowerManagerService;->updateIsPoweredLocked(I)V

    .line 48
    .line 49
    .line 50
    iget v4, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 51
    .line 52
    and-int/lit16 v4, v4, 0x120

    .line 53
    .line 54
    if-eqz v4, :cond_3

    .line 55
    .line 56
    iget-boolean v4, p0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 57
    .line 58
    iget v5, p0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 59
    .line 60
    if-eqz v5, :cond_2

    .line 61
    .line 62
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->isMaximumScreenOffTimeoutFromDeviceAdminEnforcedLocked()Z

    .line 63
    .line 64
    .line 65
    move-result v5

    .line 66
    if-nez v5, :cond_2

    .line 67
    .line 68
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mBatteryManagerInternal:Landroid/os/BatteryManagerInternal;

    .line 69
    .line 70
    iget v6, p0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 71
    .line 72
    invoke-virtual {v5, v6}, Landroid/os/BatteryManagerInternal;->isPowered(I)Z

    .line 73
    .line 74
    .line 75
    move-result v5

    .line 76
    iput-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 77
    .line 78
    goto :goto_0

    .line 79
    :cond_2
    iput-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 80
    .line 81
    :goto_0
    iget-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mStayOn:Z

    .line 82
    .line 83
    if-eq v5, v4, :cond_3

    .line 84
    .line 85
    iget v4, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 86
    .line 87
    or-int/lit16 v4, v4, 0x80

    .line 88
    .line 89
    iput v4, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 90
    .line 91
    :cond_3
    iget v4, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 92
    .line 93
    and-int/lit16 v4, v4, 0x800

    .line 94
    .line 95
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 96
    .line 97
    if-eqz v4, :cond_5

    .line 98
    .line 99
    :try_start_1
    iget-boolean v4, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 100
    .line 101
    if-eqz v4, :cond_5

    .line 102
    .line 103
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 104
    .line 105
    .line 106
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 107
    .line 108
    .line 109
    move-result-wide v10

    .line 110
    iget-object v4, p0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 111
    .line 112
    const/4 v6, 0x3

    .line 113
    invoke-virtual {v4, v6}, Landroid/os/Handler;->removeMessages(I)V

    .line 114
    .line 115
    .line 116
    iget-wide v7, p0, Lcom/android/server/power/PowerManagerService;->mLastScreenBrightnessBoostTime:J

    .line 117
    .line 118
    iget-wide v12, p0, Lcom/android/server/power/PowerManagerService;->mLastGlobalSleepTime:J

    .line 119
    .line 120
    cmp-long v9, v7, v12

    .line 121
    .line 122
    if-lez v9, :cond_4

    .line 123
    .line 124
    const-wide/16 v12, 0x1388

    .line 125
    .line 126
    add-long/2addr v7, v12

    .line 127
    cmp-long v9, v7, v10

    .line 128
    .line 129
    if-lez v9, :cond_4

    .line 130
    .line 131
    invoke-virtual {v4, v6}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 132
    .line 133
    .line 134
    move-result-object v6

    .line 135
    invoke-virtual {v6, v2}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 136
    .line 137
    .line 138
    invoke-virtual {v4, v6, v7, v8}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 139
    .line 140
    .line 141
    goto :goto_1

    .line 142
    :cond_4
    iput-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 143
    .line 144
    const/4 v7, 0x0

    .line 145
    const/4 v8, 0x0

    .line 146
    const/16 v9, 0x3e8

    .line 147
    .line 148
    move-object v6, p0

    .line 149
    invoke-virtual/range {v6 .. v11}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(IIIJ)Z

    .line 150
    .line 151
    .line 152
    :cond_5
    :goto_1
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 153
    .line 154
    .line 155
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 156
    .line 157
    .line 158
    move-result-wide v4

    .line 159
    move v2, v3

    .line 160
    :cond_6
    iget v6, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 161
    .line 162
    or-int/2addr v2, v6

    .line 163
    iput v3, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 164
    .line 165
    invoke-virtual {p0, v6}, Lcom/android/server/power/PowerManagerService;->updateWakeLockSummaryLocked(I)V

    .line 166
    .line 167
    .line 168
    invoke-virtual {p0, v6, v4, v5}, Lcom/android/server/power/PowerManagerService;->updateUserActivitySummaryLocked(IJ)V

    .line 169
    .line 170
    .line 171
    invoke-virtual {p0, v6, v4, v5}, Lcom/android/server/power/PowerManagerService;->updateAttentiveStateLocked(IJ)V

    .line 172
    .line 173
    .line 174
    invoke-virtual {p0, v6}, Lcom/android/server/power/PowerManagerService;->updateWakefulnessLocked(I)Z

    .line 175
    .line 176
    .line 177
    move-result v6

    .line 178
    if-nez v6, :cond_6

    .line 179
    .line 180
    invoke-virtual {p0, v4, v5}, Lcom/android/server/power/PowerManagerService;->updateProfilesLocked(J)V

    .line 181
    .line 182
    .line 183
    invoke-virtual {p0, v2}, Lcom/android/server/power/PowerManagerService;->updatePowerGroupsLocked(I)Z

    .line 184
    .line 185
    .line 186
    move-result v4

    .line 187
    const v5, 0x143ff

    .line 188
    .line 189
    .line 190
    and-int/2addr v2, v5

    .line 191
    if-nez v2, :cond_7

    .line 192
    .line 193
    if-eqz v4, :cond_8

    .line 194
    .line 195
    :cond_7
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->areAllPowerGroupsReadyLocked()Z

    .line 196
    .line 197
    .line 198
    move-result v2

    .line 199
    if-eqz v2, :cond_8

    .line 200
    .line 201
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->scheduleSandmanLocked()V

    .line 202
    .line 203
    .line 204
    :cond_8
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->finishWakefulnessChangeIfNeededLocked()V

    .line 205
    .line 206
    .line 207
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updateSuspendBlockerLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 208
    .line 209
    .line 210
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 211
    .line 212
    .line 213
    iput-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mUpdatePowerStateInProgress:Z

    .line 214
    .line 215
    return-void

    .line 216
    :catchall_0
    move-exception v2

    .line 217
    invoke-static {v0, v1}, Landroid/os/Trace;->traceEnd(J)V

    .line 218
    .line 219
    .line 220
    iput-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mUpdatePowerStateInProgress:Z

    .line 221
    .line 222
    throw v2

    .line 223
    :cond_9
    :goto_2
    return-void
.end method

.method public final updateProfilesLocked(J)V
    .locals 12

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    move v2, v1

    .line 9
    :goto_0
    if-ge v2, v0, :cond_5

    .line 10
    .line 11
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 12
    .line 13
    invoke-virtual {v3, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 14
    .line 15
    .line 16
    move-result-object v3

    .line 17
    check-cast v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 18
    .line 19
    iget-wide v4, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeoutForUser:J

    .line 20
    .line 21
    const-wide/16 v6, 0x0

    .line 22
    .line 23
    cmp-long v8, v4, v6

    .line 24
    .line 25
    if-gtz v8, :cond_0

    .line 26
    .line 27
    iget-wide v8, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeout:J

    .line 28
    .line 29
    const-wide v10, 0x7fffffffffffffffL

    .line 30
    .line 31
    .line 32
    .line 33
    .line 34
    cmp-long v8, v8, v10

    .line 35
    .line 36
    if-nez v8, :cond_0

    .line 37
    .line 38
    goto :goto_3

    .line 39
    :cond_0
    cmp-long v6, v4, v6

    .line 40
    .line 41
    if-lez v6, :cond_1

    .line 42
    .line 43
    iget-wide v6, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeout:J

    .line 44
    .line 45
    invoke-static {v6, v7, v4, v5}, Ljava/lang/Math;->min(JJ)J

    .line 46
    .line 47
    .line 48
    move-result-wide v4

    .line 49
    goto :goto_1

    .line 50
    :cond_1
    iget-wide v4, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeout:J

    .line 51
    .line 52
    :goto_1
    iget-wide v6, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLastUserActivityTime:J

    .line 53
    .line 54
    add-long/2addr v6, v4

    .line 55
    cmp-long v4, v6, p1

    .line 56
    .line 57
    if-gtz v4, :cond_3

    .line 58
    .line 59
    iget v4, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mWakeLockSummary:I

    .line 60
    .line 61
    and-int/lit8 v5, v4, 0x20

    .line 62
    .line 63
    if-nez v5, :cond_3

    .line 64
    .line 65
    iget-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 66
    .line 67
    if-eqz v5, :cond_2

    .line 68
    .line 69
    and-int/lit8 v4, v4, 0x10

    .line 70
    .line 71
    if-eqz v4, :cond_2

    .line 72
    .line 73
    goto :goto_2

    .line 74
    :cond_2
    iget-boolean v4, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLockingNotified:Z

    .line 75
    .line 76
    if-nez v4, :cond_4

    .line 77
    .line 78
    const/4 v4, 0x1

    .line 79
    iput-boolean v4, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLockingNotified:Z

    .line 80
    .line 81
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 82
    .line 83
    iget-object v5, v5, Lcom/android/server/power/Notifier;->mHandler:Lcom/android/server/power/Notifier$NotifierHandler;

    .line 84
    .line 85
    const/4 v6, 0x5

    .line 86
    invoke-virtual {v5, v6}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 87
    .line 88
    .line 89
    move-result-object v6

    .line 90
    invoke-virtual {v6, v4}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 91
    .line 92
    .line 93
    iget v3, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mUserId:I

    .line 94
    .line 95
    iput v3, v6, Landroid/os/Message;->arg1:I

    .line 96
    .line 97
    invoke-virtual {v5, v6}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z

    .line 98
    .line 99
    .line 100
    goto :goto_3

    .line 101
    :cond_3
    :goto_2
    iput-boolean v1, v3, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLockingNotified:Z

    .line 102
    .line 103
    :cond_4
    :goto_3
    add-int/lit8 v2, v2, 0x1

    .line 104
    .line 105
    goto :goto_0

    .line 106
    :cond_5
    return-void
.end method

.method public final updateQuickTilesSettingsLocked()V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    const-string/jumbo v1, "sysui_qs_tiles"

    .line 8
    .line 9
    .line 10
    invoke-static {v0, v1}, Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    .line 11
    .line 12
    .line 13
    move-result-object v0

    .line 14
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 15
    .line 16
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 17
    .line 18
    .line 19
    move-result-object v1

    .line 20
    const-string/jumbo v2, "sysui_quick_qs_tiles"

    .line 21
    .line 22
    .line 23
    invoke-static {v1, v2}, Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    .line 24
    .line 25
    .line 26
    move-result-object v1

    .line 27
    const/4 v2, 0x1

    .line 28
    const-string v3, "ScreenCurtainTileService"

    .line 29
    .line 30
    const/4 v4, 0x0

    .line 31
    if-eqz v0, :cond_0

    .line 32
    .line 33
    invoke-virtual {v0, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 34
    .line 35
    .line 36
    move-result v5

    .line 37
    if-nez v5, :cond_1

    .line 38
    .line 39
    :cond_0
    if-eqz v1, :cond_2

    .line 40
    .line 41
    invoke-virtual {v1, v3}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 42
    .line 43
    .line 44
    move-result v3

    .line 45
    if-eqz v3, :cond_2

    .line 46
    .line 47
    :cond_1
    move v3, v2

    .line 48
    goto :goto_0

    .line 49
    :cond_2
    move v3, v4

    .line 50
    :goto_0
    const-string v5, "KeepScreenOnTileService"

    .line 51
    .line 52
    if-eqz v0, :cond_3

    .line 53
    .line 54
    invoke-virtual {v0, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 55
    .line 56
    .line 57
    move-result v0

    .line 58
    if-nez v0, :cond_5

    .line 59
    .line 60
    :cond_3
    if-eqz v1, :cond_4

    .line 61
    .line 62
    invoke-virtual {v1, v5}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 63
    .line 64
    .line 65
    move-result v0

    .line 66
    if-eqz v0, :cond_4

    .line 67
    .line 68
    goto :goto_1

    .line 69
    :cond_4
    move v2, v4

    .line 70
    :cond_5
    :goto_1
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mUseScreenCurtain:Z

    .line 71
    .line 72
    if-eq v0, v3, :cond_7

    .line 73
    .line 74
    iput-boolean v3, p0, Lcom/android/server/power/PowerManagerService;->mUseScreenCurtain:Z

    .line 75
    .line 76
    if-eqz v3, :cond_6

    .line 77
    .line 78
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mForegroundPackageObserver:Lcom/android/server/power/ForegroundPackageObserver;

    .line 79
    .line 80
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

    .line 81
    .line 82
    invoke-virtual {v0, v1}, Lcom/android/server/power/ForegroundPackageObserver;->addObserver(Ljava/util/Observer;)V

    .line 83
    .line 84
    .line 85
    goto :goto_2

    .line 86
    :cond_6
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mForegroundPackageObserver:Lcom/android/server/power/ForegroundPackageObserver;

    .line 87
    .line 88
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

    .line 89
    .line 90
    invoke-virtual {v0, v1}, Lcom/android/server/power/ForegroundPackageObserver;->deleteObserver(Ljava/util/Observer;)V

    .line 91
    .line 92
    .line 93
    :cond_7
    :goto_2
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mUseKeepScreenOn:Z

    .line 94
    .line 95
    if-eq v0, v2, :cond_a

    .line 96
    .line 97
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mUseKeepScreenOn:Z

    .line 98
    .line 99
    const-string v0, "PowerManagerService"

    .line 100
    .line 101
    if-eqz v2, :cond_8

    .line 102
    .line 103
    const-string/jumbo v1, "start ScreenOnKeeper"

    .line 104
    .line 105
    .line 106
    invoke-static {v0, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 107
    .line 108
    .line 109
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 110
    .line 111
    invoke-virtual {v0, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 112
    .line 113
    .line 114
    move-result-object v0

    .line 115
    check-cast v0, Lcom/android/server/power/PowerGroup;

    .line 116
    .line 117
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 118
    .line 119
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 120
    .line 121
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 122
    .line 123
    invoke-virtual {v1}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    .line 124
    .line 125
    .line 126
    move-result-object v4

    .line 127
    iget v5, v0, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 128
    .line 129
    new-instance v6, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda16;

    .line 130
    .line 131
    invoke-direct {v6, v0}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda16;-><init>(Lcom/android/server/power/PowerGroup;)V

    .line 132
    .line 133
    .line 134
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mInjector:Lcom/android/server/power/PowerManagerService$Injector;

    .line 135
    .line 136
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 137
    .line 138
    .line 139
    new-instance v0, Lcom/android/server/power/ScreenOnKeeper;

    .line 140
    .line 141
    iget-object v7, p0, Lcom/android/server/power/PowerManagerService;->mSystemProperties:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 142
    .line 143
    move-object v1, v0

    .line 144
    invoke-direct/range {v1 .. v7}, Lcom/android/server/power/ScreenOnKeeper;-><init>(Landroid/content/Context;Ljava/lang/Object;Landroid/os/Looper;ILcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda16;Lcom/android/server/power/SystemPropertiesWrapper;)V

    .line 145
    .line 146
    .line 147
    iput-object v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenOnKeeper:Lcom/android/server/power/ScreenOnKeeper;

    .line 148
    .line 149
    goto :goto_3

    .line 150
    :cond_8
    const-string/jumbo v1, "stop ScreenOnKeeper"

    .line 151
    .line 152
    .line 153
    invoke-static {v0, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 154
    .line 155
    .line 156
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenOnKeeper:Lcom/android/server/power/ScreenOnKeeper;

    .line 157
    .line 158
    iget-boolean v1, v0, Lcom/android/server/power/ScreenOnKeeper;->mIsScreenOnKeeperEnabled:Z

    .line 159
    .line 160
    if-eqz v1, :cond_9

    .line 161
    .line 162
    invoke-virtual {v0}, Lcom/android/server/power/ScreenOnKeeper;->disableScreenOnKeeper()V

    .line 163
    .line 164
    .line 165
    iget-object v1, v0, Lcom/android/server/power/ScreenOnKeeper;->mWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 166
    .line 167
    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    .line 168
    .line 169
    .line 170
    move-result v1

    .line 171
    if-eqz v1, :cond_9

    .line 172
    .line 173
    iget-object v1, v0, Lcom/android/server/power/ScreenOnKeeper;->mWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 174
    .line 175
    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 176
    .line 177
    .line 178
    :cond_9
    iget-object v1, v0, Lcom/android/server/power/ScreenOnKeeper;->mHandler:Landroid/os/Handler;

    .line 179
    .line 180
    new-instance v2, Lcom/android/server/power/ScreenOnKeeper$$ExternalSyntheticLambda1;

    .line 181
    .line 182
    const/4 v3, 0x0

    .line 183
    invoke-direct {v2, v0, v3}, Lcom/android/server/power/ScreenOnKeeper$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/ScreenOnKeeper;I)V

    .line 184
    .line 185
    .line 186
    iget-object v0, v0, Lcom/android/server/power/ScreenOnKeeper;->mClock:Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda10;

    .line 187
    .line 188
    invoke-virtual {v0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 189
    .line 190
    .line 191
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 192
    .line 193
    .line 194
    move-result-wide v3

    .line 195
    invoke-virtual {v1, v2, v3, v4}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 196
    .line 197
    .line 198
    const/4 v0, 0x0

    .line 199
    iput-object v0, p0, Lcom/android/server/power/PowerManagerService;->mScreenOnKeeper:Lcom/android/server/power/ScreenOnKeeper;

    .line 200
    .line 201
    :cond_a
    :goto_3
    return-void
.end method

.method public final updateSettingsLocked$1()V
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 2
    .line 3
    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 4
    .line 5
    .line 6
    move-result-object v0

    .line 7
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledByDefaultConfig:Z

    .line 8
    .line 9
    const-string/jumbo v2, "screensaver_enabled"

    .line 10
    .line 11
    .line 12
    const/4 v3, -0x2

    .line 13
    invoke-static {v0, v2, v1, v3}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 14
    .line 15
    .line 16
    move-result v1

    .line 17
    const/4 v2, 0x0

    .line 18
    const/4 v4, 0x1

    .line 19
    if-eqz v1, :cond_0

    .line 20
    .line 21
    move v1, v4

    .line 22
    goto :goto_0

    .line 23
    :cond_0
    move v1, v2

    .line 24
    :goto_0
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledSetting:Z

    .line 25
    .line 26
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnSleepByDefaultConfig:Z

    .line 27
    .line 28
    const-string/jumbo v5, "screensaver_activate_on_sleep"

    .line 29
    .line 30
    .line 31
    invoke-static {v0, v5, v1, v3}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 32
    .line 33
    .line 34
    move-result v1

    .line 35
    if-eqz v1, :cond_1

    .line 36
    .line 37
    move v1, v4

    .line 38
    goto :goto_1

    .line 39
    :cond_1
    move v1, v2

    .line 40
    :goto_1
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnSleepSetting:Z

    .line 41
    .line 42
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivatedOnDockByDefaultConfig:Z

    .line 43
    .line 44
    const-string/jumbo v5, "screensaver_activate_on_dock"

    .line 45
    .line 46
    .line 47
    invoke-static {v0, v5, v1, v3}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 48
    .line 49
    .line 50
    move-result v1

    .line 51
    if-eqz v1, :cond_2

    .line 52
    .line 53
    move v1, v4

    .line 54
    goto :goto_2

    .line 55
    :cond_2
    move v1, v2

    .line 56
    :goto_2
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnDockSetting:Z

    .line 57
    .line 58
    const-string/jumbo v1, "screen_off_timeout"

    .line 59
    .line 60
    .line 61
    const/16 v5, 0x3a98

    .line 62
    .line 63
    invoke-static {v0, v1, v5, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 64
    .line 65
    .line 66
    move-result v1

    .line 67
    int-to-long v5, v1

    .line 68
    iput-wide v5, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 69
    .line 70
    const-string/jumbo v1, "sleep_timeout"

    .line 71
    .line 72
    .line 73
    const/4 v5, -0x1

    .line 74
    invoke-static {v0, v1, v5, v3}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 75
    .line 76
    .line 77
    move-result v1

    .line 78
    int-to-long v5, v1

    .line 79
    iput-wide v5, p0, Lcom/android/server/power/PowerManagerService;->mSleepTimeoutSetting:J

    .line 80
    .line 81
    const-string v1, "attentive_timeout"

    .line 82
    .line 83
    iget v5, p0, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutConfig:I

    .line 84
    .line 85
    invoke-static {v0, v1, v5, v3}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 86
    .line 87
    .line 88
    move-result v1

    .line 89
    int-to-long v5, v1

    .line 90
    iput-wide v5, p0, Lcom/android/server/power/PowerManagerService;->mAttentiveTimeoutSetting:J

    .line 91
    .line 92
    const-string/jumbo v1, "stay_on_while_plugged_in"

    .line 93
    .line 94
    .line 95
    invoke-static {v0, v1, v4}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 96
    .line 97
    .line 98
    move-result v1

    .line 99
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 100
    .line 101
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 102
    .line 103
    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    .line 104
    .line 105
    .line 106
    move-result-object v1

    .line 107
    const-string/jumbo v5, "theater_mode_on"

    .line 108
    .line 109
    .line 110
    invoke-static {v1, v5, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 111
    .line 112
    .line 113
    move-result v1

    .line 114
    if-ne v1, v4, :cond_3

    .line 115
    .line 116
    move v1, v4

    .line 117
    goto :goto_3

    .line 118
    :cond_3
    move v1, v2

    .line 119
    :goto_3
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mTheaterModeEnabled:Z

    .line 120
    .line 121
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mAmbientDisplayConfiguration:Landroid/hardware/display/AmbientDisplayConfiguration;

    .line 122
    .line 123
    invoke-virtual {v1, v3}, Landroid/hardware/display/AmbientDisplayConfiguration;->alwaysOnEnabled(I)Z

    .line 124
    .line 125
    .line 126
    move-result v1

    .line 127
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mAlwaysOnEnabled:Z

    .line 128
    .line 129
    const-string/jumbo v1, "user_activity_timeout"

    .line 130
    .line 131
    .line 132
    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 133
    .line 134
    .line 135
    move-result v1

    .line 136
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutSetting:I

    .line 137
    .line 138
    const-string v1, "intelligent_sleep_mode"

    .line 139
    .line 140
    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 141
    .line 142
    .line 143
    move-result v1

    .line 144
    if-eqz v1, :cond_4

    .line 145
    .line 146
    move v1, v4

    .line 147
    goto :goto_4

    .line 148
    :cond_4
    move v1, v2

    .line 149
    :goto_4
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mSmartStayEnabledSetting:Z

    .line 150
    .line 151
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mSmartStayController:Lcom/android/server/power/SmartStayController;

    .line 152
    .line 153
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 154
    .line 155
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 156
    .line 157
    .line 158
    move-result-object v6

    .line 159
    check-cast v6, Lcom/android/server/power/PowerGroup;

    .line 160
    .line 161
    iget v6, v6, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 162
    .line 163
    const/4 v7, 0x0

    .line 164
    const-string v8, "SmartStayController"

    .line 165
    .line 166
    if-eqz v1, :cond_6

    .line 167
    .line 168
    iget-boolean v1, v5, Lcom/android/server/power/SmartStayController;->mSmartStayEnabled:Z

    .line 169
    .line 170
    if-eqz v1, :cond_5

    .line 171
    .line 172
    const-string v1, "SmartStay already started"

    .line 173
    .line 174
    invoke-static {v8, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 175
    .line 176
    .line 177
    goto :goto_5

    .line 178
    :cond_5
    const-string v1, "SmartStay start!"

    .line 179
    .line 180
    invoke-static {v8, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 181
    .line 182
    .line 183
    iput-boolean v4, v5, Lcom/android/server/power/SmartStayController;->mSmartStayEnabled:Z

    .line 184
    .line 185
    iget-object v1, v5, Lcom/android/server/power/SmartStayController;->mInjector:Lcom/android/server/power/SmartStayController$Injector;

    .line 186
    .line 187
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 188
    .line 189
    .line 190
    new-instance v1, Landroid/os/HandlerThread;

    .line 191
    .line 192
    const-string/jumbo v8, "smart stay"

    .line 193
    .line 194
    .line 195
    invoke-direct {v1, v8}, Landroid/os/HandlerThread;-><init>(Ljava/lang/String;)V

    .line 196
    .line 197
    .line 198
    iput-object v1, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandlerThread:Landroid/os/HandlerThread;

    .line 199
    .line 200
    invoke-virtual {v1}, Landroid/os/HandlerThread;->start()V

    .line 201
    .line 202
    .line 203
    new-instance v1, Landroid/os/Handler;

    .line 204
    .line 205
    iget-object v8, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandlerThread:Landroid/os/HandlerThread;

    .line 206
    .line 207
    invoke-virtual {v8}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    .line 208
    .line 209
    .line 210
    move-result-object v8

    .line 211
    invoke-direct {v1, v8}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    .line 212
    .line 213
    .line 214
    iput-object v1, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandler:Landroid/os/Handler;

    .line 215
    .line 216
    iput v6, v5, Lcom/android/server/power/SmartStayController;->mWakefulness:I

    .line 217
    .line 218
    goto :goto_5

    .line 219
    :cond_6
    iget-boolean v1, v5, Lcom/android/server/power/SmartStayController;->mSmartStayEnabled:Z

    .line 220
    .line 221
    if-eqz v1, :cond_7

    .line 222
    .line 223
    const-string v1, "SmartStay stop"

    .line 224
    .line 225
    invoke-static {v8, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 226
    .line 227
    .line 228
    iput-boolean v2, v5, Lcom/android/server/power/SmartStayController;->mSmartStayEnabled:Z

    .line 229
    .line 230
    iget-object v1, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandler:Landroid/os/Handler;

    .line 231
    .line 232
    invoke-virtual {v1, v7}, Landroid/os/Handler;->removeCallbacksAndMessages(Ljava/lang/Object;)V

    .line 233
    .line 234
    .line 235
    iget-object v1, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandlerThread:Landroid/os/HandlerThread;

    .line 236
    .line 237
    invoke-virtual {v1}, Landroid/os/HandlerThread;->quit()Z

    .line 238
    .line 239
    .line 240
    iget-object v1, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandlerThread:Landroid/os/HandlerThread;

    .line 241
    .line 242
    invoke-virtual {v1}, Landroid/os/HandlerThread;->interrupt()V

    .line 243
    .line 244
    .line 245
    iput-object v7, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandlerThread:Landroid/os/HandlerThread;

    .line 246
    .line 247
    iget-object v1, v5, Lcom/android/server/power/SmartStayController;->mFaceDetectRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 248
    .line 249
    invoke-virtual {v1, v2}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 250
    .line 251
    .line 252
    iput-boolean v2, v5, Lcom/android/server/power/SmartStayController;->mFaceDetected:Z

    .line 253
    .line 254
    :cond_7
    :goto_5
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mOutdoorModeSetting:Z

    .line 255
    .line 256
    const-string v5, "display_outdoor_mode"

    .line 257
    .line 258
    invoke-static {v0, v5, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 259
    .line 260
    .line 261
    move-result v5

    .line 262
    if-ne v5, v4, :cond_8

    .line 263
    .line 264
    move v5, v4

    .line 265
    goto :goto_6

    .line 266
    :cond_8
    move v5, v2

    .line 267
    :goto_6
    iput-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mOutdoorModeSetting:Z

    .line 268
    .line 269
    const-string v6, "PowerManagerService"

    .line 270
    .line 271
    if-eq v1, v5, :cond_9

    .line 272
    .line 273
    if-eqz v5, :cond_9

    .line 274
    .line 275
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 276
    .line 277
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 278
    .line 279
    .line 280
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    .line 281
    .line 282
    .line 283
    move-result-wide v8

    .line 284
    iput-wide v8, p0, Lcom/android/server/power/PowerManagerService;->mLastOutdoorModeEnabledTime:J

    .line 285
    .line 286
    const-string v1, "[api] updateSettingsLocked : Update OutdoorMode enabled time"

    .line 287
    .line 288
    invoke-static {v6, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 289
    .line 290
    .line 291
    :cond_9
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mSupportsDoubleTapWakeConfig:Z

    .line 292
    .line 293
    if-eqz v1, :cond_b

    .line 294
    .line 295
    const-string v1, "double_tap_to_wake"

    .line 296
    .line 297
    invoke-static {v0, v1, v2, v3}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 298
    .line 299
    .line 300
    move-result v1

    .line 301
    if-eqz v1, :cond_a

    .line 302
    .line 303
    move v1, v4

    .line 304
    goto :goto_7

    .line 305
    :cond_a
    move v1, v2

    .line 306
    :goto_7
    iget-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mDoubleTapWakeEnabled:Z

    .line 307
    .line 308
    if-eq v1, v5, :cond_b

    .line 309
    .line 310
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mDoubleTapWakeEnabled:Z

    .line 311
    .line 312
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

    .line 313
    .line 314
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 315
    .line 316
    .line 317
    invoke-static {v2, v1}, Lcom/android/server/power/PowerManagerService;->nativeSetPowerMode(IZ)Z

    .line 318
    .line 319
    .line 320
    :cond_b
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 321
    .line 322
    invoke-static {v1}, Landroid/os/UserManager;->isDeviceInDemoMode(Landroid/content/Context;)Z

    .line 323
    .line 324
    .line 325
    move-result v1

    .line 326
    if-eqz v1, :cond_c

    .line 327
    .line 328
    const-string v1, "1"

    .line 329
    .line 330
    goto :goto_8

    .line 331
    :cond_c
    const-string v1, "0"

    .line 332
    .line 333
    :goto_8
    iget-object v5, p0, Lcom/android/server/power/PowerManagerService;->mSystemProperties:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 334
    .line 335
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 336
    .line 337
    .line 338
    const-string/jumbo v8, "sys.retaildemo.enabled"

    .line 339
    .line 340
    .line 341
    invoke-static {v8, v7}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 342
    .line 343
    .line 344
    move-result-object v7

    .line 345
    invoke-virtual {v1, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    .line 346
    .line 347
    .line 348
    move-result v7

    .line 349
    if-nez v7, :cond_d

    .line 350
    .line 351
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 352
    .line 353
    .line 354
    invoke-static {v8, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 355
    .line 356
    .line 357
    :cond_d
    sget-boolean v5, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_WAKEUP_WHEN_PLUG_CHANGED:Z

    .line 358
    .line 359
    if-eqz v5, :cond_f

    .line 360
    .line 361
    const-string v7, "aod_mode"

    .line 362
    .line 363
    invoke-static {v0, v7, v2, v3}, Landroid/provider/Settings$System;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    .line 364
    .line 365
    .line 366
    move-result v3

    .line 367
    if-eqz v3, :cond_e

    .line 368
    .line 369
    goto :goto_9

    .line 370
    :cond_e
    move v4, v2

    .line 371
    :goto_9
    iput-boolean v4, p0, Lcom/android/server/power/PowerManagerService;->mAodMode:Z

    .line 372
    .line 373
    :cond_f
    const-string/jumbo v3, "sem_power_saving_adjust_brightness_factor"

    .line 374
    .line 375
    .line 376
    const/high16 v4, 0x3f800000    # 1.0f

    .line 377
    .line 378
    invoke-static {v0, v3, v4}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    .line 379
    .line 380
    .line 381
    move-result v3

    .line 382
    iput v3, p0, Lcom/android/server/power/PowerManagerService;->mBatterySavingAdjustBrightnessFactor:F

    .line 383
    .line 384
    const-string/jumbo v3, "pms_settings_screen_time_out_enabled"

    .line 385
    .line 386
    .line 387
    invoke-static {v0, v3, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    .line 388
    .line 389
    .line 390
    move-result v0

    .line 391
    int-to-long v2, v0

    .line 392
    iput-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mBatterySavingScreenOffTimeoutSetting:J

    .line 393
    .line 394
    new-instance v0, Ljava/lang/StringBuilder;

    .line 395
    .line 396
    const-string v2, "[api] updateSettingsLocked : mDreamsEnabledSetting: "

    .line 397
    .line 398
    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 399
    .line 400
    .line 401
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mDreamsEnabledSetting:Z

    .line 402
    .line 403
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 404
    .line 405
    .line 406
    const-string v2, " mDreamsActivateOnSleepSetting: "

    .line 407
    .line 408
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 409
    .line 410
    .line 411
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnSleepSetting:Z

    .line 412
    .line 413
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 414
    .line 415
    .line 416
    const-string v2, " mDreamsActivateOnDockSetting: "

    .line 417
    .line 418
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 419
    .line 420
    .line 421
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnDockSetting:Z

    .line 422
    .line 423
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 424
    .line 425
    .line 426
    const-string v2, " mScreenOffTimeoutSetting: "

    .line 427
    .line 428
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 429
    .line 430
    .line 431
    iget-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutSetting:J

    .line 432
    .line 433
    invoke-virtual {v0, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 434
    .line 435
    .line 436
    const-string v2, " mSleepTimeoutSetting: "

    .line 437
    .line 438
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 439
    .line 440
    .line 441
    iget-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mSleepTimeoutSetting:J

    .line 442
    .line 443
    invoke-virtual {v0, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 444
    .line 445
    .line 446
    const-string v2, " mStayOnWhilePluggedInSetting: "

    .line 447
    .line 448
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 449
    .line 450
    .line 451
    iget v2, p0, Lcom/android/server/power/PowerManagerService;->mStayOnWhilePluggedInSetting:I

    .line 452
    .line 453
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 454
    .line 455
    .line 456
    const-string v2, " mTheaterModeEnabled: "

    .line 457
    .line 458
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 459
    .line 460
    .line 461
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mTheaterModeEnabled:Z

    .line 462
    .line 463
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 464
    .line 465
    .line 466
    const-string v2, " mAlwaysOnEnabled: "

    .line 467
    .line 468
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 469
    .line 470
    .line 471
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mAlwaysOnEnabled:Z

    .line 472
    .line 473
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 474
    .line 475
    .line 476
    const-string v2, " mSmartStayEnabledSetting: "

    .line 477
    .line 478
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 479
    .line 480
    .line 481
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mSmartStayEnabledSetting:Z

    .line 482
    .line 483
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 484
    .line 485
    .line 486
    const-string v2, " mDoubleTapWakeEnabled: "

    .line 487
    .line 488
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 489
    .line 490
    .line 491
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mDoubleTapWakeEnabled:Z

    .line 492
    .line 493
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 494
    .line 495
    .line 496
    const-string v2, " retailDemoValue: "

    .line 497
    .line 498
    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 499
    .line 500
    .line 501
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 502
    .line 503
    .line 504
    const-string v1, " mBatterySavingAdjustBrightnessFactor: "

    .line 505
    .line 506
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 507
    .line 508
    .line 509
    iget v1, p0, Lcom/android/server/power/PowerManagerService;->mBatterySavingAdjustBrightnessFactor:F

    .line 510
    .line 511
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    .line 512
    .line 513
    .line 514
    const-string v1, " mBatterySavingScreenOffTimeoutSetting: "

    .line 515
    .line 516
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 517
    .line 518
    .line 519
    iget-wide v1, p0, Lcom/android/server/power/PowerManagerService;->mBatterySavingScreenOffTimeoutSetting:J

    .line 520
    .line 521
    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 522
    .line 523
    .line 524
    if-eqz v5, :cond_10

    .line 525
    .line 526
    new-instance v1, Ljava/lang/StringBuilder;

    .line 527
    .line 528
    const-string v2, " mAodMode: "

    .line 529
    .line 530
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 531
    .line 532
    .line 533
    iget-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mAodMode:Z

    .line 534
    .line 535
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    .line 536
    .line 537
    .line 538
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 539
    .line 540
    .line 541
    move-result-object v1

    .line 542
    goto :goto_a

    .line 543
    :cond_10
    const-string v1, ""

    .line 544
    .line 545
    :goto_a
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 546
    .line 547
    .line 548
    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 549
    .line 550
    .line 551
    move-result-object v0

    .line 552
    invoke-static {v6, v0}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 553
    .line 554
    .line 555
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 556
    .line 557
    or-int/lit8 v0, v0, 0x20

    .line 558
    .line 559
    iput v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 560
    .line 561
    return-void
.end method

.method public final updateSuspendBlockerLocked()V
    .locals 11

    .line 1
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 2
    .line 3
    const/4 v1, 0x1

    .line 4
    and-int/2addr v0, v1

    .line 5
    const/4 v2, 0x0

    .line 6
    if-eqz v0, :cond_0

    .line 7
    .line 8
    move v0, v1

    .line 9
    goto :goto_0

    .line 10
    :cond_0
    move v0, v2

    .line 11
    :goto_0
    iget-object v3, p0, Lcom/android/server/power/PowerManagerService;->mSuspendBlockerMonitor:Lcom/android/server/power/SuspendBlockerMonitor;

    .line 12
    .line 13
    iget v4, v3, Lcom/android/server/power/SuspendBlockerMonitor;->mEvents:I

    .line 14
    .line 15
    and-int/lit8 v4, v4, -0x10

    .line 16
    .line 17
    iput v4, v3, Lcom/android/server/power/SuspendBlockerMonitor;->mEvents:I

    .line 18
    .line 19
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->areAllPowerGroupsReadyLocked()Z

    .line 20
    .line 21
    .line 22
    move-result v4

    .line 23
    const/4 v5, 0x2

    .line 24
    if-nez v4, :cond_1

    .line 25
    .line 26
    invoke-virtual {v3, v1}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 27
    .line 28
    .line 29
    :goto_1
    move v3, v1

    .line 30
    goto/16 :goto_4

    .line 31
    .line 32
    :cond_1
    iget-boolean v4, p0, Lcom/android/server/power/PowerManagerService;->mScreenBrightnessBoostInProgress:Z

    .line 33
    .line 34
    if-eqz v4, :cond_2

    .line 35
    .line 36
    invoke-virtual {v3, v5}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 37
    .line 38
    .line 39
    goto :goto_1

    .line 40
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 41
    .line 42
    .line 43
    move-result v4

    .line 44
    const/4 v6, 0x3

    .line 45
    if-ne v4, v6, :cond_3

    .line 46
    .line 47
    iget-boolean v4, p0, Lcom/android/server/power/PowerManagerService;->mDozeStartInProgress:Z

    .line 48
    .line 49
    if-eqz v4, :cond_3

    .line 50
    .line 51
    const/4 v4, 0x4

    .line 52
    invoke-virtual {v3, v4}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 53
    .line 54
    .line 55
    goto :goto_1

    .line 56
    :cond_3
    move v4, v2

    .line 57
    :goto_2
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 58
    .line 59
    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    .line 60
    .line 61
    .line 62
    move-result v6

    .line 63
    if-ge v4, v6, :cond_9

    .line 64
    .line 65
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 66
    .line 67
    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 68
    .line 69
    .line 70
    move-result-object v6

    .line 71
    check-cast v6, Lcom/android/server/power/PowerGroup;

    .line 72
    .line 73
    iget-boolean v7, p0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 74
    .line 75
    iget v8, p0, Lcom/android/server/power/PowerManagerService;->mDefaultDisplayState:I

    .line 76
    .line 77
    iget-object v9, v6, Lcom/android/server/power/PowerGroup;->mSuspendBlockerMonitor:Lcom/android/server/power/SuspendBlockerMonitor;

    .line 78
    .line 79
    iget v10, v9, Lcom/android/server/power/SuspendBlockerMonitor;->mEvents:I

    .line 80
    .line 81
    and-int/lit16 v10, v10, -0xf1

    .line 82
    .line 83
    iput v10, v9, Lcom/android/server/power/SuspendBlockerMonitor;->mEvents:I

    .line 84
    .line 85
    iget-object v10, v6, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 86
    .line 87
    invoke-virtual {v10}, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isBrightOrDim()Z

    .line 88
    .line 89
    .line 90
    move-result v10

    .line 91
    if-eqz v10, :cond_4

    .line 92
    .line 93
    if-nez v7, :cond_4

    .line 94
    .line 95
    const/16 v4, 0x10

    .line 96
    .line 97
    invoke-virtual {v9, v4}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 98
    .line 99
    .line 100
    goto :goto_3

    .line 101
    :cond_4
    iget-object v6, v6, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 102
    .line 103
    iget v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 104
    .line 105
    if-ne v7, v1, :cond_5

    .line 106
    .line 107
    iget v10, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 108
    .line 109
    if-ne v10, v5, :cond_5

    .line 110
    .line 111
    const/16 v4, 0x20

    .line 112
    .line 113
    invoke-virtual {v9, v4}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 114
    .line 115
    .line 116
    goto :goto_3

    .line 117
    :cond_5
    sget-boolean v10, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_AOD_LOOK_CHARGING_UI:Z

    .line 118
    .line 119
    if-nez v10, :cond_6

    .line 120
    .line 121
    sget-boolean v10, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_AOD_LOOK_CHARGING_UI_ON_SUB_DISPLAY:Z

    .line 122
    .line 123
    if-eqz v10, :cond_7

    .line 124
    .line 125
    iget v10, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dualScreenPolicy:I

    .line 126
    .line 127
    if-ne v10, v1, :cond_7

    .line 128
    .line 129
    :cond_6
    if-ne v7, v1, :cond_7

    .line 130
    .line 131
    iget v6, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 132
    .line 133
    if-eq v6, v1, :cond_7

    .line 134
    .line 135
    const/4 v7, 0x6

    .line 136
    if-eq v6, v7, :cond_7

    .line 137
    .line 138
    const/16 v4, 0x40

    .line 139
    .line 140
    invoke-virtual {v9, v4}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 141
    .line 142
    .line 143
    goto :goto_3

    .line 144
    :cond_7
    if-ne v8, v5, :cond_8

    .line 145
    .line 146
    const/16 v4, 0x80

    .line 147
    .line 148
    invoke-virtual {v9, v4}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 149
    .line 150
    .line 151
    :goto_3
    const/16 v4, 0x8

    .line 152
    .line 153
    invoke-virtual {v3, v4}, Lcom/android/server/power/SuspendBlockerMonitor;->setEvent(I)V

    .line 154
    .line 155
    .line 156
    goto :goto_1

    .line 157
    :cond_8
    add-int/lit8 v4, v4, 0x1

    .line 158
    .line 159
    goto :goto_2

    .line 160
    :cond_9
    move v3, v2

    .line 161
    :goto_4
    xor-int/lit8 v4, v3, 0x1

    .line 162
    .line 163
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 164
    .line 165
    invoke-virtual {v6, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 166
    .line 167
    .line 168
    move-result-object v6

    .line 169
    check-cast v6, Lcom/android/server/power/PowerGroup;

    .line 170
    .line 171
    iget-boolean v7, p0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 172
    .line 173
    iget-boolean v8, p0, Lcom/android/server/power/PowerManagerService;->mShouldWaitForTransitionToAodUi:Z

    .line 174
    .line 175
    iget-object v9, v6, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 176
    .line 177
    invoke-virtual {v9}, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->isBrightOrDim()Z

    .line 178
    .line 179
    .line 180
    move-result v9

    .line 181
    if-eqz v9, :cond_d

    .line 182
    .line 183
    iget v5, v6, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 184
    .line 185
    if-nez v5, :cond_b

    .line 186
    .line 187
    :cond_a
    :goto_5
    move v5, v2

    .line 188
    goto :goto_7

    .line 189
    :cond_b
    if-eqz v7, :cond_c

    .line 190
    .line 191
    goto :goto_5

    .line 192
    :cond_c
    :goto_6
    move v5, v1

    .line 193
    goto :goto_7

    .line 194
    :cond_d
    iget-object v6, v6, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 195
    .line 196
    iget v7, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 197
    .line 198
    if-ne v7, v1, :cond_a

    .line 199
    .line 200
    iget v6, v6, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->dozeScreenState:I

    .line 201
    .line 202
    if-ne v6, v5, :cond_a

    .line 203
    .line 204
    if-eqz v8, :cond_a

    .line 205
    .line 206
    goto :goto_6

    .line 207
    :goto_7
    sget-boolean v6, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_SUPPORT_AOD:Z

    .line 208
    .line 209
    if-eqz v6, :cond_e

    .line 210
    .line 211
    sget-boolean v6, Lcom/android/server/power/PowerManagerUtil;->SEC_FEATURE_SUPPORT_LEGACY_MISC_POWER_HAL:Z

    .line 212
    .line 213
    if-eqz v6, :cond_e

    .line 214
    .line 215
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

    .line 216
    .line 217
    if-eqz v6, :cond_e

    .line 218
    .line 219
    iget-boolean v6, v6, Lcom/android/server/power/ScreenCurtainController;->mScreenCurtainEnabled:Z

    .line 220
    .line 221
    if-eqz v6, :cond_e

    .line 222
    .line 223
    move v5, v2

    .line 224
    :cond_e
    if-nez v4, :cond_f

    .line 225
    .line 226
    iget-boolean v6, p0, Lcom/android/server/power/PowerManagerService;->mDecoupleHalAutoSuspendModeFromDisplayConfig:Z

    .line 227
    .line 228
    if-eqz v6, :cond_f

    .line 229
    .line 230
    invoke-virtual {p0, v2}, Lcom/android/server/power/PowerManagerService;->setHalAutoSuspendModeLocked(Z)V

    .line 231
    .line 232
    .line 233
    :cond_f
    iget-boolean v6, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 234
    .line 235
    const-string/jumbo v7, "unknown"

    .line 236
    .line 237
    .line 238
    iget-object v8, p0, Lcom/android/server/power/PowerManagerService;->mBootingSuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 239
    .line 240
    if-nez v6, :cond_10

    .line 241
    .line 242
    iget-boolean v6, p0, Lcom/android/server/power/PowerManagerService;->mHoldingBootingSuspendBlocker:Z

    .line 243
    .line 244
    if-nez v6, :cond_10

    .line 245
    .line 246
    invoke-virtual {v8, v7}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->acquire(Ljava/lang/String;)V

    .line 247
    .line 248
    .line 249
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mHoldingBootingSuspendBlocker:Z

    .line 250
    .line 251
    :cond_10
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 252
    .line 253
    if-eqz v0, :cond_11

    .line 254
    .line 255
    iget-boolean v9, p0, Lcom/android/server/power/PowerManagerService;->mHoldingWakeLockSuspendBlocker:Z

    .line 256
    .line 257
    if-nez v9, :cond_11

    .line 258
    .line 259
    invoke-virtual {v6, v7}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->acquire(Ljava/lang/String;)V

    .line 260
    .line 261
    .line 262
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mHoldingWakeLockSuspendBlocker:Z

    .line 263
    .line 264
    :cond_11
    const-string v7, "holding display"

    .line 265
    .line 266
    iget-object v9, p0, Lcom/android/server/power/PowerManagerService;->mDisplaySuspendBlocker:Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;

    .line 267
    .line 268
    if-eqz v3, :cond_12

    .line 269
    .line 270
    iget-boolean v10, p0, Lcom/android/server/power/PowerManagerService;->mHoldingDisplaySuspendBlocker:Z

    .line 271
    .line 272
    if-nez v10, :cond_12

    .line 273
    .line 274
    invoke-virtual {v9, v7}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->acquire(Ljava/lang/String;)V

    .line 275
    .line 276
    .line 277
    iput-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mHoldingDisplaySuspendBlocker:Z

    .line 278
    .line 279
    :cond_12
    iget-boolean v10, p0, Lcom/android/server/power/PowerManagerService;->mDecoupleHalInteractiveModeFromDisplayConfig:Z

    .line 280
    .line 281
    if-eqz v10, :cond_14

    .line 282
    .line 283
    if-eqz v5, :cond_13

    .line 284
    .line 285
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->areAllPowerGroupsReadyLocked()Z

    .line 286
    .line 287
    .line 288
    move-result v10

    .line 289
    if-eqz v10, :cond_14

    .line 290
    .line 291
    iget-boolean v10, p0, Lcom/android/server/power/PowerManagerService;->mDefaultDisplayReadyByProximity:Z

    .line 292
    .line 293
    if-eqz v10, :cond_14

    .line 294
    .line 295
    :cond_13
    invoke-virtual {p0, v5}, Lcom/android/server/power/PowerManagerService;->setHalInteractiveModeLocked(Z)V

    .line 296
    .line 297
    .line 298
    :cond_14
    iget-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 299
    .line 300
    if-eqz v5, :cond_15

    .line 301
    .line 302
    iget-boolean v5, p0, Lcom/android/server/power/PowerManagerService;->mHoldingBootingSuspendBlocker:Z

    .line 303
    .line 304
    if-eqz v5, :cond_15

    .line 305
    .line 306
    invoke-virtual {v8}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->release()V

    .line 307
    .line 308
    .line 309
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mHoldingBootingSuspendBlocker:Z

    .line 310
    .line 311
    :cond_15
    if-nez v0, :cond_16

    .line 312
    .line 313
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mHoldingWakeLockSuspendBlocker:Z

    .line 314
    .line 315
    if-eqz v0, :cond_16

    .line 316
    .line 317
    invoke-virtual {v6}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->release()V

    .line 318
    .line 319
    .line 320
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mHoldingWakeLockSuspendBlocker:Z

    .line 321
    .line 322
    :cond_16
    if-nez v3, :cond_17

    .line 323
    .line 324
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mHoldingDisplaySuspendBlocker:Z

    .line 325
    .line 326
    if-eqz v0, :cond_17

    .line 327
    .line 328
    invoke-virtual {v9, v7}, Lcom/android/server/power/PowerManagerService$SuspendBlockerImpl;->release(Ljava/lang/String;)V

    .line 329
    .line 330
    .line 331
    iput-boolean v2, p0, Lcom/android/server/power/PowerManagerService;->mHoldingDisplaySuspendBlocker:Z

    .line 332
    .line 333
    :cond_17
    if-eqz v4, :cond_18

    .line 334
    .line 335
    iget-boolean v0, p0, Lcom/android/server/power/PowerManagerService;->mDecoupleHalAutoSuspendModeFromDisplayConfig:Z

    .line 336
    .line 337
    if-eqz v0, :cond_18

    .line 338
    .line 339
    invoke-virtual {p0, v1}, Lcom/android/server/power/PowerManagerService;->setHalAutoSuspendModeLocked(Z)V

    .line 340
    .line 341
    .line 342
    :cond_18
    return-void
.end method

.method public final updateUserActivitySummaryLocked(IJ)V
    .locals 38

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-wide/from16 v1, p2

    .line 4
    .line 5
    const v3, 0x14027

    .line 6
    .line 7
    .line 8
    and-int v3, p1, v3

    .line 9
    .line 10
    if-nez v3, :cond_0

    .line 11
    .line 12
    return-void

    .line 13
    :cond_0
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    .line 14
    .line 15
    const/4 v4, 0x1

    .line 16
    invoke-virtual {v3, v4}, Landroid/os/Handler;->removeMessages(I)V

    .line 17
    .line 18
    .line 19
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->getAttentiveTimeoutLocked()J

    .line 20
    .line 21
    .line 22
    move-result-wide v5

    .line 23
    invoke-virtual {v0, v5, v6}, Lcom/android/server/power/PowerManagerService;->getSleepTimeoutLocked(J)J

    .line 24
    .line 25
    .line 26
    move-result-wide v7

    .line 27
    invoke-virtual {v0, v7, v8, v5, v6}, Lcom/android/server/power/PowerManagerService;->getScreenOffTimeoutLocked(JJ)J

    .line 28
    .line 29
    .line 30
    move-result-wide v5

    .line 31
    invoke-virtual {v0, v5, v6}, Lcom/android/server/power/PowerManagerService;->getScreenDimDurationLocked(J)J

    .line 32
    .line 33
    .line 34
    move-result-wide v9

    .line 35
    iget-boolean v11, v0, Lcom/android/server/power/PowerManagerService;->mUserInactiveOverrideFromWindowManager:Z

    .line 36
    .line 37
    const/4 v15, 0x0

    .line 38
    const-wide/16 v16, -0x1

    .line 39
    .line 40
    const/16 v18, 0x0

    .line 41
    .line 42
    :goto_0
    iget-object v12, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 43
    .line 44
    invoke-virtual {v12}, Landroid/util/SparseArray;->size()I

    .line 45
    .line 46
    .line 47
    move-result v12

    .line 48
    const-wide/16 v19, 0x0

    .line 49
    .line 50
    if-ge v15, v12, :cond_28

    .line 51
    .line 52
    iget-object v12, v0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 53
    .line 54
    invoke-virtual {v12, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 55
    .line 56
    .line 57
    move-result-object v12

    .line 58
    check-cast v12, Lcom/android/server/power/PowerGroup;

    .line 59
    .line 60
    iget v13, v12, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 61
    .line 62
    iget v14, v12, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 63
    .line 64
    move-wide/from16 v21, v7

    .line 65
    .line 66
    if-nez v13, :cond_1

    .line 67
    .line 68
    invoke-virtual {v0, v5, v6, v9, v10}, Lcom/android/server/power/PowerManagerService;->getScreenOffTimeoutOverrideLocked(JJ)J

    .line 69
    .line 70
    .line 71
    move-result-wide v7

    .line 72
    invoke-virtual {v0, v7, v8}, Lcom/android/server/power/PowerManagerService;->getScreenDimDurationLocked(J)J

    .line 73
    .line 74
    .line 75
    move-result-wide v23

    .line 76
    goto :goto_1

    .line 77
    :cond_1
    move-wide v7, v5

    .line 78
    move-wide/from16 v23, v9

    .line 79
    .line 80
    :goto_1
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mIsDualViewMode:Z

    .line 81
    .line 82
    move-wide/from16 v25, v5

    .line 83
    .line 84
    const/4 v5, 0x2

    .line 85
    iget v6, v12, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 86
    .line 87
    if-eqz v4, :cond_3

    .line 88
    .line 89
    if-ne v6, v5, :cond_3

    .line 90
    .line 91
    iget v4, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffTimeoutForDex:I

    .line 92
    .line 93
    int-to-long v7, v4

    .line 94
    move/from16 v27, v6

    .line 95
    .line 96
    iget-wide v5, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutForDexOverrideFromWindowManager:J

    .line 97
    .line 98
    cmp-long v23, v5, v19

    .line 99
    .line 100
    if-ltz v23, :cond_2

    .line 101
    .line 102
    invoke-static {v7, v8, v5, v6}, Ljava/lang/Math;->min(JJ)J

    .line 103
    .line 104
    .line 105
    move-result-wide v5

    .line 106
    move-wide v7, v5

    .line 107
    :cond_2
    move-wide/from16 v5, v19

    .line 108
    .line 109
    goto :goto_2

    .line 110
    :cond_3
    move/from16 v27, v6

    .line 111
    .line 112
    move-wide/from16 v5, v23

    .line 113
    .line 114
    :goto_2
    if-eqz v14, :cond_20

    .line 115
    .line 116
    move-wide/from16 v28, v5

    .line 117
    .line 118
    iget-wide v4, v12, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 119
    .line 120
    move-wide/from16 v30, v7

    .line 121
    .line 122
    iget-wide v6, v12, Lcom/android/server/power/PowerGroup;->mLastUserActivityTimeNoChangeLights:J

    .line 123
    .line 124
    move-wide/from16 v32, v9

    .line 125
    .line 126
    iget-wide v8, v12, Lcom/android/server/power/PowerGroup;->mLastWakeTime:J

    .line 127
    .line 128
    cmp-long v14, v4, v8

    .line 129
    .line 130
    if-ltz v14, :cond_6

    .line 131
    .line 132
    add-long v34, v4, v30

    .line 133
    .line 134
    sub-long v36, v34, v28

    .line 135
    .line 136
    cmp-long v14, v1, v36

    .line 137
    .line 138
    if-gez v14, :cond_4

    .line 139
    .line 140
    move-wide/from16 v34, v36

    .line 141
    .line 142
    const/4 v14, 0x1

    .line 143
    goto :goto_4

    .line 144
    :cond_4
    cmp-long v14, v1, v34

    .line 145
    .line 146
    if-gez v14, :cond_5

    .line 147
    .line 148
    cmp-long v14, v4, v6

    .line 149
    .line 150
    if-ltz v14, :cond_5

    .line 151
    .line 152
    const/4 v14, 0x2

    .line 153
    goto :goto_4

    .line 154
    :cond_5
    :goto_3
    const/4 v14, 0x0

    .line 155
    goto :goto_4

    .line 156
    :cond_6
    move-wide/from16 v34, v19

    .line 157
    .line 158
    goto :goto_3

    .line 159
    :goto_4
    if-nez v14, :cond_9

    .line 160
    .line 161
    cmp-long v8, v6, v8

    .line 162
    .line 163
    if-ltz v8, :cond_9

    .line 164
    .line 165
    add-long v8, v6, v30

    .line 166
    .line 167
    cmp-long v24, v1, v8

    .line 168
    .line 169
    if-gez v24, :cond_8

    .line 170
    .line 171
    iget-object v10, v12, Lcom/android/server/power/PowerGroup;->mDisplayPowerRequest:Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;

    .line 172
    .line 173
    iget v10, v10, Landroid/hardware/display/DisplayManagerInternal$DisplayPowerRequest;->policy:I

    .line 174
    .line 175
    move/from16 v30, v14

    .line 176
    .line 177
    const/4 v14, 0x3

    .line 178
    if-ne v10, v14, :cond_7

    .line 179
    .line 180
    iput-wide v6, v12, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 181
    .line 182
    const/4 v10, 0x1

    .line 183
    iput v10, v12, Lcom/android/server/power/PowerGroup;->mLastUserActivityEvent:I

    .line 184
    .line 185
    sub-long v8, v8, v28

    .line 186
    .line 187
    const/16 v30, 0x1

    .line 188
    .line 189
    goto :goto_5

    .line 190
    :cond_7
    const/4 v14, 0x2

    .line 191
    if-ne v10, v14, :cond_a

    .line 192
    .line 193
    const/16 v30, 0x2

    .line 194
    .line 195
    goto :goto_5

    .line 196
    :cond_8
    move/from16 v30, v14

    .line 197
    .line 198
    goto :goto_5

    .line 199
    :cond_9
    move/from16 v30, v14

    .line 200
    .line 201
    move-wide/from16 v8, v34

    .line 202
    .line 203
    :cond_a
    :goto_5
    if-nez v30, :cond_e

    .line 204
    .line 205
    cmp-long v14, v21, v19

    .line 206
    .line 207
    if-ltz v14, :cond_d

    .line 208
    .line 209
    invoke-static {v4, v5, v6, v7}, Ljava/lang/Math;->max(JJ)J

    .line 210
    .line 211
    .line 212
    move-result-wide v4

    .line 213
    iget-wide v6, v12, Lcom/android/server/power/PowerGroup;->mLastWakeTime:J

    .line 214
    .line 215
    cmp-long v6, v4, v6

    .line 216
    .line 217
    if-ltz v6, :cond_c

    .line 218
    .line 219
    add-long v4, v4, v21

    .line 220
    .line 221
    cmp-long v6, v1, v4

    .line 222
    .line 223
    if-gez v6, :cond_b

    .line 224
    .line 225
    const/4 v6, 0x4

    .line 226
    goto :goto_7

    .line 227
    :cond_b
    :goto_6
    move/from16 v6, v30

    .line 228
    .line 229
    goto :goto_7

    .line 230
    :cond_c
    move-wide v4, v8

    .line 231
    goto :goto_6

    .line 232
    :goto_7
    move-wide v8, v4

    .line 233
    move v4, v6

    .line 234
    :goto_8
    const/4 v5, 0x4

    .line 235
    goto :goto_9

    .line 236
    :cond_d
    const/4 v4, 0x4

    .line 237
    const/4 v5, 0x4

    .line 238
    const-wide/16 v8, -0x1

    .line 239
    .line 240
    goto :goto_9

    .line 241
    :cond_e
    move/from16 v4, v30

    .line 242
    .line 243
    goto :goto_8

    .line 244
    :goto_9
    if-eq v4, v5, :cond_10

    .line 245
    .line 246
    if-eqz v11, :cond_10

    .line 247
    .line 248
    and-int/lit8 v4, v4, 0x3

    .line 249
    .line 250
    if-eqz v4, :cond_f

    .line 251
    .line 252
    iget-wide v4, v0, Lcom/android/server/power/PowerManagerService;->mOverriddenTimeout:J

    .line 253
    .line 254
    const-wide/16 v19, -0x1

    .line 255
    .line 256
    cmp-long v4, v4, v19

    .line 257
    .line 258
    if-nez v4, :cond_f

    .line 259
    .line 260
    iput-wide v8, v0, Lcom/android/server/power/PowerManagerService;->mOverriddenTimeout:J

    .line 261
    .line 262
    :cond_f
    const/4 v4, 0x4

    .line 263
    const-wide/16 v8, -0x1

    .line 264
    .line 265
    :cond_10
    and-int/lit8 v5, v4, 0x1

    .line 266
    .line 267
    if-eqz v5, :cond_11

    .line 268
    .line 269
    iget v5, v12, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 270
    .line 271
    and-int/lit8 v5, v5, 0x20

    .line 272
    .line 273
    if-nez v5, :cond_11

    .line 274
    .line 275
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mAttentionDetector:Lcom/android/server/power/AttentionDetector;

    .line 276
    .line 277
    iget-wide v6, v5, Lcom/android/server/power/AttentionDetector;->mLastActedOnNextScreenDimming:J

    .line 278
    .line 279
    cmp-long v6, v8, v6

    .line 280
    .line 281
    if-eqz v6, :cond_11

    .line 282
    .line 283
    iget-boolean v6, v5, Lcom/android/server/power/AttentionDetector;->mIsSettingEnabled:Z

    .line 284
    .line 285
    if-eqz v6, :cond_11

    .line 286
    .line 287
    invoke-virtual {v5}, Lcom/android/server/power/AttentionDetector;->isAttentionServiceSupported()Z

    .line 288
    .line 289
    .line 290
    move-result v6

    .line 291
    if-eqz v6, :cond_11

    .line 292
    .line 293
    iget-object v6, v5, Lcom/android/server/power/AttentionDetector;->mWindowManager:Lcom/android/server/wm/WindowManagerInternal;

    .line 294
    .line 295
    invoke-virtual {v6}, Lcom/android/server/wm/WindowManagerInternal;->isKeyguardShowingAndNotOccluded()Z

    .line 296
    .line 297
    .line 298
    move-result v6

    .line 299
    if-eqz v6, :cond_12

    .line 300
    .line 301
    :cond_11
    move-object/from16 v34, v3

    .line 302
    .line 303
    move/from16 v19, v4

    .line 304
    .line 305
    move/from16 v31, v11

    .line 306
    .line 307
    move/from16 v30, v15

    .line 308
    .line 309
    :goto_a
    move-wide/from16 v14, v28

    .line 310
    .line 311
    const/4 v4, 0x0

    .line 312
    goto/16 :goto_d

    .line 313
    .line 314
    :cond_12
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 315
    .line 316
    .line 317
    move-result-wide v6

    .line 318
    move v14, v11

    .line 319
    iget-wide v10, v5, Lcom/android/server/power/AttentionDetector;->mPreDimCheckDurationMillis:J

    .line 320
    .line 321
    sub-long v10, v8, v10

    .line 322
    .line 323
    move/from16 v31, v14

    .line 324
    .line 325
    move/from16 v30, v15

    .line 326
    .line 327
    iget-wide v14, v5, Lcom/android/server/power/AttentionDetector;->mLastUserActivityTime:J

    .line 328
    .line 329
    move-object/from16 v34, v3

    .line 330
    .line 331
    move/from16 v19, v4

    .line 332
    .line 333
    iget-wide v3, v5, Lcom/android/server/power/AttentionDetector;->mMaximumExtensionMillis:J

    .line 334
    .line 335
    add-long/2addr v14, v3

    .line 336
    cmp-long v3, v6, v10

    .line 337
    .line 338
    if-gez v3, :cond_13

    .line 339
    .line 340
    :goto_b
    move-wide v8, v10

    .line 341
    goto :goto_a

    .line 342
    :cond_13
    cmp-long v3, v14, v10

    .line 343
    .line 344
    if-gez v3, :cond_14

    .line 345
    .line 346
    goto :goto_a

    .line 347
    :cond_14
    iget-object v3, v5, Lcom/android/server/power/AttentionDetector;->mRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 348
    .line 349
    invoke-virtual {v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 350
    .line 351
    .line 352
    move-result v3

    .line 353
    if-eqz v3, :cond_15

    .line 354
    .line 355
    goto :goto_b

    .line 356
    :cond_15
    iget-object v3, v5, Lcom/android/server/power/AttentionDetector;->mRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 357
    .line 358
    const/4 v4, 0x1

    .line 359
    invoke-virtual {v3, v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 360
    .line 361
    .line 362
    iget v3, v5, Lcom/android/server/power/AttentionDetector;->mRequestId:I

    .line 363
    .line 364
    add-int/2addr v3, v4

    .line 365
    iput v3, v5, Lcom/android/server/power/AttentionDetector;->mRequestId:I

    .line 366
    .line 367
    iput-wide v8, v5, Lcom/android/server/power/AttentionDetector;->mLastActedOnNextScreenDimming:J

    .line 368
    .line 369
    new-instance v3, Lcom/android/server/power/AttentionDetector$AttentionCallbackInternalImpl;

    .line 370
    .line 371
    iget v4, v5, Lcom/android/server/power/AttentionDetector;->mRequestId:I

    .line 372
    .line 373
    invoke-direct {v3, v5, v4}, Lcom/android/server/power/AttentionDetector$AttentionCallbackInternalImpl;-><init>(Lcom/android/server/power/AttentionDetector;I)V

    .line 374
    .line 375
    .line 376
    iput-object v3, v5, Lcom/android/server/power/AttentionDetector;->mCallback:Lcom/android/server/power/AttentionDetector$AttentionCallbackInternalImpl;

    .line 377
    .line 378
    iget-wide v3, v5, Lcom/android/server/power/AttentionDetector;->mRequestedPostDimTimeoutMillis:J

    .line 379
    .line 380
    move-wide/from16 v14, v28

    .line 381
    .line 382
    invoke-static {v3, v4, v14, v15}, Ljava/lang/Math;->min(JJ)J

    .line 383
    .line 384
    .line 385
    move-result-wide v3

    .line 386
    iput-wide v3, v5, Lcom/android/server/power/AttentionDetector;->mEffectivePostDimTimeoutMillis:J

    .line 387
    .line 388
    new-instance v3, Ljava/lang/StringBuilder;

    .line 389
    .line 390
    const-string v4, "Checking user attention, ID: "

    .line 391
    .line 392
    invoke-direct {v3, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 393
    .line 394
    .line 395
    iget v4, v5, Lcom/android/server/power/AttentionDetector;->mRequestId:I

    .line 396
    .line 397
    const-string v6, "AttentionDetector"

    .line 398
    .line 399
    invoke-static {v3, v4, v6}, Lcom/android/server/alarm/GmsAlarmManager$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 400
    .line 401
    .line 402
    iget-object v3, v5, Lcom/android/server/power/AttentionDetector;->mAttentionManager:Landroid/attention/AttentionManagerInternal;

    .line 403
    .line 404
    iget-wide v6, v5, Lcom/android/server/power/AttentionDetector;->mPreDimCheckDurationMillis:J

    .line 405
    .line 406
    iget-wide v8, v5, Lcom/android/server/power/AttentionDetector;->mEffectivePostDimTimeoutMillis:J

    .line 407
    .line 408
    add-long/2addr v6, v8

    .line 409
    iget-object v4, v5, Lcom/android/server/power/AttentionDetector;->mCallback:Lcom/android/server/power/AttentionDetector$AttentionCallbackInternalImpl;

    .line 410
    .line 411
    invoke-virtual {v3, v6, v7, v4}, Landroid/attention/AttentionManagerInternal;->checkAttention(JLandroid/attention/AttentionManagerInternal$AttentionCallbackInternal;)Z

    .line 412
    .line 413
    .line 414
    move-result v3

    .line 415
    if-nez v3, :cond_16

    .line 416
    .line 417
    iget-object v3, v5, Lcom/android/server/power/AttentionDetector;->mRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 418
    .line 419
    const/4 v4, 0x0

    .line 420
    invoke-virtual {v3, v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 421
    .line 422
    .line 423
    goto :goto_c

    .line 424
    :cond_16
    const/4 v4, 0x0

    .line 425
    :goto_c
    move-wide v8, v10

    .line 426
    :goto_d
    invoke-virtual {v0, v12, v1, v2}, Lcom/android/server/power/PowerManagerService;->isAttentiveTimeoutExpired(Lcom/android/server/power/PowerGroup;J)Z

    .line 427
    .line 428
    .line 429
    move-result v3

    .line 430
    if-eqz v3, :cond_17

    .line 431
    .line 432
    move v3, v4

    .line 433
    const-wide/16 v8, -0x1

    .line 434
    .line 435
    goto :goto_e

    .line 436
    :cond_17
    move/from16 v3, v19

    .line 437
    .line 438
    :goto_e
    iget-boolean v5, v0, Lcom/android/server/power/PowerManagerService;->mSmartStayEnabledSetting:Z

    .line 439
    .line 440
    if-eqz v5, :cond_1c

    .line 441
    .line 442
    if-nez v27, :cond_1c

    .line 443
    .line 444
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mSmartStayController:Lcom/android/server/power/SmartStayController;

    .line 445
    .line 446
    iget v6, v12, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 447
    .line 448
    iput v3, v5, Lcom/android/server/power/SmartStayController;->mUserActivitySummary:I

    .line 449
    .line 450
    iget v7, v5, Lcom/android/server/power/SmartStayController;->mWakefulness:I

    .line 451
    .line 452
    const/4 v10, 0x1

    .line 453
    if-ne v7, v10, :cond_1c

    .line 454
    .line 455
    and-int/lit8 v7, v3, 0x1

    .line 456
    .line 457
    if-nez v7, :cond_18

    .line 458
    .line 459
    goto :goto_f

    .line 460
    :cond_18
    iget-object v7, v5, Lcom/android/server/power/SmartStayController;->mSmartFaceManagerWrapper:Lcom/android/server/power/SmartStayController$SmartFaceManagerWrapper;

    .line 461
    .line 462
    invoke-virtual {v7}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 463
    .line 464
    .line 465
    const-wide/16 v10, 0xabe

    .line 466
    .line 467
    sub-long v10, v8, v10

    .line 468
    .line 469
    cmp-long v7, v1, v10

    .line 470
    .line 471
    if-gez v7, :cond_19

    .line 472
    .line 473
    move-wide v8, v10

    .line 474
    goto :goto_f

    .line 475
    :cond_19
    iget-object v7, v5, Lcom/android/server/power/SmartStayController;->mFaceDetectRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 476
    .line 477
    invoke-virtual {v7}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    .line 478
    .line 479
    .line 480
    move-result v7

    .line 481
    if-eqz v7, :cond_1a

    .line 482
    .line 483
    goto :goto_f

    .line 484
    :cond_1a
    const/4 v7, 0x2

    .line 485
    and-int/2addr v6, v7

    .line 486
    if-eqz v6, :cond_1b

    .line 487
    .line 488
    goto :goto_f

    .line 489
    :cond_1b
    iget-object v6, v5, Lcom/android/server/power/SmartStayController;->mFaceDetectRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 490
    .line 491
    const/4 v10, 0x1

    .line 492
    invoke-virtual {v6, v10}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 493
    .line 494
    .line 495
    iget-object v6, v5, Lcom/android/server/power/SmartStayController;->mSmartStayHandler:Landroid/os/Handler;

    .line 496
    .line 497
    new-instance v10, Lcom/android/server/power/SmartStayController$$ExternalSyntheticLambda0;

    .line 498
    .line 499
    invoke-direct {v10, v5}, Lcom/android/server/power/SmartStayController$$ExternalSyntheticLambda0;-><init>(Lcom/android/server/power/SmartStayController;)V

    .line 500
    .line 501
    .line 502
    iget-object v5, v5, Lcom/android/server/power/SmartStayController;->mClock:Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda10;

    .line 503
    .line 504
    invoke-virtual {v5}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 505
    .line 506
    .line 507
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 508
    .line 509
    .line 510
    move-result-wide v4

    .line 511
    invoke-virtual {v6, v10, v4, v5}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 512
    .line 513
    .line 514
    :cond_1c
    :goto_f
    if-eqz v3, :cond_1d

    .line 515
    .line 516
    const/4 v4, 0x1

    .line 517
    goto :goto_10

    .line 518
    :cond_1d
    const/4 v4, 0x0

    .line 519
    :goto_10
    or-int v18, v18, v4

    .line 520
    .line 521
    move-wide/from16 v4, v16

    .line 522
    .line 523
    const-wide/16 v10, -0x1

    .line 524
    .line 525
    cmp-long v6, v4, v10

    .line 526
    .line 527
    if-nez v6, :cond_1e

    .line 528
    .line 529
    move-wide/from16 v16, v8

    .line 530
    .line 531
    goto :goto_11

    .line 532
    :cond_1e
    cmp-long v6, v8, v10

    .line 533
    .line 534
    if-eqz v6, :cond_1f

    .line 535
    .line 536
    invoke-static {v4, v5, v8, v9}, Ljava/lang/Math;->min(JJ)J

    .line 537
    .line 538
    .line 539
    move-result-wide v16

    .line 540
    goto :goto_11

    .line 541
    :cond_1f
    move-wide/from16 v16, v4

    .line 542
    .line 543
    goto :goto_11

    .line 544
    :cond_20
    move-object/from16 v34, v3

    .line 545
    .line 546
    move-wide/from16 v32, v9

    .line 547
    .line 548
    move/from16 v31, v11

    .line 549
    .line 550
    move/from16 v30, v15

    .line 551
    .line 552
    move-wide v14, v5

    .line 553
    move-wide/from16 v4, v16

    .line 554
    .line 555
    const/4 v3, 0x0

    .line 556
    :goto_11
    iget v4, v12, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 557
    .line 558
    if-eq v4, v3, :cond_27

    .line 559
    .line 560
    iget-boolean v4, v0, Lcom/android/server/power/PowerManagerService;->mBootCompleted:Z

    .line 561
    .line 562
    if-eqz v4, :cond_25

    .line 563
    .line 564
    if-eqz v13, :cond_21

    .line 565
    .line 566
    goto :goto_12

    .line 567
    :cond_21
    new-instance v4, Landroid/content/Intent;

    .line 568
    .line 569
    const-string v5, "com.samsung.server.PowerManagerService.action.USER_ACTIVITY"

    .line 570
    .line 571
    invoke-direct {v4, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 572
    .line 573
    .line 574
    iget-object v5, v0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 575
    .line 576
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 577
    .line 578
    if-eqz v3, :cond_24

    .line 579
    .line 580
    const/4 v6, 0x1

    .line 581
    if-eq v3, v6, :cond_23

    .line 582
    .line 583
    const/4 v6, 0x2

    .line 584
    if-eq v3, v6, :cond_22

    .line 585
    .line 586
    const/4 v6, 0x4

    .line 587
    if-eq v3, v6, :cond_24

    .line 588
    .line 589
    goto :goto_12

    .line 590
    :cond_22
    new-instance v7, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda6;

    .line 591
    .line 592
    invoke-direct {v7, v0, v4, v14, v15}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda6;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/content/Intent;J)V

    .line 593
    .line 594
    .line 595
    invoke-virtual {v8}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 596
    .line 597
    .line 598
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 599
    .line 600
    .line 601
    move-result-wide v8

    .line 602
    invoke-virtual {v5, v7, v8, v9}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 603
    .line 604
    .line 605
    goto :goto_12

    .line 606
    :cond_23
    new-instance v7, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda5;

    .line 607
    .line 608
    const/4 v9, 0x0

    .line 609
    invoke-direct {v7, v0, v4, v9}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda5;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/content/Intent;I)V

    .line 610
    .line 611
    .line 612
    invoke-virtual {v8}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 613
    .line 614
    .line 615
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 616
    .line 617
    .line 618
    move-result-wide v8

    .line 619
    invoke-virtual {v5, v7, v8, v9}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 620
    .line 621
    .line 622
    goto :goto_12

    .line 623
    :cond_24
    new-instance v7, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda5;

    .line 624
    .line 625
    const/4 v9, 0x1

    .line 626
    invoke-direct {v7, v0, v4, v9}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda5;-><init>(Lcom/android/server/power/PowerManagerService;Landroid/content/Intent;I)V

    .line 627
    .line 628
    .line 629
    invoke-virtual {v8}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 630
    .line 631
    .line 632
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 633
    .line 634
    .line 635
    move-result-wide v8

    .line 636
    invoke-virtual {v5, v7, v8, v9}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 637
    .line 638
    .line 639
    :cond_25
    :goto_12
    new-instance v4, Ljava/lang/StringBuilder;

    .line 640
    .line 641
    const-string v5, "UserActivityState : "

    .line 642
    .line 643
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 644
    .line 645
    .line 646
    iget v5, v12, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 647
    .line 648
    const-string v7, " -> "

    .line 649
    .line 650
    const-string v8, " groupId="

    .line 651
    .line 652
    invoke-static {v5, v3, v7, v8, v4}, Lcom/android/server/ServiceKeeper$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 653
    .line 654
    .line 655
    const-string v5, "PowerManagerService"

    .line 656
    .line 657
    invoke-static {v4, v13, v5}, Lcom/android/server/BatteryService$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V

    .line 658
    .line 659
    .line 660
    if-nez v13, :cond_27

    .line 661
    .line 662
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mPrintWakeLockAperiodicallyRunnable:Lcom/android/server/power/PowerManagerService$6;

    .line 663
    .line 664
    const/4 v5, 0x4

    .line 665
    if-ne v3, v5, :cond_26

    .line 666
    .line 667
    const-wide/16 v5, -0x1

    .line 668
    .line 669
    cmp-long v7, v16, v5

    .line 670
    .line 671
    if-nez v7, :cond_26

    .line 672
    .line 673
    invoke-virtual {v0, v12}, Lcom/android/server/power/PowerManagerService;->isBeingKeptAwakeLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 674
    .line 675
    .line 676
    move-result v5

    .line 677
    if-eqz v5, :cond_26

    .line 678
    .line 679
    move-object/from16 v6, v34

    .line 680
    .line 681
    invoke-virtual {v6, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 682
    .line 683
    .line 684
    goto :goto_13

    .line 685
    :cond_26
    move-object/from16 v6, v34

    .line 686
    .line 687
    invoke-virtual {v6, v4}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 688
    .line 689
    .line 690
    goto :goto_13

    .line 691
    :cond_27
    move-object/from16 v6, v34

    .line 692
    .line 693
    :goto_13
    iput v3, v12, Lcom/android/server/power/PowerGroup;->mUserActivitySummary:I

    .line 694
    .line 695
    add-int/lit8 v15, v30, 0x1

    .line 696
    .line 697
    move-object v3, v6

    .line 698
    move-wide/from16 v7, v21

    .line 699
    .line 700
    move-wide/from16 v5, v25

    .line 701
    .line 702
    move/from16 v11, v31

    .line 703
    .line 704
    move-wide/from16 v9, v32

    .line 705
    .line 706
    const/4 v4, 0x1

    .line 707
    goto/16 :goto_0

    .line 708
    .line 709
    :cond_28
    move-object v6, v3

    .line 710
    move-wide/from16 v4, v16

    .line 711
    .line 712
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 713
    .line 714
    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    .line 715
    .line 716
    .line 717
    move-result v3

    .line 718
    const-wide/16 v7, -0x1

    .line 719
    .line 720
    const/4 v12, 0x0

    .line 721
    :goto_14
    if-ge v12, v3, :cond_2d

    .line 722
    .line 723
    iget-object v9, v0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 724
    .line 725
    invoke-virtual {v9, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 726
    .line 727
    .line 728
    move-result-object v9

    .line 729
    check-cast v9, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 730
    .line 731
    iget-wide v10, v9, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mLastUserActivityTime:J

    .line 732
    .line 733
    iget-wide v13, v9, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeout:J

    .line 734
    .line 735
    add-long/2addr v13, v10

    .line 736
    cmp-long v15, v13, v1

    .line 737
    .line 738
    if-lez v15, :cond_2a

    .line 739
    .line 740
    const-wide/16 v15, -0x1

    .line 741
    .line 742
    cmp-long v17, v7, v15

    .line 743
    .line 744
    if-eqz v17, :cond_29

    .line 745
    .line 746
    cmp-long v15, v13, v7

    .line 747
    .line 748
    if-gez v15, :cond_2a

    .line 749
    .line 750
    :cond_29
    move-wide v7, v13

    .line 751
    :cond_2a
    iget-wide v13, v9, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mScreenOffTimeoutForUser:J

    .line 752
    .line 753
    add-long/2addr v10, v13

    .line 754
    cmp-long v9, v10, v1

    .line 755
    .line 756
    const-wide/16 v13, -0x1

    .line 757
    .line 758
    if-lez v9, :cond_2c

    .line 759
    .line 760
    cmp-long v9, v7, v13

    .line 761
    .line 762
    if-eqz v9, :cond_2b

    .line 763
    .line 764
    cmp-long v9, v10, v7

    .line 765
    .line 766
    if-gez v9, :cond_2c

    .line 767
    .line 768
    :cond_2b
    move-wide v7, v10

    .line 769
    :cond_2c
    add-int/lit8 v12, v12, 0x1

    .line 770
    .line 771
    goto :goto_14

    .line 772
    :cond_2d
    cmp-long v0, v7, v19

    .line 773
    .line 774
    if-lez v0, :cond_2e

    .line 775
    .line 776
    invoke-static {v4, v5, v7, v8}, Ljava/lang/Math;->min(JJ)J

    .line 777
    .line 778
    .line 779
    move-result-wide v16

    .line 780
    move-wide/from16 v4, v16

    .line 781
    .line 782
    :cond_2e
    if-eqz v18, :cond_2f

    .line 783
    .line 784
    cmp-long v0, v4, v19

    .line 785
    .line 786
    if-ltz v0, :cond_2f

    .line 787
    .line 788
    const/4 v0, 0x1

    .line 789
    invoke-virtual {v6, v0}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;

    .line 790
    .line 791
    .line 792
    move-result-object v1

    .line 793
    invoke-virtual {v1, v0}, Landroid/os/Message;->setAsynchronous(Z)V

    .line 794
    .line 795
    .line 796
    invoke-virtual {v6, v1, v4, v5}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .line 797
    .line 798
    .line 799
    :cond_2f
    return-void
.end method

.method public final updateWakeLockDisabledStatesLocked()V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 2
    .line 3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    .line 4
    .line 5
    .line 6
    move-result v0

    .line 7
    const/4 v1, 0x0

    .line 8
    move v2, v1

    .line 9
    :goto_0
    const/4 v3, 0x1

    .line 10
    if-ge v1, v0, :cond_3

    .line 11
    .line 12
    iget-object v4, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 13
    .line 14
    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 15
    .line 16
    .line 17
    move-result-object v4

    .line 18
    check-cast v4, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 19
    .line 20
    iget v5, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 21
    .line 22
    const v6, 0xffff

    .line 23
    .line 24
    .line 25
    and-int/2addr v5, v6

    .line 26
    if-eq v5, v3, :cond_0

    .line 27
    .line 28
    invoke-static {v4}, Lcom/android/server/power/PowerManagerService;->isScreenLock(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 29
    .line 30
    .line 31
    move-result v5

    .line 32
    if-eqz v5, :cond_2

    .line 33
    .line 34
    :cond_0
    invoke-virtual {p0, v4}, Lcom/android/server/power/PowerManagerService;->setWakeLockDisabledStateLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)Z

    .line 35
    .line 36
    .line 37
    move-result v5

    .line 38
    if-eqz v5, :cond_2

    .line 39
    .line 40
    iget-boolean v2, v4, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 41
    .line 42
    if-eqz v2, :cond_1

    .line 43
    .line 44
    const/4 v2, -0x1

    .line 45
    invoke-virtual {p0, v4, v2}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockReleasedLocked(Lcom/android/server/power/PowerManagerService$WakeLock;I)V

    .line 46
    .line 47
    .line 48
    goto :goto_1

    .line 49
    :cond_1
    invoke-virtual {p0, v4}, Lcom/android/server/power/PowerManagerService;->notifyWakeLockAcquiredLocked(Lcom/android/server/power/PowerManagerService$WakeLock;)V

    .line 50
    .line 51
    .line 52
    :goto_1
    move v2, v3

    .line 53
    :cond_2
    add-int/lit8 v1, v1, 0x1

    .line 54
    .line 55
    goto :goto_0

    .line 56
    :cond_3
    if-eqz v2, :cond_4

    .line 57
    .line 58
    iget v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 59
    .line 60
    or-int/2addr v0, v3

    .line 61
    iput v0, p0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 62
    .line 63
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 64
    .line 65
    .line 66
    :cond_4
    return-void
.end method

.method public final updateWakeLockSummaryLocked(I)V
    .locals 12

    .line 1
    const v0, 0x10003

    .line 2
    .line 3
    .line 4
    and-int/2addr p1, v0

    .line 5
    if-eqz p1, :cond_15

    .line 6
    .line 7
    const/4 p1, 0x0

    .line 8
    iput p1, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 9
    .line 10
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 11
    .line 12
    invoke-virtual {v0}, Landroid/util/SparseArray;->size()I

    .line 13
    .line 14
    .line 15
    move-result v0

    .line 16
    move v1, p1

    .line 17
    :goto_0
    if-ge v1, v0, :cond_0

    .line 18
    .line 19
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 20
    .line 21
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 22
    .line 23
    .line 24
    move-result-object v2

    .line 25
    check-cast v2, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 26
    .line 27
    iput p1, v2, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mWakeLockSummary:I

    .line 28
    .line 29
    add-int/lit8 v1, v1, 0x1

    .line 30
    .line 31
    goto :goto_0

    .line 32
    :cond_0
    move v1, p1

    .line 33
    :goto_1
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 34
    .line 35
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 36
    .line 37
    .line 38
    move-result v2

    .line 39
    if-ge v1, v2, :cond_1

    .line 40
    .line 41
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 42
    .line 43
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 44
    .line 45
    .line 46
    move-result-object v2

    .line 47
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 48
    .line 49
    iput p1, v2, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 50
    .line 51
    add-int/lit8 v1, v1, 0x1

    .line 52
    .line 53
    goto :goto_1

    .line 54
    :cond_1
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 55
    .line 56
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    .line 57
    .line 58
    .line 59
    move-result v1

    .line 60
    move v2, p1

    .line 61
    move v3, v2

    .line 62
    :goto_2
    const/4 v4, 0x2

    .line 63
    const/4 v5, -0x1

    .line 64
    if-ge v2, v1, :cond_12

    .line 65
    .line 66
    iget-object v6, p0, Lcom/android/server/power/PowerManagerService;->mWakeLocks:Ljava/util/ArrayList;

    .line 67
    .line 68
    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    .line 69
    .line 70
    .line 71
    move-result-object v6

    .line 72
    check-cast v6, Lcom/android/server/power/PowerManagerService$WakeLock;

    .line 73
    .line 74
    invoke-virtual {v6}, Lcom/android/server/power/PowerManagerService$WakeLock;->getPowerGroupId()Ljava/lang/Integer;

    .line 75
    .line 76
    .line 77
    move-result-object v7

    .line 78
    if-eqz v7, :cond_11

    .line 79
    .line 80
    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    .line 81
    .line 82
    .line 83
    move-result v8

    .line 84
    if-eq v8, v5, :cond_2

    .line 85
    .line 86
    iget-object v8, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 87
    .line 88
    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    .line 89
    .line 90
    .line 91
    move-result v9

    .line 92
    invoke-virtual {v8, v9}, Landroid/util/SparseArray;->contains(I)Z

    .line 93
    .line 94
    .line 95
    move-result v8

    .line 96
    if-nez v8, :cond_2

    .line 97
    .line 98
    goto/16 :goto_a

    .line 99
    .line 100
    :cond_2
    iget-object v8, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 101
    .line 102
    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    .line 103
    .line 104
    .line 105
    move-result v9

    .line 106
    invoke-virtual {v8, v9}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 107
    .line 108
    .line 109
    move-result-object v8

    .line 110
    check-cast v8, Lcom/android/server/power/PowerGroup;

    .line 111
    .line 112
    iget-boolean v9, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mDisabled:Z

    .line 113
    .line 114
    if-eqz v9, :cond_4

    .line 115
    .line 116
    :cond_3
    :goto_3
    move v4, p1

    .line 117
    goto :goto_4

    .line 118
    :cond_4
    iget v10, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mFlags:I

    .line 119
    .line 120
    const v11, 0xffff

    .line 121
    .line 122
    .line 123
    and-int/2addr v10, v11

    .line 124
    const/4 v11, 0x1

    .line 125
    if-eq v10, v11, :cond_7

    .line 126
    .line 127
    const/4 v11, 0x6

    .line 128
    if-eq v10, v11, :cond_9

    .line 129
    .line 130
    const/16 v11, 0xa

    .line 131
    .line 132
    if-eq v10, v11, :cond_8

    .line 133
    .line 134
    const/16 v4, 0x1a

    .line 135
    .line 136
    if-eq v10, v4, :cond_6

    .line 137
    .line 138
    const/16 v4, 0x20

    .line 139
    .line 140
    if-eq v10, v4, :cond_5

    .line 141
    .line 142
    const/16 v4, 0x40

    .line 143
    .line 144
    if-eq v10, v4, :cond_a

    .line 145
    .line 146
    const/16 v4, 0x80

    .line 147
    .line 148
    if-eq v10, v4, :cond_a

    .line 149
    .line 150
    const/16 v4, 0x100

    .line 151
    .line 152
    if-eq v10, v4, :cond_a

    .line 153
    .line 154
    goto :goto_3

    .line 155
    :cond_5
    const/16 v4, 0x10

    .line 156
    .line 157
    goto :goto_4

    .line 158
    :cond_6
    if-nez v9, :cond_3

    .line 159
    .line 160
    :cond_7
    move v4, v11

    .line 161
    goto :goto_4

    .line 162
    :cond_8
    if-nez v9, :cond_3

    .line 163
    .line 164
    goto :goto_4

    .line 165
    :cond_9
    if-nez v9, :cond_3

    .line 166
    .line 167
    const/4 v4, 0x4

    .line 168
    :cond_a
    :goto_4
    iget v9, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 169
    .line 170
    or-int/2addr v9, v4

    .line 171
    iput v9, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 172
    .line 173
    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    .line 174
    .line 175
    .line 176
    move-result v7

    .line 177
    if-eq v7, v5, :cond_b

    .line 178
    .line 179
    iget v5, v8, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 180
    .line 181
    or-int/2addr v5, v4

    .line 182
    iput v5, v8, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 183
    .line 184
    goto :goto_5

    .line 185
    :cond_b
    or-int/2addr v3, v4

    .line 186
    :goto_5
    move v5, p1

    .line 187
    :goto_6
    if-ge v5, v0, :cond_11

    .line 188
    .line 189
    iget-object v7, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 190
    .line 191
    invoke-virtual {v7, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 192
    .line 193
    .line 194
    move-result-object v7

    .line 195
    check-cast v7, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 196
    .line 197
    iget v8, v7, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mUserId:I

    .line 198
    .line 199
    iget-object v9, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 200
    .line 201
    if-eqz v9, :cond_f

    .line 202
    .line 203
    move v9, p1

    .line 204
    :goto_7
    iget-object v10, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 205
    .line 206
    invoke-virtual {v10}, Landroid/os/WorkSource;->size()I

    .line 207
    .line 208
    .line 209
    move-result v10

    .line 210
    if-ge v9, v10, :cond_d

    .line 211
    .line 212
    iget-object v10, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 213
    .line 214
    invoke-virtual {v10, v9}, Landroid/os/WorkSource;->getUid(I)I

    .line 215
    .line 216
    .line 217
    move-result v10

    .line 218
    invoke-static {v10}, Landroid/os/UserHandle;->getUserId(I)I

    .line 219
    .line 220
    .line 221
    move-result v10

    .line 222
    if-ne v8, v10, :cond_c

    .line 223
    .line 224
    goto :goto_9

    .line 225
    :cond_c
    add-int/lit8 v9, v9, 0x1

    .line 226
    .line 227
    goto :goto_7

    .line 228
    :cond_d
    iget-object v9, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mWorkSource:Landroid/os/WorkSource;

    .line 229
    .line 230
    invoke-virtual {v9}, Landroid/os/WorkSource;->getWorkChains()Ljava/util/List;

    .line 231
    .line 232
    .line 233
    move-result-object v9

    .line 234
    if-eqz v9, :cond_f

    .line 235
    .line 236
    move v10, p1

    .line 237
    :goto_8
    invoke-interface {v9}, Ljava/util/List;->size()I

    .line 238
    .line 239
    .line 240
    move-result v11

    .line 241
    if-ge v10, v11, :cond_f

    .line 242
    .line 243
    invoke-interface {v9, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    .line 244
    .line 245
    .line 246
    move-result-object v11

    .line 247
    check-cast v11, Landroid/os/WorkSource$WorkChain;

    .line 248
    .line 249
    invoke-virtual {v11}, Landroid/os/WorkSource$WorkChain;->getAttributionUid()I

    .line 250
    .line 251
    .line 252
    move-result v11

    .line 253
    invoke-static {v11}, Landroid/os/UserHandle;->getUserId(I)I

    .line 254
    .line 255
    .line 256
    move-result v11

    .line 257
    if-ne v8, v11, :cond_e

    .line 258
    .line 259
    goto :goto_9

    .line 260
    :cond_e
    add-int/lit8 v10, v10, 0x1

    .line 261
    .line 262
    goto :goto_8

    .line 263
    :cond_f
    iget v9, v6, Lcom/android/server/power/PowerManagerService$WakeLock;->mOwnerUid:I

    .line 264
    .line 265
    invoke-static {v9}, Landroid/os/UserHandle;->getUserId(I)I

    .line 266
    .line 267
    .line 268
    move-result v9

    .line 269
    if-ne v8, v9, :cond_10

    .line 270
    .line 271
    :goto_9
    iget v8, v7, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mWakeLockSummary:I

    .line 272
    .line 273
    or-int/2addr v8, v4

    .line 274
    iput v8, v7, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mWakeLockSummary:I

    .line 275
    .line 276
    :cond_10
    add-int/lit8 v5, v5, 0x1

    .line 277
    .line 278
    goto :goto_6

    .line 279
    :cond_11
    :goto_a
    add-int/lit8 v2, v2, 0x1

    .line 280
    .line 281
    goto/16 :goto_2

    .line 282
    .line 283
    :cond_12
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mScreenTimeoutOverridePolicy:Lcom/android/server/power/ScreenTimeoutOverridePolicy;

    .line 284
    .line 285
    if-eqz v1, :cond_13

    .line 286
    .line 287
    iget v2, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 288
    .line 289
    and-int/lit16 v6, v2, 0x100

    .line 290
    .line 291
    if-eqz v6, :cond_13

    .line 292
    .line 293
    and-int/lit8 v2, v2, 0xe

    .line 294
    .line 295
    if-eqz v2, :cond_13

    .line 296
    .line 297
    invoke-virtual {v1, v4}, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->releaseAllWakeLocks(I)V

    .line 298
    .line 299
    .line 300
    :cond_13
    move v1, p1

    .line 301
    :goto_b
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 302
    .line 303
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    .line 304
    .line 305
    .line 306
    move-result v2

    .line 307
    if-ge v1, v2, :cond_14

    .line 308
    .line 309
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 310
    .line 311
    invoke-virtual {v2, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 312
    .line 313
    .line 314
    move-result-object v2

    .line 315
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 316
    .line 317
    iget v4, v2, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 318
    .line 319
    iget v6, v2, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 320
    .line 321
    or-int/2addr v6, v3

    .line 322
    iget v7, v2, Lcom/android/server/power/PowerGroup;->mLastGoToSleepReason:I

    .line 323
    .line 324
    invoke-static {v4, v6, v7}, Lcom/android/server/power/PowerManagerService;->adjustWakeLockSummary(III)I

    .line 325
    .line 326
    .line 327
    move-result v4

    .line 328
    iput v4, v2, Lcom/android/server/power/PowerGroup;->mWakeLockSummary:I

    .line 329
    .line 330
    add-int/lit8 v1, v1, 0x1

    .line 331
    .line 332
    goto :goto_b

    .line 333
    :cond_14
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 334
    .line 335
    .line 336
    move-result v1

    .line 337
    iget v2, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 338
    .line 339
    invoke-static {v1, v2, v5}, Lcom/android/server/power/PowerManagerService;->adjustWakeLockSummary(III)I

    .line 340
    .line 341
    .line 342
    move-result v1

    .line 343
    iput v1, p0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    .line 344
    .line 345
    :goto_c
    if-ge p1, v0, :cond_15

    .line 346
    .line 347
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mProfilePowerState:Landroid/util/SparseArray;

    .line 348
    .line 349
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 350
    .line 351
    .line 352
    move-result-object v1

    .line 353
    check-cast v1, Lcom/android/server/power/PowerManagerService$ProfilePowerState;

    .line 354
    .line 355
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->getGlobalWakefulnessLocked()I

    .line 356
    .line 357
    .line 358
    move-result v2

    .line 359
    iget v3, v1, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mWakeLockSummary:I

    .line 360
    .line 361
    invoke-static {v2, v3, v5}, Lcom/android/server/power/PowerManagerService;->adjustWakeLockSummary(III)I

    .line 362
    .line 363
    .line 364
    move-result v2

    .line 365
    iput v2, v1, Lcom/android/server/power/PowerManagerService$ProfilePowerState;->mWakeLockSummary:I

    .line 366
    .line 367
    add-int/lit8 p1, p1, 0x1

    .line 368
    .line 369
    goto :goto_c

    .line 370
    :cond_15
    return-void
.end method

.method public final updateWakefulnessLocked(I)Z
    .locals 9

    .line 1
    and-int/lit16 p1, p1, 0x4eb7

    .line 2
    .line 3
    const/4 v0, 0x0

    .line 4
    if-nez p1, :cond_0

    .line 5
    .line 6
    return v0

    .line 7
    :cond_0
    iget-object p1, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 8
    .line 9
    invoke-virtual {p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    .line 11
    .line 12
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 13
    .line 14
    .line 15
    move-result-wide v7

    .line 16
    move p1, v0

    .line 17
    :goto_0
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 18
    .line 19
    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    .line 20
    .line 21
    .line 22
    move-result v1

    .line 23
    if-ge v0, v1, :cond_6

    .line 24
    .line 25
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 26
    .line 27
    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    .line 28
    .line 29
    .line 30
    move-result-object v1

    .line 31
    move-object v2, v1

    .line 32
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 33
    .line 34
    iget v1, v2, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 35
    .line 36
    const/4 v3, 0x1

    .line 37
    if-ne v1, v3, :cond_5

    .line 38
    .line 39
    invoke-virtual {p0, v2}, Lcom/android/server/power/PowerManagerService;->isItBedTimeYetLocked(Lcom/android/server/power/PowerGroup;)Z

    .line 40
    .line 41
    .line 42
    move-result v1

    .line 43
    if-nez v1, :cond_1

    .line 44
    .line 45
    goto :goto_1

    .line 46
    :cond_1
    invoke-virtual {p0, v2, v7, v8}, Lcom/android/server/power/PowerManagerService;->isAttentiveTimeoutExpired(Lcom/android/server/power/PowerGroup;J)Z

    .line 47
    .line 48
    .line 49
    move-result p1

    .line 50
    if-eqz p1, :cond_2

    .line 51
    .line 52
    const/16 v5, 0x9

    .line 53
    .line 54
    const/16 v6, 0x3e8

    .line 55
    .line 56
    move-object v1, p0

    .line 57
    move-wide v3, v7

    .line 58
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->sleepPowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 59
    .line 60
    .line 61
    move-result p1

    .line 62
    goto :goto_1

    .line 63
    :cond_2
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnSleepSetting:Z

    .line 64
    .line 65
    if-nez p1, :cond_3

    .line 66
    .line 67
    iget-boolean p1, p0, Lcom/android/server/power/PowerManagerService;->mDreamsActivateOnDockSetting:Z

    .line 68
    .line 69
    if-eqz p1, :cond_4

    .line 70
    .line 71
    iget p1, p0, Lcom/android/server/power/PowerManagerService;->mDockState:I

    .line 72
    .line 73
    if-eqz p1, :cond_4

    .line 74
    .line 75
    :cond_3
    iget-boolean p1, v2, Lcom/android/server/power/PowerGroup;->mSupportsSandman:Z

    .line 76
    .line 77
    if-eqz p1, :cond_4

    .line 78
    .line 79
    const/16 v5, 0x3e8

    .line 80
    .line 81
    const/4 v6, 0x0

    .line 82
    move-object v1, p0

    .line 83
    move-wide v3, v7

    .line 84
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->dreamPowerGroupLocked(Lcom/android/server/power/PowerGroup;JIZ)Z

    .line 85
    .line 86
    .line 87
    move-result p1

    .line 88
    goto :goto_1

    .line 89
    :cond_4
    const/4 v5, 0x2

    .line 90
    const/16 v6, 0x3e8

    .line 91
    .line 92
    move-object v1, p0

    .line 93
    move-wide v3, v7

    .line 94
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->dozePowerGroupLocked(Lcom/android/server/power/PowerGroup;JII)Z

    .line 95
    .line 96
    .line 97
    move-result p1

    .line 98
    :cond_5
    :goto_1
    add-int/lit8 v0, v0, 0x1

    .line 99
    .line 100
    goto :goto_0

    .line 101
    :cond_6
    return p1
.end method

.method public final userActivityFromNative(JIII)V
    .locals 11

    .line 1
    move-object v0, p0

    .line 2
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mIsUserActivityNativeInvoked:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 3
    .line 4
    const/4 v2, 0x0

    .line 5
    const/4 v3, 0x1

    .line 6
    invoke-virtual {v1, v2, v3}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z

    .line 7
    .line 8
    .line 9
    move-result v1

    .line 10
    if-eqz v1, :cond_1

    .line 11
    .line 12
    new-instance v1, Ljava/lang/StringBuilder;

    .line 13
    .line 14
    const-string v2, "[api] userActivityFromNative : "

    .line 15
    .line 16
    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 17
    .line 18
    .line 19
    invoke-static {p3}, Landroid/os/PowerManager;->userActivityEventToString(I)Ljava/lang/String;

    .line 20
    .line 21
    .line 22
    move-result-object v2

    .line 23
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 24
    .line 25
    .line 26
    if-nez p5, :cond_0

    .line 27
    .line 28
    const-string v2, ""

    .line 29
    .line 30
    goto :goto_0

    .line 31
    :cond_0
    const-string v2, ","

    .line 32
    .line 33
    :goto_0
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 34
    .line 35
    .line 36
    invoke-static/range {p5 .. p5}, Landroid/os/PowerManager;->userActivityFlagsToString(I)Ljava/lang/String;

    .line 37
    .line 38
    .line 39
    move-result-object v2

    .line 40
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 41
    .line 42
    .line 43
    const-string v2, " displayId="

    .line 44
    .line 45
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 46
    .line 47
    .line 48
    move v2, p4

    .line 49
    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 50
    .line 51
    .line 52
    const-string v3, " eventTime="

    .line 53
    .line 54
    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 55
    .line 56
    .line 57
    move-wide v5, p1

    .line 58
    invoke-virtual {v1, p1, p2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 59
    .line 60
    .line 61
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 62
    .line 63
    .line 64
    move-result-object v1

    .line 65
    const-string v3, "PowerManagerService"

    .line 66
    .line 67
    invoke-static {v3, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 68
    .line 69
    .line 70
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 71
    .line 72
    new-instance v3, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;

    .line 73
    .line 74
    const/4 v4, 0x2

    .line 75
    invoke-direct {v3, p0, v4}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda1;-><init>(Lcom/android/server/power/PowerManagerService;I)V

    .line 76
    .line 77
    .line 78
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 79
    .line 80
    invoke-virtual {v4}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 81
    .line 82
    .line 83
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 84
    .line 85
    .line 86
    move-result-wide v7

    .line 87
    const-wide/16 v9, 0x3e8

    .line 88
    .line 89
    add-long/2addr v7, v9

    .line 90
    invoke-virtual {v1, v3, v7, v8}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 91
    .line 92
    .line 93
    goto :goto_1

    .line 94
    :cond_1
    move-wide v5, p1

    .line 95
    move v2, p4

    .line 96
    :goto_1
    const/16 v4, 0x3e8

    .line 97
    .line 98
    move-object v0, p0

    .line 99
    move v1, p4

    .line 100
    move v2, p3

    .line 101
    move/from16 v3, p5

    .line 102
    .line 103
    move-wide v5, p1

    .line 104
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/power/PowerManagerService;->userActivityInternal(IIIIJ)V

    .line 105
    .line 106
    .line 107
    return-void
.end method

.method public final userActivityInternal(IIIIJ)V
    .locals 8

    .line 1
    and-int/lit8 v0, p3, 0x2

    .line 2
    .line 3
    if-eqz v0, :cond_1

    .line 4
    .line 5
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mLastAndroidAutoBoostTime:J

    .line 6
    .line 7
    const-wide/16 v2, -0x1

    .line 8
    .line 9
    cmp-long v0, v0, v2

    .line 10
    .line 11
    if-nez v0, :cond_0

    .line 12
    .line 13
    iput-wide p5, p0, Lcom/android/server/power/PowerManagerService;->mLastAndroidAutoBoostTime:J

    .line 14
    .line 15
    :cond_0
    const-string v0, "PowerManagerService"

    .line 16
    .line 17
    const-string/jumbo v1, "userActivityInternal PowerManager.USER_ACTIVITY_FLAG_INDIRECT : 2 (event: "

    .line 18
    .line 19
    .line 20
    const-string v2, " flags: "

    .line 21
    .line 22
    const-string v3, ") eventTime = "

    .line 23
    .line 24
    invoke-static {p2, p3, v1, v2, v3}, Lcom/android/internal/util/jobs/ArrayUtils$$ExternalSyntheticOutline0;->m(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 25
    .line 26
    .line 27
    move-result-object v1

    .line 28
    invoke-virtual {v1, p5, p6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 29
    .line 30
    .line 31
    const-string v2, ", mLastAndroidAutoBoostTime :"

    .line 32
    .line 33
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 34
    .line 35
    .line 36
    iget-wide v2, p0, Lcom/android/server/power/PowerManagerService;->mLastAndroidAutoBoostTime:J

    .line 37
    .line 38
    invoke-virtual {v1, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 39
    .line 40
    .line 41
    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 42
    .line 43
    .line 44
    move-result-object v1

    .line 45
    invoke-static {v0, v1}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 46
    .line 47
    .line 48
    iget-wide v0, p0, Lcom/android/server/power/PowerManagerService;->mLastAndroidAutoBoostTime:J

    .line 49
    .line 50
    sub-long v0, p5, v0

    .line 51
    .line 52
    const-wide/16 v2, 0x76c

    .line 53
    .line 54
    cmp-long v0, v0, v2

    .line 55
    .line 56
    if-lez v0, :cond_1

    .line 57
    .line 58
    new-instance v0, Landroid/content/Intent;

    .line 59
    .line 60
    const-string v1, "com.sec.android.intent.action.ANDROID_AUTO_BOOSTER"

    .line 61
    .line 62
    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 63
    .line 64
    .line 65
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 66
    .line 67
    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 68
    .line 69
    invoke-virtual {v1, v0, v2}, Landroid/content/Context;->sendBroadcastAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V

    .line 70
    .line 71
    .line 72
    iput-wide p5, p0, Lcom/android/server/power/PowerManagerService;->mLastAndroidAutoBoostTime:J

    .line 73
    .line 74
    :cond_1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 75
    .line 76
    monitor-enter v0

    .line 77
    :try_start_0
    iget-boolean v1, p0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 78
    .line 79
    if-nez v1, :cond_2

    .line 80
    .line 81
    monitor-exit v0

    .line 82
    return-void

    .line 83
    :catchall_0
    move-exception p0

    .line 84
    goto :goto_0

    .line 85
    :cond_2
    const/4 v1, -0x1

    .line 86
    if-ne p1, v1, :cond_4

    .line 87
    .line 88
    move-object v1, p0

    .line 89
    move v2, p2

    .line 90
    move v3, p3

    .line 91
    move v4, p4

    .line 92
    move-wide v5, p5

    .line 93
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(IIIJ)Z

    .line 94
    .line 95
    .line 96
    move-result p1

    .line 97
    if-eqz p1, :cond_3

    .line 98
    .line 99
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 100
    .line 101
    .line 102
    :cond_3
    monitor-exit v0

    .line 103
    return-void

    .line 104
    :cond_4
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 105
    .line 106
    invoke-virtual {v2, p1}, Landroid/hardware/display/DisplayManagerInternal;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    .line 107
    .line 108
    .line 109
    move-result-object p1

    .line 110
    if-nez p1, :cond_5

    .line 111
    .line 112
    monitor-exit v0

    .line 113
    return-void

    .line 114
    :cond_5
    iget p1, p1, Landroid/view/DisplayInfo;->displayGroupId:I

    .line 115
    .line 116
    if-ne p1, v1, :cond_6

    .line 117
    .line 118
    monitor-exit v0

    .line 119
    return-void

    .line 120
    :cond_6
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 121
    .line 122
    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 123
    .line 124
    .line 125
    move-result-object p1

    .line 126
    move-object v2, p1

    .line 127
    check-cast v2, Lcom/android/server/power/PowerGroup;

    .line 128
    .line 129
    move-object v1, p0

    .line 130
    move-wide v3, p5

    .line 131
    move v5, p2

    .line 132
    move v6, p3

    .line 133
    move v7, p4

    .line 134
    invoke-virtual/range {v1 .. v7}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(Lcom/android/server/power/PowerGroup;JIII)Z

    .line 135
    .line 136
    .line 137
    move-result p1

    .line 138
    if-eqz p1, :cond_7

    .line 139
    .line 140
    invoke-virtual {p0}, Lcom/android/server/power/PowerManagerService;->updatePowerStateLocked()V

    .line 141
    .line 142
    .line 143
    :cond_7
    monitor-exit v0

    .line 144
    return-void

    .line 145
    :goto_0
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 146
    throw p0
.end method

.method public final userActivityNoUpdateLocked(IIIJ)Z
    .locals 10

    const/4 v0, 0x0

    move v1, v0

    .line 1
    :goto_0
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-ge v0, v2, :cond_1

    .line 2
    iget-object v2, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    move-object v4, v2

    check-cast v4, Lcom/android/server/power/PowerGroup;

    move-object v3, p0

    move-wide v5, p4

    move v7, p1

    move v8, p2

    move v9, p3

    invoke-virtual/range {v3 .. v9}, Lcom/android/server/power/PowerManagerService;->userActivityNoUpdateLocked(Lcom/android/server/power/PowerGroup;JIII)Z

    move-result v2

    if-eqz v2, :cond_0

    const/4 v1, 0x1

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    return v1
.end method

.method public final userActivityNoUpdateLocked(Lcom/android/server/power/PowerGroup;JIII)Z
    .locals 20

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p2

    move/from16 v4, p4

    move/from16 v5, p5

    .line 3
    const-string v6, "UserActivityStateListenerState: "

    invoke-virtual/range {p1 .. p1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    iget v7, v1, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 4
    iget-wide v8, v1, Lcom/android/server/power/PowerGroup;->mLastSleepTime:J

    cmp-long v8, v2, v8

    const/4 v9, 0x0

    if-ltz v8, :cond_22

    .line 5
    iget-wide v10, v1, Lcom/android/server/power/PowerGroup;->mLastWakeTime:J

    cmp-long v8, v2, v10

    if-ltz v8, :cond_22

    .line 6
    iget-boolean v8, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    if-nez v8, :cond_0

    goto/16 :goto_d

    :cond_0
    const-wide/32 v10, 0x20000

    .line 7
    const-string/jumbo v8, "userActivity"

    invoke-static {v10, v11, v8}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 8
    :try_start_0
    iget-wide v12, v0, Lcom/android/server/power/PowerManagerService;->mLastInteractivePowerHintTime:J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    cmp-long v8, v2, v12

    const/4 v12, 0x2

    const/4 v13, 0x1

    if-lez v8, :cond_5

    if-ne v4, v12, :cond_1

    and-int/lit16 v8, v5, 0x4000

    if-eqz v8, :cond_3

    :cond_1
    if-nez v4, :cond_2

    and-int/lit16 v8, v5, 0x2000

    if-nez v8, :cond_3

    :cond_2
    if-ne v4, v13, :cond_5

    const v8, 0x8000

    and-int/2addr v8, v5

    if-eqz v8, :cond_5

    :cond_3
    and-int/lit16 v8, v5, 0x1000

    if-eqz v8, :cond_4

    const/4 v8, -0x1

    goto :goto_0

    :cond_4
    move v8, v9

    .line 9
    :goto_0
    :try_start_1
    iget-object v14, v0, Lcom/android/server/power/PowerManagerService;->mNativeWrapper:Lcom/android/server/power/PowerManagerService$NativeWrapper;

    invoke-virtual {v14}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 10
    invoke-static {v8, v9}, Lcom/android/server/power/PowerManagerService;->-$$Nest$smnativeSetPowerBoost(II)V

    .line 11
    iput-wide v2, v0, Lcom/android/server/power/PowerManagerService;->mLastInteractivePowerHintTime:J
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    :catchall_0
    move-exception v0

    move-wide v1, v10

    goto/16 :goto_c

    :cond_5
    :goto_1
    if-eq v4, v12, :cond_6

    if-ne v4, v13, :cond_7

    .line 12
    :cond_6
    :try_start_2
    iget-wide v14, v0, Lcom/android/server/power/PowerManagerService;->mLastNormalTouchBoostTime:J
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    sub-long v14, v2, v14

    const-wide/16 v16, 0x64

    cmp-long v8, v14, v16

    if-lez v8, :cond_7

    .line 13
    :try_start_3
    const-string v8, "NORMAL_TOUCH_BOOSTER"

    const-string v14, "TRUE"

    invoke-static {v8, v14}, Lcom/samsung/android/os/SemPerfManager;->sendCommandToSsrm(Ljava/lang/String;Ljava/lang/String;)V

    .line 14
    iput-wide v2, v0, Lcom/android/server/power/PowerManagerService;->mLastNormalTouchBoostTime:J
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 15
    :cond_7
    :try_start_4
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    move/from16 v14, p6

    invoke-virtual {v8, v7, v4, v14}, Lcom/android/server/power/Notifier;->onUserActivity(III)V

    .line 16
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mAttentionDetector:Lcom/android/server/power/AttentionDetector;

    invoke-virtual {v8}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    const/4 v14, 0x4

    const/4 v15, 0x3

    if-eqz v4, :cond_9

    if-eq v4, v13, :cond_9

    if-eq v4, v12, :cond_9

    if-eq v4, v15, :cond_9

    if-eq v4, v14, :cond_8

    goto :goto_2

    .line 17
    :cond_8
    iget-object v8, v8, Lcom/android/server/power/AttentionDetector;->mConsecutiveTimeoutExtendedCount:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v8}, Ljava/util/concurrent/atomic/AtomicLong;->incrementAndGet()J

    goto :goto_2

    .line 18
    :cond_9
    iget-object v10, v8, Lcom/android/server/power/AttentionDetector;->mRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v10}, Ljava/util/concurrent/atomic/AtomicBoolean;->get()Z

    move-result v10

    if-eqz v10, :cond_a

    .line 19
    iget-object v10, v8, Lcom/android/server/power/AttentionDetector;->mAttentionManager:Landroid/attention/AttentionManagerInternal;

    iget-object v11, v8, Lcom/android/server/power/AttentionDetector;->mCallback:Lcom/android/server/power/AttentionDetector$AttentionCallbackInternalImpl;

    invoke-virtual {v10, v11}, Landroid/attention/AttentionManagerInternal;->cancelAttentionCheck(Landroid/attention/AttentionManagerInternal$AttentionCallbackInternal;)V

    .line 20
    iget-object v10, v8, Lcom/android/server/power/AttentionDetector;->mRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v10, v9}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 21
    :cond_a
    iput-wide v2, v8, Lcom/android/server/power/AttentionDetector;->mLastUserActivityTime:J

    .line 22
    invoke-virtual {v8}, Lcom/android/server/power/AttentionDetector;->resetConsecutiveExtensionCount()V

    .line 23
    :goto_2
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mAbuseWakeLockDetector:Lcom/android/server/power/AbuseWakeLockDetector;

    invoke-virtual {v8}, Lcom/android/server/power/AbuseWakeLockDetector;->onUserActivity()V

    .line 24
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mScreenTimeoutOverridePolicy:Lcom/android/server/power/ScreenTimeoutOverridePolicy;

    if-eqz v8, :cond_10

    .line 25
    iget v10, v0, Lcom/android/server/power/PowerManagerService;->mWakeLockSummary:I

    and-int/lit16 v10, v10, 0x100

    if-eqz v10, :cond_10

    if-eqz v4, :cond_f

    if-eq v4, v13, :cond_e

    if-eq v4, v12, :cond_d

    if-eq v4, v15, :cond_c

    if-eq v4, v14, :cond_b

    goto :goto_4

    .line 26
    :cond_b
    invoke-virtual {v8, v15}, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->releaseAllWakeLocks(I)V

    goto :goto_4

    :cond_c
    const/4 v10, 0x7

    .line 27
    invoke-virtual {v8, v10}, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->releaseAllWakeLocks(I)V

    goto :goto_4

    :cond_d
    const/4 v10, 0x6

    .line 28
    invoke-virtual {v8, v10}, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->releaseAllWakeLocks(I)V

    goto :goto_4

    :cond_e
    const/4 v10, 0x5

    .line 29
    invoke-virtual {v8, v10}, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->releaseAllWakeLocks(I)V

    goto :goto_4

    .line 30
    :cond_f
    invoke-virtual {v8, v14}, Lcom/android/server/power/ScreenTimeoutOverridePolicy;->releaseAllWakeLocks(I)V

    goto :goto_4

    :goto_3
    const-wide/32 v1, 0x20000

    goto/16 :goto_c

    :catchall_1
    move-exception v0

    goto :goto_3

    .line 31
    :cond_10
    :goto_4
    iget-boolean v8, v0, Lcom/android/server/power/PowerManagerService;->mSmartStayEnabledSetting:Z

    if-eqz v8, :cond_11

    if-nez v7, :cond_11

    .line 32
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mSmartStayController:Lcom/android/server/power/SmartStayController;

    .line 33
    iget-object v10, v8, Lcom/android/server/power/SmartStayController;->mFaceDetectRequested:Ljava/util/concurrent/atomic/AtomicBoolean;

    invoke-virtual {v10, v9}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    .line 34
    iput-boolean v9, v8, Lcom/android/server/power/SmartStayController;->mFaceDetected:Z

    :cond_11
    if-nez v7, :cond_13

    .line 35
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mScreenCurtainController:Lcom/android/server/power/ScreenCurtainController;

    if-eqz v8, :cond_13

    .line 36
    iget-boolean v10, v8, Lcom/android/server/power/ScreenCurtainController;->mScreenCurtainEnabled:Z

    if-nez v10, :cond_13

    if-eq v4, v12, :cond_12

    if-ne v4, v13, :cond_13

    .line 37
    :cond_12
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    iput-wide v10, v8, Lcom/android/server/power/ScreenCurtainController;->mLastUserActivityTime:J

    :cond_13
    if-nez v7, :cond_16

    .line 38
    iget-object v7, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnKeeper:Lcom/android/server/power/ScreenOnKeeper;

    if-eqz v7, :cond_16

    if-eqz v4, :cond_14

    if-eq v4, v12, :cond_15

    goto :goto_5

    :cond_14
    and-int/lit16 v8, v5, 0x2000

    if-nez v8, :cond_15

    goto :goto_5

    .line 39
    :cond_15
    iput-wide v2, v7, Lcom/android/server/power/ScreenOnKeeper;->mLastScreenTouchTime:J
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 40
    :cond_16
    :goto_5
    const-string v7, "PowerManagerService"

    if-ne v4, v12, :cond_18

    :try_start_5
    iget-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerCalledTime:J

    cmp-long v8, v2, v10

    if-lez v8, :cond_18

    .line 41
    iput-wide v2, v0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerCalledTime:J

    .line 42
    iget v8, v0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerState:I

    if-nez v8, :cond_17

    .line 43
    iput v13, v0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerState:I

    .line 44
    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8, v6}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    iget v6, v0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerState:I

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v7, v6}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 45
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityStateListenerListeners:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v6

    :goto_6
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v8

    if-eqz v8, :cond_17

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/os/PowerManagerInternal$UserActivityStateListener;

    .line 46
    iget v10, v0, Lcom/android/server/power/PowerManagerService;->mLastUserActivityStateListenerState:I

    invoke-interface {v8, v10}, Landroid/os/PowerManagerInternal$UserActivityStateListener;->onChanged(I)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    goto :goto_6

    .line 47
    :cond_17
    iget-object v6, v0, Lcom/android/server/power/PowerManagerService;->mHandler:Landroid/os/Handler;

    :try_start_6
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityStateListenerTimeoutRunnable:Lcom/android/server/power/PowerManagerService$6;

    invoke-virtual {v6, v8}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 48
    iget-object v8, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityStateListenerTimeoutRunnable:Lcom/android/server/power/PowerManagerService$6;

    iget-object v10, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 49
    invoke-virtual {v10}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 50
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    const-wide/16 v18, 0xbb8

    add-long v10, v10, v18

    .line 51
    invoke-virtual {v6, v8, v10, v11}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z

    .line 52
    :cond_18
    iget-boolean v6, v0, Lcom/android/server/power/PowerManagerService;->mUserInactiveOverrideFromWindowManager:Z

    if-eqz v6, :cond_19

    .line 53
    const-string/jumbo v6, "userActivityNoUpdateLocked: mUserInactiveOverrideFromWindowManager : false"

    invoke-static {v7, v6}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 54
    iput-boolean v9, v0, Lcom/android/server/power/PowerManagerService;->mUserInactiveOverrideFromWindowManager:Z

    const-wide/16 v10, -0x1

    .line 55
    iput-wide v10, v0, Lcom/android/server/power/PowerManagerService;->mOverriddenTimeout:J

    .line 56
    :cond_19
    iget v6, v1, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    if-eqz v6, :cond_1a

    if-eq v6, v15, :cond_1a

    and-int/lit8 v6, v5, 0x2

    if-eqz v6, :cond_1b

    :cond_1a
    const-wide/32 v1, 0x20000

    goto :goto_b

    .line 57
    :cond_1b
    invoke-virtual {v0, v2, v3}, Lcom/android/server/power/PowerManagerService;->maybeUpdateForegroundProfileLastActivityLocked(J)V

    and-int/2addr v5, v13

    if-eqz v5, :cond_1e

    .line 58
    iget-wide v5, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTimeNoChangeLights:J

    cmp-long v5, v2, v5

    if-lez v5, :cond_1d

    .line 59
    iget-wide v5, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    cmp-long v5, v2, v5

    if-lez v5, :cond_1d

    .line 60
    iput-wide v2, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTimeNoChangeLights:J

    .line 61
    iput v4, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityEvent:I

    .line 62
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    or-int/lit8 v2, v1, 0x4

    iput v2, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    if-ne v4, v13, :cond_1c

    or-int/lit16 v1, v1, 0x1004

    .line 63
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :cond_1c
    const-wide/32 v1, 0x20000

    .line 64
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return v13

    :cond_1d
    const-wide/32 v1, 0x20000

    goto :goto_a

    .line 65
    :cond_1e
    :try_start_7
    iget-wide v5, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    cmp-long v5, v2, v5

    if-lez v5, :cond_1d

    .line 66
    iput-wide v2, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 67
    iput v4, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityEvent:I

    .line 68
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    or-int/lit8 v5, v1, 0x4

    iput v5, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    if-ne v4, v13, :cond_1f

    or-int/lit16 v1, v1, 0x1004

    .line 69
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    .line 70
    :cond_1f
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mUserActivityTimeoutSetting:I

    if-lez v1, :cond_20

    if-nez v4, :cond_21

    .line 71
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mDirty:I

    and-int/lit8 v1, v1, 0x10

    if-eqz v1, :cond_20

    goto :goto_8

    :cond_20
    :goto_7
    const-wide/32 v1, 0x20000

    goto :goto_9

    .line 72
    :cond_21
    :goto_8
    const-string v1, "call changes for MDM"

    invoke-static {v7, v1}, Lcom/android/server/power/Slog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 73
    invoke-virtual {v0, v2, v3}, Lcom/android/server/power/PowerManagerService;->setUserActivityTimeoutLocked(J)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_7

    .line 74
    :goto_9
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return v13

    :goto_a
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return v9

    :goto_b
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    return v9

    :goto_c
    invoke-static {v1, v2}, Landroid/os/Trace;->traceEnd(J)V

    .line 75
    throw v0

    :cond_22
    :goto_d
    return v9
.end method

.method public final wakePowerGroupLocked(Lcom/android/server/power/PowerGroup;JILjava/lang/String;ILjava/lang/String;IZ)V
    .locals 18

    .line 1
    move-object/from16 v0, p0

    .line 2
    .line 3
    move-object/from16 v7, p1

    .line 4
    .line 5
    move/from16 v8, p4

    .line 6
    .line 7
    move-object/from16 v9, p5

    .line 8
    .line 9
    move/from16 v10, p6

    .line 10
    .line 11
    const-string v1, "::"

    .line 12
    .line 13
    iput v8, v0, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 14
    .line 15
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mForceSuspendActive:Z

    .line 16
    .line 17
    if-nez v2, :cond_b

    .line 18
    .line 19
    iget-boolean v2, v0, Lcom/android/server/power/PowerManagerService;->mSystemReady:Z

    .line 20
    .line 21
    if-nez v2, :cond_0

    .line 22
    .line 23
    goto/16 :goto_4

    .line 24
    .line 25
    :cond_0
    iget-wide v2, v7, Lcom/android/server/power/PowerGroup;->mLastSleepTime:J

    .line 26
    .line 27
    cmp-long v2, p2, v2

    .line 28
    .line 29
    if-ltz v2, :cond_b

    .line 30
    .line 31
    iget v2, v7, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 32
    .line 33
    const/4 v11, 0x1

    .line 34
    if-ne v2, v11, :cond_1

    .line 35
    .line 36
    goto/16 :goto_4

    .line 37
    .line 38
    :cond_1
    const/4 v2, 0x2

    .line 39
    iget v12, v7, Lcom/android/server/power/PowerGroup;->mGroupId:I

    .line 40
    .line 41
    if-ne v12, v2, :cond_2

    .line 42
    .line 43
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mIsDualViewMode:Z

    .line 44
    .line 45
    if-nez v3, :cond_2

    .line 46
    .line 47
    return-void

    .line 48
    :cond_2
    if-nez v12, :cond_4

    .line 49
    .line 50
    const/16 v3, 0xf

    .line 51
    .line 52
    if-eq v8, v3, :cond_3

    .line 53
    .line 54
    const/16 v3, 0x71

    .line 55
    .line 56
    if-ne v8, v3, :cond_4

    .line 57
    .line 58
    :cond_3
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mProximityPositive:Z

    .line 59
    .line 60
    if-eqz v3, :cond_4

    .line 61
    .line 62
    iget-boolean v3, v0, Lcom/android/server/power/PowerManagerService;->mInterceptedKeyForProximity:Z

    .line 63
    .line 64
    if-nez v3, :cond_4

    .line 65
    .line 66
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 67
    .line 68
    invoke-virtual {v3}, Landroid/hardware/display/DisplayManagerInternal;->ignoreProximitySensorUntilChanged()V

    .line 69
    .line 70
    .line 71
    iput-boolean v11, v0, Lcom/android/server/power/PowerManagerService;->mInterceptedKeyForProximity:Z

    .line 72
    .line 73
    :cond_4
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/power/PowerManagerService;->isWakeUpPreventionNeededLocked()Z

    .line 74
    .line 75
    .line 76
    move-result v3

    .line 77
    const/4 v13, 0x0

    .line 78
    if-eqz v3, :cond_5

    .line 79
    .line 80
    iput v13, v0, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 81
    .line 82
    return-void

    .line 83
    :cond_5
    iget v5, v0, Lcom/android/server/power/PowerManagerService;->mLastWakeUpReason:I

    .line 84
    .line 85
    const-string v14, ""

    .line 86
    .line 87
    if-ne v5, v2, :cond_6

    .line 88
    .line 89
    if-nez p9, :cond_6

    .line 90
    .line 91
    const/16 v3, 0x3e8

    .line 92
    .line 93
    if-ne v10, v3, :cond_6

    .line 94
    .line 95
    :try_start_0
    invoke-virtual {v9, v1}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    .line 96
    .line 97
    .line 98
    move-result v3

    .line 99
    if-eqz v3, :cond_6

    .line 100
    .line 101
    invoke-virtual {v9, v1, v2}, Ljava/lang/String;->split(Ljava/lang/String;I)[Ljava/lang/String;

    .line 102
    .line 103
    .line 104
    move-result-object v1

    .line 105
    if-eqz v1, :cond_6

    .line 106
    .line 107
    array-length v3, v1

    .line 108
    if-ne v3, v2, :cond_6

    .line 109
    .line 110
    aget-object v2, v1, v11

    .line 111
    .line 112
    invoke-virtual {v2}, Ljava/lang/String;->isEmpty()Z

    .line 113
    .line 114
    .line 115
    move-result v2

    .line 116
    if-nez v2, :cond_6

    .line 117
    .line 118
    aget-object v1, v1, v11
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 119
    .line 120
    move-object v15, v1

    .line 121
    goto :goto_0

    .line 122
    :catch_0
    move-object v15, v14

    .line 123
    goto :goto_2

    .line 124
    :cond_6
    move-object v15, v14

    .line 125
    :goto_0
    :try_start_1
    invoke-virtual {v15}, Ljava/lang/String;->isEmpty()Z

    .line 126
    .line 127
    .line 128
    move-result v1

    .line 129
    if-eqz v1, :cond_7

    .line 130
    .line 131
    move-object/from16 v6, p7

    .line 132
    .line 133
    goto :goto_1

    .line 134
    :cond_7
    move-object v6, v15

    .line 135
    :goto_1
    iget-object v4, v0, Lcom/android/server/power/PowerManagerService;->mHandlerPmsMisc:Landroid/os/Handler;

    .line 136
    .line 137
    new-instance v3, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda2;

    .line 138
    .line 139
    move-object v1, v3

    .line 140
    move-object/from16 v2, p0

    .line 141
    .line 142
    move-object v13, v3

    .line 143
    move/from16 v3, p6

    .line 144
    .line 145
    move-object v11, v4

    .line 146
    move-object/from16 v4, p1

    .line 147
    .line 148
    invoke-direct/range {v1 .. v6}, Lcom/android/server/power/PowerManagerService$$ExternalSyntheticLambda2;-><init>(Lcom/android/server/power/PowerManagerService;ILcom/android/server/power/PowerGroup;ILjava/lang/String;)V

    .line 149
    .line 150
    .line 151
    invoke-virtual {v11, v13}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 152
    .line 153
    .line 154
    :catch_1
    :goto_2
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 155
    .line 156
    invoke-virtual {v1}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 157
    .line 158
    .line 159
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 160
    .line 161
    .line 162
    move-result-wide v1

    .line 163
    sub-long v1, v1, p2

    .line 164
    .line 165
    long-to-int v1, v1

    .line 166
    new-instance v2, Ljava/lang/StringBuilder;

    .line 167
    .line 168
    const-string v3, "Screen__On  - "

    .line 169
    .line 170
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 171
    .line 172
    .line 173
    iget v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 174
    .line 175
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 176
    .line 177
    .line 178
    const-string v3, " : "

    .line 179
    .line 180
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 181
    .line 182
    .line 183
    iget-object v3, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 184
    .line 185
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 186
    .line 187
    .line 188
    const-string v3, " ("

    .line 189
    .line 190
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 191
    .line 192
    .line 193
    invoke-static/range {p4 .. p4}, Landroid/os/PowerManager;->wakeReasonToString(I)Ljava/lang/String;

    .line 194
    .line 195
    .line 196
    move-result-object v4

    .line 197
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 198
    .line 199
    .line 200
    const-string v4, ")"

    .line 201
    .line 202
    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 203
    .line 204
    .line 205
    invoke-virtual {v15}, Ljava/lang/String;->isEmpty()Z

    .line 206
    .line 207
    .line 208
    move-result v5

    .line 209
    if-nez v5, :cond_8

    .line 210
    .line 211
    invoke-static {v3, v15, v4}, Lcom/android/internal/util/jobs/XmlUtils$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    .line 212
    .line 213
    .line 214
    move-result-object v4

    .line 215
    goto :goto_3

    .line 216
    :cond_8
    move-object v4, v14

    .line 217
    :goto_3
    const-string/jumbo v5, "ms) groupId="

    .line 218
    .line 219
    .line 220
    invoke-static {v1, v4, v3, v5, v2}, Lcom/android/server/accessibility/AccessibilityManagerService$$ExternalSyntheticOutline0;->m(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 221
    .line 222
    .line 223
    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 224
    .line 225
    .line 226
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 227
    .line 228
    .line 229
    move-result-object v2

    .line 230
    const-string v3, "PowerManagerService"

    .line 231
    .line 232
    invoke-static {v3, v2}, Lcom/android/server/power/Slog;->wk(Ljava/lang/String;Ljava/lang/String;)V

    .line 233
    .line 234
    .line 235
    sget-object v2, Lcom/android/server/power/PowerManagerUtil;->sCurrentScreenOnProfiler:Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;

    .line 236
    .line 237
    iget-wide v4, v2, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->mWakeUpStartTime:J

    .line 238
    .line 239
    const-wide/16 v16, 0x0

    .line 240
    .line 241
    cmp-long v4, v4, v16

    .line 242
    .line 243
    if-eqz v4, :cond_9

    .line 244
    .line 245
    iget-boolean v4, v2, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->mSaved:Z

    .line 246
    .line 247
    if-nez v4, :cond_9

    .line 248
    .line 249
    new-instance v4, Ljava/lang/StringBuilder;

    .line 250
    .line 251
    const-string v5, "detected fast on off , ignore "

    .line 252
    .line 253
    invoke-direct {v4, v5}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 254
    .line 255
    .line 256
    iget v5, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 257
    .line 258
    const/4 v6, 0x1

    .line 259
    sub-int/2addr v5, v6

    .line 260
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 261
    .line 262
    .line 263
    const-string v5, " th ON profiler "

    .line 264
    .line 265
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 266
    .line 267
    .line 268
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 269
    .line 270
    .line 271
    move-result-object v4

    .line 272
    invoke-static {v3, v4}, Lcom/android/server/power/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 273
    .line 274
    .line 275
    :cond_9
    invoke-virtual {v2}, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->clearAll()V

    .line 276
    .line 277
    .line 278
    iput v1, v2, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->mWakeUpDiff:I

    .line 279
    .line 280
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 281
    .line 282
    iput v1, v2, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->mOrder:I

    .line 283
    .line 284
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 285
    .line 286
    .line 287
    move-result-wide v3

    .line 288
    iput-wide v3, v2, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->mWakeUpStartTime:J

    .line 289
    .line 290
    invoke-static {}, Lcom/android/server/power/PowerManagerUtil;->getCurrentTimeAsString()Ljava/lang/String;

    .line 291
    .line 292
    .line 293
    move-result-object v1

    .line 294
    iput-object v1, v2, Lcom/android/server/power/PowerManagerUtil$ScreenOnProfiler;->mWakeUpTimeStr:Ljava/lang/String;

    .line 295
    .line 296
    iput-object v14, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnReason:Ljava/lang/String;

    .line 297
    .line 298
    iput-object v14, v0, Lcom/android/server/power/PowerManagerService;->mScreenOffReason:Ljava/lang/String;

    .line 299
    .line 300
    iget v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 301
    .line 302
    const/4 v2, 0x1

    .line 303
    add-int/2addr v1, v2

    .line 304
    iput v1, v0, Lcom/android/server/power/PowerManagerService;->mScreenOnOffCount:I

    .line 305
    .line 306
    iget-boolean v1, v0, Lcom/android/server/power/PowerManagerService;->mIsDualViewMode:Z

    .line 307
    .line 308
    if-nez v1, :cond_a

    .line 309
    .line 310
    const/16 v1, 0x6d

    .line 311
    .line 312
    if-ne v8, v1, :cond_a

    .line 313
    .line 314
    iget-object v1, v0, Lcom/android/server/power/PowerManagerService;->mNotifier:Lcom/android/server/power/Notifier;

    .line 315
    .line 316
    const/4 v2, 0x0

    .line 317
    invoke-virtual {v1, v2}, Lcom/android/server/power/Notifier;->onScreenStateChangeStartedByProximity(Z)V

    .line 318
    .line 319
    .line 320
    :cond_a
    iget-object v0, v0, Lcom/android/server/power/PowerManagerService;->mContext:Landroid/content/Context;

    .line 321
    .line 322
    invoke-static {v0}, Lcom/android/internal/util/LatencyTracker;->getInstance(Landroid/content/Context;)Lcom/android/internal/util/LatencyTracker;

    .line 323
    .line 324
    .line 325
    move-result-object v0

    .line 326
    const-string v1, "Waking up power group from "

    .line 327
    .line 328
    new-instance v2, Ljava/lang/StringBuilder;

    .line 329
    .line 330
    const-string/jumbo v3, "wakePowerGroup"

    .line 331
    .line 332
    .line 333
    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 334
    .line 335
    .line 336
    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 337
    .line 338
    .line 339
    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 340
    .line 341
    .line 342
    move-result-object v2

    .line 343
    const-wide/32 v13, 0x20000

    .line 344
    .line 345
    .line 346
    invoke-static {v13, v14, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 347
    .line 348
    .line 349
    :try_start_2
    const-string v2, "PowerGroup"

    .line 350
    .line 351
    new-instance v3, Ljava/lang/StringBuilder;

    .line 352
    .line 353
    invoke-direct {v3, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V

    .line 354
    .line 355
    .line 356
    iget v1, v7, Lcom/android/server/power/PowerGroup;->mWakefulness:I

    .line 357
    .line 358
    invoke-static {v1}, Landroid/os/PowerManagerInternal;->wakefulnessToString(I)Ljava/lang/String;

    .line 359
    .line 360
    .line 361
    move-result-object v1

    .line 362
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 363
    .line 364
    .line 365
    const-string v1, " (groupId="

    .line 366
    .line 367
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 368
    .line 369
    .line 370
    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 371
    .line 372
    .line 373
    const-string v1, ", uid="

    .line 374
    .line 375
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 376
    .line 377
    .line 378
    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 379
    .line 380
    .line 381
    const-string v1, ", reason="

    .line 382
    .line 383
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 384
    .line 385
    .line 386
    invoke-static/range {p4 .. p4}, Landroid/os/PowerManager;->wakeReasonToString(I)Ljava/lang/String;

    .line 387
    .line 388
    .line 389
    move-result-object v1

    .line 390
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 391
    .line 392
    .line 393
    const-string v1, ", details="

    .line 394
    .line 395
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 396
    .line 397
    .line 398
    invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 399
    .line 400
    .line 401
    const-string v1, ")..."

    .line 402
    .line 403
    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 404
    .line 405
    .line 406
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    .line 407
    .line 408
    .line 409
    move-result-object v1

    .line 410
    invoke-static {v2, v1}, Lcom/android/server/power/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 411
    .line 412
    .line 413
    const-string v1, "Screen turning on"

    .line 414
    .line 415
    invoke-static {v13, v14, v1, v12}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V

    .line 416
    .line 417
    .line 418
    invoke-static {v12}, Ljava/lang/String;->valueOf(I)Ljava/lang/String;

    .line 419
    .line 420
    .line 421
    move-result-object v1

    .line 422
    const/4 v2, 0x5

    .line 423
    invoke-virtual {v0, v2, v1}, Lcom/android/internal/util/LatencyTracker;->onActionStart(ILjava/lang/String;)V

    .line 424
    .line 425
    .line 426
    const/4 v1, 0x1

    .line 427
    move-object/from16 v0, p1

    .line 428
    .line 429
    move-wide/from16 v2, p2

    .line 430
    .line 431
    move/from16 v4, p6

    .line 432
    .line 433
    move/from16 v5, p4

    .line 434
    .line 435
    move/from16 v6, p8

    .line 436
    .line 437
    move-object/from16 v7, p7

    .line 438
    .line 439
    move-object/from16 v8, p5

    .line 440
    .line 441
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/power/PowerGroup;->setWakefulnessLocked(IJIIILjava/lang/String;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 442
    .line 443
    .line 444
    invoke-static {v13, v14}, Landroid/os/Trace;->traceEnd(J)V

    .line 445
    .line 446
    .line 447
    return-void

    .line 448
    :catchall_0
    move-exception v0

    .line 449
    invoke-static {v13, v14}, Landroid/os/Trace;->traceEnd(J)V

    .line 450
    .line 451
    .line 452
    throw v0

    .line 453
    :cond_b
    :goto_4
    return-void
.end method

.method public wasDeviceIdleForInternal(J)Z
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/android/server/power/PowerManagerService;->mLock:Ljava/lang/Object;

    .line 2
    .line 3
    monitor-enter v0

    .line 4
    :try_start_0
    iget-object v1, p0, Lcom/android/server/power/PowerManagerService;->mPowerGroups:Landroid/util/SparseArray;

    .line 5
    .line 6
    const/4 v2, 0x0

    .line 7
    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    .line 8
    .line 9
    .line 10
    move-result-object v1

    .line 11
    check-cast v1, Lcom/android/server/power/PowerGroup;

    .line 12
    .line 13
    iget-wide v3, v1, Lcom/android/server/power/PowerGroup;->mLastUserActivityTime:J

    .line 14
    .line 15
    add-long/2addr v3, p1

    .line 16
    iget-object p0, p0, Lcom/android/server/power/PowerManagerService;->mClock:Lcom/android/server/power/PowerManagerService$Injector$1;

    .line 17
    .line 18
    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    .line 19
    .line 20
    .line 21
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    .line 22
    .line 23
    .line 24
    move-result-wide p0

    .line 25
    cmp-long p0, v3, p0

    .line 26
    .line 27
    if-gez p0, :cond_0

    .line 28
    .line 29
    const/4 v2, 0x1

    .line 30
    :cond_0
    monitor-exit v0

    .line 31
    return v2

    .line 32
    :catchall_0
    move-exception p0

    .line 33
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 34
    throw p0
.end method
